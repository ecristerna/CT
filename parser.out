Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables
Rule 2     changeCurrentScope -> <empty>
Rule 3     saveType -> <empty>
Rule 4     saveProc -> <empty>
Rule 5     errorProgram -> <empty>
Rule 6     opVars -> vars
Rule 7     opVars -> empty
Rule 8     opFunctions -> function opFunctions
Rule 9     opFunctions -> empty
Rule 10    vars -> errorVars VARS declare
Rule 11    saveID -> <empty>
Rule 12    errorVars -> <empty>
Rule 13    type -> errorType INT
Rule 14    type -> FLOAT
Rule 15    type -> STRING
Rule 16    type -> BOOL
Rule 17    errorType -> <empty>
Rule 18    main -> errorMain MAIN saveMain { opVars body } clearVarsTable
Rule 19    saveMain -> <empty>
Rule 20    errorMain -> <empty>
Rule 21    instr -> basicStatements ;
Rule 22    instr -> condition
Rule 23    instr -> cycle
Rule 24    basicStatements -> assign
Rule 25    basicStatements -> funcCall
Rule 26    declare -> basicDeclare
Rule 27    declare -> structDeclare
Rule 28    declare -> dictDeclare
Rule 29    init -> ASGN saveOperator errorInit initWith
Rule 30    errorInit -> <empty>
Rule 31    initWith -> expresion
Rule 32    initWith -> fact
Rule 33    initWith -> funcCall
Rule 34    initDict -> ASGN PARINI dictType : dictType PARFIN errorInitDict
Rule 35    errorInitDict -> <empty>
Rule 36    dictType -> errorDictType CTES
Rule 37    dictType -> cte
Rule 38    dictType -> ID
Rule 39    errorDictType -> <empty>
Rule 40    param -> saveType type errorParam ID cyTypeParam cyParam
Rule 41    errorParam -> <empty>
Rule 42    cyParam -> errorCyParam saveID saveTypeParam ; param
Rule 43    cyParam -> empty saveID saveTypeParam
Rule 44    cyTypeParam -> , saveID saveTypeParam ID cyTypeParam
Rule 45    cyTypeParam -> empty
Rule 46    saveTypeParam -> <empty>
Rule 47    errorCyParam -> <empty>
Rule 48    function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
Rule 49    errorFunction -> <empty>
Rule 50    clearVarsTable -> <empty>
Rule 51    return -> errorReturn RETURN expresion ;
Rule 52    errorReturn -> <empty>
Rule 53    opParameters -> param saveParamToDirProc errorOpParameters
Rule 54    opParameters -> empty
Rule 55    flagParameters -> <empty>
Rule 56    saveParamToDirProc -> <empty>
Rule 57    errorOpParameters -> <empty>
Rule 58    opReturns -> errorOpReturns RETURNS type saveReturnType { opVars body return
Rule 59    opReturns -> { opVars body
Rule 60    saveReturnType -> <empty>
Rule 61    errorOpReturns -> <empty>
Rule 62    basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
Rule 63    errorBasicDeclare -> <empty>
Rule 64    structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare
Rule 65    errorStructDeclare -> <empty>
Rule 66    dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare
Rule 67    errorDictDeclare -> <empty>
Rule 68    cyDeclare -> declare
Rule 69    cyDeclare -> empty
Rule 70    body -> errorBody cyInstruction
Rule 71    body -> empty
Rule 72    errorBody -> <empty>
Rule 73    cyInstruction -> instr body
Rule 74    cycle -> forCycle
Rule 75    cycle -> whileCycle
Rule 76    whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body }
Rule 77    errorWhileCycle -> <empty>
Rule 78    forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body }
Rule 79    errorForCycle -> <empty>
Rule 80    assign -> ID saveVariable errorAssign assignOptions performAssign
Rule 81    errorAssign -> <empty>
Rule 82    assignOptions -> init
Rule 83    assignOptions -> initDict
Rule 84    assignOptions -> [ expresion ] assignMatrix init
Rule 85    assignMatrix -> [ expresion ] errorAssignMatrix
Rule 86    assignMatrix -> empty
Rule 87    errorAssignMatrix -> <empty>
Rule 88    funcCall -> ID PARINI opParamCall PARFIN
Rule 89    opParamCall -> expresion cyParamCall
Rule 90    opParamCall -> empty
Rule 91    cyParamCall -> , expresion cyParamCall
Rule 92    cyParamCall -> empty
Rule 93    struct -> structType [ CTED ] optionalMatrix
Rule 94    structType -> type
Rule 95    structType -> DICT dict
Rule 96    optionalMatrix -> [ CTED ]
Rule 97    optionalMatrix -> empty
Rule 98    condition -> errorCondition IF PARINI expresion PARFIN { body } optionalElse
Rule 99    errorCondition -> <empty>
Rule 100   optionalElse -> errorElse ELSE { body }
Rule 101   optionalElse -> empty
Rule 102   errorElse -> <empty>
Rule 103   dict -> errorDict PARINI type : type PARFIN
Rule 104   errorDict -> <empty>
Rule 105   expresion -> sExp performAndOr cyExpresion errorExpresion
Rule 106   errorExpresion -> <empty>
Rule 107   cyExpresion -> AND saveOperator expresion
Rule 108   cyExpresion -> OR saveOperator expresion
Rule 109   cyExpresion -> empty
Rule 110   sExp -> exp errorOpSExp opSExp performRelational
Rule 111   opSExp -> EQ saveOperator exp
Rule 112   opSExp -> DIF saveOperator exp
Rule 113   opSExp -> LTOEQ saveOperator exp
Rule 114   opSExp -> GTOEQ saveOperator exp
Rule 115   opSExp -> GT saveOperator exp
Rule 116   opSExp -> LT saveOperator exp
Rule 117   opSExp -> empty
Rule 118   errorOpSExp -> <empty>
Rule 119   exp -> term performAddSub errorCyExp cyExp
Rule 120   cyExp -> PLUS saveOperator exp
Rule 121   cyExp -> MINUS saveOperator exp
Rule 122   cyExp -> empty
Rule 123   errorCyExp -> <empty>
Rule 124   term -> fact performMulDiv cyTerm
Rule 125   cyTerm -> MULT saveOperator errorFact term
Rule 126   cyTerm -> DIV saveOperator term
Rule 127   cyTerm -> empty
Rule 128   fact -> CTES
Rule 129   fact -> cte
Rule 130   fact -> funcCall
Rule 131   fact -> PARINI putFondo expresion PARFIN takeFondo
Rule 132   fact -> ID saveVariable opAccess errorOpAccess
Rule 133   errorFact -> <empty>
Rule 134   opAccess -> opStruct
Rule 135   opAccess -> opDictionary
Rule 136   opAccess -> empty
Rule 137   errorOpAccess -> <empty>
Rule 138   opStruct -> errorOpStruct [ expresion ] opMatrix
Rule 139   errorOpStruct -> <empty>
Rule 140   opMatrix -> errorOpMatrix [ expresion ]
Rule 141   opMatrix -> empty
Rule 142   errorOpMatrix -> <empty>
Rule 143   opDictionary -> . dictIndex
Rule 144   dictIndex -> FIRST
Rule 145   dictIndex -> LAST
Rule 146   cte -> CTED
Rule 147   cte -> CTEF
Rule 148   cte -> TRUE
Rule 149   cte -> FALSE
Rule 150   empty -> <empty>
Rule 151   printTables -> <empty>
Rule 152   saveVariable -> <empty>
Rule 153   saveOperator -> <empty>
Rule 154   putFondo -> <empty>
Rule 155   takeFondo -> <empty>
Rule 156   performAssign -> <empty>
Rule 157   performMulDiv -> <empty>
Rule 158   performAddSub -> <empty>
Rule 159   performRelational -> <empty>
Rule 160   performAndOr -> <empty>

Terminals, with rules where they appear

,                    : 44 91
.                    : 143
:                    : 34 103
;                    : 21 42 51 62 64 66 78 78
AND                  : 107
ASGN                 : 29 34
BOOL                 : 16
CTED                 : 93 96 146
CTEF                 : 147
CTES                 : 36 128
DICT                 : 66 95
DIF                  : 112
DIV                  : 126
ELSE                 : 100
EQ                   : 111
FALSE                : 149
FIRST                : 144
FLOAT                : 14
FOR                  : 78
FUNC                 : 48
GT                   : 115
GTOEQ                : 114
ID                   : 1 38 40 44 48 62 64 66 80 88 132
IF                   : 98
INT                  : 13
LAST                 : 145
LT                   : 116
LTOEQ                : 113
MAIN                 : 18
MINUS                : 121
MULT                 : 125
OR                   : 108
PARFIN               : 34 48 76 78 88 98 103 131
PARINI               : 34 48 76 78 88 98 103 131
PLUS                 : 120
PROGRAM              : 1
RETURN               : 51
RETURNS              : 58
STRING               : 15
STRUCT               : 64
TRUE                 : 148
VARS                 : 10
WHILE                : 76
[                    : 84 85 93 96 138 140
]                    : 84 85 93 96 138 140
error                : 
{                    : 1 18 58 59 76 78 98 100
}                    : 1 18 48 76 78 98 100

Nonterminals, with rules where they appear

assign               : 24 78 78
assignMatrix         : 84
assignOptions        : 80
basicDeclare         : 26
basicStatements      : 21
body                 : 18 58 59 73 76 78 98 100
changeCurrentScope   : 1
clearVarsTable       : 18 48
condition            : 22
cte                  : 37 129
cyDeclare            : 62 64 66
cyExp                : 119
cyExpresion          : 105
cyInstruction        : 70
cyParam              : 40
cyParamCall          : 89 91
cyTerm               : 124
cyTypeParam          : 40 44 62
cycle                : 23
declare              : 10 68
dict                 : 66 95
dictDeclare          : 28
dictIndex            : 143
dictType             : 34 34
empty                : 7 9 43 45 54 69 71 86 90 92 97 101 109 117 122 127 136 141
errorAssign          : 80
errorAssignMatrix    : 85
errorBasicDeclare    : 62
errorBody            : 70
errorCondition       : 98
errorCyExp           : 119
errorCyParam         : 42
errorDict            : 103
errorDictDeclare     : 66
errorDictType        : 36
errorElse            : 100
errorExpresion       : 105
errorFact            : 125
errorForCycle        : 78
errorFunction        : 48
errorInit            : 29
errorInitDict        : 34
errorMain            : 18
errorOpAccess        : 132
errorOpMatrix        : 140
errorOpParameters    : 53
errorOpReturns       : 58
errorOpSExp          : 110
errorOpStruct        : 138
errorParam           : 40
errorProgram         : 1
errorReturn          : 51
errorStructDeclare   : 64
errorType            : 13
errorVars            : 10
errorWhileCycle      : 76
exp                  : 110 111 112 113 114 115 116 120 121
expresion            : 31 51 76 78 84 85 89 91 98 107 108 131 138 140
fact                 : 32 124
flagParameters       : 48 48
forCycle             : 74
funcCall             : 25 33 130
function             : 8
init                 : 82 84
initDict             : 83
initWith             : 29
instr                : 73
main                 : 1
opAccess             : 132
opDictionary         : 135
opFunctions          : 1 8
opMatrix             : 138
opParamCall          : 88
opParameters         : 48
opReturns            : 48
opSExp               : 110
opStruct             : 134
opVars               : 1 18 58 59
optionalElse         : 98
optionalMatrix       : 93
param                : 42 53
performAddSub        : 119
performAndOr         : 105
performAssign        : 80
performMulDiv        : 124
performRelational    : 110
printTables          : 1
program              : 0
putFondo             : 131
return               : 58
sExp                 : 105
saveID               : 42 43 44 62
saveMain             : 18
saveOperator         : 29 107 108 111 112 113 114 115 116 120 121 125 126
saveParamToDirProc   : 53
saveProc             : 1 48
saveReturnType       : 58
saveType             : 1 40 48 62
saveTypeParam        : 42 43 44
saveVariable         : 80 132
struct               : 64
structDeclare        : 27
structType           : 93
takeFondo            : 131
term                 : 119 125 126
type                 : 40 58 62 94 103 103
vars                 : 6
whileCycle           : 75

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables
    (5) errorProgram -> .

    PROGRAM         reduce using rule 5 (errorProgram -> .)

    errorProgram                   shift and go to state 2
    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> errorProgram . PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables

    PROGRAM         shift and go to state 3


state 3

    (1) program -> errorProgram PROGRAM . saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables
    (3) saveType -> .

    ID              reduce using rule 3 (saveType -> .)

    saveType                       shift and go to state 4

state 4

    (1) program -> errorProgram PROGRAM saveType . ID saveProc { opVars changeCurrentScope opFunctions main } printTables

    ID              shift and go to state 5


state 5

    (1) program -> errorProgram PROGRAM saveType ID . saveProc { opVars changeCurrentScope opFunctions main } printTables
    (4) saveProc -> .

    {               reduce using rule 4 (saveProc -> .)

    saveProc                       shift and go to state 6

state 6

    (1) program -> errorProgram PROGRAM saveType ID saveProc . { opVars changeCurrentScope opFunctions main } printTables

    {               shift and go to state 7


state 7

    (1) program -> errorProgram PROGRAM saveType ID saveProc { . opVars changeCurrentScope opFunctions main } printTables
    (6) opVars -> . vars
    (7) opVars -> . empty
    (10) vars -> . errorVars VARS declare
    (150) empty -> .
    (12) errorVars -> .

    MAIN            reduce using rule 150 (empty -> .)
    FUNC            reduce using rule 150 (empty -> .)
    VARS            reduce using rule 12 (errorVars -> .)

    vars                           shift and go to state 8
    opVars                         shift and go to state 9
    errorVars                      shift and go to state 10
    empty                          shift and go to state 11

state 8

    (6) opVars -> vars .

    RETURN          reduce using rule 6 (opVars -> vars .)
    ID              reduce using rule 6 (opVars -> vars .)
    IF              reduce using rule 6 (opVars -> vars .)
    FOR             reduce using rule 6 (opVars -> vars .)
    WHILE           reduce using rule 6 (opVars -> vars .)
    }               reduce using rule 6 (opVars -> vars .)
    MAIN            reduce using rule 6 (opVars -> vars .)
    FUNC            reduce using rule 6 (opVars -> vars .)


state 9

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars . changeCurrentScope opFunctions main } printTables
    (2) changeCurrentScope -> .

    MAIN            reduce using rule 2 (changeCurrentScope -> .)
    FUNC            reduce using rule 2 (changeCurrentScope -> .)

    changeCurrentScope             shift and go to state 12

state 10

    (10) vars -> errorVars . VARS declare

    VARS            shift and go to state 13


state 11

    (7) opVars -> empty .

    RETURN          reduce using rule 7 (opVars -> empty .)
    ID              reduce using rule 7 (opVars -> empty .)
    IF              reduce using rule 7 (opVars -> empty .)
    FOR             reduce using rule 7 (opVars -> empty .)
    WHILE           reduce using rule 7 (opVars -> empty .)
    }               reduce using rule 7 (opVars -> empty .)
    MAIN            reduce using rule 7 (opVars -> empty .)
    FUNC            reduce using rule 7 (opVars -> empty .)


state 12

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope . opFunctions main } printTables
    (8) opFunctions -> . function opFunctions
    (9) opFunctions -> . empty
    (48) function -> . errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (150) empty -> .
    (49) errorFunction -> .

    MAIN            reduce using rule 150 (empty -> .)
    FUNC            reduce using rule 49 (errorFunction -> .)

    function                       shift and go to state 16
    errorFunction                  shift and go to state 17
    empty                          shift and go to state 15
    opFunctions                    shift and go to state 14

state 13

    (10) vars -> errorVars VARS . declare
    (26) declare -> . basicDeclare
    (27) declare -> . structDeclare
    (28) declare -> . dictDeclare
    (62) basicDeclare -> . saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (64) structDeclare -> . errorStructDeclare STRUCT ID struct ; cyDeclare
    (66) dictDeclare -> . errorDictDeclare DICT ID dict ; cyDeclare
    (3) saveType -> .
    (65) errorStructDeclare -> .
    (67) errorDictDeclare -> .

    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)
    STRUCT          reduce using rule 65 (errorStructDeclare -> .)
    DICT            reduce using rule 67 (errorDictDeclare -> .)

    dictDeclare                    shift and go to state 18
    saveType                       shift and go to state 19
    errorDictDeclare               shift and go to state 20
    structDeclare                  shift and go to state 21
    errorStructDeclare             shift and go to state 22
    basicDeclare                   shift and go to state 23
    declare                        shift and go to state 24

state 14

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions . main } printTables
    (18) main -> . errorMain MAIN saveMain { opVars body } clearVarsTable
    (20) errorMain -> .

    MAIN            reduce using rule 20 (errorMain -> .)

    main                           shift and go to state 25
    errorMain                      shift and go to state 26

state 15

    (9) opFunctions -> empty .

    MAIN            reduce using rule 9 (opFunctions -> empty .)


state 16

    (8) opFunctions -> function . opFunctions
    (8) opFunctions -> . function opFunctions
    (9) opFunctions -> . empty
    (48) function -> . errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (150) empty -> .
    (49) errorFunction -> .

    MAIN            reduce using rule 150 (empty -> .)
    FUNC            reduce using rule 49 (errorFunction -> .)

    function                       shift and go to state 16
    errorFunction                  shift and go to state 17
    empty                          shift and go to state 15
    opFunctions                    shift and go to state 27

state 17

    (48) function -> errorFunction . FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable

    FUNC            shift and go to state 28


state 18

    (28) declare -> dictDeclare .

    MAIN            reduce using rule 28 (declare -> dictDeclare .)
    FUNC            reduce using rule 28 (declare -> dictDeclare .)
    }               reduce using rule 28 (declare -> dictDeclare .)
    ID              reduce using rule 28 (declare -> dictDeclare .)
    IF              reduce using rule 28 (declare -> dictDeclare .)
    FOR             reduce using rule 28 (declare -> dictDeclare .)
    WHILE           reduce using rule 28 (declare -> dictDeclare .)
    RETURN          reduce using rule 28 (declare -> dictDeclare .)


state 19

    (62) basicDeclare -> saveType . type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    errorType                      shift and go to state 31
    type                           shift and go to state 33

state 20

    (66) dictDeclare -> errorDictDeclare . DICT ID dict ; cyDeclare

    DICT            shift and go to state 34


state 21

    (27) declare -> structDeclare .

    MAIN            reduce using rule 27 (declare -> structDeclare .)
    FUNC            reduce using rule 27 (declare -> structDeclare .)
    }               reduce using rule 27 (declare -> structDeclare .)
    ID              reduce using rule 27 (declare -> structDeclare .)
    IF              reduce using rule 27 (declare -> structDeclare .)
    FOR             reduce using rule 27 (declare -> structDeclare .)
    WHILE           reduce using rule 27 (declare -> structDeclare .)
    RETURN          reduce using rule 27 (declare -> structDeclare .)


state 22

    (64) structDeclare -> errorStructDeclare . STRUCT ID struct ; cyDeclare

    STRUCT          shift and go to state 35


state 23

    (26) declare -> basicDeclare .

    MAIN            reduce using rule 26 (declare -> basicDeclare .)
    FUNC            reduce using rule 26 (declare -> basicDeclare .)
    }               reduce using rule 26 (declare -> basicDeclare .)
    ID              reduce using rule 26 (declare -> basicDeclare .)
    IF              reduce using rule 26 (declare -> basicDeclare .)
    FOR             reduce using rule 26 (declare -> basicDeclare .)
    WHILE           reduce using rule 26 (declare -> basicDeclare .)
    RETURN          reduce using rule 26 (declare -> basicDeclare .)


state 24

    (10) vars -> errorVars VARS declare .

    RETURN          reduce using rule 10 (vars -> errorVars VARS declare .)
    ID              reduce using rule 10 (vars -> errorVars VARS declare .)
    IF              reduce using rule 10 (vars -> errorVars VARS declare .)
    FOR             reduce using rule 10 (vars -> errorVars VARS declare .)
    WHILE           reduce using rule 10 (vars -> errorVars VARS declare .)
    }               reduce using rule 10 (vars -> errorVars VARS declare .)
    MAIN            reduce using rule 10 (vars -> errorVars VARS declare .)
    FUNC            reduce using rule 10 (vars -> errorVars VARS declare .)


state 25

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main . } printTables

    }               shift and go to state 36


state 26

    (18) main -> errorMain . MAIN saveMain { opVars body } clearVarsTable

    MAIN            shift and go to state 37


state 27

    (8) opFunctions -> function opFunctions .

    MAIN            reduce using rule 8 (opFunctions -> function opFunctions .)


state 28

    (48) function -> errorFunction FUNC . saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (3) saveType -> .

    ID              reduce using rule 3 (saveType -> .)

    saveType                       shift and go to state 38

state 29

    (14) type -> FLOAT .

    ID              reduce using rule 14 (type -> FLOAT .)
    PARFIN          reduce using rule 14 (type -> FLOAT .)
    [               reduce using rule 14 (type -> FLOAT .)
    :               reduce using rule 14 (type -> FLOAT .)
    {               reduce using rule 14 (type -> FLOAT .)


state 30

    (15) type -> STRING .

    ID              reduce using rule 15 (type -> STRING .)
    PARFIN          reduce using rule 15 (type -> STRING .)
    [               reduce using rule 15 (type -> STRING .)
    :               reduce using rule 15 (type -> STRING .)
    {               reduce using rule 15 (type -> STRING .)


state 31

    (13) type -> errorType . INT

    INT             shift and go to state 39


state 32

    (16) type -> BOOL .

    ID              reduce using rule 16 (type -> BOOL .)
    PARFIN          reduce using rule 16 (type -> BOOL .)
    [               reduce using rule 16 (type -> BOOL .)
    :               reduce using rule 16 (type -> BOOL .)
    {               reduce using rule 16 (type -> BOOL .)


state 33

    (62) basicDeclare -> saveType type . errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (63) errorBasicDeclare -> .

    ID              reduce using rule 63 (errorBasicDeclare -> .)

    errorBasicDeclare              shift and go to state 40

state 34

    (66) dictDeclare -> errorDictDeclare DICT . ID dict ; cyDeclare

    ID              shift and go to state 41


state 35

    (64) structDeclare -> errorStructDeclare STRUCT . ID struct ; cyDeclare

    ID              shift and go to state 42


state 36

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } . printTables
    (151) printTables -> .

    $end            reduce using rule 151 (printTables -> .)

    printTables                    shift and go to state 43

state 37

    (18) main -> errorMain MAIN . saveMain { opVars body } clearVarsTable
    (19) saveMain -> .

    {               reduce using rule 19 (saveMain -> .)

    saveMain                       shift and go to state 44

state 38

    (48) function -> errorFunction FUNC saveType . ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable

    ID              shift and go to state 45


state 39

    (13) type -> errorType INT .

    ID              reduce using rule 13 (type -> errorType INT .)
    PARFIN          reduce using rule 13 (type -> errorType INT .)
    [               reduce using rule 13 (type -> errorType INT .)
    :               reduce using rule 13 (type -> errorType INT .)
    {               reduce using rule 13 (type -> errorType INT .)


state 40

    (62) basicDeclare -> saveType type errorBasicDeclare . ID cyTypeParam saveID ; cyDeclare

    ID              shift and go to state 46


state 41

    (66) dictDeclare -> errorDictDeclare DICT ID . dict ; cyDeclare
    (103) dict -> . errorDict PARINI type : type PARFIN
    (104) errorDict -> .

    PARINI          reduce using rule 104 (errorDict -> .)

    dict                           shift and go to state 48
    errorDict                      shift and go to state 47

state 42

    (64) structDeclare -> errorStructDeclare STRUCT ID . struct ; cyDeclare
    (93) struct -> . structType [ CTED ] optionalMatrix
    (94) structType -> . type
    (95) structType -> . DICT dict
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    DICT            shift and go to state 51
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    structType                     shift and go to state 49
    struct                         shift and go to state 50
    errorType                      shift and go to state 31
    type                           shift and go to state 52

state 43

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables .

    $end            reduce using rule 1 (program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables .)


state 44

    (18) main -> errorMain MAIN saveMain . { opVars body } clearVarsTable

    {               shift and go to state 53


state 45

    (48) function -> errorFunction FUNC saveType ID . saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (4) saveProc -> .

    PARINI          reduce using rule 4 (saveProc -> .)

    saveProc                       shift and go to state 54

state 46

    (62) basicDeclare -> saveType type errorBasicDeclare ID . cyTypeParam saveID ; cyDeclare
    (44) cyTypeParam -> . , saveID saveTypeParam ID cyTypeParam
    (45) cyTypeParam -> . empty
    (150) empty -> .

    ,               shift and go to state 55
    ;               reduce using rule 150 (empty -> .)

    empty                          shift and go to state 56
    cyTypeParam                    shift and go to state 57

state 47

    (103) dict -> errorDict . PARINI type : type PARFIN

    PARINI          shift and go to state 58


state 48

    (66) dictDeclare -> errorDictDeclare DICT ID dict . ; cyDeclare

    ;               shift and go to state 59


state 49

    (93) struct -> structType . [ CTED ] optionalMatrix

    [               shift and go to state 60


state 50

    (64) structDeclare -> errorStructDeclare STRUCT ID struct . ; cyDeclare

    ;               shift and go to state 61


state 51

    (95) structType -> DICT . dict
    (103) dict -> . errorDict PARINI type : type PARFIN
    (104) errorDict -> .

    PARINI          reduce using rule 104 (errorDict -> .)

    dict                           shift and go to state 62
    errorDict                      shift and go to state 47

state 52

    (94) structType -> type .

    [               reduce using rule 94 (structType -> type .)


state 53

    (18) main -> errorMain MAIN saveMain { . opVars body } clearVarsTable
    (6) opVars -> . vars
    (7) opVars -> . empty
    (10) vars -> . errorVars VARS declare
    (150) empty -> .
    (12) errorVars -> .

    }               reduce using rule 150 (empty -> .)
    ID              reduce using rule 150 (empty -> .)
    IF              reduce using rule 150 (empty -> .)
    FOR             reduce using rule 150 (empty -> .)
    WHILE           reduce using rule 150 (empty -> .)
    VARS            reduce using rule 12 (errorVars -> .)

    vars                           shift and go to state 8
    opVars                         shift and go to state 63
    errorVars                      shift and go to state 10
    empty                          shift and go to state 11

state 54

    (48) function -> errorFunction FUNC saveType ID saveProc . flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (55) flagParameters -> .

    PARINI          reduce using rule 55 (flagParameters -> .)

    flagParameters                 shift and go to state 64

state 55

    (44) cyTypeParam -> , . saveID saveTypeParam ID cyTypeParam
    (11) saveID -> .

    ID              reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 65

state 56

    (45) cyTypeParam -> empty .

    ;               reduce using rule 45 (cyTypeParam -> empty .)
    PARFIN          reduce using rule 45 (cyTypeParam -> empty .)


state 57

    (62) basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam . saveID ; cyDeclare
    (11) saveID -> .

    ;               reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 66

state 58

    (103) dict -> errorDict PARINI . type : type PARFIN
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    errorType                      shift and go to state 31
    type                           shift and go to state 67

state 59

    (66) dictDeclare -> errorDictDeclare DICT ID dict ; . cyDeclare
    (68) cyDeclare -> . declare
    (69) cyDeclare -> . empty
    (26) declare -> . basicDeclare
    (27) declare -> . structDeclare
    (28) declare -> . dictDeclare
    (150) empty -> .
    (62) basicDeclare -> . saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (64) structDeclare -> . errorStructDeclare STRUCT ID struct ; cyDeclare
    (66) dictDeclare -> . errorDictDeclare DICT ID dict ; cyDeclare
    (3) saveType -> .
    (65) errorStructDeclare -> .
    (67) errorDictDeclare -> .

    MAIN            reduce using rule 150 (empty -> .)
    FUNC            reduce using rule 150 (empty -> .)
    }               reduce using rule 150 (empty -> .)
    ID              reduce using rule 150 (empty -> .)
    IF              reduce using rule 150 (empty -> .)
    FOR             reduce using rule 150 (empty -> .)
    WHILE           reduce using rule 150 (empty -> .)
    RETURN          reduce using rule 150 (empty -> .)
    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)
    STRUCT          reduce using rule 65 (errorStructDeclare -> .)
    DICT            reduce using rule 67 (errorDictDeclare -> .)

    dictDeclare                    shift and go to state 18
    cyDeclare                      shift and go to state 68
    saveType                       shift and go to state 19
    structDeclare                  shift and go to state 21
    errorDictDeclare               shift and go to state 20
    errorStructDeclare             shift and go to state 22
    basicDeclare                   shift and go to state 23
    declare                        shift and go to state 69
    empty                          shift and go to state 70

state 60

    (93) struct -> structType [ . CTED ] optionalMatrix

    CTED            shift and go to state 71


state 61

    (64) structDeclare -> errorStructDeclare STRUCT ID struct ; . cyDeclare
    (68) cyDeclare -> . declare
    (69) cyDeclare -> . empty
    (26) declare -> . basicDeclare
    (27) declare -> . structDeclare
    (28) declare -> . dictDeclare
    (150) empty -> .
    (62) basicDeclare -> . saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (64) structDeclare -> . errorStructDeclare STRUCT ID struct ; cyDeclare
    (66) dictDeclare -> . errorDictDeclare DICT ID dict ; cyDeclare
    (3) saveType -> .
    (65) errorStructDeclare -> .
    (67) errorDictDeclare -> .

    MAIN            reduce using rule 150 (empty -> .)
    FUNC            reduce using rule 150 (empty -> .)
    }               reduce using rule 150 (empty -> .)
    ID              reduce using rule 150 (empty -> .)
    IF              reduce using rule 150 (empty -> .)
    FOR             reduce using rule 150 (empty -> .)
    WHILE           reduce using rule 150 (empty -> .)
    RETURN          reduce using rule 150 (empty -> .)
    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)
    STRUCT          reduce using rule 65 (errorStructDeclare -> .)
    DICT            reduce using rule 67 (errorDictDeclare -> .)

    dictDeclare                    shift and go to state 18
    cyDeclare                      shift and go to state 72
    saveType                       shift and go to state 19
    errorDictDeclare               shift and go to state 20
    structDeclare                  shift and go to state 21
    basicDeclare                   shift and go to state 23
    declare                        shift and go to state 69
    empty                          shift and go to state 70
    errorStructDeclare             shift and go to state 22

state 62

    (95) structType -> DICT dict .

    [               reduce using rule 95 (structType -> DICT dict .)


state 63

    (18) main -> errorMain MAIN saveMain { opVars . body } clearVarsTable
    (70) body -> . errorBody cyInstruction
    (71) body -> . empty
    (72) errorBody -> .
    (150) empty -> .

    ID              reduce using rule 72 (errorBody -> .)
    IF              reduce using rule 72 (errorBody -> .)
    FOR             reduce using rule 72 (errorBody -> .)
    WHILE           reduce using rule 72 (errorBody -> .)
    }               reduce using rule 150 (empty -> .)

    body                           shift and go to state 73
    errorBody                      shift and go to state 74
    empty                          shift and go to state 75

state 64

    (48) function -> errorFunction FUNC saveType ID saveProc flagParameters . PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable

    PARINI          shift and go to state 76


state 65

    (44) cyTypeParam -> , saveID . saveTypeParam ID cyTypeParam
    (46) saveTypeParam -> .

    ID              reduce using rule 46 (saveTypeParam -> .)

    saveTypeParam                  shift and go to state 77

state 66

    (62) basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID . ; cyDeclare

    ;               shift and go to state 78


state 67

    (103) dict -> errorDict PARINI type . : type PARFIN

    :               shift and go to state 79


state 68

    (66) dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .

    MAIN            reduce using rule 66 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    FUNC            reduce using rule 66 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    }               reduce using rule 66 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    ID              reduce using rule 66 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    IF              reduce using rule 66 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    FOR             reduce using rule 66 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    WHILE           reduce using rule 66 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    RETURN          reduce using rule 66 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)


state 69

    (68) cyDeclare -> declare .

    MAIN            reduce using rule 68 (cyDeclare -> declare .)
    FUNC            reduce using rule 68 (cyDeclare -> declare .)
    }               reduce using rule 68 (cyDeclare -> declare .)
    ID              reduce using rule 68 (cyDeclare -> declare .)
    IF              reduce using rule 68 (cyDeclare -> declare .)
    FOR             reduce using rule 68 (cyDeclare -> declare .)
    WHILE           reduce using rule 68 (cyDeclare -> declare .)
    RETURN          reduce using rule 68 (cyDeclare -> declare .)


state 70

    (69) cyDeclare -> empty .

    MAIN            reduce using rule 69 (cyDeclare -> empty .)
    FUNC            reduce using rule 69 (cyDeclare -> empty .)
    }               reduce using rule 69 (cyDeclare -> empty .)
    ID              reduce using rule 69 (cyDeclare -> empty .)
    IF              reduce using rule 69 (cyDeclare -> empty .)
    FOR             reduce using rule 69 (cyDeclare -> empty .)
    WHILE           reduce using rule 69 (cyDeclare -> empty .)
    RETURN          reduce using rule 69 (cyDeclare -> empty .)


state 71

    (93) struct -> structType [ CTED . ] optionalMatrix

    ]               shift and go to state 80


state 72

    (64) structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .

    MAIN            reduce using rule 64 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    FUNC            reduce using rule 64 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    }               reduce using rule 64 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    ID              reduce using rule 64 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    IF              reduce using rule 64 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    FOR             reduce using rule 64 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    WHILE           reduce using rule 64 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    RETURN          reduce using rule 64 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)


state 73

    (18) main -> errorMain MAIN saveMain { opVars body . } clearVarsTable

    }               shift and go to state 81


state 74

    (70) body -> errorBody . cyInstruction
    (73) cyInstruction -> . instr body
    (21) instr -> . basicStatements ;
    (22) instr -> . condition
    (23) instr -> . cycle
    (24) basicStatements -> . assign
    (25) basicStatements -> . funcCall
    (98) condition -> . errorCondition IF PARINI expresion PARFIN { body } optionalElse
    (74) cycle -> . forCycle
    (75) cycle -> . whileCycle
    (80) assign -> . ID saveVariable errorAssign assignOptions performAssign
    (88) funcCall -> . ID PARINI opParamCall PARFIN
    (99) errorCondition -> .
    (78) forCycle -> . errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body }
    (76) whileCycle -> . errorWhileCycle WHILE PARINI expresion PARFIN { body }
    (79) errorForCycle -> .
    (77) errorWhileCycle -> .

    ID              shift and go to state 90
    IF              reduce using rule 99 (errorCondition -> .)
    FOR             reduce using rule 79 (errorForCycle -> .)
    WHILE           reduce using rule 77 (errorWhileCycle -> .)

    errorWhileCycle                shift and go to state 85
    funcCall                       shift and go to state 92
    instr                          shift and go to state 82
    forCycle                       shift and go to state 84
    assign                         shift and go to state 94
    whileCycle                     shift and go to state 83
    basicStatements                shift and go to state 88
    errorForCycle                  shift and go to state 89
    errorCondition                 shift and go to state 93
    cyInstruction                  shift and go to state 86
    condition                      shift and go to state 91
    cycle                          shift and go to state 87

state 75

    (71) body -> empty .

    }               reduce using rule 71 (body -> empty .)
    RETURN          reduce using rule 71 (body -> empty .)


state 76

    (48) function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI . opParameters PARFIN flagParameters opReturns } clearVarsTable
    (53) opParameters -> . param saveParamToDirProc errorOpParameters
    (54) opParameters -> . empty
    (40) param -> . saveType type errorParam ID cyTypeParam cyParam
    (150) empty -> .
    (3) saveType -> .

    PARFIN          reduce using rule 150 (empty -> .)
    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)

    opParameters                   shift and go to state 95
    param                          shift and go to state 96
    saveType                       shift and go to state 97
    empty                          shift and go to state 98

state 77

    (44) cyTypeParam -> , saveID saveTypeParam . ID cyTypeParam

    ID              shift and go to state 99


state 78

    (62) basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; . cyDeclare
    (68) cyDeclare -> . declare
    (69) cyDeclare -> . empty
    (26) declare -> . basicDeclare
    (27) declare -> . structDeclare
    (28) declare -> . dictDeclare
    (150) empty -> .
    (62) basicDeclare -> . saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (64) structDeclare -> . errorStructDeclare STRUCT ID struct ; cyDeclare
    (66) dictDeclare -> . errorDictDeclare DICT ID dict ; cyDeclare
    (3) saveType -> .
    (65) errorStructDeclare -> .
    (67) errorDictDeclare -> .

    MAIN            reduce using rule 150 (empty -> .)
    FUNC            reduce using rule 150 (empty -> .)
    }               reduce using rule 150 (empty -> .)
    ID              reduce using rule 150 (empty -> .)
    IF              reduce using rule 150 (empty -> .)
    FOR             reduce using rule 150 (empty -> .)
    WHILE           reduce using rule 150 (empty -> .)
    RETURN          reduce using rule 150 (empty -> .)
    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)
    STRUCT          reduce using rule 65 (errorStructDeclare -> .)
    DICT            reduce using rule 67 (errorDictDeclare -> .)

    dictDeclare                    shift and go to state 18
    cyDeclare                      shift and go to state 100
    basicDeclare                   shift and go to state 23
    saveType                       shift and go to state 19
    errorDictDeclare               shift and go to state 20
    empty                          shift and go to state 70
    structDeclare                  shift and go to state 21
    errorStructDeclare             shift and go to state 22
    declare                        shift and go to state 69

state 79

    (103) dict -> errorDict PARINI type : . type PARFIN
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    errorType                      shift and go to state 31
    type                           shift and go to state 101

state 80

    (93) struct -> structType [ CTED ] . optionalMatrix
    (96) optionalMatrix -> . [ CTED ]
    (97) optionalMatrix -> . empty
    (150) empty -> .

    [               shift and go to state 103
    ;               reduce using rule 150 (empty -> .)

    empty                          shift and go to state 104
    optionalMatrix                 shift and go to state 102

state 81

    (18) main -> errorMain MAIN saveMain { opVars body } . clearVarsTable
    (50) clearVarsTable -> .

    }               reduce using rule 50 (clearVarsTable -> .)

    clearVarsTable                 shift and go to state 105

state 82

    (73) cyInstruction -> instr . body
    (70) body -> . errorBody cyInstruction
    (71) body -> . empty
    (72) errorBody -> .
    (150) empty -> .

    ID              reduce using rule 72 (errorBody -> .)
    IF              reduce using rule 72 (errorBody -> .)
    FOR             reduce using rule 72 (errorBody -> .)
    WHILE           reduce using rule 72 (errorBody -> .)
    }               reduce using rule 150 (empty -> .)
    RETURN          reduce using rule 150 (empty -> .)

    body                           shift and go to state 106
    errorBody                      shift and go to state 74
    empty                          shift and go to state 75

state 83

    (75) cycle -> whileCycle .

    ID              reduce using rule 75 (cycle -> whileCycle .)
    IF              reduce using rule 75 (cycle -> whileCycle .)
    FOR             reduce using rule 75 (cycle -> whileCycle .)
    WHILE           reduce using rule 75 (cycle -> whileCycle .)
    }               reduce using rule 75 (cycle -> whileCycle .)
    RETURN          reduce using rule 75 (cycle -> whileCycle .)


state 84

    (74) cycle -> forCycle .

    ID              reduce using rule 74 (cycle -> forCycle .)
    IF              reduce using rule 74 (cycle -> forCycle .)
    FOR             reduce using rule 74 (cycle -> forCycle .)
    WHILE           reduce using rule 74 (cycle -> forCycle .)
    }               reduce using rule 74 (cycle -> forCycle .)
    RETURN          reduce using rule 74 (cycle -> forCycle .)


state 85

    (76) whileCycle -> errorWhileCycle . WHILE PARINI expresion PARFIN { body }

    WHILE           shift and go to state 107


state 86

    (70) body -> errorBody cyInstruction .

    }               reduce using rule 70 (body -> errorBody cyInstruction .)
    RETURN          reduce using rule 70 (body -> errorBody cyInstruction .)


state 87

    (23) instr -> cycle .

    ID              reduce using rule 23 (instr -> cycle .)
    IF              reduce using rule 23 (instr -> cycle .)
    FOR             reduce using rule 23 (instr -> cycle .)
    WHILE           reduce using rule 23 (instr -> cycle .)
    }               reduce using rule 23 (instr -> cycle .)
    RETURN          reduce using rule 23 (instr -> cycle .)


state 88

    (21) instr -> basicStatements . ;

    ;               shift and go to state 108


state 89

    (78) forCycle -> errorForCycle . FOR PARINI assign ; expresion ; assign PARFIN { body }

    FOR             shift and go to state 109


state 90

    (80) assign -> ID . saveVariable errorAssign assignOptions performAssign
    (88) funcCall -> ID . PARINI opParamCall PARFIN
    (152) saveVariable -> .

    PARINI          shift and go to state 111
    [               reduce using rule 152 (saveVariable -> .)
    ASGN            reduce using rule 152 (saveVariable -> .)

    saveVariable                   shift and go to state 110

state 91

    (22) instr -> condition .

    ID              reduce using rule 22 (instr -> condition .)
    IF              reduce using rule 22 (instr -> condition .)
    FOR             reduce using rule 22 (instr -> condition .)
    WHILE           reduce using rule 22 (instr -> condition .)
    }               reduce using rule 22 (instr -> condition .)
    RETURN          reduce using rule 22 (instr -> condition .)


state 92

    (25) basicStatements -> funcCall .

    ;               reduce using rule 25 (basicStatements -> funcCall .)


state 93

    (98) condition -> errorCondition . IF PARINI expresion PARFIN { body } optionalElse

    IF              shift and go to state 112


state 94

    (24) basicStatements -> assign .

    ;               reduce using rule 24 (basicStatements -> assign .)


state 95

    (48) function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters . PARFIN flagParameters opReturns } clearVarsTable

    PARFIN          shift and go to state 113


state 96

    (53) opParameters -> param . saveParamToDirProc errorOpParameters
    (56) saveParamToDirProc -> .

    PARFIN          reduce using rule 56 (saveParamToDirProc -> .)

    saveParamToDirProc             shift and go to state 114

state 97

    (40) param -> saveType . type errorParam ID cyTypeParam cyParam
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    type                           shift and go to state 115
    errorType                      shift and go to state 31

state 98

    (54) opParameters -> empty .

    PARFIN          reduce using rule 54 (opParameters -> empty .)


state 99

    (44) cyTypeParam -> , saveID saveTypeParam ID . cyTypeParam
    (44) cyTypeParam -> . , saveID saveTypeParam ID cyTypeParam
    (45) cyTypeParam -> . empty
    (150) empty -> .

    ,               shift and go to state 55
    ;               reduce using rule 150 (empty -> .)
    PARFIN          reduce using rule 150 (empty -> .)

    cyTypeParam                    shift and go to state 116
    empty                          shift and go to state 56

state 100

    (62) basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .

    MAIN            reduce using rule 62 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    FUNC            reduce using rule 62 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    }               reduce using rule 62 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    ID              reduce using rule 62 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    IF              reduce using rule 62 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    FOR             reduce using rule 62 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    WHILE           reduce using rule 62 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    RETURN          reduce using rule 62 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)


state 101

    (103) dict -> errorDict PARINI type : type . PARFIN

    PARFIN          shift and go to state 117


state 102

    (93) struct -> structType [ CTED ] optionalMatrix .

    ;               reduce using rule 93 (struct -> structType [ CTED ] optionalMatrix .)


state 103

    (96) optionalMatrix -> [ . CTED ]

    CTED            shift and go to state 118


state 104

    (97) optionalMatrix -> empty .

    ;               reduce using rule 97 (optionalMatrix -> empty .)


state 105

    (18) main -> errorMain MAIN saveMain { opVars body } clearVarsTable .

    }               reduce using rule 18 (main -> errorMain MAIN saveMain { opVars body } clearVarsTable .)


state 106

    (73) cyInstruction -> instr body .

    }               reduce using rule 73 (cyInstruction -> instr body .)
    RETURN          reduce using rule 73 (cyInstruction -> instr body .)


state 107

    (76) whileCycle -> errorWhileCycle WHILE . PARINI expresion PARFIN { body }

    PARINI          shift and go to state 119


state 108

    (21) instr -> basicStatements ; .

    ID              reduce using rule 21 (instr -> basicStatements ; .)
    IF              reduce using rule 21 (instr -> basicStatements ; .)
    FOR             reduce using rule 21 (instr -> basicStatements ; .)
    WHILE           reduce using rule 21 (instr -> basicStatements ; .)
    }               reduce using rule 21 (instr -> basicStatements ; .)
    RETURN          reduce using rule 21 (instr -> basicStatements ; .)


state 109

    (78) forCycle -> errorForCycle FOR . PARINI assign ; expresion ; assign PARFIN { body }

    PARINI          shift and go to state 120


state 110

    (80) assign -> ID saveVariable . errorAssign assignOptions performAssign
    (81) errorAssign -> .

    [               reduce using rule 81 (errorAssign -> .)
    ASGN            reduce using rule 81 (errorAssign -> .)

    errorAssign                    shift and go to state 121

state 111

    (88) funcCall -> ID PARINI . opParamCall PARFIN
    (89) opParamCall -> . expresion cyParamCall
    (90) opParamCall -> . empty
    (105) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (150) empty -> .
    (110) sExp -> . exp errorOpSExp opSExp performRelational
    (119) exp -> . term performAddSub errorCyExp cyExp
    (124) term -> . fact performMulDiv cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (132) fact -> . ID saveVariable opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID PARINI opParamCall PARFIN

    PARFIN          reduce using rule 150 (empty -> .)
    CTES            shift and go to state 129
    PARINI          shift and go to state 136
    ID              shift and go to state 127
    CTED            shift and go to state 126
    CTEF            shift and go to state 134
    TRUE            shift and go to state 123
    FALSE           shift and go to state 131

    opParamCall                    shift and go to state 122
    sExp                           shift and go to state 124
    empty                          shift and go to state 125
    expresion                      shift and go to state 128
    term                           shift and go to state 130
    funcCall                       shift and go to state 132
    cte                            shift and go to state 133
    exp                            shift and go to state 135
    fact                           shift and go to state 137

state 112

    (98) condition -> errorCondition IF . PARINI expresion PARFIN { body } optionalElse

    PARINI          shift and go to state 138


state 113

    (48) function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN . flagParameters opReturns } clearVarsTable
    (55) flagParameters -> .

    {               reduce using rule 55 (flagParameters -> .)
    RETURNS         reduce using rule 55 (flagParameters -> .)

    flagParameters                 shift and go to state 139

state 114

    (53) opParameters -> param saveParamToDirProc . errorOpParameters
    (57) errorOpParameters -> .

    PARFIN          reduce using rule 57 (errorOpParameters -> .)

    errorOpParameters              shift and go to state 140

state 115

    (40) param -> saveType type . errorParam ID cyTypeParam cyParam
    (41) errorParam -> .

    ID              reduce using rule 41 (errorParam -> .)

    errorParam                     shift and go to state 141

state 116

    (44) cyTypeParam -> , saveID saveTypeParam ID cyTypeParam .

    ;               reduce using rule 44 (cyTypeParam -> , saveID saveTypeParam ID cyTypeParam .)
    PARFIN          reduce using rule 44 (cyTypeParam -> , saveID saveTypeParam ID cyTypeParam .)


state 117

    (103) dict -> errorDict PARINI type : type PARFIN .

    ;               reduce using rule 103 (dict -> errorDict PARINI type : type PARFIN .)
    [               reduce using rule 103 (dict -> errorDict PARINI type : type PARFIN .)


state 118

    (96) optionalMatrix -> [ CTED . ]

    ]               shift and go to state 142


state 119

    (76) whileCycle -> errorWhileCycle WHILE PARINI . expresion PARFIN { body }
    (105) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (110) sExp -> . exp errorOpSExp opSExp performRelational
    (119) exp -> . term performAddSub errorCyExp cyExp
    (124) term -> . fact performMulDiv cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (132) fact -> . ID saveVariable opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 129
    PARINI          shift and go to state 136
    ID              shift and go to state 127
    CTED            shift and go to state 126
    CTEF            shift and go to state 134
    TRUE            shift and go to state 123
    FALSE           shift and go to state 131

    sExp                           shift and go to state 124
    expresion                      shift and go to state 143
    term                           shift and go to state 130
    funcCall                       shift and go to state 132
    cte                            shift and go to state 133
    exp                            shift and go to state 135
    fact                           shift and go to state 137

state 120

    (78) forCycle -> errorForCycle FOR PARINI . assign ; expresion ; assign PARFIN { body }
    (80) assign -> . ID saveVariable errorAssign assignOptions performAssign

    ID              shift and go to state 144

    assign                         shift and go to state 145

state 121

    (80) assign -> ID saveVariable errorAssign . assignOptions performAssign
    (82) assignOptions -> . init
    (83) assignOptions -> . initDict
    (84) assignOptions -> . [ expresion ] assignMatrix init
    (29) init -> . ASGN saveOperator errorInit initWith
    (34) initDict -> . ASGN PARINI dictType : dictType PARFIN errorInitDict

    [               shift and go to state 150
    ASGN            shift and go to state 148

    initDict                       shift and go to state 146
    assignOptions                  shift and go to state 147
    init                           shift and go to state 149

state 122

    (88) funcCall -> ID PARINI opParamCall . PARFIN

    PARFIN          shift and go to state 151


state 123

    (148) cte -> TRUE .

    MULT            reduce using rule 148 (cte -> TRUE .)
    DIV             reduce using rule 148 (cte -> TRUE .)
    PLUS            reduce using rule 148 (cte -> TRUE .)
    MINUS           reduce using rule 148 (cte -> TRUE .)
    EQ              reduce using rule 148 (cte -> TRUE .)
    DIF             reduce using rule 148 (cte -> TRUE .)
    LTOEQ           reduce using rule 148 (cte -> TRUE .)
    GTOEQ           reduce using rule 148 (cte -> TRUE .)
    GT              reduce using rule 148 (cte -> TRUE .)
    LT              reduce using rule 148 (cte -> TRUE .)
    AND             reduce using rule 148 (cte -> TRUE .)
    OR              reduce using rule 148 (cte -> TRUE .)
    PARFIN          reduce using rule 148 (cte -> TRUE .)
    ;               reduce using rule 148 (cte -> TRUE .)
    ,               reduce using rule 148 (cte -> TRUE .)
    ]               reduce using rule 148 (cte -> TRUE .)
    :               reduce using rule 148 (cte -> TRUE .)


state 124

    (105) expresion -> sExp . performAndOr cyExpresion errorExpresion
    (160) performAndOr -> .

    AND             reduce using rule 160 (performAndOr -> .)
    OR              reduce using rule 160 (performAndOr -> .)
    ,               reduce using rule 160 (performAndOr -> .)
    PARFIN          reduce using rule 160 (performAndOr -> .)
    ]               reduce using rule 160 (performAndOr -> .)
    ;               reduce using rule 160 (performAndOr -> .)

    performAndOr                   shift and go to state 152

state 125

    (90) opParamCall -> empty .

    PARFIN          reduce using rule 90 (opParamCall -> empty .)


state 126

    (146) cte -> CTED .

    MULT            reduce using rule 146 (cte -> CTED .)
    DIV             reduce using rule 146 (cte -> CTED .)
    PLUS            reduce using rule 146 (cte -> CTED .)
    MINUS           reduce using rule 146 (cte -> CTED .)
    EQ              reduce using rule 146 (cte -> CTED .)
    DIF             reduce using rule 146 (cte -> CTED .)
    LTOEQ           reduce using rule 146 (cte -> CTED .)
    GTOEQ           reduce using rule 146 (cte -> CTED .)
    GT              reduce using rule 146 (cte -> CTED .)
    LT              reduce using rule 146 (cte -> CTED .)
    AND             reduce using rule 146 (cte -> CTED .)
    OR              reduce using rule 146 (cte -> CTED .)
    PARFIN          reduce using rule 146 (cte -> CTED .)
    ;               reduce using rule 146 (cte -> CTED .)
    ,               reduce using rule 146 (cte -> CTED .)
    ]               reduce using rule 146 (cte -> CTED .)
    :               reduce using rule 146 (cte -> CTED .)


state 127

    (132) fact -> ID . saveVariable opAccess errorOpAccess
    (88) funcCall -> ID . PARINI opParamCall PARFIN
    (152) saveVariable -> .

    PARINI          shift and go to state 111
    .               reduce using rule 152 (saveVariable -> .)
    [               reduce using rule 152 (saveVariable -> .)
    MULT            reduce using rule 152 (saveVariable -> .)
    DIV             reduce using rule 152 (saveVariable -> .)
    PLUS            reduce using rule 152 (saveVariable -> .)
    MINUS           reduce using rule 152 (saveVariable -> .)
    EQ              reduce using rule 152 (saveVariable -> .)
    DIF             reduce using rule 152 (saveVariable -> .)
    LTOEQ           reduce using rule 152 (saveVariable -> .)
    GTOEQ           reduce using rule 152 (saveVariable -> .)
    GT              reduce using rule 152 (saveVariable -> .)
    LT              reduce using rule 152 (saveVariable -> .)
    AND             reduce using rule 152 (saveVariable -> .)
    OR              reduce using rule 152 (saveVariable -> .)
    ,               reduce using rule 152 (saveVariable -> .)
    PARFIN          reduce using rule 152 (saveVariable -> .)
    ]               reduce using rule 152 (saveVariable -> .)
    ;               reduce using rule 152 (saveVariable -> .)

    saveVariable                   shift and go to state 153

state 128

    (89) opParamCall -> expresion . cyParamCall
    (91) cyParamCall -> . , expresion cyParamCall
    (92) cyParamCall -> . empty
    (150) empty -> .

    ,               shift and go to state 155
    PARFIN          reduce using rule 150 (empty -> .)

    cyParamCall                    shift and go to state 154
    empty                          shift and go to state 156

state 129

    (128) fact -> CTES .

    MULT            reduce using rule 128 (fact -> CTES .)
    DIV             reduce using rule 128 (fact -> CTES .)
    PLUS            reduce using rule 128 (fact -> CTES .)
    MINUS           reduce using rule 128 (fact -> CTES .)
    AND             reduce using rule 128 (fact -> CTES .)
    OR              reduce using rule 128 (fact -> CTES .)
    ,               reduce using rule 128 (fact -> CTES .)
    PARFIN          reduce using rule 128 (fact -> CTES .)
    ]               reduce using rule 128 (fact -> CTES .)
    ;               reduce using rule 128 (fact -> CTES .)
    EQ              reduce using rule 128 (fact -> CTES .)
    DIF             reduce using rule 128 (fact -> CTES .)
    LTOEQ           reduce using rule 128 (fact -> CTES .)
    GTOEQ           reduce using rule 128 (fact -> CTES .)
    GT              reduce using rule 128 (fact -> CTES .)
    LT              reduce using rule 128 (fact -> CTES .)


state 130

    (119) exp -> term . performAddSub errorCyExp cyExp
    (158) performAddSub -> .

    PLUS            reduce using rule 158 (performAddSub -> .)
    MINUS           reduce using rule 158 (performAddSub -> .)
    EQ              reduce using rule 158 (performAddSub -> .)
    DIF             reduce using rule 158 (performAddSub -> .)
    LTOEQ           reduce using rule 158 (performAddSub -> .)
    GTOEQ           reduce using rule 158 (performAddSub -> .)
    GT              reduce using rule 158 (performAddSub -> .)
    LT              reduce using rule 158 (performAddSub -> .)
    AND             reduce using rule 158 (performAddSub -> .)
    OR              reduce using rule 158 (performAddSub -> .)
    ,               reduce using rule 158 (performAddSub -> .)
    PARFIN          reduce using rule 158 (performAddSub -> .)
    ]               reduce using rule 158 (performAddSub -> .)
    ;               reduce using rule 158 (performAddSub -> .)

    performAddSub                  shift and go to state 157

state 131

    (149) cte -> FALSE .

    MULT            reduce using rule 149 (cte -> FALSE .)
    DIV             reduce using rule 149 (cte -> FALSE .)
    PLUS            reduce using rule 149 (cte -> FALSE .)
    MINUS           reduce using rule 149 (cte -> FALSE .)
    EQ              reduce using rule 149 (cte -> FALSE .)
    DIF             reduce using rule 149 (cte -> FALSE .)
    LTOEQ           reduce using rule 149 (cte -> FALSE .)
    GTOEQ           reduce using rule 149 (cte -> FALSE .)
    GT              reduce using rule 149 (cte -> FALSE .)
    LT              reduce using rule 149 (cte -> FALSE .)
    AND             reduce using rule 149 (cte -> FALSE .)
    OR              reduce using rule 149 (cte -> FALSE .)
    PARFIN          reduce using rule 149 (cte -> FALSE .)
    ;               reduce using rule 149 (cte -> FALSE .)
    ,               reduce using rule 149 (cte -> FALSE .)
    ]               reduce using rule 149 (cte -> FALSE .)
    :               reduce using rule 149 (cte -> FALSE .)


state 132

    (130) fact -> funcCall .

    MULT            reduce using rule 130 (fact -> funcCall .)
    DIV             reduce using rule 130 (fact -> funcCall .)
    PLUS            reduce using rule 130 (fact -> funcCall .)
    MINUS           reduce using rule 130 (fact -> funcCall .)
    AND             reduce using rule 130 (fact -> funcCall .)
    OR              reduce using rule 130 (fact -> funcCall .)
    ,               reduce using rule 130 (fact -> funcCall .)
    PARFIN          reduce using rule 130 (fact -> funcCall .)
    ]               reduce using rule 130 (fact -> funcCall .)
    ;               reduce using rule 130 (fact -> funcCall .)
    EQ              reduce using rule 130 (fact -> funcCall .)
    DIF             reduce using rule 130 (fact -> funcCall .)
    LTOEQ           reduce using rule 130 (fact -> funcCall .)
    GTOEQ           reduce using rule 130 (fact -> funcCall .)
    GT              reduce using rule 130 (fact -> funcCall .)
    LT              reduce using rule 130 (fact -> funcCall .)


state 133

    (129) fact -> cte .

    MULT            reduce using rule 129 (fact -> cte .)
    DIV             reduce using rule 129 (fact -> cte .)
    PLUS            reduce using rule 129 (fact -> cte .)
    MINUS           reduce using rule 129 (fact -> cte .)
    AND             reduce using rule 129 (fact -> cte .)
    OR              reduce using rule 129 (fact -> cte .)
    ,               reduce using rule 129 (fact -> cte .)
    PARFIN          reduce using rule 129 (fact -> cte .)
    ]               reduce using rule 129 (fact -> cte .)
    ;               reduce using rule 129 (fact -> cte .)
    EQ              reduce using rule 129 (fact -> cte .)
    DIF             reduce using rule 129 (fact -> cte .)
    LTOEQ           reduce using rule 129 (fact -> cte .)
    GTOEQ           reduce using rule 129 (fact -> cte .)
    GT              reduce using rule 129 (fact -> cte .)
    LT              reduce using rule 129 (fact -> cte .)


state 134

    (147) cte -> CTEF .

    MULT            reduce using rule 147 (cte -> CTEF .)
    DIV             reduce using rule 147 (cte -> CTEF .)
    PLUS            reduce using rule 147 (cte -> CTEF .)
    MINUS           reduce using rule 147 (cte -> CTEF .)
    EQ              reduce using rule 147 (cte -> CTEF .)
    DIF             reduce using rule 147 (cte -> CTEF .)
    LTOEQ           reduce using rule 147 (cte -> CTEF .)
    GTOEQ           reduce using rule 147 (cte -> CTEF .)
    GT              reduce using rule 147 (cte -> CTEF .)
    LT              reduce using rule 147 (cte -> CTEF .)
    AND             reduce using rule 147 (cte -> CTEF .)
    OR              reduce using rule 147 (cte -> CTEF .)
    PARFIN          reduce using rule 147 (cte -> CTEF .)
    ;               reduce using rule 147 (cte -> CTEF .)
    ,               reduce using rule 147 (cte -> CTEF .)
    ]               reduce using rule 147 (cte -> CTEF .)
    :               reduce using rule 147 (cte -> CTEF .)


state 135

    (110) sExp -> exp . errorOpSExp opSExp performRelational
    (118) errorOpSExp -> .

    EQ              reduce using rule 118 (errorOpSExp -> .)
    DIF             reduce using rule 118 (errorOpSExp -> .)
    LTOEQ           reduce using rule 118 (errorOpSExp -> .)
    GTOEQ           reduce using rule 118 (errorOpSExp -> .)
    GT              reduce using rule 118 (errorOpSExp -> .)
    LT              reduce using rule 118 (errorOpSExp -> .)
    AND             reduce using rule 118 (errorOpSExp -> .)
    OR              reduce using rule 118 (errorOpSExp -> .)
    ,               reduce using rule 118 (errorOpSExp -> .)
    PARFIN          reduce using rule 118 (errorOpSExp -> .)
    ]               reduce using rule 118 (errorOpSExp -> .)
    ;               reduce using rule 118 (errorOpSExp -> .)

    errorOpSExp                    shift and go to state 158

state 136

    (131) fact -> PARINI . putFondo expresion PARFIN takeFondo
    (154) putFondo -> .

    CTES            reduce using rule 154 (putFondo -> .)
    PARINI          reduce using rule 154 (putFondo -> .)
    ID              reduce using rule 154 (putFondo -> .)
    CTED            reduce using rule 154 (putFondo -> .)
    CTEF            reduce using rule 154 (putFondo -> .)
    TRUE            reduce using rule 154 (putFondo -> .)
    FALSE           reduce using rule 154 (putFondo -> .)

    putFondo                       shift and go to state 159

state 137

    (124) term -> fact . performMulDiv cyTerm
    (157) performMulDiv -> .

    MULT            reduce using rule 157 (performMulDiv -> .)
    DIV             reduce using rule 157 (performMulDiv -> .)
    PLUS            reduce using rule 157 (performMulDiv -> .)
    MINUS           reduce using rule 157 (performMulDiv -> .)
    EQ              reduce using rule 157 (performMulDiv -> .)
    DIF             reduce using rule 157 (performMulDiv -> .)
    LTOEQ           reduce using rule 157 (performMulDiv -> .)
    GTOEQ           reduce using rule 157 (performMulDiv -> .)
    GT              reduce using rule 157 (performMulDiv -> .)
    LT              reduce using rule 157 (performMulDiv -> .)
    AND             reduce using rule 157 (performMulDiv -> .)
    OR              reduce using rule 157 (performMulDiv -> .)
    ,               reduce using rule 157 (performMulDiv -> .)
    PARFIN          reduce using rule 157 (performMulDiv -> .)
    ]               reduce using rule 157 (performMulDiv -> .)
    ;               reduce using rule 157 (performMulDiv -> .)

    performMulDiv                  shift and go to state 160

state 138

    (98) condition -> errorCondition IF PARINI . expresion PARFIN { body } optionalElse
    (105) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (110) sExp -> . exp errorOpSExp opSExp performRelational
    (119) exp -> . term performAddSub errorCyExp cyExp
    (124) term -> . fact performMulDiv cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (132) fact -> . ID saveVariable opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 129
    PARINI          shift and go to state 136
    ID              shift and go to state 127
    CTED            shift and go to state 126
    CTEF            shift and go to state 134
    TRUE            shift and go to state 123
    FALSE           shift and go to state 131

    sExp                           shift and go to state 124
    expresion                      shift and go to state 161
    term                           shift and go to state 130
    funcCall                       shift and go to state 132
    cte                            shift and go to state 133
    exp                            shift and go to state 135
    fact                           shift and go to state 137

state 139

    (48) function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters . opReturns } clearVarsTable
    (58) opReturns -> . errorOpReturns RETURNS type saveReturnType { opVars body return
    (59) opReturns -> . { opVars body
    (61) errorOpReturns -> .

    {               shift and go to state 164
    RETURNS         reduce using rule 61 (errorOpReturns -> .)

    errorOpReturns                 shift and go to state 163
    opReturns                      shift and go to state 162

state 140

    (53) opParameters -> param saveParamToDirProc errorOpParameters .

    PARFIN          reduce using rule 53 (opParameters -> param saveParamToDirProc errorOpParameters .)


state 141

    (40) param -> saveType type errorParam . ID cyTypeParam cyParam

    ID              shift and go to state 165


state 142

    (96) optionalMatrix -> [ CTED ] .

    ;               reduce using rule 96 (optionalMatrix -> [ CTED ] .)


state 143

    (76) whileCycle -> errorWhileCycle WHILE PARINI expresion . PARFIN { body }

    PARFIN          shift and go to state 166


state 144

    (80) assign -> ID . saveVariable errorAssign assignOptions performAssign
    (152) saveVariable -> .

    [               reduce using rule 152 (saveVariable -> .)
    ASGN            reduce using rule 152 (saveVariable -> .)

    saveVariable                   shift and go to state 110

state 145

    (78) forCycle -> errorForCycle FOR PARINI assign . ; expresion ; assign PARFIN { body }

    ;               shift and go to state 167


state 146

    (83) assignOptions -> initDict .

    ;               reduce using rule 83 (assignOptions -> initDict .)
    PARFIN          reduce using rule 83 (assignOptions -> initDict .)


state 147

    (80) assign -> ID saveVariable errorAssign assignOptions . performAssign
    (156) performAssign -> .

    ;               reduce using rule 156 (performAssign -> .)
    PARFIN          reduce using rule 156 (performAssign -> .)

    performAssign                  shift and go to state 168

state 148

    (29) init -> ASGN . saveOperator errorInit initWith
    (34) initDict -> ASGN . PARINI dictType : dictType PARFIN errorInitDict
    (153) saveOperator -> .

  ! shift/reduce conflict for PARINI resolved as shift
    PARINI          shift and go to state 170
    CTES            reduce using rule 153 (saveOperator -> .)
    ID              reduce using rule 153 (saveOperator -> .)
    CTED            reduce using rule 153 (saveOperator -> .)
    CTEF            reduce using rule 153 (saveOperator -> .)
    TRUE            reduce using rule 153 (saveOperator -> .)
    FALSE           reduce using rule 153 (saveOperator -> .)

  ! PARINI          [ reduce using rule 153 (saveOperator -> .) ]

    saveOperator                   shift and go to state 169

state 149

    (82) assignOptions -> init .

    ;               reduce using rule 82 (assignOptions -> init .)
    PARFIN          reduce using rule 82 (assignOptions -> init .)


state 150

    (84) assignOptions -> [ . expresion ] assignMatrix init
    (105) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (110) sExp -> . exp errorOpSExp opSExp performRelational
    (119) exp -> . term performAddSub errorCyExp cyExp
    (124) term -> . fact performMulDiv cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (132) fact -> . ID saveVariable opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 129
    PARINI          shift and go to state 136
    ID              shift and go to state 127
    CTED            shift and go to state 126
    CTEF            shift and go to state 134
    TRUE            shift and go to state 123
    FALSE           shift and go to state 131

    sExp                           shift and go to state 124
    expresion                      shift and go to state 171
    term                           shift and go to state 130
    funcCall                       shift and go to state 132
    cte                            shift and go to state 133
    exp                            shift and go to state 135
    fact                           shift and go to state 137

state 151

    (88) funcCall -> ID PARINI opParamCall PARFIN .

    MULT            reduce using rule 88 (funcCall -> ID PARINI opParamCall PARFIN .)
    DIV             reduce using rule 88 (funcCall -> ID PARINI opParamCall PARFIN .)
    PLUS            reduce using rule 88 (funcCall -> ID PARINI opParamCall PARFIN .)
    MINUS           reduce using rule 88 (funcCall -> ID PARINI opParamCall PARFIN .)
    EQ              reduce using rule 88 (funcCall -> ID PARINI opParamCall PARFIN .)
    DIF             reduce using rule 88 (funcCall -> ID PARINI opParamCall PARFIN .)
    LTOEQ           reduce using rule 88 (funcCall -> ID PARINI opParamCall PARFIN .)
    GTOEQ           reduce using rule 88 (funcCall -> ID PARINI opParamCall PARFIN .)
    GT              reduce using rule 88 (funcCall -> ID PARINI opParamCall PARFIN .)
    LT              reduce using rule 88 (funcCall -> ID PARINI opParamCall PARFIN .)
    AND             reduce using rule 88 (funcCall -> ID PARINI opParamCall PARFIN .)
    OR              reduce using rule 88 (funcCall -> ID PARINI opParamCall PARFIN .)
    ]               reduce using rule 88 (funcCall -> ID PARINI opParamCall PARFIN .)
    ,               reduce using rule 88 (funcCall -> ID PARINI opParamCall PARFIN .)
    PARFIN          reduce using rule 88 (funcCall -> ID PARINI opParamCall PARFIN .)
    ;               reduce using rule 88 (funcCall -> ID PARINI opParamCall PARFIN .)


state 152

    (105) expresion -> sExp performAndOr . cyExpresion errorExpresion
    (107) cyExpresion -> . AND saveOperator expresion
    (108) cyExpresion -> . OR saveOperator expresion
    (109) cyExpresion -> . empty
    (150) empty -> .

    AND             shift and go to state 172
    OR              shift and go to state 173
    ,               reduce using rule 150 (empty -> .)
    PARFIN          reduce using rule 150 (empty -> .)
    ]               reduce using rule 150 (empty -> .)
    ;               reduce using rule 150 (empty -> .)

    cyExpresion                    shift and go to state 174
    empty                          shift and go to state 175

state 153

    (132) fact -> ID saveVariable . opAccess errorOpAccess
    (134) opAccess -> . opStruct
    (135) opAccess -> . opDictionary
    (136) opAccess -> . empty
    (138) opStruct -> . errorOpStruct [ expresion ] opMatrix
    (143) opDictionary -> . . dictIndex
    (150) empty -> .
    (139) errorOpStruct -> .

    .               shift and go to state 180
    MULT            reduce using rule 150 (empty -> .)
    DIV             reduce using rule 150 (empty -> .)
    PLUS            reduce using rule 150 (empty -> .)
    MINUS           reduce using rule 150 (empty -> .)
    EQ              reduce using rule 150 (empty -> .)
    DIF             reduce using rule 150 (empty -> .)
    LTOEQ           reduce using rule 150 (empty -> .)
    GTOEQ           reduce using rule 150 (empty -> .)
    GT              reduce using rule 150 (empty -> .)
    LT              reduce using rule 150 (empty -> .)
    AND             reduce using rule 150 (empty -> .)
    OR              reduce using rule 150 (empty -> .)
    ,               reduce using rule 150 (empty -> .)
    PARFIN          reduce using rule 150 (empty -> .)
    ]               reduce using rule 150 (empty -> .)
    ;               reduce using rule 150 (empty -> .)
    [               reduce using rule 139 (errorOpStruct -> .)

    errorOpStruct                  shift and go to state 176
    opDictionary                   shift and go to state 177
    opStruct                       shift and go to state 178
    opAccess                       shift and go to state 179
    empty                          shift and go to state 181

state 154

    (89) opParamCall -> expresion cyParamCall .

    PARFIN          reduce using rule 89 (opParamCall -> expresion cyParamCall .)


state 155

    (91) cyParamCall -> , . expresion cyParamCall
    (105) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (110) sExp -> . exp errorOpSExp opSExp performRelational
    (119) exp -> . term performAddSub errorCyExp cyExp
    (124) term -> . fact performMulDiv cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (132) fact -> . ID saveVariable opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 129
    PARINI          shift and go to state 136
    ID              shift and go to state 127
    CTED            shift and go to state 126
    CTEF            shift and go to state 134
    TRUE            shift and go to state 123
    FALSE           shift and go to state 131

    sExp                           shift and go to state 124
    expresion                      shift and go to state 182
    term                           shift and go to state 130
    funcCall                       shift and go to state 132
    cte                            shift and go to state 133
    exp                            shift and go to state 135
    fact                           shift and go to state 137

state 156

    (92) cyParamCall -> empty .

    PARFIN          reduce using rule 92 (cyParamCall -> empty .)


state 157

    (119) exp -> term performAddSub . errorCyExp cyExp
    (123) errorCyExp -> .

    PLUS            reduce using rule 123 (errorCyExp -> .)
    MINUS           reduce using rule 123 (errorCyExp -> .)
    EQ              reduce using rule 123 (errorCyExp -> .)
    DIF             reduce using rule 123 (errorCyExp -> .)
    LTOEQ           reduce using rule 123 (errorCyExp -> .)
    GTOEQ           reduce using rule 123 (errorCyExp -> .)
    GT              reduce using rule 123 (errorCyExp -> .)
    LT              reduce using rule 123 (errorCyExp -> .)
    AND             reduce using rule 123 (errorCyExp -> .)
    OR              reduce using rule 123 (errorCyExp -> .)
    ,               reduce using rule 123 (errorCyExp -> .)
    PARFIN          reduce using rule 123 (errorCyExp -> .)
    ]               reduce using rule 123 (errorCyExp -> .)
    ;               reduce using rule 123 (errorCyExp -> .)

    errorCyExp                     shift and go to state 183

state 158

    (110) sExp -> exp errorOpSExp . opSExp performRelational
    (111) opSExp -> . EQ saveOperator exp
    (112) opSExp -> . DIF saveOperator exp
    (113) opSExp -> . LTOEQ saveOperator exp
    (114) opSExp -> . GTOEQ saveOperator exp
    (115) opSExp -> . GT saveOperator exp
    (116) opSExp -> . LT saveOperator exp
    (117) opSExp -> . empty
    (150) empty -> .

    EQ              shift and go to state 189
    DIF             shift and go to state 186
    LTOEQ           shift and go to state 185
    GTOEQ           shift and go to state 188
    GT              shift and go to state 184
    LT              shift and go to state 187
    AND             reduce using rule 150 (empty -> .)
    OR              reduce using rule 150 (empty -> .)
    ,               reduce using rule 150 (empty -> .)
    PARFIN          reduce using rule 150 (empty -> .)
    ]               reduce using rule 150 (empty -> .)
    ;               reduce using rule 150 (empty -> .)

    empty                          shift and go to state 190
    opSExp                         shift and go to state 191

state 159

    (131) fact -> PARINI putFondo . expresion PARFIN takeFondo
    (105) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (110) sExp -> . exp errorOpSExp opSExp performRelational
    (119) exp -> . term performAddSub errorCyExp cyExp
    (124) term -> . fact performMulDiv cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (132) fact -> . ID saveVariable opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 129
    PARINI          shift and go to state 136
    ID              shift and go to state 127
    CTED            shift and go to state 126
    CTEF            shift and go to state 134
    TRUE            shift and go to state 123
    FALSE           shift and go to state 131

    sExp                           shift and go to state 124
    expresion                      shift and go to state 192
    term                           shift and go to state 130
    funcCall                       shift and go to state 132
    cte                            shift and go to state 133
    exp                            shift and go to state 135
    fact                           shift and go to state 137

state 160

    (124) term -> fact performMulDiv . cyTerm
    (125) cyTerm -> . MULT saveOperator errorFact term
    (126) cyTerm -> . DIV saveOperator term
    (127) cyTerm -> . empty
    (150) empty -> .

    MULT            shift and go to state 196
    DIV             shift and go to state 195
    PLUS            reduce using rule 150 (empty -> .)
    MINUS           reduce using rule 150 (empty -> .)
    EQ              reduce using rule 150 (empty -> .)
    DIF             reduce using rule 150 (empty -> .)
    LTOEQ           reduce using rule 150 (empty -> .)
    GTOEQ           reduce using rule 150 (empty -> .)
    GT              reduce using rule 150 (empty -> .)
    LT              reduce using rule 150 (empty -> .)
    AND             reduce using rule 150 (empty -> .)
    OR              reduce using rule 150 (empty -> .)
    ,               reduce using rule 150 (empty -> .)
    PARFIN          reduce using rule 150 (empty -> .)
    ]               reduce using rule 150 (empty -> .)
    ;               reduce using rule 150 (empty -> .)

    cyTerm                         shift and go to state 193
    empty                          shift and go to state 194

state 161

    (98) condition -> errorCondition IF PARINI expresion . PARFIN { body } optionalElse

    PARFIN          shift and go to state 197


state 162

    (48) function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns . } clearVarsTable

    }               shift and go to state 198


state 163

    (58) opReturns -> errorOpReturns . RETURNS type saveReturnType { opVars body return

    RETURNS         shift and go to state 199


state 164

    (59) opReturns -> { . opVars body
    (6) opVars -> . vars
    (7) opVars -> . empty
    (10) vars -> . errorVars VARS declare
    (150) empty -> .
    (12) errorVars -> .

    ID              reduce using rule 150 (empty -> .)
    IF              reduce using rule 150 (empty -> .)
    FOR             reduce using rule 150 (empty -> .)
    WHILE           reduce using rule 150 (empty -> .)
    }               reduce using rule 150 (empty -> .)
    VARS            reduce using rule 12 (errorVars -> .)

    vars                           shift and go to state 8
    opVars                         shift and go to state 200
    errorVars                      shift and go to state 10
    empty                          shift and go to state 11

state 165

    (40) param -> saveType type errorParam ID . cyTypeParam cyParam
    (44) cyTypeParam -> . , saveID saveTypeParam ID cyTypeParam
    (45) cyTypeParam -> . empty
    (150) empty -> .

    ,               shift and go to state 55
    ;               reduce using rule 150 (empty -> .)
    PARFIN          reduce using rule 150 (empty -> .)

    empty                          shift and go to state 56
    cyTypeParam                    shift and go to state 201

state 166

    (76) whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN . { body }

    {               shift and go to state 202


state 167

    (78) forCycle -> errorForCycle FOR PARINI assign ; . expresion ; assign PARFIN { body }
    (105) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (110) sExp -> . exp errorOpSExp opSExp performRelational
    (119) exp -> . term performAddSub errorCyExp cyExp
    (124) term -> . fact performMulDiv cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (132) fact -> . ID saveVariable opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 129
    PARINI          shift and go to state 136
    ID              shift and go to state 127
    CTED            shift and go to state 126
    CTEF            shift and go to state 134
    TRUE            shift and go to state 123
    FALSE           shift and go to state 131

    sExp                           shift and go to state 124
    expresion                      shift and go to state 203
    term                           shift and go to state 130
    funcCall                       shift and go to state 132
    cte                            shift and go to state 133
    exp                            shift and go to state 135
    fact                           shift and go to state 137

state 168

    (80) assign -> ID saveVariable errorAssign assignOptions performAssign .

    ;               reduce using rule 80 (assign -> ID saveVariable errorAssign assignOptions performAssign .)
    PARFIN          reduce using rule 80 (assign -> ID saveVariable errorAssign assignOptions performAssign .)


state 169

    (29) init -> ASGN saveOperator . errorInit initWith
    (30) errorInit -> .

    CTES            reduce using rule 30 (errorInit -> .)
    PARINI          reduce using rule 30 (errorInit -> .)
    ID              reduce using rule 30 (errorInit -> .)
    CTED            reduce using rule 30 (errorInit -> .)
    CTEF            reduce using rule 30 (errorInit -> .)
    TRUE            reduce using rule 30 (errorInit -> .)
    FALSE           reduce using rule 30 (errorInit -> .)

    errorInit                      shift and go to state 204

state 170

    (34) initDict -> ASGN PARINI . dictType : dictType PARFIN errorInitDict
    (36) dictType -> . errorDictType CTES
    (37) dictType -> . cte
    (38) dictType -> . ID
    (39) errorDictType -> .
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE

    ID              shift and go to state 208
    CTES            reduce using rule 39 (errorDictType -> .)
    CTED            shift and go to state 126
    CTEF            shift and go to state 134
    TRUE            shift and go to state 123
    FALSE           shift and go to state 131

    dictType                       shift and go to state 205
    errorDictType                  shift and go to state 206
    cte                            shift and go to state 207

state 171

    (84) assignOptions -> [ expresion . ] assignMatrix init

    ]               shift and go to state 209


state 172

    (107) cyExpresion -> AND . saveOperator expresion
    (153) saveOperator -> .

    CTES            reduce using rule 153 (saveOperator -> .)
    PARINI          reduce using rule 153 (saveOperator -> .)
    ID              reduce using rule 153 (saveOperator -> .)
    CTED            reduce using rule 153 (saveOperator -> .)
    CTEF            reduce using rule 153 (saveOperator -> .)
    TRUE            reduce using rule 153 (saveOperator -> .)
    FALSE           reduce using rule 153 (saveOperator -> .)

    saveOperator                   shift and go to state 210

state 173

    (108) cyExpresion -> OR . saveOperator expresion
    (153) saveOperator -> .

    CTES            reduce using rule 153 (saveOperator -> .)
    PARINI          reduce using rule 153 (saveOperator -> .)
    ID              reduce using rule 153 (saveOperator -> .)
    CTED            reduce using rule 153 (saveOperator -> .)
    CTEF            reduce using rule 153 (saveOperator -> .)
    TRUE            reduce using rule 153 (saveOperator -> .)
    FALSE           reduce using rule 153 (saveOperator -> .)

    saveOperator                   shift and go to state 211

state 174

    (105) expresion -> sExp performAndOr cyExpresion . errorExpresion
    (106) errorExpresion -> .

    ,               reduce using rule 106 (errorExpresion -> .)
    PARFIN          reduce using rule 106 (errorExpresion -> .)
    ]               reduce using rule 106 (errorExpresion -> .)
    ;               reduce using rule 106 (errorExpresion -> .)

    errorExpresion                 shift and go to state 212

state 175

    (109) cyExpresion -> empty .

    ,               reduce using rule 109 (cyExpresion -> empty .)
    PARFIN          reduce using rule 109 (cyExpresion -> empty .)
    ]               reduce using rule 109 (cyExpresion -> empty .)
    ;               reduce using rule 109 (cyExpresion -> empty .)


state 176

    (138) opStruct -> errorOpStruct . [ expresion ] opMatrix

    [               shift and go to state 213


state 177

    (135) opAccess -> opDictionary .

    MULT            reduce using rule 135 (opAccess -> opDictionary .)
    DIV             reduce using rule 135 (opAccess -> opDictionary .)
    PLUS            reduce using rule 135 (opAccess -> opDictionary .)
    MINUS           reduce using rule 135 (opAccess -> opDictionary .)
    EQ              reduce using rule 135 (opAccess -> opDictionary .)
    DIF             reduce using rule 135 (opAccess -> opDictionary .)
    LTOEQ           reduce using rule 135 (opAccess -> opDictionary .)
    GTOEQ           reduce using rule 135 (opAccess -> opDictionary .)
    GT              reduce using rule 135 (opAccess -> opDictionary .)
    LT              reduce using rule 135 (opAccess -> opDictionary .)
    AND             reduce using rule 135 (opAccess -> opDictionary .)
    OR              reduce using rule 135 (opAccess -> opDictionary .)
    ,               reduce using rule 135 (opAccess -> opDictionary .)
    PARFIN          reduce using rule 135 (opAccess -> opDictionary .)
    ]               reduce using rule 135 (opAccess -> opDictionary .)
    ;               reduce using rule 135 (opAccess -> opDictionary .)


state 178

    (134) opAccess -> opStruct .

    MULT            reduce using rule 134 (opAccess -> opStruct .)
    DIV             reduce using rule 134 (opAccess -> opStruct .)
    PLUS            reduce using rule 134 (opAccess -> opStruct .)
    MINUS           reduce using rule 134 (opAccess -> opStruct .)
    EQ              reduce using rule 134 (opAccess -> opStruct .)
    DIF             reduce using rule 134 (opAccess -> opStruct .)
    LTOEQ           reduce using rule 134 (opAccess -> opStruct .)
    GTOEQ           reduce using rule 134 (opAccess -> opStruct .)
    GT              reduce using rule 134 (opAccess -> opStruct .)
    LT              reduce using rule 134 (opAccess -> opStruct .)
    AND             reduce using rule 134 (opAccess -> opStruct .)
    OR              reduce using rule 134 (opAccess -> opStruct .)
    ,               reduce using rule 134 (opAccess -> opStruct .)
    PARFIN          reduce using rule 134 (opAccess -> opStruct .)
    ]               reduce using rule 134 (opAccess -> opStruct .)
    ;               reduce using rule 134 (opAccess -> opStruct .)


state 179

    (132) fact -> ID saveVariable opAccess . errorOpAccess
    (137) errorOpAccess -> .

    MULT            reduce using rule 137 (errorOpAccess -> .)
    DIV             reduce using rule 137 (errorOpAccess -> .)
    PLUS            reduce using rule 137 (errorOpAccess -> .)
    MINUS           reduce using rule 137 (errorOpAccess -> .)
    EQ              reduce using rule 137 (errorOpAccess -> .)
    DIF             reduce using rule 137 (errorOpAccess -> .)
    LTOEQ           reduce using rule 137 (errorOpAccess -> .)
    GTOEQ           reduce using rule 137 (errorOpAccess -> .)
    GT              reduce using rule 137 (errorOpAccess -> .)
    LT              reduce using rule 137 (errorOpAccess -> .)
    AND             reduce using rule 137 (errorOpAccess -> .)
    OR              reduce using rule 137 (errorOpAccess -> .)
    ,               reduce using rule 137 (errorOpAccess -> .)
    PARFIN          reduce using rule 137 (errorOpAccess -> .)
    ]               reduce using rule 137 (errorOpAccess -> .)
    ;               reduce using rule 137 (errorOpAccess -> .)

    errorOpAccess                  shift and go to state 214

state 180

    (143) opDictionary -> . . dictIndex
    (144) dictIndex -> . FIRST
    (145) dictIndex -> . LAST

    FIRST           shift and go to state 215
    LAST            shift and go to state 216

    dictIndex                      shift and go to state 217

state 181

    (136) opAccess -> empty .

    MULT            reduce using rule 136 (opAccess -> empty .)
    DIV             reduce using rule 136 (opAccess -> empty .)
    PLUS            reduce using rule 136 (opAccess -> empty .)
    MINUS           reduce using rule 136 (opAccess -> empty .)
    EQ              reduce using rule 136 (opAccess -> empty .)
    DIF             reduce using rule 136 (opAccess -> empty .)
    LTOEQ           reduce using rule 136 (opAccess -> empty .)
    GTOEQ           reduce using rule 136 (opAccess -> empty .)
    GT              reduce using rule 136 (opAccess -> empty .)
    LT              reduce using rule 136 (opAccess -> empty .)
    AND             reduce using rule 136 (opAccess -> empty .)
    OR              reduce using rule 136 (opAccess -> empty .)
    ,               reduce using rule 136 (opAccess -> empty .)
    PARFIN          reduce using rule 136 (opAccess -> empty .)
    ]               reduce using rule 136 (opAccess -> empty .)
    ;               reduce using rule 136 (opAccess -> empty .)


state 182

    (91) cyParamCall -> , expresion . cyParamCall
    (91) cyParamCall -> . , expresion cyParamCall
    (92) cyParamCall -> . empty
    (150) empty -> .

    ,               shift and go to state 155
    PARFIN          reduce using rule 150 (empty -> .)

    cyParamCall                    shift and go to state 218
    empty                          shift and go to state 156

state 183

    (119) exp -> term performAddSub errorCyExp . cyExp
    (120) cyExp -> . PLUS saveOperator exp
    (121) cyExp -> . MINUS saveOperator exp
    (122) cyExp -> . empty
    (150) empty -> .

    PLUS            shift and go to state 220
    MINUS           shift and go to state 221
    EQ              reduce using rule 150 (empty -> .)
    DIF             reduce using rule 150 (empty -> .)
    LTOEQ           reduce using rule 150 (empty -> .)
    GTOEQ           reduce using rule 150 (empty -> .)
    GT              reduce using rule 150 (empty -> .)
    LT              reduce using rule 150 (empty -> .)
    AND             reduce using rule 150 (empty -> .)
    OR              reduce using rule 150 (empty -> .)
    ,               reduce using rule 150 (empty -> .)
    PARFIN          reduce using rule 150 (empty -> .)
    ]               reduce using rule 150 (empty -> .)
    ;               reduce using rule 150 (empty -> .)

    cyExp                          shift and go to state 219
    empty                          shift and go to state 222

state 184

    (115) opSExp -> GT . saveOperator exp
    (153) saveOperator -> .

    CTES            reduce using rule 153 (saveOperator -> .)
    PARINI          reduce using rule 153 (saveOperator -> .)
    ID              reduce using rule 153 (saveOperator -> .)
    CTED            reduce using rule 153 (saveOperator -> .)
    CTEF            reduce using rule 153 (saveOperator -> .)
    TRUE            reduce using rule 153 (saveOperator -> .)
    FALSE           reduce using rule 153 (saveOperator -> .)

    saveOperator                   shift and go to state 223

state 185

    (113) opSExp -> LTOEQ . saveOperator exp
    (153) saveOperator -> .

    CTES            reduce using rule 153 (saveOperator -> .)
    PARINI          reduce using rule 153 (saveOperator -> .)
    ID              reduce using rule 153 (saveOperator -> .)
    CTED            reduce using rule 153 (saveOperator -> .)
    CTEF            reduce using rule 153 (saveOperator -> .)
    TRUE            reduce using rule 153 (saveOperator -> .)
    FALSE           reduce using rule 153 (saveOperator -> .)

    saveOperator                   shift and go to state 224

state 186

    (112) opSExp -> DIF . saveOperator exp
    (153) saveOperator -> .

    CTES            reduce using rule 153 (saveOperator -> .)
    PARINI          reduce using rule 153 (saveOperator -> .)
    ID              reduce using rule 153 (saveOperator -> .)
    CTED            reduce using rule 153 (saveOperator -> .)
    CTEF            reduce using rule 153 (saveOperator -> .)
    TRUE            reduce using rule 153 (saveOperator -> .)
    FALSE           reduce using rule 153 (saveOperator -> .)

    saveOperator                   shift and go to state 225

state 187

    (116) opSExp -> LT . saveOperator exp
    (153) saveOperator -> .

    CTES            reduce using rule 153 (saveOperator -> .)
    PARINI          reduce using rule 153 (saveOperator -> .)
    ID              reduce using rule 153 (saveOperator -> .)
    CTED            reduce using rule 153 (saveOperator -> .)
    CTEF            reduce using rule 153 (saveOperator -> .)
    TRUE            reduce using rule 153 (saveOperator -> .)
    FALSE           reduce using rule 153 (saveOperator -> .)

    saveOperator                   shift and go to state 226

state 188

    (114) opSExp -> GTOEQ . saveOperator exp
    (153) saveOperator -> .

    CTES            reduce using rule 153 (saveOperator -> .)
    PARINI          reduce using rule 153 (saveOperator -> .)
    ID              reduce using rule 153 (saveOperator -> .)
    CTED            reduce using rule 153 (saveOperator -> .)
    CTEF            reduce using rule 153 (saveOperator -> .)
    TRUE            reduce using rule 153 (saveOperator -> .)
    FALSE           reduce using rule 153 (saveOperator -> .)

    saveOperator                   shift and go to state 227

state 189

    (111) opSExp -> EQ . saveOperator exp
    (153) saveOperator -> .

    CTES            reduce using rule 153 (saveOperator -> .)
    PARINI          reduce using rule 153 (saveOperator -> .)
    ID              reduce using rule 153 (saveOperator -> .)
    CTED            reduce using rule 153 (saveOperator -> .)
    CTEF            reduce using rule 153 (saveOperator -> .)
    TRUE            reduce using rule 153 (saveOperator -> .)
    FALSE           reduce using rule 153 (saveOperator -> .)

    saveOperator                   shift and go to state 228

state 190

    (117) opSExp -> empty .

    AND             reduce using rule 117 (opSExp -> empty .)
    OR              reduce using rule 117 (opSExp -> empty .)
    ,               reduce using rule 117 (opSExp -> empty .)
    PARFIN          reduce using rule 117 (opSExp -> empty .)
    ]               reduce using rule 117 (opSExp -> empty .)
    ;               reduce using rule 117 (opSExp -> empty .)


state 191

    (110) sExp -> exp errorOpSExp opSExp . performRelational
    (159) performRelational -> .

    AND             reduce using rule 159 (performRelational -> .)
    OR              reduce using rule 159 (performRelational -> .)
    ,               reduce using rule 159 (performRelational -> .)
    PARFIN          reduce using rule 159 (performRelational -> .)
    ]               reduce using rule 159 (performRelational -> .)
    ;               reduce using rule 159 (performRelational -> .)

    performRelational              shift and go to state 229

state 192

    (131) fact -> PARINI putFondo expresion . PARFIN takeFondo

    PARFIN          shift and go to state 230


state 193

    (124) term -> fact performMulDiv cyTerm .

    PLUS            reduce using rule 124 (term -> fact performMulDiv cyTerm .)
    MINUS           reduce using rule 124 (term -> fact performMulDiv cyTerm .)
    AND             reduce using rule 124 (term -> fact performMulDiv cyTerm .)
    OR              reduce using rule 124 (term -> fact performMulDiv cyTerm .)
    ,               reduce using rule 124 (term -> fact performMulDiv cyTerm .)
    PARFIN          reduce using rule 124 (term -> fact performMulDiv cyTerm .)
    ]               reduce using rule 124 (term -> fact performMulDiv cyTerm .)
    ;               reduce using rule 124 (term -> fact performMulDiv cyTerm .)
    EQ              reduce using rule 124 (term -> fact performMulDiv cyTerm .)
    DIF             reduce using rule 124 (term -> fact performMulDiv cyTerm .)
    LTOEQ           reduce using rule 124 (term -> fact performMulDiv cyTerm .)
    GTOEQ           reduce using rule 124 (term -> fact performMulDiv cyTerm .)
    GT              reduce using rule 124 (term -> fact performMulDiv cyTerm .)
    LT              reduce using rule 124 (term -> fact performMulDiv cyTerm .)


state 194

    (127) cyTerm -> empty .

    PLUS            reduce using rule 127 (cyTerm -> empty .)
    MINUS           reduce using rule 127 (cyTerm -> empty .)
    EQ              reduce using rule 127 (cyTerm -> empty .)
    DIF             reduce using rule 127 (cyTerm -> empty .)
    LTOEQ           reduce using rule 127 (cyTerm -> empty .)
    GTOEQ           reduce using rule 127 (cyTerm -> empty .)
    GT              reduce using rule 127 (cyTerm -> empty .)
    LT              reduce using rule 127 (cyTerm -> empty .)
    AND             reduce using rule 127 (cyTerm -> empty .)
    OR              reduce using rule 127 (cyTerm -> empty .)
    ,               reduce using rule 127 (cyTerm -> empty .)
    PARFIN          reduce using rule 127 (cyTerm -> empty .)
    ]               reduce using rule 127 (cyTerm -> empty .)
    ;               reduce using rule 127 (cyTerm -> empty .)


state 195

    (126) cyTerm -> DIV . saveOperator term
    (153) saveOperator -> .

    CTES            reduce using rule 153 (saveOperator -> .)
    PARINI          reduce using rule 153 (saveOperator -> .)
    ID              reduce using rule 153 (saveOperator -> .)
    CTED            reduce using rule 153 (saveOperator -> .)
    CTEF            reduce using rule 153 (saveOperator -> .)
    TRUE            reduce using rule 153 (saveOperator -> .)
    FALSE           reduce using rule 153 (saveOperator -> .)

    saveOperator                   shift and go to state 231

state 196

    (125) cyTerm -> MULT . saveOperator errorFact term
    (153) saveOperator -> .

    CTES            reduce using rule 153 (saveOperator -> .)
    PARINI          reduce using rule 153 (saveOperator -> .)
    ID              reduce using rule 153 (saveOperator -> .)
    CTED            reduce using rule 153 (saveOperator -> .)
    CTEF            reduce using rule 153 (saveOperator -> .)
    TRUE            reduce using rule 153 (saveOperator -> .)
    FALSE           reduce using rule 153 (saveOperator -> .)

    saveOperator                   shift and go to state 232

state 197

    (98) condition -> errorCondition IF PARINI expresion PARFIN . { body } optionalElse

    {               shift and go to state 233


state 198

    (48) function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } . clearVarsTable
    (50) clearVarsTable -> .

    FUNC            reduce using rule 50 (clearVarsTable -> .)
    MAIN            reduce using rule 50 (clearVarsTable -> .)

    clearVarsTable                 shift and go to state 234

state 199

    (58) opReturns -> errorOpReturns RETURNS . type saveReturnType { opVars body return
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    errorType                      shift and go to state 31
    type                           shift and go to state 235

state 200

    (59) opReturns -> { opVars . body
    (70) body -> . errorBody cyInstruction
    (71) body -> . empty
    (72) errorBody -> .
    (150) empty -> .

    ID              reduce using rule 72 (errorBody -> .)
    IF              reduce using rule 72 (errorBody -> .)
    FOR             reduce using rule 72 (errorBody -> .)
    WHILE           reduce using rule 72 (errorBody -> .)
    }               reduce using rule 150 (empty -> .)

    body                           shift and go to state 236
    empty                          shift and go to state 75
    errorBody                      shift and go to state 74

state 201

    (40) param -> saveType type errorParam ID cyTypeParam . cyParam
    (42) cyParam -> . errorCyParam saveID saveTypeParam ; param
    (43) cyParam -> . empty saveID saveTypeParam
    (47) errorCyParam -> .
    (150) empty -> .

    ;               reduce using rule 47 (errorCyParam -> .)
    PARFIN          reduce using rule 150 (empty -> .)

    empty                          shift and go to state 237
    cyParam                        shift and go to state 239
    errorCyParam                   shift and go to state 238

state 202

    (76) whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { . body }
    (70) body -> . errorBody cyInstruction
    (71) body -> . empty
    (72) errorBody -> .
    (150) empty -> .

    ID              reduce using rule 72 (errorBody -> .)
    IF              reduce using rule 72 (errorBody -> .)
    FOR             reduce using rule 72 (errorBody -> .)
    WHILE           reduce using rule 72 (errorBody -> .)
    }               reduce using rule 150 (empty -> .)

    body                           shift and go to state 240
    errorBody                      shift and go to state 74
    empty                          shift and go to state 75

state 203

    (78) forCycle -> errorForCycle FOR PARINI assign ; expresion . ; assign PARFIN { body }

    ;               shift and go to state 241


state 204

    (29) init -> ASGN saveOperator errorInit . initWith
    (31) initWith -> . expresion
    (32) initWith -> . fact
    (33) initWith -> . funcCall
    (105) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (132) fact -> . ID saveVariable opAccess errorOpAccess
    (88) funcCall -> . ID PARINI opParamCall PARFIN
    (110) sExp -> . exp errorOpSExp opSExp performRelational
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (119) exp -> . term performAddSub errorCyExp cyExp
    (124) term -> . fact performMulDiv cyTerm

    CTES            shift and go to state 129
    PARINI          shift and go to state 136
    ID              shift and go to state 127
    CTED            shift and go to state 126
    CTEF            shift and go to state 134
    TRUE            shift and go to state 123
    FALSE           shift and go to state 131

    initWith                       shift and go to state 242
    sExp                           shift and go to state 124
    expresion                      shift and go to state 243
    term                           shift and go to state 130
    funcCall                       shift and go to state 244
    cte                            shift and go to state 133
    exp                            shift and go to state 135
    fact                           shift and go to state 245

state 205

    (34) initDict -> ASGN PARINI dictType . : dictType PARFIN errorInitDict

    :               shift and go to state 246


state 206

    (36) dictType -> errorDictType . CTES

    CTES            shift and go to state 247


state 207

    (37) dictType -> cte .

    PARFIN          reduce using rule 37 (dictType -> cte .)
    :               reduce using rule 37 (dictType -> cte .)


state 208

    (38) dictType -> ID .

    PARFIN          reduce using rule 38 (dictType -> ID .)
    :               reduce using rule 38 (dictType -> ID .)


state 209

    (84) assignOptions -> [ expresion ] . assignMatrix init
    (85) assignMatrix -> . [ expresion ] errorAssignMatrix
    (86) assignMatrix -> . empty
    (150) empty -> .

    [               shift and go to state 249
    ASGN            reduce using rule 150 (empty -> .)

    assignMatrix                   shift and go to state 248
    empty                          shift and go to state 250

state 210

    (107) cyExpresion -> AND saveOperator . expresion
    (105) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (110) sExp -> . exp errorOpSExp opSExp performRelational
    (119) exp -> . term performAddSub errorCyExp cyExp
    (124) term -> . fact performMulDiv cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (132) fact -> . ID saveVariable opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 129
    PARINI          shift and go to state 136
    ID              shift and go to state 127
    CTED            shift and go to state 126
    CTEF            shift and go to state 134
    TRUE            shift and go to state 123
    FALSE           shift and go to state 131

    sExp                           shift and go to state 124
    expresion                      shift and go to state 251
    term                           shift and go to state 130
    funcCall                       shift and go to state 132
    cte                            shift and go to state 133
    exp                            shift and go to state 135
    fact                           shift and go to state 137

state 211

    (108) cyExpresion -> OR saveOperator . expresion
    (105) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (110) sExp -> . exp errorOpSExp opSExp performRelational
    (119) exp -> . term performAddSub errorCyExp cyExp
    (124) term -> . fact performMulDiv cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (132) fact -> . ID saveVariable opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 129
    PARINI          shift and go to state 136
    ID              shift and go to state 127
    CTED            shift and go to state 126
    CTEF            shift and go to state 134
    TRUE            shift and go to state 123
    FALSE           shift and go to state 131

    sExp                           shift and go to state 124
    expresion                      shift and go to state 252
    term                           shift and go to state 130
    funcCall                       shift and go to state 132
    cte                            shift and go to state 133
    exp                            shift and go to state 135
    fact                           shift and go to state 137

state 212

    (105) expresion -> sExp performAndOr cyExpresion errorExpresion .

    ;               reduce using rule 105 (expresion -> sExp performAndOr cyExpresion errorExpresion .)
    PARFIN          reduce using rule 105 (expresion -> sExp performAndOr cyExpresion errorExpresion .)
    ,               reduce using rule 105 (expresion -> sExp performAndOr cyExpresion errorExpresion .)
    ]               reduce using rule 105 (expresion -> sExp performAndOr cyExpresion errorExpresion .)


state 213

    (138) opStruct -> errorOpStruct [ . expresion ] opMatrix
    (105) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (110) sExp -> . exp errorOpSExp opSExp performRelational
    (119) exp -> . term performAddSub errorCyExp cyExp
    (124) term -> . fact performMulDiv cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (132) fact -> . ID saveVariable opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 129
    PARINI          shift and go to state 136
    ID              shift and go to state 127
    CTED            shift and go to state 126
    CTEF            shift and go to state 134
    TRUE            shift and go to state 123
    FALSE           shift and go to state 131

    sExp                           shift and go to state 124
    expresion                      shift and go to state 253
    term                           shift and go to state 130
    funcCall                       shift and go to state 132
    cte                            shift and go to state 133
    exp                            shift and go to state 135
    fact                           shift and go to state 137

state 214

    (132) fact -> ID saveVariable opAccess errorOpAccess .

    MULT            reduce using rule 132 (fact -> ID saveVariable opAccess errorOpAccess .)
    DIV             reduce using rule 132 (fact -> ID saveVariable opAccess errorOpAccess .)
    PLUS            reduce using rule 132 (fact -> ID saveVariable opAccess errorOpAccess .)
    MINUS           reduce using rule 132 (fact -> ID saveVariable opAccess errorOpAccess .)
    AND             reduce using rule 132 (fact -> ID saveVariable opAccess errorOpAccess .)
    OR              reduce using rule 132 (fact -> ID saveVariable opAccess errorOpAccess .)
    ,               reduce using rule 132 (fact -> ID saveVariable opAccess errorOpAccess .)
    PARFIN          reduce using rule 132 (fact -> ID saveVariable opAccess errorOpAccess .)
    ]               reduce using rule 132 (fact -> ID saveVariable opAccess errorOpAccess .)
    ;               reduce using rule 132 (fact -> ID saveVariable opAccess errorOpAccess .)
    EQ              reduce using rule 132 (fact -> ID saveVariable opAccess errorOpAccess .)
    DIF             reduce using rule 132 (fact -> ID saveVariable opAccess errorOpAccess .)
    LTOEQ           reduce using rule 132 (fact -> ID saveVariable opAccess errorOpAccess .)
    GTOEQ           reduce using rule 132 (fact -> ID saveVariable opAccess errorOpAccess .)
    GT              reduce using rule 132 (fact -> ID saveVariable opAccess errorOpAccess .)
    LT              reduce using rule 132 (fact -> ID saveVariable opAccess errorOpAccess .)


state 215

    (144) dictIndex -> FIRST .

    MULT            reduce using rule 144 (dictIndex -> FIRST .)
    DIV             reduce using rule 144 (dictIndex -> FIRST .)
    PLUS            reduce using rule 144 (dictIndex -> FIRST .)
    MINUS           reduce using rule 144 (dictIndex -> FIRST .)
    EQ              reduce using rule 144 (dictIndex -> FIRST .)
    DIF             reduce using rule 144 (dictIndex -> FIRST .)
    LTOEQ           reduce using rule 144 (dictIndex -> FIRST .)
    GTOEQ           reduce using rule 144 (dictIndex -> FIRST .)
    GT              reduce using rule 144 (dictIndex -> FIRST .)
    LT              reduce using rule 144 (dictIndex -> FIRST .)
    AND             reduce using rule 144 (dictIndex -> FIRST .)
    OR              reduce using rule 144 (dictIndex -> FIRST .)
    ,               reduce using rule 144 (dictIndex -> FIRST .)
    PARFIN          reduce using rule 144 (dictIndex -> FIRST .)
    ]               reduce using rule 144 (dictIndex -> FIRST .)
    ;               reduce using rule 144 (dictIndex -> FIRST .)


state 216

    (145) dictIndex -> LAST .

    MULT            reduce using rule 145 (dictIndex -> LAST .)
    DIV             reduce using rule 145 (dictIndex -> LAST .)
    PLUS            reduce using rule 145 (dictIndex -> LAST .)
    MINUS           reduce using rule 145 (dictIndex -> LAST .)
    EQ              reduce using rule 145 (dictIndex -> LAST .)
    DIF             reduce using rule 145 (dictIndex -> LAST .)
    LTOEQ           reduce using rule 145 (dictIndex -> LAST .)
    GTOEQ           reduce using rule 145 (dictIndex -> LAST .)
    GT              reduce using rule 145 (dictIndex -> LAST .)
    LT              reduce using rule 145 (dictIndex -> LAST .)
    AND             reduce using rule 145 (dictIndex -> LAST .)
    OR              reduce using rule 145 (dictIndex -> LAST .)
    ,               reduce using rule 145 (dictIndex -> LAST .)
    PARFIN          reduce using rule 145 (dictIndex -> LAST .)
    ]               reduce using rule 145 (dictIndex -> LAST .)
    ;               reduce using rule 145 (dictIndex -> LAST .)


state 217

    (143) opDictionary -> . dictIndex .

    MULT            reduce using rule 143 (opDictionary -> . dictIndex .)
    DIV             reduce using rule 143 (opDictionary -> . dictIndex .)
    PLUS            reduce using rule 143 (opDictionary -> . dictIndex .)
    MINUS           reduce using rule 143 (opDictionary -> . dictIndex .)
    EQ              reduce using rule 143 (opDictionary -> . dictIndex .)
    DIF             reduce using rule 143 (opDictionary -> . dictIndex .)
    LTOEQ           reduce using rule 143 (opDictionary -> . dictIndex .)
    GTOEQ           reduce using rule 143 (opDictionary -> . dictIndex .)
    GT              reduce using rule 143 (opDictionary -> . dictIndex .)
    LT              reduce using rule 143 (opDictionary -> . dictIndex .)
    AND             reduce using rule 143 (opDictionary -> . dictIndex .)
    OR              reduce using rule 143 (opDictionary -> . dictIndex .)
    ,               reduce using rule 143 (opDictionary -> . dictIndex .)
    PARFIN          reduce using rule 143 (opDictionary -> . dictIndex .)
    ]               reduce using rule 143 (opDictionary -> . dictIndex .)
    ;               reduce using rule 143 (opDictionary -> . dictIndex .)


state 218

    (91) cyParamCall -> , expresion cyParamCall .

    PARFIN          reduce using rule 91 (cyParamCall -> , expresion cyParamCall .)


state 219

    (119) exp -> term performAddSub errorCyExp cyExp .

    EQ              reduce using rule 119 (exp -> term performAddSub errorCyExp cyExp .)
    DIF             reduce using rule 119 (exp -> term performAddSub errorCyExp cyExp .)
    LTOEQ           reduce using rule 119 (exp -> term performAddSub errorCyExp cyExp .)
    GTOEQ           reduce using rule 119 (exp -> term performAddSub errorCyExp cyExp .)
    GT              reduce using rule 119 (exp -> term performAddSub errorCyExp cyExp .)
    LT              reduce using rule 119 (exp -> term performAddSub errorCyExp cyExp .)
    AND             reduce using rule 119 (exp -> term performAddSub errorCyExp cyExp .)
    OR              reduce using rule 119 (exp -> term performAddSub errorCyExp cyExp .)
    ;               reduce using rule 119 (exp -> term performAddSub errorCyExp cyExp .)
    PARFIN          reduce using rule 119 (exp -> term performAddSub errorCyExp cyExp .)
    ,               reduce using rule 119 (exp -> term performAddSub errorCyExp cyExp .)
    ]               reduce using rule 119 (exp -> term performAddSub errorCyExp cyExp .)


state 220

    (120) cyExp -> PLUS . saveOperator exp
    (153) saveOperator -> .

    CTES            reduce using rule 153 (saveOperator -> .)
    PARINI          reduce using rule 153 (saveOperator -> .)
    ID              reduce using rule 153 (saveOperator -> .)
    CTED            reduce using rule 153 (saveOperator -> .)
    CTEF            reduce using rule 153 (saveOperator -> .)
    TRUE            reduce using rule 153 (saveOperator -> .)
    FALSE           reduce using rule 153 (saveOperator -> .)

    saveOperator                   shift and go to state 254

state 221

    (121) cyExp -> MINUS . saveOperator exp
    (153) saveOperator -> .

    CTES            reduce using rule 153 (saveOperator -> .)
    PARINI          reduce using rule 153 (saveOperator -> .)
    ID              reduce using rule 153 (saveOperator -> .)
    CTED            reduce using rule 153 (saveOperator -> .)
    CTEF            reduce using rule 153 (saveOperator -> .)
    TRUE            reduce using rule 153 (saveOperator -> .)
    FALSE           reduce using rule 153 (saveOperator -> .)

    saveOperator                   shift and go to state 255

state 222

    (122) cyExp -> empty .

    EQ              reduce using rule 122 (cyExp -> empty .)
    DIF             reduce using rule 122 (cyExp -> empty .)
    LTOEQ           reduce using rule 122 (cyExp -> empty .)
    GTOEQ           reduce using rule 122 (cyExp -> empty .)
    GT              reduce using rule 122 (cyExp -> empty .)
    LT              reduce using rule 122 (cyExp -> empty .)
    AND             reduce using rule 122 (cyExp -> empty .)
    OR              reduce using rule 122 (cyExp -> empty .)
    ,               reduce using rule 122 (cyExp -> empty .)
    PARFIN          reduce using rule 122 (cyExp -> empty .)
    ]               reduce using rule 122 (cyExp -> empty .)
    ;               reduce using rule 122 (cyExp -> empty .)


state 223

    (115) opSExp -> GT saveOperator . exp
    (119) exp -> . term performAddSub errorCyExp cyExp
    (124) term -> . fact performMulDiv cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (132) fact -> . ID saveVariable opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 129
    PARINI          shift and go to state 136
    ID              shift and go to state 127
    CTED            shift and go to state 126
    CTEF            shift and go to state 134
    TRUE            shift and go to state 123
    FALSE           shift and go to state 131

    term                           shift and go to state 130
    funcCall                       shift and go to state 132
    cte                            shift and go to state 133
    exp                            shift and go to state 256
    fact                           shift and go to state 137

state 224

    (113) opSExp -> LTOEQ saveOperator . exp
    (119) exp -> . term performAddSub errorCyExp cyExp
    (124) term -> . fact performMulDiv cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (132) fact -> . ID saveVariable opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 129
    PARINI          shift and go to state 136
    ID              shift and go to state 127
    CTED            shift and go to state 126
    CTEF            shift and go to state 134
    TRUE            shift and go to state 123
    FALSE           shift and go to state 131

    term                           shift and go to state 130
    funcCall                       shift and go to state 132
    cte                            shift and go to state 133
    exp                            shift and go to state 257
    fact                           shift and go to state 137

state 225

    (112) opSExp -> DIF saveOperator . exp
    (119) exp -> . term performAddSub errorCyExp cyExp
    (124) term -> . fact performMulDiv cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (132) fact -> . ID saveVariable opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 129
    PARINI          shift and go to state 136
    ID              shift and go to state 127
    CTED            shift and go to state 126
    CTEF            shift and go to state 134
    TRUE            shift and go to state 123
    FALSE           shift and go to state 131

    term                           shift and go to state 130
    funcCall                       shift and go to state 132
    cte                            shift and go to state 133
    exp                            shift and go to state 258
    fact                           shift and go to state 137

state 226

    (116) opSExp -> LT saveOperator . exp
    (119) exp -> . term performAddSub errorCyExp cyExp
    (124) term -> . fact performMulDiv cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (132) fact -> . ID saveVariable opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 129
    PARINI          shift and go to state 136
    ID              shift and go to state 127
    CTED            shift and go to state 126
    CTEF            shift and go to state 134
    TRUE            shift and go to state 123
    FALSE           shift and go to state 131

    term                           shift and go to state 130
    funcCall                       shift and go to state 132
    cte                            shift and go to state 133
    exp                            shift and go to state 259
    fact                           shift and go to state 137

state 227

    (114) opSExp -> GTOEQ saveOperator . exp
    (119) exp -> . term performAddSub errorCyExp cyExp
    (124) term -> . fact performMulDiv cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (132) fact -> . ID saveVariable opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 129
    PARINI          shift and go to state 136
    ID              shift and go to state 127
    CTED            shift and go to state 126
    CTEF            shift and go to state 134
    TRUE            shift and go to state 123
    FALSE           shift and go to state 131

    term                           shift and go to state 130
    funcCall                       shift and go to state 132
    cte                            shift and go to state 133
    exp                            shift and go to state 260
    fact                           shift and go to state 137

state 228

    (111) opSExp -> EQ saveOperator . exp
    (119) exp -> . term performAddSub errorCyExp cyExp
    (124) term -> . fact performMulDiv cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (132) fact -> . ID saveVariable opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 129
    PARINI          shift and go to state 136
    ID              shift and go to state 127
    CTED            shift and go to state 126
    CTEF            shift and go to state 134
    TRUE            shift and go to state 123
    FALSE           shift and go to state 131

    term                           shift and go to state 130
    funcCall                       shift and go to state 132
    cte                            shift and go to state 133
    exp                            shift and go to state 261
    fact                           shift and go to state 137

state 229

    (110) sExp -> exp errorOpSExp opSExp performRelational .

    AND             reduce using rule 110 (sExp -> exp errorOpSExp opSExp performRelational .)
    OR              reduce using rule 110 (sExp -> exp errorOpSExp opSExp performRelational .)
    ,               reduce using rule 110 (sExp -> exp errorOpSExp opSExp performRelational .)
    PARFIN          reduce using rule 110 (sExp -> exp errorOpSExp opSExp performRelational .)
    ]               reduce using rule 110 (sExp -> exp errorOpSExp opSExp performRelational .)
    ;               reduce using rule 110 (sExp -> exp errorOpSExp opSExp performRelational .)


state 230

    (131) fact -> PARINI putFondo expresion PARFIN . takeFondo
    (155) takeFondo -> .

    MULT            reduce using rule 155 (takeFondo -> .)
    DIV             reduce using rule 155 (takeFondo -> .)
    PLUS            reduce using rule 155 (takeFondo -> .)
    MINUS           reduce using rule 155 (takeFondo -> .)
    EQ              reduce using rule 155 (takeFondo -> .)
    DIF             reduce using rule 155 (takeFondo -> .)
    LTOEQ           reduce using rule 155 (takeFondo -> .)
    GTOEQ           reduce using rule 155 (takeFondo -> .)
    GT              reduce using rule 155 (takeFondo -> .)
    LT              reduce using rule 155 (takeFondo -> .)
    AND             reduce using rule 155 (takeFondo -> .)
    OR              reduce using rule 155 (takeFondo -> .)
    ,               reduce using rule 155 (takeFondo -> .)
    PARFIN          reduce using rule 155 (takeFondo -> .)
    ]               reduce using rule 155 (takeFondo -> .)
    ;               reduce using rule 155 (takeFondo -> .)

    takeFondo                      shift and go to state 262

state 231

    (126) cyTerm -> DIV saveOperator . term
    (124) term -> . fact performMulDiv cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (132) fact -> . ID saveVariable opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 129
    PARINI          shift and go to state 136
    ID              shift and go to state 127
    CTED            shift and go to state 126
    CTEF            shift and go to state 134
    TRUE            shift and go to state 123
    FALSE           shift and go to state 131

    term                           shift and go to state 263
    funcCall                       shift and go to state 132
    cte                            shift and go to state 133
    fact                           shift and go to state 137

state 232

    (125) cyTerm -> MULT saveOperator . errorFact term
    (133) errorFact -> .

    CTES            reduce using rule 133 (errorFact -> .)
    PARINI          reduce using rule 133 (errorFact -> .)
    ID              reduce using rule 133 (errorFact -> .)
    CTED            reduce using rule 133 (errorFact -> .)
    CTEF            reduce using rule 133 (errorFact -> .)
    TRUE            reduce using rule 133 (errorFact -> .)
    FALSE           reduce using rule 133 (errorFact -> .)

    errorFact                      shift and go to state 264

state 233

    (98) condition -> errorCondition IF PARINI expresion PARFIN { . body } optionalElse
    (70) body -> . errorBody cyInstruction
    (71) body -> . empty
    (72) errorBody -> .
    (150) empty -> .

    ID              reduce using rule 72 (errorBody -> .)
    IF              reduce using rule 72 (errorBody -> .)
    FOR             reduce using rule 72 (errorBody -> .)
    WHILE           reduce using rule 72 (errorBody -> .)
    }               reduce using rule 150 (empty -> .)

    body                           shift and go to state 265
    errorBody                      shift and go to state 74
    empty                          shift and go to state 75

state 234

    (48) function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable .

    FUNC            reduce using rule 48 (function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable .)
    MAIN            reduce using rule 48 (function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable .)


state 235

    (58) opReturns -> errorOpReturns RETURNS type . saveReturnType { opVars body return
    (60) saveReturnType -> .

    {               reduce using rule 60 (saveReturnType -> .)

    saveReturnType                 shift and go to state 266

state 236

    (59) opReturns -> { opVars body .

    }               reduce using rule 59 (opReturns -> { opVars body .)


state 237

    (43) cyParam -> empty . saveID saveTypeParam
    (11) saveID -> .

    PARFIN          reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 267

state 238

    (42) cyParam -> errorCyParam . saveID saveTypeParam ; param
    (11) saveID -> .

    ;               reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 268

state 239

    (40) param -> saveType type errorParam ID cyTypeParam cyParam .

    PARFIN          reduce using rule 40 (param -> saveType type errorParam ID cyTypeParam cyParam .)


state 240

    (76) whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body . }

    }               shift and go to state 269


state 241

    (78) forCycle -> errorForCycle FOR PARINI assign ; expresion ; . assign PARFIN { body }
    (80) assign -> . ID saveVariable errorAssign assignOptions performAssign

    ID              shift and go to state 144

    assign                         shift and go to state 270

state 242

    (29) init -> ASGN saveOperator errorInit initWith .

    ;               reduce using rule 29 (init -> ASGN saveOperator errorInit initWith .)
    PARFIN          reduce using rule 29 (init -> ASGN saveOperator errorInit initWith .)


state 243

    (31) initWith -> expresion .

    ;               reduce using rule 31 (initWith -> expresion .)
    PARFIN          reduce using rule 31 (initWith -> expresion .)


state 244

    (33) initWith -> funcCall .
    (130) fact -> funcCall .

  ! reduce/reduce conflict for ; resolved using rule 33 (initWith -> funcCall .)
  ! reduce/reduce conflict for PARFIN resolved using rule 33 (initWith -> funcCall .)
    ;               reduce using rule 33 (initWith -> funcCall .)
    PARFIN          reduce using rule 33 (initWith -> funcCall .)
    MULT            reduce using rule 130 (fact -> funcCall .)
    DIV             reduce using rule 130 (fact -> funcCall .)
    PLUS            reduce using rule 130 (fact -> funcCall .)
    MINUS           reduce using rule 130 (fact -> funcCall .)
    EQ              reduce using rule 130 (fact -> funcCall .)
    DIF             reduce using rule 130 (fact -> funcCall .)
    LTOEQ           reduce using rule 130 (fact -> funcCall .)
    GTOEQ           reduce using rule 130 (fact -> funcCall .)
    GT              reduce using rule 130 (fact -> funcCall .)
    LT              reduce using rule 130 (fact -> funcCall .)
    AND             reduce using rule 130 (fact -> funcCall .)
    OR              reduce using rule 130 (fact -> funcCall .)

  ! ;               [ reduce using rule 130 (fact -> funcCall .) ]
  ! PARFIN          [ reduce using rule 130 (fact -> funcCall .) ]


state 245

    (32) initWith -> fact .
    (124) term -> fact . performMulDiv cyTerm
    (157) performMulDiv -> .

  ! reduce/reduce conflict for ; resolved using rule 32 (initWith -> fact .)
  ! reduce/reduce conflict for PARFIN resolved using rule 32 (initWith -> fact .)
    ;               reduce using rule 32 (initWith -> fact .)
    PARFIN          reduce using rule 32 (initWith -> fact .)
    MULT            reduce using rule 157 (performMulDiv -> .)
    DIV             reduce using rule 157 (performMulDiv -> .)
    PLUS            reduce using rule 157 (performMulDiv -> .)
    MINUS           reduce using rule 157 (performMulDiv -> .)
    EQ              reduce using rule 157 (performMulDiv -> .)
    DIF             reduce using rule 157 (performMulDiv -> .)
    LTOEQ           reduce using rule 157 (performMulDiv -> .)
    GTOEQ           reduce using rule 157 (performMulDiv -> .)
    GT              reduce using rule 157 (performMulDiv -> .)
    LT              reduce using rule 157 (performMulDiv -> .)
    AND             reduce using rule 157 (performMulDiv -> .)
    OR              reduce using rule 157 (performMulDiv -> .)

  ! ;               [ reduce using rule 157 (performMulDiv -> .) ]
  ! PARFIN          [ reduce using rule 157 (performMulDiv -> .) ]

    performMulDiv                  shift and go to state 160

state 246

    (34) initDict -> ASGN PARINI dictType : . dictType PARFIN errorInitDict
    (36) dictType -> . errorDictType CTES
    (37) dictType -> . cte
    (38) dictType -> . ID
    (39) errorDictType -> .
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE

    ID              shift and go to state 208
    CTES            reduce using rule 39 (errorDictType -> .)
    CTED            shift and go to state 126
    CTEF            shift and go to state 134
    TRUE            shift and go to state 123
    FALSE           shift and go to state 131

    dictType                       shift and go to state 271
    errorDictType                  shift and go to state 206
    cte                            shift and go to state 207

state 247

    (36) dictType -> errorDictType CTES .

    PARFIN          reduce using rule 36 (dictType -> errorDictType CTES .)
    :               reduce using rule 36 (dictType -> errorDictType CTES .)


state 248

    (84) assignOptions -> [ expresion ] assignMatrix . init
    (29) init -> . ASGN saveOperator errorInit initWith

    ASGN            shift and go to state 272

    init                           shift and go to state 273

state 249

    (85) assignMatrix -> [ . expresion ] errorAssignMatrix
    (105) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (110) sExp -> . exp errorOpSExp opSExp performRelational
    (119) exp -> . term performAddSub errorCyExp cyExp
    (124) term -> . fact performMulDiv cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (132) fact -> . ID saveVariable opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 129
    PARINI          shift and go to state 136
    ID              shift and go to state 127
    CTED            shift and go to state 126
    CTEF            shift and go to state 134
    TRUE            shift and go to state 123
    FALSE           shift and go to state 131

    sExp                           shift and go to state 124
    expresion                      shift and go to state 274
    term                           shift and go to state 130
    funcCall                       shift and go to state 132
    cte                            shift and go to state 133
    exp                            shift and go to state 135
    fact                           shift and go to state 137

state 250

    (86) assignMatrix -> empty .

    ASGN            reduce using rule 86 (assignMatrix -> empty .)


state 251

    (107) cyExpresion -> AND saveOperator expresion .

    ,               reduce using rule 107 (cyExpresion -> AND saveOperator expresion .)
    PARFIN          reduce using rule 107 (cyExpresion -> AND saveOperator expresion .)
    ]               reduce using rule 107 (cyExpresion -> AND saveOperator expresion .)
    ;               reduce using rule 107 (cyExpresion -> AND saveOperator expresion .)


state 252

    (108) cyExpresion -> OR saveOperator expresion .

    ,               reduce using rule 108 (cyExpresion -> OR saveOperator expresion .)
    PARFIN          reduce using rule 108 (cyExpresion -> OR saveOperator expresion .)
    ]               reduce using rule 108 (cyExpresion -> OR saveOperator expresion .)
    ;               reduce using rule 108 (cyExpresion -> OR saveOperator expresion .)


state 253

    (138) opStruct -> errorOpStruct [ expresion . ] opMatrix

    ]               shift and go to state 275


state 254

    (120) cyExp -> PLUS saveOperator . exp
    (119) exp -> . term performAddSub errorCyExp cyExp
    (124) term -> . fact performMulDiv cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (132) fact -> . ID saveVariable opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 129
    PARINI          shift and go to state 136
    ID              shift and go to state 127
    CTED            shift and go to state 126
    CTEF            shift and go to state 134
    TRUE            shift and go to state 123
    FALSE           shift and go to state 131

    term                           shift and go to state 130
    funcCall                       shift and go to state 132
    cte                            shift and go to state 133
    exp                            shift and go to state 276
    fact                           shift and go to state 137

state 255

    (121) cyExp -> MINUS saveOperator . exp
    (119) exp -> . term performAddSub errorCyExp cyExp
    (124) term -> . fact performMulDiv cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (132) fact -> . ID saveVariable opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 129
    PARINI          shift and go to state 136
    ID              shift and go to state 127
    CTED            shift and go to state 126
    CTEF            shift and go to state 134
    TRUE            shift and go to state 123
    FALSE           shift and go to state 131

    term                           shift and go to state 130
    funcCall                       shift and go to state 132
    cte                            shift and go to state 133
    exp                            shift and go to state 277
    fact                           shift and go to state 137

state 256

    (115) opSExp -> GT saveOperator exp .

    AND             reduce using rule 115 (opSExp -> GT saveOperator exp .)
    OR              reduce using rule 115 (opSExp -> GT saveOperator exp .)
    ,               reduce using rule 115 (opSExp -> GT saveOperator exp .)
    PARFIN          reduce using rule 115 (opSExp -> GT saveOperator exp .)
    ]               reduce using rule 115 (opSExp -> GT saveOperator exp .)
    ;               reduce using rule 115 (opSExp -> GT saveOperator exp .)


state 257

    (113) opSExp -> LTOEQ saveOperator exp .

    AND             reduce using rule 113 (opSExp -> LTOEQ saveOperator exp .)
    OR              reduce using rule 113 (opSExp -> LTOEQ saveOperator exp .)
    ,               reduce using rule 113 (opSExp -> LTOEQ saveOperator exp .)
    PARFIN          reduce using rule 113 (opSExp -> LTOEQ saveOperator exp .)
    ]               reduce using rule 113 (opSExp -> LTOEQ saveOperator exp .)
    ;               reduce using rule 113 (opSExp -> LTOEQ saveOperator exp .)


state 258

    (112) opSExp -> DIF saveOperator exp .

    AND             reduce using rule 112 (opSExp -> DIF saveOperator exp .)
    OR              reduce using rule 112 (opSExp -> DIF saveOperator exp .)
    ,               reduce using rule 112 (opSExp -> DIF saveOperator exp .)
    PARFIN          reduce using rule 112 (opSExp -> DIF saveOperator exp .)
    ]               reduce using rule 112 (opSExp -> DIF saveOperator exp .)
    ;               reduce using rule 112 (opSExp -> DIF saveOperator exp .)


state 259

    (116) opSExp -> LT saveOperator exp .

    AND             reduce using rule 116 (opSExp -> LT saveOperator exp .)
    OR              reduce using rule 116 (opSExp -> LT saveOperator exp .)
    ,               reduce using rule 116 (opSExp -> LT saveOperator exp .)
    PARFIN          reduce using rule 116 (opSExp -> LT saveOperator exp .)
    ]               reduce using rule 116 (opSExp -> LT saveOperator exp .)
    ;               reduce using rule 116 (opSExp -> LT saveOperator exp .)


state 260

    (114) opSExp -> GTOEQ saveOperator exp .

    AND             reduce using rule 114 (opSExp -> GTOEQ saveOperator exp .)
    OR              reduce using rule 114 (opSExp -> GTOEQ saveOperator exp .)
    ,               reduce using rule 114 (opSExp -> GTOEQ saveOperator exp .)
    PARFIN          reduce using rule 114 (opSExp -> GTOEQ saveOperator exp .)
    ]               reduce using rule 114 (opSExp -> GTOEQ saveOperator exp .)
    ;               reduce using rule 114 (opSExp -> GTOEQ saveOperator exp .)


state 261

    (111) opSExp -> EQ saveOperator exp .

    AND             reduce using rule 111 (opSExp -> EQ saveOperator exp .)
    OR              reduce using rule 111 (opSExp -> EQ saveOperator exp .)
    ,               reduce using rule 111 (opSExp -> EQ saveOperator exp .)
    PARFIN          reduce using rule 111 (opSExp -> EQ saveOperator exp .)
    ]               reduce using rule 111 (opSExp -> EQ saveOperator exp .)
    ;               reduce using rule 111 (opSExp -> EQ saveOperator exp .)


state 262

    (131) fact -> PARINI putFondo expresion PARFIN takeFondo .

    MULT            reduce using rule 131 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    DIV             reduce using rule 131 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    PLUS            reduce using rule 131 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    MINUS           reduce using rule 131 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    AND             reduce using rule 131 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    OR              reduce using rule 131 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    ,               reduce using rule 131 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    PARFIN          reduce using rule 131 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    ]               reduce using rule 131 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    ;               reduce using rule 131 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    EQ              reduce using rule 131 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    DIF             reduce using rule 131 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    LTOEQ           reduce using rule 131 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    GTOEQ           reduce using rule 131 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    GT              reduce using rule 131 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    LT              reduce using rule 131 (fact -> PARINI putFondo expresion PARFIN takeFondo .)


state 263

    (126) cyTerm -> DIV saveOperator term .

    PLUS            reduce using rule 126 (cyTerm -> DIV saveOperator term .)
    MINUS           reduce using rule 126 (cyTerm -> DIV saveOperator term .)
    EQ              reduce using rule 126 (cyTerm -> DIV saveOperator term .)
    DIF             reduce using rule 126 (cyTerm -> DIV saveOperator term .)
    LTOEQ           reduce using rule 126 (cyTerm -> DIV saveOperator term .)
    GTOEQ           reduce using rule 126 (cyTerm -> DIV saveOperator term .)
    GT              reduce using rule 126 (cyTerm -> DIV saveOperator term .)
    LT              reduce using rule 126 (cyTerm -> DIV saveOperator term .)
    AND             reduce using rule 126 (cyTerm -> DIV saveOperator term .)
    OR              reduce using rule 126 (cyTerm -> DIV saveOperator term .)
    ,               reduce using rule 126 (cyTerm -> DIV saveOperator term .)
    PARFIN          reduce using rule 126 (cyTerm -> DIV saveOperator term .)
    ]               reduce using rule 126 (cyTerm -> DIV saveOperator term .)
    ;               reduce using rule 126 (cyTerm -> DIV saveOperator term .)


state 264

    (125) cyTerm -> MULT saveOperator errorFact . term
    (124) term -> . fact performMulDiv cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (132) fact -> . ID saveVariable opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 129
    PARINI          shift and go to state 136
    ID              shift and go to state 127
    CTED            shift and go to state 126
    CTEF            shift and go to state 134
    TRUE            shift and go to state 123
    FALSE           shift and go to state 131

    term                           shift and go to state 278
    funcCall                       shift and go to state 132
    cte                            shift and go to state 133
    fact                           shift and go to state 137

state 265

    (98) condition -> errorCondition IF PARINI expresion PARFIN { body . } optionalElse

    }               shift and go to state 279


state 266

    (58) opReturns -> errorOpReturns RETURNS type saveReturnType . { opVars body return

    {               shift and go to state 280


state 267

    (43) cyParam -> empty saveID . saveTypeParam
    (46) saveTypeParam -> .

    PARFIN          reduce using rule 46 (saveTypeParam -> .)

    saveTypeParam                  shift and go to state 281

state 268

    (42) cyParam -> errorCyParam saveID . saveTypeParam ; param
    (46) saveTypeParam -> .

    ;               reduce using rule 46 (saveTypeParam -> .)

    saveTypeParam                  shift and go to state 282

state 269

    (76) whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body } .

    ID              reduce using rule 76 (whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body } .)
    IF              reduce using rule 76 (whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body } .)
    FOR             reduce using rule 76 (whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body } .)
    WHILE           reduce using rule 76 (whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body } .)
    }               reduce using rule 76 (whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body } .)
    RETURN          reduce using rule 76 (whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body } .)


state 270

    (78) forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign . PARFIN { body }

    PARFIN          shift and go to state 283


state 271

    (34) initDict -> ASGN PARINI dictType : dictType . PARFIN errorInitDict

    PARFIN          shift and go to state 284


state 272

    (29) init -> ASGN . saveOperator errorInit initWith
    (153) saveOperator -> .

    CTES            reduce using rule 153 (saveOperator -> .)
    PARINI          reduce using rule 153 (saveOperator -> .)
    ID              reduce using rule 153 (saveOperator -> .)
    CTED            reduce using rule 153 (saveOperator -> .)
    CTEF            reduce using rule 153 (saveOperator -> .)
    TRUE            reduce using rule 153 (saveOperator -> .)
    FALSE           reduce using rule 153 (saveOperator -> .)

    saveOperator                   shift and go to state 169

state 273

    (84) assignOptions -> [ expresion ] assignMatrix init .

    ;               reduce using rule 84 (assignOptions -> [ expresion ] assignMatrix init .)
    PARFIN          reduce using rule 84 (assignOptions -> [ expresion ] assignMatrix init .)


state 274

    (85) assignMatrix -> [ expresion . ] errorAssignMatrix

    ]               shift and go to state 285


state 275

    (138) opStruct -> errorOpStruct [ expresion ] . opMatrix
    (140) opMatrix -> . errorOpMatrix [ expresion ]
    (141) opMatrix -> . empty
    (142) errorOpMatrix -> .
    (150) empty -> .

    [               reduce using rule 142 (errorOpMatrix -> .)
    MULT            reduce using rule 150 (empty -> .)
    DIV             reduce using rule 150 (empty -> .)
    PLUS            reduce using rule 150 (empty -> .)
    MINUS           reduce using rule 150 (empty -> .)
    EQ              reduce using rule 150 (empty -> .)
    DIF             reduce using rule 150 (empty -> .)
    LTOEQ           reduce using rule 150 (empty -> .)
    GTOEQ           reduce using rule 150 (empty -> .)
    GT              reduce using rule 150 (empty -> .)
    LT              reduce using rule 150 (empty -> .)
    AND             reduce using rule 150 (empty -> .)
    OR              reduce using rule 150 (empty -> .)
    ,               reduce using rule 150 (empty -> .)
    PARFIN          reduce using rule 150 (empty -> .)
    ]               reduce using rule 150 (empty -> .)
    ;               reduce using rule 150 (empty -> .)

    empty                          shift and go to state 288
    errorOpMatrix                  shift and go to state 286
    opMatrix                       shift and go to state 287

state 276

    (120) cyExp -> PLUS saveOperator exp .

    EQ              reduce using rule 120 (cyExp -> PLUS saveOperator exp .)
    DIF             reduce using rule 120 (cyExp -> PLUS saveOperator exp .)
    LTOEQ           reduce using rule 120 (cyExp -> PLUS saveOperator exp .)
    GTOEQ           reduce using rule 120 (cyExp -> PLUS saveOperator exp .)
    GT              reduce using rule 120 (cyExp -> PLUS saveOperator exp .)
    LT              reduce using rule 120 (cyExp -> PLUS saveOperator exp .)
    AND             reduce using rule 120 (cyExp -> PLUS saveOperator exp .)
    OR              reduce using rule 120 (cyExp -> PLUS saveOperator exp .)
    ,               reduce using rule 120 (cyExp -> PLUS saveOperator exp .)
    PARFIN          reduce using rule 120 (cyExp -> PLUS saveOperator exp .)
    ]               reduce using rule 120 (cyExp -> PLUS saveOperator exp .)
    ;               reduce using rule 120 (cyExp -> PLUS saveOperator exp .)


state 277

    (121) cyExp -> MINUS saveOperator exp .

    EQ              reduce using rule 121 (cyExp -> MINUS saveOperator exp .)
    DIF             reduce using rule 121 (cyExp -> MINUS saveOperator exp .)
    LTOEQ           reduce using rule 121 (cyExp -> MINUS saveOperator exp .)
    GTOEQ           reduce using rule 121 (cyExp -> MINUS saveOperator exp .)
    GT              reduce using rule 121 (cyExp -> MINUS saveOperator exp .)
    LT              reduce using rule 121 (cyExp -> MINUS saveOperator exp .)
    AND             reduce using rule 121 (cyExp -> MINUS saveOperator exp .)
    OR              reduce using rule 121 (cyExp -> MINUS saveOperator exp .)
    ,               reduce using rule 121 (cyExp -> MINUS saveOperator exp .)
    PARFIN          reduce using rule 121 (cyExp -> MINUS saveOperator exp .)
    ]               reduce using rule 121 (cyExp -> MINUS saveOperator exp .)
    ;               reduce using rule 121 (cyExp -> MINUS saveOperator exp .)


state 278

    (125) cyTerm -> MULT saveOperator errorFact term .

    PLUS            reduce using rule 125 (cyTerm -> MULT saveOperator errorFact term .)
    MINUS           reduce using rule 125 (cyTerm -> MULT saveOperator errorFact term .)
    EQ              reduce using rule 125 (cyTerm -> MULT saveOperator errorFact term .)
    DIF             reduce using rule 125 (cyTerm -> MULT saveOperator errorFact term .)
    LTOEQ           reduce using rule 125 (cyTerm -> MULT saveOperator errorFact term .)
    GTOEQ           reduce using rule 125 (cyTerm -> MULT saveOperator errorFact term .)
    GT              reduce using rule 125 (cyTerm -> MULT saveOperator errorFact term .)
    LT              reduce using rule 125 (cyTerm -> MULT saveOperator errorFact term .)
    AND             reduce using rule 125 (cyTerm -> MULT saveOperator errorFact term .)
    OR              reduce using rule 125 (cyTerm -> MULT saveOperator errorFact term .)
    ,               reduce using rule 125 (cyTerm -> MULT saveOperator errorFact term .)
    PARFIN          reduce using rule 125 (cyTerm -> MULT saveOperator errorFact term .)
    ]               reduce using rule 125 (cyTerm -> MULT saveOperator errorFact term .)
    ;               reduce using rule 125 (cyTerm -> MULT saveOperator errorFact term .)


state 279

    (98) condition -> errorCondition IF PARINI expresion PARFIN { body } . optionalElse
    (100) optionalElse -> . errorElse ELSE { body }
    (101) optionalElse -> . empty
    (102) errorElse -> .
    (150) empty -> .

    ELSE            reduce using rule 102 (errorElse -> .)
    ID              reduce using rule 150 (empty -> .)
    IF              reduce using rule 150 (empty -> .)
    FOR             reduce using rule 150 (empty -> .)
    WHILE           reduce using rule 150 (empty -> .)
    }               reduce using rule 150 (empty -> .)
    RETURN          reduce using rule 150 (empty -> .)

    errorElse                      shift and go to state 290
    optionalElse                   shift and go to state 289
    empty                          shift and go to state 291

state 280

    (58) opReturns -> errorOpReturns RETURNS type saveReturnType { . opVars body return
    (6) opVars -> . vars
    (7) opVars -> . empty
    (10) vars -> . errorVars VARS declare
    (150) empty -> .
    (12) errorVars -> .

    RETURN          reduce using rule 150 (empty -> .)
    ID              reduce using rule 150 (empty -> .)
    IF              reduce using rule 150 (empty -> .)
    FOR             reduce using rule 150 (empty -> .)
    WHILE           reduce using rule 150 (empty -> .)
    VARS            reduce using rule 12 (errorVars -> .)

    vars                           shift and go to state 8
    opVars                         shift and go to state 292
    errorVars                      shift and go to state 10
    empty                          shift and go to state 11

state 281

    (43) cyParam -> empty saveID saveTypeParam .

    PARFIN          reduce using rule 43 (cyParam -> empty saveID saveTypeParam .)


state 282

    (42) cyParam -> errorCyParam saveID saveTypeParam . ; param

    ;               shift and go to state 293


state 283

    (78) forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN . { body }

    {               shift and go to state 294


state 284

    (34) initDict -> ASGN PARINI dictType : dictType PARFIN . errorInitDict
    (35) errorInitDict -> .

    ;               reduce using rule 35 (errorInitDict -> .)
    PARFIN          reduce using rule 35 (errorInitDict -> .)

    errorInitDict                  shift and go to state 295

state 285

    (85) assignMatrix -> [ expresion ] . errorAssignMatrix
    (87) errorAssignMatrix -> .

    ASGN            reduce using rule 87 (errorAssignMatrix -> .)

    errorAssignMatrix              shift and go to state 296

state 286

    (140) opMatrix -> errorOpMatrix . [ expresion ]

    [               shift and go to state 297


state 287

    (138) opStruct -> errorOpStruct [ expresion ] opMatrix .

    MULT            reduce using rule 138 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    DIV             reduce using rule 138 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    PLUS            reduce using rule 138 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    MINUS           reduce using rule 138 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    EQ              reduce using rule 138 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    DIF             reduce using rule 138 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    LTOEQ           reduce using rule 138 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    GTOEQ           reduce using rule 138 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    GT              reduce using rule 138 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    LT              reduce using rule 138 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    AND             reduce using rule 138 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    OR              reduce using rule 138 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    ,               reduce using rule 138 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    PARFIN          reduce using rule 138 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    ]               reduce using rule 138 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    ;               reduce using rule 138 (opStruct -> errorOpStruct [ expresion ] opMatrix .)


state 288

    (141) opMatrix -> empty .

    MULT            reduce using rule 141 (opMatrix -> empty .)
    DIV             reduce using rule 141 (opMatrix -> empty .)
    PLUS            reduce using rule 141 (opMatrix -> empty .)
    MINUS           reduce using rule 141 (opMatrix -> empty .)
    EQ              reduce using rule 141 (opMatrix -> empty .)
    DIF             reduce using rule 141 (opMatrix -> empty .)
    LTOEQ           reduce using rule 141 (opMatrix -> empty .)
    GTOEQ           reduce using rule 141 (opMatrix -> empty .)
    GT              reduce using rule 141 (opMatrix -> empty .)
    LT              reduce using rule 141 (opMatrix -> empty .)
    AND             reduce using rule 141 (opMatrix -> empty .)
    OR              reduce using rule 141 (opMatrix -> empty .)
    ,               reduce using rule 141 (opMatrix -> empty .)
    PARFIN          reduce using rule 141 (opMatrix -> empty .)
    ]               reduce using rule 141 (opMatrix -> empty .)
    ;               reduce using rule 141 (opMatrix -> empty .)


state 289

    (98) condition -> errorCondition IF PARINI expresion PARFIN { body } optionalElse .

    ID              reduce using rule 98 (condition -> errorCondition IF PARINI expresion PARFIN { body } optionalElse .)
    IF              reduce using rule 98 (condition -> errorCondition IF PARINI expresion PARFIN { body } optionalElse .)
    FOR             reduce using rule 98 (condition -> errorCondition IF PARINI expresion PARFIN { body } optionalElse .)
    WHILE           reduce using rule 98 (condition -> errorCondition IF PARINI expresion PARFIN { body } optionalElse .)
    }               reduce using rule 98 (condition -> errorCondition IF PARINI expresion PARFIN { body } optionalElse .)
    RETURN          reduce using rule 98 (condition -> errorCondition IF PARINI expresion PARFIN { body } optionalElse .)


state 290

    (100) optionalElse -> errorElse . ELSE { body }

    ELSE            shift and go to state 298


state 291

    (101) optionalElse -> empty .

    ID              reduce using rule 101 (optionalElse -> empty .)
    IF              reduce using rule 101 (optionalElse -> empty .)
    FOR             reduce using rule 101 (optionalElse -> empty .)
    WHILE           reduce using rule 101 (optionalElse -> empty .)
    }               reduce using rule 101 (optionalElse -> empty .)
    RETURN          reduce using rule 101 (optionalElse -> empty .)


state 292

    (58) opReturns -> errorOpReturns RETURNS type saveReturnType { opVars . body return
    (70) body -> . errorBody cyInstruction
    (71) body -> . empty
    (72) errorBody -> .
    (150) empty -> .

    ID              reduce using rule 72 (errorBody -> .)
    IF              reduce using rule 72 (errorBody -> .)
    FOR             reduce using rule 72 (errorBody -> .)
    WHILE           reduce using rule 72 (errorBody -> .)
    RETURN          reduce using rule 150 (empty -> .)

    body                           shift and go to state 299
    errorBody                      shift and go to state 74
    empty                          shift and go to state 75

state 293

    (42) cyParam -> errorCyParam saveID saveTypeParam ; . param
    (40) param -> . saveType type errorParam ID cyTypeParam cyParam
    (3) saveType -> .

    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)

    param                          shift and go to state 300
    saveType                       shift and go to state 97

state 294

    (78) forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { . body }
    (70) body -> . errorBody cyInstruction
    (71) body -> . empty
    (72) errorBody -> .
    (150) empty -> .

    ID              reduce using rule 72 (errorBody -> .)
    IF              reduce using rule 72 (errorBody -> .)
    FOR             reduce using rule 72 (errorBody -> .)
    WHILE           reduce using rule 72 (errorBody -> .)
    }               reduce using rule 150 (empty -> .)

    body                           shift and go to state 301
    errorBody                      shift and go to state 74
    empty                          shift and go to state 75

state 295

    (34) initDict -> ASGN PARINI dictType : dictType PARFIN errorInitDict .

    ;               reduce using rule 34 (initDict -> ASGN PARINI dictType : dictType PARFIN errorInitDict .)
    PARFIN          reduce using rule 34 (initDict -> ASGN PARINI dictType : dictType PARFIN errorInitDict .)


state 296

    (85) assignMatrix -> [ expresion ] errorAssignMatrix .

    ASGN            reduce using rule 85 (assignMatrix -> [ expresion ] errorAssignMatrix .)


state 297

    (140) opMatrix -> errorOpMatrix [ . expresion ]
    (105) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (110) sExp -> . exp errorOpSExp opSExp performRelational
    (119) exp -> . term performAddSub errorCyExp cyExp
    (124) term -> . fact performMulDiv cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (132) fact -> . ID saveVariable opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 129
    PARINI          shift and go to state 136
    ID              shift and go to state 127
    CTED            shift and go to state 126
    CTEF            shift and go to state 134
    TRUE            shift and go to state 123
    FALSE           shift and go to state 131

    sExp                           shift and go to state 124
    expresion                      shift and go to state 302
    term                           shift and go to state 130
    funcCall                       shift and go to state 132
    cte                            shift and go to state 133
    exp                            shift and go to state 135
    fact                           shift and go to state 137

state 298

    (100) optionalElse -> errorElse ELSE . { body }

    {               shift and go to state 303


state 299

    (58) opReturns -> errorOpReturns RETURNS type saveReturnType { opVars body . return
    (51) return -> . errorReturn RETURN expresion ;
    (52) errorReturn -> .

    RETURN          reduce using rule 52 (errorReturn -> .)

    return                         shift and go to state 304
    errorReturn                    shift and go to state 305

state 300

    (42) cyParam -> errorCyParam saveID saveTypeParam ; param .

    PARFIN          reduce using rule 42 (cyParam -> errorCyParam saveID saveTypeParam ; param .)


state 301

    (78) forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body . }

    }               shift and go to state 306


state 302

    (140) opMatrix -> errorOpMatrix [ expresion . ]

    ]               shift and go to state 307


state 303

    (100) optionalElse -> errorElse ELSE { . body }
    (70) body -> . errorBody cyInstruction
    (71) body -> . empty
    (72) errorBody -> .
    (150) empty -> .

    ID              reduce using rule 72 (errorBody -> .)
    IF              reduce using rule 72 (errorBody -> .)
    FOR             reduce using rule 72 (errorBody -> .)
    WHILE           reduce using rule 72 (errorBody -> .)
    }               reduce using rule 150 (empty -> .)

    body                           shift and go to state 308
    empty                          shift and go to state 75
    errorBody                      shift and go to state 74

state 304

    (58) opReturns -> errorOpReturns RETURNS type saveReturnType { opVars body return .

    }               reduce using rule 58 (opReturns -> errorOpReturns RETURNS type saveReturnType { opVars body return .)


state 305

    (51) return -> errorReturn . RETURN expresion ;

    RETURN          shift and go to state 309


state 306

    (78) forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body } .

    ID              reduce using rule 78 (forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body } .)
    IF              reduce using rule 78 (forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body } .)
    FOR             reduce using rule 78 (forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body } .)
    WHILE           reduce using rule 78 (forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body } .)
    }               reduce using rule 78 (forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body } .)
    RETURN          reduce using rule 78 (forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body } .)


state 307

    (140) opMatrix -> errorOpMatrix [ expresion ] .

    MULT            reduce using rule 140 (opMatrix -> errorOpMatrix [ expresion ] .)
    DIV             reduce using rule 140 (opMatrix -> errorOpMatrix [ expresion ] .)
    PLUS            reduce using rule 140 (opMatrix -> errorOpMatrix [ expresion ] .)
    MINUS           reduce using rule 140 (opMatrix -> errorOpMatrix [ expresion ] .)
    EQ              reduce using rule 140 (opMatrix -> errorOpMatrix [ expresion ] .)
    DIF             reduce using rule 140 (opMatrix -> errorOpMatrix [ expresion ] .)
    LTOEQ           reduce using rule 140 (opMatrix -> errorOpMatrix [ expresion ] .)
    GTOEQ           reduce using rule 140 (opMatrix -> errorOpMatrix [ expresion ] .)
    GT              reduce using rule 140 (opMatrix -> errorOpMatrix [ expresion ] .)
    LT              reduce using rule 140 (opMatrix -> errorOpMatrix [ expresion ] .)
    AND             reduce using rule 140 (opMatrix -> errorOpMatrix [ expresion ] .)
    OR              reduce using rule 140 (opMatrix -> errorOpMatrix [ expresion ] .)
    ,               reduce using rule 140 (opMatrix -> errorOpMatrix [ expresion ] .)
    PARFIN          reduce using rule 140 (opMatrix -> errorOpMatrix [ expresion ] .)
    ]               reduce using rule 140 (opMatrix -> errorOpMatrix [ expresion ] .)
    ;               reduce using rule 140 (opMatrix -> errorOpMatrix [ expresion ] .)


state 308

    (100) optionalElse -> errorElse ELSE { body . }

    }               shift and go to state 310


state 309

    (51) return -> errorReturn RETURN . expresion ;
    (105) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (110) sExp -> . exp errorOpSExp opSExp performRelational
    (119) exp -> . term performAddSub errorCyExp cyExp
    (124) term -> . fact performMulDiv cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (132) fact -> . ID saveVariable opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 129
    PARINI          shift and go to state 136
    ID              shift and go to state 127
    CTED            shift and go to state 126
    CTEF            shift and go to state 134
    TRUE            shift and go to state 123
    FALSE           shift and go to state 131

    sExp                           shift and go to state 124
    expresion                      shift and go to state 311
    term                           shift and go to state 130
    funcCall                       shift and go to state 132
    cte                            shift and go to state 133
    exp                            shift and go to state 135
    fact                           shift and go to state 137

state 310

    (100) optionalElse -> errorElse ELSE { body } .

    ID              reduce using rule 100 (optionalElse -> errorElse ELSE { body } .)
    IF              reduce using rule 100 (optionalElse -> errorElse ELSE { body } .)
    FOR             reduce using rule 100 (optionalElse -> errorElse ELSE { body } .)
    WHILE           reduce using rule 100 (optionalElse -> errorElse ELSE { body } .)
    }               reduce using rule 100 (optionalElse -> errorElse ELSE { body } .)
    RETURN          reduce using rule 100 (optionalElse -> errorElse ELSE { body } .)


state 311

    (51) return -> errorReturn RETURN expresion . ;

    ;               shift and go to state 312


state 312

    (51) return -> errorReturn RETURN expresion ; .

    }               reduce using rule 51 (return -> errorReturn RETURN expresion ; .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PARINI in state 148 resolved as shift
WARNING: reduce/reduce conflict in state 244 resolved using rule (initWith -> funcCall)
WARNING: rejected rule (fact -> funcCall) in state 244
WARNING: reduce/reduce conflict in state 245 resolved using rule (initWith -> fact)
WARNING: rejected rule (performMulDiv -> <empty>) in state 245
