Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables
Rule 2     changeCurrentScope -> <empty>
Rule 3     saveType -> <empty>
Rule 4     saveProc -> <empty>
Rule 5     errorProgram -> <empty>
Rule 6     opVars -> vars
Rule 7     opVars -> empty
Rule 8     opFunctions -> function opFunctions
Rule 9     opFunctions -> empty
Rule 10    vars -> errorVars VARS declare
Rule 11    saveID -> <empty>
Rule 12    errorVars -> <empty>
Rule 13    type -> errorType INT
Rule 14    type -> FLOAT
Rule 15    type -> STRING
Rule 16    type -> BOOL
Rule 17    errorType -> <empty>
Rule 18    main -> errorMain MAIN saveCurrentTemps saveMain { opVars generateInitialQuadruple body } clearVarsTable
Rule 19    generateInitialQuadruple -> <empty>
Rule 20    saveMain -> <empty>
Rule 21    errorMain -> <empty>
Rule 22    instr -> basicStatements ;
Rule 23    instr -> condition
Rule 24    instr -> cycle
Rule 25    basicStatements -> assign
Rule 26    basicStatements -> funcCall
Rule 27    basicStatements -> print
Rule 28    basicStatements -> read
Rule 29    print -> PRINT PARINI exp performPrint cyPrint PARFIN
Rule 30    cyPrint -> , fix exp performPrint cyPrint
Rule 31    cyPrint -> empty
Rule 32    read -> READ PARINI ID saveVariable performRead cyRead PARFIN
Rule 33    cyRead -> , fix ID saveVariable performRead cyRead
Rule 34    cyRead -> empty
Rule 35    fix -> <empty>
Rule 36    declare -> basicDeclare
Rule 37    declare -> structDeclare
Rule 38    declare -> dictDeclare
Rule 39    init -> ASGN saveOperator errorInit initWith
Rule 40    errorInit -> <empty>
Rule 41    initWith -> expresion
Rule 42    initWith -> funcCall
Rule 43    initDict -> ASGN PARINI dictType : dictType PARFIN errorInitDict
Rule 44    errorInitDict -> <empty>
Rule 45    dictType -> errorDictType CTES
Rule 46    dictType -> cte
Rule 47    dictType -> ID
Rule 48    errorDictType -> <empty>
Rule 49    param -> saveType type errorParam ID cyTypeParam cyParam
Rule 50    errorParam -> <empty>
Rule 51    cyParam -> errorCyParam saveTypeParam saveID ; param
Rule 52    cyParam -> empty saveTypeParam saveID
Rule 53    cyTypeParam -> , saveTypeParam saveID ID cyTypeParam
Rule 54    cyTypeParam -> empty
Rule 55    saveTypeParam -> <empty>
Rule 56    errorCyParam -> <empty>
Rule 57    function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
Rule 58    saveCurrentTemps -> <empty>
Rule 59    errorFunction -> <empty>
Rule 60    clearVarsTable -> <empty>
Rule 61    return -> errorReturn RETURN expresion saveReturnValue ;
Rule 62    saveReturnValue -> <empty>
Rule 63    errorReturn -> <empty>
Rule 64    opParameters -> param saveParamToDirProc errorOpParameters
Rule 65    opParameters -> empty
Rule 66    flagParameters -> <empty>
Rule 67    saveParamToDirProc -> <empty>
Rule 68    errorOpParameters -> <empty>
Rule 69    opReturns -> errorOpReturns RETURNS type saveReturnType { opVars saveQuadruple body return
Rule 70    opReturns -> { opVars saveQuadruple body
Rule 71    saveQuadruple -> <empty>
Rule 72    saveReturnType -> <empty>
Rule 73    errorOpReturns -> <empty>
Rule 74    basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
Rule 75    errorBasicDeclare -> <empty>
Rule 76    structDeclare -> errorStructDeclare STRUCT struct ; cyDeclare
Rule 77    errorStructDeclare -> <empty>
Rule 78    dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare
Rule 79    errorDictDeclare -> <empty>
Rule 80    cyDeclare -> declare
Rule 81    cyDeclare -> empty
Rule 82    body -> errorBody cyInstruction
Rule 83    body -> empty
Rule 84    errorBody -> <empty>
Rule 85    cyInstruction -> instr body
Rule 86    cycle -> forCycle
Rule 87    cycle -> whileCycle
Rule 88    whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile
Rule 89    repeatWhile -> <empty>
Rule 90    saveReturn -> <empty>
Rule 91    errorWhileCycle -> <empty>
Rule 92    forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign
Rule 93    saltoBody -> <empty>
Rule 94    returnFor -> <empty>
Rule 95    rellenaBody -> <empty>
Rule 96    returnAssign -> <empty>
Rule 97    errorForCycle -> <empty>
Rule 98    assign -> ID saveVariable errorAssign assignOptions performAssign
Rule 99    errorAssign -> <empty>
Rule 100   assignOptions -> init
Rule 101   assignOptions -> initDict
Rule 102   assignOptions -> resaveID saveToDimensionStacks [ expresion verifyIndex ] assignMatrix accessStruct init
Rule 103   assignMatrix -> [ expresion verifySecondIndex ] errorAssignMatrix
Rule 104   assignMatrix -> empty
Rule 105   errorAssignMatrix -> <empty>
Rule 106   funcCall -> ID checkFunction PARINI opParamCall PARFIN checkNumParams
Rule 107   checkNumParams -> <empty>
Rule 108   checkFunction -> <empty>
Rule 109   opParamCall -> expresion checkParamType cyParamCall
Rule 110   opParamCall -> empty
Rule 111   cyParamCall -> , expresion checkParamType cyParamCall
Rule 112   cyParamCall -> empty
Rule 113   checkParamType -> <empty>
Rule 114   struct -> structType ID saveID createDimension [ CTED saveDimensionSize ] optionalMatrix secondLap
Rule 115   secondLap -> <empty>
Rule 116   saveDimensionSize -> <empty>
Rule 117   createDimension -> <empty>
Rule 118   structType -> saveType type
Rule 119   structType -> DICT dict
Rule 120   optionalMatrix -> createSecondDimension [ CTED saveSecondDimensionSize ]
Rule 121   optionalMatrix -> empty
Rule 122   saveSecondDimensionSize -> <empty>
Rule 123   createSecondDimension -> <empty>
Rule 124   condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso
Rule 125   errorCondition -> <empty>
Rule 126   optionalElse -> errorElse ELSE saveVerdadero { body }
Rule 127   optionalElse -> empty
Rule 128   errorElse -> <empty>
Rule 129   dict -> errorDict PARINI type : type PARFIN
Rule 130   errorDict -> <empty>
Rule 131   expresion -> sExp performAndOr cyExpresion errorExpresion
Rule 132   errorExpresion -> <empty>
Rule 133   cyExpresion -> AND saveOperator expresion
Rule 134   cyExpresion -> OR saveOperator expresion
Rule 135   cyExpresion -> empty
Rule 136   sExp -> exp errorOpSExp opSExp performRelational
Rule 137   opSExp -> EQ saveOperator exp
Rule 138   opSExp -> DIF saveOperator exp
Rule 139   opSExp -> LTOEQ saveOperator exp
Rule 140   opSExp -> GTOEQ saveOperator exp
Rule 141   opSExp -> GT saveOperator exp
Rule 142   opSExp -> LT saveOperator exp
Rule 143   opSExp -> empty
Rule 144   errorOpSExp -> <empty>
Rule 145   exp -> term performAddSub errorCyExp cyExp
Rule 146   cyExp -> PLUS saveOperator exp
Rule 147   cyExp -> MINUS saveOperator exp
Rule 148   cyExp -> empty
Rule 149   errorCyExp -> <empty>
Rule 150   term -> fact performMulDiv cyTerm
Rule 151   cyTerm -> MULT saveOperator errorFact term
Rule 152   cyTerm -> DIV saveOperator term
Rule 153   cyTerm -> RES saveOperator term
Rule 154   cyTerm -> empty
Rule 155   fact -> CTES saveConstantString
Rule 156   fact -> cte
Rule 157   fact -> funcCall
Rule 158   fact -> PARINI putFondo expresion PARFIN takeFondo
Rule 159   fact -> ID saveVariable opAccess errorOpAccess
Rule 160   errorFact -> <empty>
Rule 161   opAccess -> resaveID opStruct
Rule 162   opAccess -> opDictionary
Rule 163   opAccess -> empty
Rule 164   resaveID -> <empty>
Rule 165   errorOpAccess -> <empty>
Rule 166   opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct
Rule 167   accessStruct -> <empty>
Rule 168   verifyIndex -> <empty>
Rule 169   saveToDimensionStacks -> <empty>
Rule 170   errorOpStruct -> <empty>
Rule 171   opMatrix -> errorOpMatrix [ expresion verifySecondIndex ]
Rule 172   opMatrix -> empty
Rule 173   verifySecondIndex -> <empty>
Rule 174   errorOpMatrix -> <empty>
Rule 175   opDictionary -> . dictIndex
Rule 176   dictIndex -> FIRST
Rule 177   dictIndex -> LAST
Rule 178   cte -> CTED saveConstantInt
Rule 179   cte -> CTEF saveConstantFloat
Rule 180   cte -> TRUE saveConstantBool
Rule 181   cte -> FALSE saveConstantBool
Rule 182   empty -> <empty>
Rule 183   printTables -> <empty>
Rule 184   rellenaFalso -> <empty>
Rule 185   saveFalso -> <empty>
Rule 186   saveVerdadero -> <empty>
Rule 187   saveConstantInt -> <empty>
Rule 188   saveConstantFloat -> <empty>
Rule 189   saveConstantBool -> <empty>
Rule 190   saveConstantString -> <empty>
Rule 191   saveVariable -> <empty>
Rule 192   saveOperator -> <empty>
Rule 193   putFondo -> <empty>
Rule 194   takeFondo -> <empty>
Rule 195   performAssign -> <empty>
Rule 196   performMulDiv -> <empty>
Rule 197   performAddSub -> <empty>
Rule 198   performRelational -> <empty>
Rule 199   performAndOr -> <empty>
Rule 200   performPrint -> <empty>
Rule 201   performRead -> <empty>

Terminals, with rules where they appear

,                    : 30 33 53 111
.                    : 175
:                    : 43 129
;                    : 22 51 61 74 76 78 92 92
AND                  : 133
ASGN                 : 39 43
BOOL                 : 16
CTED                 : 114 120 178
CTEF                 : 179
CTES                 : 45 155
DICT                 : 78 119
DIF                  : 138
DIV                  : 152
ELSE                 : 126
EQ                   : 137
FALSE                : 181
FIRST                : 176
FLOAT                : 14
FOR                  : 92
FUNC                 : 57
GT                   : 141
GTOEQ                : 140
ID                   : 1 32 33 47 49 53 57 74 78 98 106 114 159
IF                   : 124
INT                  : 13
LAST                 : 177
LT                   : 142
LTOEQ                : 139
MAIN                 : 18
MINUS                : 147
MULT                 : 151
OR                   : 134
PARFIN               : 29 32 43 57 88 92 106 124 129 158
PARINI               : 29 32 43 57 88 92 106 124 129 158
PLUS                 : 146
PRINT                : 29
PROGRAM              : 1
READ                 : 32
RES                  : 153
RETURN               : 61
RETURNS              : 69
STRING               : 15
STRUCT               : 76
TRUE                 : 180
VARS                 : 10
WHILE                : 88
[                    : 102 103 114 120 166 171
]                    : 102 103 114 120 166 171
error                : 
{                    : 1 18 69 70 88 92 124 126
}                    : 1 18 57 88 92 124 126

Nonterminals, with rules where they appear

accessStruct         : 102 166
assign               : 25 92 92
assignMatrix         : 102
assignOptions        : 98
basicDeclare         : 36
basicStatements      : 22
body                 : 18 69 70 85 88 92 124 126
changeCurrentScope   : 1
checkFunction        : 106
checkNumParams       : 106
checkParamType       : 109 111
clearVarsTable       : 18 57
condition            : 23
createDimension      : 114
createSecondDimension : 120
cte                  : 46 156
cyDeclare            : 74 76 78
cyExp                : 145
cyExpresion          : 131
cyInstruction        : 82
cyParam              : 49
cyParamCall          : 109 111
cyPrint              : 29 30
cyRead               : 32 33
cyTerm               : 150
cyTypeParam          : 49 53 74
cycle                : 24
declare              : 10 80
dict                 : 78 119
dictDeclare          : 38
dictIndex            : 175
dictType             : 43 43
empty                : 7 9 31 34 52 54 65 81 83 104 110 112 121 127 135 143 148 154 163 172
errorAssign          : 98
errorAssignMatrix    : 103
errorBasicDeclare    : 74
errorBody            : 82
errorCondition       : 124
errorCyExp           : 145
errorCyParam         : 51
errorDict            : 129
errorDictDeclare     : 78
errorDictType        : 45
errorElse            : 126
errorExpresion       : 131
errorFact            : 151
errorForCycle        : 92
errorFunction        : 57
errorInit            : 39
errorInitDict        : 43
errorMain            : 18
errorOpAccess        : 159
errorOpMatrix        : 171
errorOpParameters    : 64
errorOpReturns       : 69
errorOpSExp          : 136
errorOpStruct        : 166
errorParam           : 49
errorProgram         : 1
errorReturn          : 61
errorStructDeclare   : 76
errorType            : 13
errorVars            : 10
errorWhileCycle      : 88
exp                  : 29 30 136 137 138 139 140 141 142 146 147
expresion            : 41 61 88 92 102 103 109 111 124 133 134 158 166 171
fact                 : 150
fix                  : 30 33
flagParameters       : 57 57
forCycle             : 86
funcCall             : 26 42 157
function             : 8
generateInitialQuadruple : 18
init                 : 100 102
initDict             : 101
initWith             : 39
instr                : 85
main                 : 1
opAccess             : 159
opDictionary         : 162
opFunctions          : 1 8
opMatrix             : 166
opParamCall          : 106
opParameters         : 57
opReturns            : 57
opSExp               : 136
opStruct             : 161
opVars               : 1 18 69 70
optionalElse         : 124
optionalMatrix       : 114
param                : 51 64
performAddSub        : 145
performAndOr         : 131
performAssign        : 98
performMulDiv        : 150
performPrint         : 29 30
performRead          : 32 33
performRelational    : 136
print                : 27
printTables          : 1
program              : 0
putFondo             : 158
read                 : 28
rellenaBody          : 92
rellenaFalso         : 124
repeatWhile          : 88
resaveID             : 102 161
return               : 69
returnAssign         : 92
returnFor            : 92
sExp                 : 131
saltoBody            : 92
saveConstantBool     : 180 181
saveConstantFloat    : 179
saveConstantInt      : 178
saveConstantString   : 155
saveCurrentTemps     : 18 57
saveDimensionSize    : 114
saveFalso            : 88 92 124
saveID               : 51 52 53 74 114
saveMain             : 18
saveOperator         : 39 133 134 137 138 139 140 141 142 146 147 151 152 153
saveParamToDirProc   : 64
saveProc             : 1 57
saveQuadruple        : 69 70
saveReturn           : 88 92
saveReturnType       : 69
saveReturnValue      : 61
saveSecondDimensionSize : 120
saveToDimensionStacks : 102 166
saveType             : 1 49 57 74 118
saveTypeParam        : 51 52 53
saveVariable         : 32 33 98 159
saveVerdadero        : 126
secondLap            : 114
struct               : 76
structDeclare        : 37
structType           : 114
takeFondo            : 158
term                 : 145 151 152 153
type                 : 49 69 74 118 129 129
vars                 : 6
verifyIndex          : 102 166
verifySecondIndex    : 103 171
whileCycle           : 87

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables
    (5) errorProgram -> .

    PROGRAM         reduce using rule 5 (errorProgram -> .)

    errorProgram                   shift and go to state 2
    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> errorProgram . PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables

    PROGRAM         shift and go to state 3


state 3

    (1) program -> errorProgram PROGRAM . saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables
    (3) saveType -> .

    ID              reduce using rule 3 (saveType -> .)

    saveType                       shift and go to state 4

state 4

    (1) program -> errorProgram PROGRAM saveType . ID saveProc { opVars changeCurrentScope opFunctions main } printTables

    ID              shift and go to state 5


state 5

    (1) program -> errorProgram PROGRAM saveType ID . saveProc { opVars changeCurrentScope opFunctions main } printTables
    (4) saveProc -> .

    {               reduce using rule 4 (saveProc -> .)

    saveProc                       shift and go to state 6

state 6

    (1) program -> errorProgram PROGRAM saveType ID saveProc . { opVars changeCurrentScope opFunctions main } printTables

    {               shift and go to state 7


state 7

    (1) program -> errorProgram PROGRAM saveType ID saveProc { . opVars changeCurrentScope opFunctions main } printTables
    (6) opVars -> . vars
    (7) opVars -> . empty
    (10) vars -> . errorVars VARS declare
    (182) empty -> .
    (12) errorVars -> .

    MAIN            reduce using rule 182 (empty -> .)
    FUNC            reduce using rule 182 (empty -> .)
    VARS            reduce using rule 12 (errorVars -> .)

    vars                           shift and go to state 8
    opVars                         shift and go to state 9
    errorVars                      shift and go to state 10
    empty                          shift and go to state 11

state 8

    (6) opVars -> vars .

    }               reduce using rule 6 (opVars -> vars .)
    ID              reduce using rule 6 (opVars -> vars .)
    PRINT           reduce using rule 6 (opVars -> vars .)
    READ            reduce using rule 6 (opVars -> vars .)
    IF              reduce using rule 6 (opVars -> vars .)
    FOR             reduce using rule 6 (opVars -> vars .)
    WHILE           reduce using rule 6 (opVars -> vars .)
    MAIN            reduce using rule 6 (opVars -> vars .)
    FUNC            reduce using rule 6 (opVars -> vars .)
    RETURN          reduce using rule 6 (opVars -> vars .)


state 9

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars . changeCurrentScope opFunctions main } printTables
    (2) changeCurrentScope -> .

    MAIN            reduce using rule 2 (changeCurrentScope -> .)
    FUNC            reduce using rule 2 (changeCurrentScope -> .)

    changeCurrentScope             shift and go to state 12

state 10

    (10) vars -> errorVars . VARS declare

    VARS            shift and go to state 13


state 11

    (7) opVars -> empty .

    }               reduce using rule 7 (opVars -> empty .)
    ID              reduce using rule 7 (opVars -> empty .)
    PRINT           reduce using rule 7 (opVars -> empty .)
    READ            reduce using rule 7 (opVars -> empty .)
    IF              reduce using rule 7 (opVars -> empty .)
    FOR             reduce using rule 7 (opVars -> empty .)
    WHILE           reduce using rule 7 (opVars -> empty .)
    MAIN            reduce using rule 7 (opVars -> empty .)
    FUNC            reduce using rule 7 (opVars -> empty .)
    RETURN          reduce using rule 7 (opVars -> empty .)


state 12

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope . opFunctions main } printTables
    (8) opFunctions -> . function opFunctions
    (9) opFunctions -> . empty
    (57) function -> . errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (182) empty -> .
    (59) errorFunction -> .

    MAIN            reduce using rule 182 (empty -> .)
    FUNC            reduce using rule 59 (errorFunction -> .)

    function                       shift and go to state 16
    errorFunction                  shift and go to state 17
    empty                          shift and go to state 15
    opFunctions                    shift and go to state 14

state 13

    (10) vars -> errorVars VARS . declare
    (36) declare -> . basicDeclare
    (37) declare -> . structDeclare
    (38) declare -> . dictDeclare
    (74) basicDeclare -> . saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (76) structDeclare -> . errorStructDeclare STRUCT struct ; cyDeclare
    (78) dictDeclare -> . errorDictDeclare DICT ID dict ; cyDeclare
    (3) saveType -> .
    (77) errorStructDeclare -> .
    (79) errorDictDeclare -> .

    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)
    STRUCT          reduce using rule 77 (errorStructDeclare -> .)
    DICT            reduce using rule 79 (errorDictDeclare -> .)

    dictDeclare                    shift and go to state 18
    saveType                       shift and go to state 19
    errorDictDeclare               shift and go to state 20
    structDeclare                  shift and go to state 21
    errorStructDeclare             shift and go to state 22
    basicDeclare                   shift and go to state 23
    declare                        shift and go to state 24

state 14

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions . main } printTables
    (18) main -> . errorMain MAIN saveCurrentTemps saveMain { opVars generateInitialQuadruple body } clearVarsTable
    (21) errorMain -> .

    MAIN            reduce using rule 21 (errorMain -> .)

    main                           shift and go to state 25
    errorMain                      shift and go to state 26

state 15

    (9) opFunctions -> empty .

    MAIN            reduce using rule 9 (opFunctions -> empty .)


state 16

    (8) opFunctions -> function . opFunctions
    (8) opFunctions -> . function opFunctions
    (9) opFunctions -> . empty
    (57) function -> . errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (182) empty -> .
    (59) errorFunction -> .

    MAIN            reduce using rule 182 (empty -> .)
    FUNC            reduce using rule 59 (errorFunction -> .)

    function                       shift and go to state 16
    errorFunction                  shift and go to state 17
    empty                          shift and go to state 15
    opFunctions                    shift and go to state 27

state 17

    (57) function -> errorFunction . saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (58) saveCurrentTemps -> .

    FUNC            reduce using rule 58 (saveCurrentTemps -> .)

    saveCurrentTemps               shift and go to state 28

state 18

    (38) declare -> dictDeclare .

    MAIN            reduce using rule 38 (declare -> dictDeclare .)
    FUNC            reduce using rule 38 (declare -> dictDeclare .)
    }               reduce using rule 38 (declare -> dictDeclare .)
    ID              reduce using rule 38 (declare -> dictDeclare .)
    PRINT           reduce using rule 38 (declare -> dictDeclare .)
    READ            reduce using rule 38 (declare -> dictDeclare .)
    IF              reduce using rule 38 (declare -> dictDeclare .)
    FOR             reduce using rule 38 (declare -> dictDeclare .)
    WHILE           reduce using rule 38 (declare -> dictDeclare .)
    RETURN          reduce using rule 38 (declare -> dictDeclare .)


state 19

    (74) basicDeclare -> saveType . type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    errorType                      shift and go to state 31
    type                           shift and go to state 33

state 20

    (78) dictDeclare -> errorDictDeclare . DICT ID dict ; cyDeclare

    DICT            shift and go to state 34


state 21

    (37) declare -> structDeclare .

    MAIN            reduce using rule 37 (declare -> structDeclare .)
    FUNC            reduce using rule 37 (declare -> structDeclare .)
    }               reduce using rule 37 (declare -> structDeclare .)
    ID              reduce using rule 37 (declare -> structDeclare .)
    PRINT           reduce using rule 37 (declare -> structDeclare .)
    READ            reduce using rule 37 (declare -> structDeclare .)
    IF              reduce using rule 37 (declare -> structDeclare .)
    FOR             reduce using rule 37 (declare -> structDeclare .)
    WHILE           reduce using rule 37 (declare -> structDeclare .)
    RETURN          reduce using rule 37 (declare -> structDeclare .)


state 22

    (76) structDeclare -> errorStructDeclare . STRUCT struct ; cyDeclare

    STRUCT          shift and go to state 35


state 23

    (36) declare -> basicDeclare .

    MAIN            reduce using rule 36 (declare -> basicDeclare .)
    FUNC            reduce using rule 36 (declare -> basicDeclare .)
    }               reduce using rule 36 (declare -> basicDeclare .)
    ID              reduce using rule 36 (declare -> basicDeclare .)
    PRINT           reduce using rule 36 (declare -> basicDeclare .)
    READ            reduce using rule 36 (declare -> basicDeclare .)
    IF              reduce using rule 36 (declare -> basicDeclare .)
    FOR             reduce using rule 36 (declare -> basicDeclare .)
    WHILE           reduce using rule 36 (declare -> basicDeclare .)
    RETURN          reduce using rule 36 (declare -> basicDeclare .)


state 24

    (10) vars -> errorVars VARS declare .

    }               reduce using rule 10 (vars -> errorVars VARS declare .)
    ID              reduce using rule 10 (vars -> errorVars VARS declare .)
    PRINT           reduce using rule 10 (vars -> errorVars VARS declare .)
    READ            reduce using rule 10 (vars -> errorVars VARS declare .)
    IF              reduce using rule 10 (vars -> errorVars VARS declare .)
    FOR             reduce using rule 10 (vars -> errorVars VARS declare .)
    WHILE           reduce using rule 10 (vars -> errorVars VARS declare .)
    MAIN            reduce using rule 10 (vars -> errorVars VARS declare .)
    FUNC            reduce using rule 10 (vars -> errorVars VARS declare .)
    RETURN          reduce using rule 10 (vars -> errorVars VARS declare .)


state 25

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main . } printTables

    }               shift and go to state 36


state 26

    (18) main -> errorMain . MAIN saveCurrentTemps saveMain { opVars generateInitialQuadruple body } clearVarsTable

    MAIN            shift and go to state 37


state 27

    (8) opFunctions -> function opFunctions .

    MAIN            reduce using rule 8 (opFunctions -> function opFunctions .)


state 28

    (57) function -> errorFunction saveCurrentTemps . FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable

    FUNC            shift and go to state 38


state 29

    (14) type -> FLOAT .

    PARFIN          reduce using rule 14 (type -> FLOAT .)
    ID              reduce using rule 14 (type -> FLOAT .)
    {               reduce using rule 14 (type -> FLOAT .)
    :               reduce using rule 14 (type -> FLOAT .)


state 30

    (15) type -> STRING .

    PARFIN          reduce using rule 15 (type -> STRING .)
    ID              reduce using rule 15 (type -> STRING .)
    {               reduce using rule 15 (type -> STRING .)
    :               reduce using rule 15 (type -> STRING .)


state 31

    (13) type -> errorType . INT

    INT             shift and go to state 39


state 32

    (16) type -> BOOL .

    PARFIN          reduce using rule 16 (type -> BOOL .)
    ID              reduce using rule 16 (type -> BOOL .)
    {               reduce using rule 16 (type -> BOOL .)
    :               reduce using rule 16 (type -> BOOL .)


state 33

    (74) basicDeclare -> saveType type . errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (75) errorBasicDeclare -> .

    ID              reduce using rule 75 (errorBasicDeclare -> .)

    errorBasicDeclare              shift and go to state 40

state 34

    (78) dictDeclare -> errorDictDeclare DICT . ID dict ; cyDeclare

    ID              shift and go to state 41


state 35

    (76) structDeclare -> errorStructDeclare STRUCT . struct ; cyDeclare
    (114) struct -> . structType ID saveID createDimension [ CTED saveDimensionSize ] optionalMatrix secondLap
    (118) structType -> . saveType type
    (119) structType -> . DICT dict
    (3) saveType -> .

    DICT            shift and go to state 44
    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)

    structType                     shift and go to state 42
    struct                         shift and go to state 43
    saveType                       shift and go to state 45

state 36

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } . printTables
    (183) printTables -> .

    $end            reduce using rule 183 (printTables -> .)

    printTables                    shift and go to state 46

state 37

    (18) main -> errorMain MAIN . saveCurrentTemps saveMain { opVars generateInitialQuadruple body } clearVarsTable
    (58) saveCurrentTemps -> .

    {               reduce using rule 58 (saveCurrentTemps -> .)

    saveCurrentTemps               shift and go to state 47

state 38

    (57) function -> errorFunction saveCurrentTemps FUNC . saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (3) saveType -> .

    ID              reduce using rule 3 (saveType -> .)

    saveType                       shift and go to state 48

state 39

    (13) type -> errorType INT .

    PARFIN          reduce using rule 13 (type -> errorType INT .)
    ID              reduce using rule 13 (type -> errorType INT .)
    {               reduce using rule 13 (type -> errorType INT .)
    :               reduce using rule 13 (type -> errorType INT .)


state 40

    (74) basicDeclare -> saveType type errorBasicDeclare . ID cyTypeParam saveID ; cyDeclare

    ID              shift and go to state 49


state 41

    (78) dictDeclare -> errorDictDeclare DICT ID . dict ; cyDeclare
    (129) dict -> . errorDict PARINI type : type PARFIN
    (130) errorDict -> .

    PARINI          reduce using rule 130 (errorDict -> .)

    dict                           shift and go to state 51
    errorDict                      shift and go to state 50

state 42

    (114) struct -> structType . ID saveID createDimension [ CTED saveDimensionSize ] optionalMatrix secondLap

    ID              shift and go to state 52


state 43

    (76) structDeclare -> errorStructDeclare STRUCT struct . ; cyDeclare

    ;               shift and go to state 53


state 44

    (119) structType -> DICT . dict
    (129) dict -> . errorDict PARINI type : type PARFIN
    (130) errorDict -> .

    PARINI          reduce using rule 130 (errorDict -> .)

    dict                           shift and go to state 54
    errorDict                      shift and go to state 50

state 45

    (118) structType -> saveType . type
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    errorType                      shift and go to state 31
    type                           shift and go to state 55

state 46

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables .

    $end            reduce using rule 1 (program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables .)


state 47

    (18) main -> errorMain MAIN saveCurrentTemps . saveMain { opVars generateInitialQuadruple body } clearVarsTable
    (20) saveMain -> .

    {               reduce using rule 20 (saveMain -> .)

    saveMain                       shift and go to state 56

state 48

    (57) function -> errorFunction saveCurrentTemps FUNC saveType . ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable

    ID              shift and go to state 57


state 49

    (74) basicDeclare -> saveType type errorBasicDeclare ID . cyTypeParam saveID ; cyDeclare
    (53) cyTypeParam -> . , saveTypeParam saveID ID cyTypeParam
    (54) cyTypeParam -> . empty
    (182) empty -> .

    ,               shift and go to state 58
    ;               reduce using rule 182 (empty -> .)

    empty                          shift and go to state 59
    cyTypeParam                    shift and go to state 60

state 50

    (129) dict -> errorDict . PARINI type : type PARFIN

    PARINI          shift and go to state 61


state 51

    (78) dictDeclare -> errorDictDeclare DICT ID dict . ; cyDeclare

    ;               shift and go to state 62


state 52

    (114) struct -> structType ID . saveID createDimension [ CTED saveDimensionSize ] optionalMatrix secondLap
    (11) saveID -> .

    [               reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 63

state 53

    (76) structDeclare -> errorStructDeclare STRUCT struct ; . cyDeclare
    (80) cyDeclare -> . declare
    (81) cyDeclare -> . empty
    (36) declare -> . basicDeclare
    (37) declare -> . structDeclare
    (38) declare -> . dictDeclare
    (182) empty -> .
    (74) basicDeclare -> . saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (76) structDeclare -> . errorStructDeclare STRUCT struct ; cyDeclare
    (78) dictDeclare -> . errorDictDeclare DICT ID dict ; cyDeclare
    (3) saveType -> .
    (77) errorStructDeclare -> .
    (79) errorDictDeclare -> .

    MAIN            reduce using rule 182 (empty -> .)
    FUNC            reduce using rule 182 (empty -> .)
    }               reduce using rule 182 (empty -> .)
    ID              reduce using rule 182 (empty -> .)
    PRINT           reduce using rule 182 (empty -> .)
    READ            reduce using rule 182 (empty -> .)
    IF              reduce using rule 182 (empty -> .)
    FOR             reduce using rule 182 (empty -> .)
    WHILE           reduce using rule 182 (empty -> .)
    RETURN          reduce using rule 182 (empty -> .)
    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)
    STRUCT          reduce using rule 77 (errorStructDeclare -> .)
    DICT            reduce using rule 79 (errorDictDeclare -> .)

    dictDeclare                    shift and go to state 18
    cyDeclare                      shift and go to state 64
    saveType                       shift and go to state 19
    errorDictDeclare               shift and go to state 20
    structDeclare                  shift and go to state 21
    basicDeclare                   shift and go to state 23
    declare                        shift and go to state 65
    empty                          shift and go to state 66
    errorStructDeclare             shift and go to state 22

state 54

    (119) structType -> DICT dict .

    ID              reduce using rule 119 (structType -> DICT dict .)


state 55

    (118) structType -> saveType type .

    ID              reduce using rule 118 (structType -> saveType type .)


state 56

    (18) main -> errorMain MAIN saveCurrentTemps saveMain . { opVars generateInitialQuadruple body } clearVarsTable

    {               shift and go to state 67


state 57

    (57) function -> errorFunction saveCurrentTemps FUNC saveType ID . saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (4) saveProc -> .

    PARINI          reduce using rule 4 (saveProc -> .)

    saveProc                       shift and go to state 68

state 58

    (53) cyTypeParam -> , . saveTypeParam saveID ID cyTypeParam
    (55) saveTypeParam -> .

    ID              reduce using rule 55 (saveTypeParam -> .)

    saveTypeParam                  shift and go to state 69

state 59

    (54) cyTypeParam -> empty .

    ;               reduce using rule 54 (cyTypeParam -> empty .)
    PARFIN          reduce using rule 54 (cyTypeParam -> empty .)


state 60

    (74) basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam . saveID ; cyDeclare
    (11) saveID -> .

    ;               reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 70

state 61

    (129) dict -> errorDict PARINI . type : type PARFIN
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    errorType                      shift and go to state 31
    type                           shift and go to state 71

state 62

    (78) dictDeclare -> errorDictDeclare DICT ID dict ; . cyDeclare
    (80) cyDeclare -> . declare
    (81) cyDeclare -> . empty
    (36) declare -> . basicDeclare
    (37) declare -> . structDeclare
    (38) declare -> . dictDeclare
    (182) empty -> .
    (74) basicDeclare -> . saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (76) structDeclare -> . errorStructDeclare STRUCT struct ; cyDeclare
    (78) dictDeclare -> . errorDictDeclare DICT ID dict ; cyDeclare
    (3) saveType -> .
    (77) errorStructDeclare -> .
    (79) errorDictDeclare -> .

    MAIN            reduce using rule 182 (empty -> .)
    FUNC            reduce using rule 182 (empty -> .)
    }               reduce using rule 182 (empty -> .)
    ID              reduce using rule 182 (empty -> .)
    PRINT           reduce using rule 182 (empty -> .)
    READ            reduce using rule 182 (empty -> .)
    IF              reduce using rule 182 (empty -> .)
    FOR             reduce using rule 182 (empty -> .)
    WHILE           reduce using rule 182 (empty -> .)
    RETURN          reduce using rule 182 (empty -> .)
    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)
    STRUCT          reduce using rule 77 (errorStructDeclare -> .)
    DICT            reduce using rule 79 (errorDictDeclare -> .)

    dictDeclare                    shift and go to state 18
    cyDeclare                      shift and go to state 72
    saveType                       shift and go to state 19
    structDeclare                  shift and go to state 21
    errorDictDeclare               shift and go to state 20
    errorStructDeclare             shift and go to state 22
    basicDeclare                   shift and go to state 23
    declare                        shift and go to state 65
    empty                          shift and go to state 66

state 63

    (114) struct -> structType ID saveID . createDimension [ CTED saveDimensionSize ] optionalMatrix secondLap
    (117) createDimension -> .

    [               reduce using rule 117 (createDimension -> .)

    createDimension                shift and go to state 73

state 64

    (76) structDeclare -> errorStructDeclare STRUCT struct ; cyDeclare .

    MAIN            reduce using rule 76 (structDeclare -> errorStructDeclare STRUCT struct ; cyDeclare .)
    FUNC            reduce using rule 76 (structDeclare -> errorStructDeclare STRUCT struct ; cyDeclare .)
    }               reduce using rule 76 (structDeclare -> errorStructDeclare STRUCT struct ; cyDeclare .)
    ID              reduce using rule 76 (structDeclare -> errorStructDeclare STRUCT struct ; cyDeclare .)
    PRINT           reduce using rule 76 (structDeclare -> errorStructDeclare STRUCT struct ; cyDeclare .)
    READ            reduce using rule 76 (structDeclare -> errorStructDeclare STRUCT struct ; cyDeclare .)
    IF              reduce using rule 76 (structDeclare -> errorStructDeclare STRUCT struct ; cyDeclare .)
    FOR             reduce using rule 76 (structDeclare -> errorStructDeclare STRUCT struct ; cyDeclare .)
    WHILE           reduce using rule 76 (structDeclare -> errorStructDeclare STRUCT struct ; cyDeclare .)
    RETURN          reduce using rule 76 (structDeclare -> errorStructDeclare STRUCT struct ; cyDeclare .)


state 65

    (80) cyDeclare -> declare .

    MAIN            reduce using rule 80 (cyDeclare -> declare .)
    FUNC            reduce using rule 80 (cyDeclare -> declare .)
    }               reduce using rule 80 (cyDeclare -> declare .)
    ID              reduce using rule 80 (cyDeclare -> declare .)
    PRINT           reduce using rule 80 (cyDeclare -> declare .)
    READ            reduce using rule 80 (cyDeclare -> declare .)
    IF              reduce using rule 80 (cyDeclare -> declare .)
    FOR             reduce using rule 80 (cyDeclare -> declare .)
    WHILE           reduce using rule 80 (cyDeclare -> declare .)
    RETURN          reduce using rule 80 (cyDeclare -> declare .)


state 66

    (81) cyDeclare -> empty .

    MAIN            reduce using rule 81 (cyDeclare -> empty .)
    FUNC            reduce using rule 81 (cyDeclare -> empty .)
    }               reduce using rule 81 (cyDeclare -> empty .)
    ID              reduce using rule 81 (cyDeclare -> empty .)
    PRINT           reduce using rule 81 (cyDeclare -> empty .)
    READ            reduce using rule 81 (cyDeclare -> empty .)
    IF              reduce using rule 81 (cyDeclare -> empty .)
    FOR             reduce using rule 81 (cyDeclare -> empty .)
    WHILE           reduce using rule 81 (cyDeclare -> empty .)
    RETURN          reduce using rule 81 (cyDeclare -> empty .)


state 67

    (18) main -> errorMain MAIN saveCurrentTemps saveMain { . opVars generateInitialQuadruple body } clearVarsTable
    (6) opVars -> . vars
    (7) opVars -> . empty
    (10) vars -> . errorVars VARS declare
    (182) empty -> .
    (12) errorVars -> .

    }               reduce using rule 182 (empty -> .)
    ID              reduce using rule 182 (empty -> .)
    PRINT           reduce using rule 182 (empty -> .)
    READ            reduce using rule 182 (empty -> .)
    IF              reduce using rule 182 (empty -> .)
    FOR             reduce using rule 182 (empty -> .)
    WHILE           reduce using rule 182 (empty -> .)
    VARS            reduce using rule 12 (errorVars -> .)

    vars                           shift and go to state 8
    opVars                         shift and go to state 74
    errorVars                      shift and go to state 10
    empty                          shift and go to state 11

state 68

    (57) function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc . flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (66) flagParameters -> .

    PARINI          reduce using rule 66 (flagParameters -> .)

    flagParameters                 shift and go to state 75

state 69

    (53) cyTypeParam -> , saveTypeParam . saveID ID cyTypeParam
    (11) saveID -> .

    ID              reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 76

state 70

    (74) basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID . ; cyDeclare

    ;               shift and go to state 77


state 71

    (129) dict -> errorDict PARINI type . : type PARFIN

    :               shift and go to state 78


state 72

    (78) dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .

    MAIN            reduce using rule 78 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    FUNC            reduce using rule 78 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    }               reduce using rule 78 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    ID              reduce using rule 78 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    PRINT           reduce using rule 78 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    READ            reduce using rule 78 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    IF              reduce using rule 78 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    FOR             reduce using rule 78 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    WHILE           reduce using rule 78 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    RETURN          reduce using rule 78 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)


state 73

    (114) struct -> structType ID saveID createDimension . [ CTED saveDimensionSize ] optionalMatrix secondLap

    [               shift and go to state 79


state 74

    (18) main -> errorMain MAIN saveCurrentTemps saveMain { opVars . generateInitialQuadruple body } clearVarsTable
    (19) generateInitialQuadruple -> .

    }               reduce using rule 19 (generateInitialQuadruple -> .)
    ID              reduce using rule 19 (generateInitialQuadruple -> .)
    PRINT           reduce using rule 19 (generateInitialQuadruple -> .)
    READ            reduce using rule 19 (generateInitialQuadruple -> .)
    IF              reduce using rule 19 (generateInitialQuadruple -> .)
    FOR             reduce using rule 19 (generateInitialQuadruple -> .)
    WHILE           reduce using rule 19 (generateInitialQuadruple -> .)

    generateInitialQuadruple       shift and go to state 80

state 75

    (57) function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters . PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable

    PARINI          shift and go to state 81


state 76

    (53) cyTypeParam -> , saveTypeParam saveID . ID cyTypeParam

    ID              shift and go to state 82


state 77

    (74) basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; . cyDeclare
    (80) cyDeclare -> . declare
    (81) cyDeclare -> . empty
    (36) declare -> . basicDeclare
    (37) declare -> . structDeclare
    (38) declare -> . dictDeclare
    (182) empty -> .
    (74) basicDeclare -> . saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (76) structDeclare -> . errorStructDeclare STRUCT struct ; cyDeclare
    (78) dictDeclare -> . errorDictDeclare DICT ID dict ; cyDeclare
    (3) saveType -> .
    (77) errorStructDeclare -> .
    (79) errorDictDeclare -> .

    MAIN            reduce using rule 182 (empty -> .)
    FUNC            reduce using rule 182 (empty -> .)
    }               reduce using rule 182 (empty -> .)
    ID              reduce using rule 182 (empty -> .)
    PRINT           reduce using rule 182 (empty -> .)
    READ            reduce using rule 182 (empty -> .)
    IF              reduce using rule 182 (empty -> .)
    FOR             reduce using rule 182 (empty -> .)
    WHILE           reduce using rule 182 (empty -> .)
    RETURN          reduce using rule 182 (empty -> .)
    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)
    STRUCT          reduce using rule 77 (errorStructDeclare -> .)
    DICT            reduce using rule 79 (errorDictDeclare -> .)

    dictDeclare                    shift and go to state 18
    cyDeclare                      shift and go to state 83
    basicDeclare                   shift and go to state 23
    saveType                       shift and go to state 19
    errorDictDeclare               shift and go to state 20
    empty                          shift and go to state 66
    structDeclare                  shift and go to state 21
    errorStructDeclare             shift and go to state 22
    declare                        shift and go to state 65

state 78

    (129) dict -> errorDict PARINI type : . type PARFIN
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    errorType                      shift and go to state 31
    type                           shift and go to state 84

state 79

    (114) struct -> structType ID saveID createDimension [ . CTED saveDimensionSize ] optionalMatrix secondLap

    CTED            shift and go to state 85


state 80

    (18) main -> errorMain MAIN saveCurrentTemps saveMain { opVars generateInitialQuadruple . body } clearVarsTable
    (82) body -> . errorBody cyInstruction
    (83) body -> . empty
    (84) errorBody -> .
    (182) empty -> .

    ID              reduce using rule 84 (errorBody -> .)
    PRINT           reduce using rule 84 (errorBody -> .)
    READ            reduce using rule 84 (errorBody -> .)
    IF              reduce using rule 84 (errorBody -> .)
    FOR             reduce using rule 84 (errorBody -> .)
    WHILE           reduce using rule 84 (errorBody -> .)
    }               reduce using rule 182 (empty -> .)

    body                           shift and go to state 86
    errorBody                      shift and go to state 87
    empty                          shift and go to state 88

state 81

    (57) function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI . opParameters PARFIN flagParameters opReturns } clearVarsTable
    (64) opParameters -> . param saveParamToDirProc errorOpParameters
    (65) opParameters -> . empty
    (49) param -> . saveType type errorParam ID cyTypeParam cyParam
    (182) empty -> .
    (3) saveType -> .

    PARFIN          reduce using rule 182 (empty -> .)
    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)

    opParameters                   shift and go to state 89
    param                          shift and go to state 90
    saveType                       shift and go to state 91
    empty                          shift and go to state 92

state 82

    (53) cyTypeParam -> , saveTypeParam saveID ID . cyTypeParam
    (53) cyTypeParam -> . , saveTypeParam saveID ID cyTypeParam
    (54) cyTypeParam -> . empty
    (182) empty -> .

    ,               shift and go to state 58
    ;               reduce using rule 182 (empty -> .)
    PARFIN          reduce using rule 182 (empty -> .)

    cyTypeParam                    shift and go to state 93
    empty                          shift and go to state 59

state 83

    (74) basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .

    MAIN            reduce using rule 74 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    FUNC            reduce using rule 74 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    }               reduce using rule 74 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    ID              reduce using rule 74 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    PRINT           reduce using rule 74 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    READ            reduce using rule 74 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    IF              reduce using rule 74 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    FOR             reduce using rule 74 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    WHILE           reduce using rule 74 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    RETURN          reduce using rule 74 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)


state 84

    (129) dict -> errorDict PARINI type : type . PARFIN

    PARFIN          shift and go to state 94


state 85

    (114) struct -> structType ID saveID createDimension [ CTED . saveDimensionSize ] optionalMatrix secondLap
    (116) saveDimensionSize -> .

    ]               reduce using rule 116 (saveDimensionSize -> .)

    saveDimensionSize              shift and go to state 95

state 86

    (18) main -> errorMain MAIN saveCurrentTemps saveMain { opVars generateInitialQuadruple body . } clearVarsTable

    }               shift and go to state 96


state 87

    (82) body -> errorBody . cyInstruction
    (85) cyInstruction -> . instr body
    (22) instr -> . basicStatements ;
    (23) instr -> . condition
    (24) instr -> . cycle
    (25) basicStatements -> . assign
    (26) basicStatements -> . funcCall
    (27) basicStatements -> . print
    (28) basicStatements -> . read
    (124) condition -> . errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso
    (86) cycle -> . forCycle
    (87) cycle -> . whileCycle
    (98) assign -> . ID saveVariable errorAssign assignOptions performAssign
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams
    (29) print -> . PRINT PARINI exp performPrint cyPrint PARFIN
    (32) read -> . READ PARINI ID saveVariable performRead cyRead PARFIN
    (125) errorCondition -> .
    (92) forCycle -> . errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign
    (88) whileCycle -> . errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile
    (97) errorForCycle -> .
    (91) errorWhileCycle -> .

    ID              shift and go to state 103
    PRINT           shift and go to state 100
    READ            shift and go to state 98
    IF              reduce using rule 125 (errorCondition -> .)
    FOR             reduce using rule 97 (errorForCycle -> .)
    WHILE           reduce using rule 91 (errorWhileCycle -> .)

    instr                          shift and go to state 97
    whileCycle                     shift and go to state 99
    forCycle                       shift and go to state 101
    errorWhileCycle                shift and go to state 102
    condition                      shift and go to state 110
    print                          shift and go to state 104
    read                           shift and go to state 106
    basicStatements                shift and go to state 107
    errorForCycle                  shift and go to state 108
    cyInstruction                  shift and go to state 109
    cycle                          shift and go to state 105
    funcCall                       shift and go to state 111
    errorCondition                 shift and go to state 112
    assign                         shift and go to state 113

state 88

    (83) body -> empty .

    }               reduce using rule 83 (body -> empty .)
    RETURN          reduce using rule 83 (body -> empty .)


state 89

    (57) function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters . PARFIN flagParameters opReturns } clearVarsTable

    PARFIN          shift and go to state 114


state 90

    (64) opParameters -> param . saveParamToDirProc errorOpParameters
    (67) saveParamToDirProc -> .

    PARFIN          reduce using rule 67 (saveParamToDirProc -> .)

    saveParamToDirProc             shift and go to state 115

state 91

    (49) param -> saveType . type errorParam ID cyTypeParam cyParam
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    type                           shift and go to state 116
    errorType                      shift and go to state 31

state 92

    (65) opParameters -> empty .

    PARFIN          reduce using rule 65 (opParameters -> empty .)


state 93

    (53) cyTypeParam -> , saveTypeParam saveID ID cyTypeParam .

    ;               reduce using rule 53 (cyTypeParam -> , saveTypeParam saveID ID cyTypeParam .)
    PARFIN          reduce using rule 53 (cyTypeParam -> , saveTypeParam saveID ID cyTypeParam .)


state 94

    (129) dict -> errorDict PARINI type : type PARFIN .

    ;               reduce using rule 129 (dict -> errorDict PARINI type : type PARFIN .)
    ID              reduce using rule 129 (dict -> errorDict PARINI type : type PARFIN .)


state 95

    (114) struct -> structType ID saveID createDimension [ CTED saveDimensionSize . ] optionalMatrix secondLap

    ]               shift and go to state 117


state 96

    (18) main -> errorMain MAIN saveCurrentTemps saveMain { opVars generateInitialQuadruple body } . clearVarsTable
    (60) clearVarsTable -> .

    }               reduce using rule 60 (clearVarsTable -> .)

    clearVarsTable                 shift and go to state 118

state 97

    (85) cyInstruction -> instr . body
    (82) body -> . errorBody cyInstruction
    (83) body -> . empty
    (84) errorBody -> .
    (182) empty -> .

    ID              reduce using rule 84 (errorBody -> .)
    PRINT           reduce using rule 84 (errorBody -> .)
    READ            reduce using rule 84 (errorBody -> .)
    IF              reduce using rule 84 (errorBody -> .)
    FOR             reduce using rule 84 (errorBody -> .)
    WHILE           reduce using rule 84 (errorBody -> .)
    }               reduce using rule 182 (empty -> .)
    RETURN          reduce using rule 182 (empty -> .)

    body                           shift and go to state 119
    errorBody                      shift and go to state 87
    empty                          shift and go to state 88

state 98

    (32) read -> READ . PARINI ID saveVariable performRead cyRead PARFIN

    PARINI          shift and go to state 120


state 99

    (87) cycle -> whileCycle .

    ID              reduce using rule 87 (cycle -> whileCycle .)
    PRINT           reduce using rule 87 (cycle -> whileCycle .)
    READ            reduce using rule 87 (cycle -> whileCycle .)
    IF              reduce using rule 87 (cycle -> whileCycle .)
    FOR             reduce using rule 87 (cycle -> whileCycle .)
    WHILE           reduce using rule 87 (cycle -> whileCycle .)
    }               reduce using rule 87 (cycle -> whileCycle .)
    RETURN          reduce using rule 87 (cycle -> whileCycle .)


state 100

    (29) print -> PRINT . PARINI exp performPrint cyPrint PARFIN

    PARINI          shift and go to state 121


state 101

    (86) cycle -> forCycle .

    ID              reduce using rule 86 (cycle -> forCycle .)
    PRINT           reduce using rule 86 (cycle -> forCycle .)
    READ            reduce using rule 86 (cycle -> forCycle .)
    IF              reduce using rule 86 (cycle -> forCycle .)
    FOR             reduce using rule 86 (cycle -> forCycle .)
    WHILE           reduce using rule 86 (cycle -> forCycle .)
    }               reduce using rule 86 (cycle -> forCycle .)
    RETURN          reduce using rule 86 (cycle -> forCycle .)


state 102

    (88) whileCycle -> errorWhileCycle . WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile

    WHILE           shift and go to state 122


state 103

    (98) assign -> ID . saveVariable errorAssign assignOptions performAssign
    (106) funcCall -> ID . checkFunction PARINI opParamCall PARFIN checkNumParams
    (191) saveVariable -> .
    (108) checkFunction -> .

    ASGN            reduce using rule 191 (saveVariable -> .)
    [               reduce using rule 191 (saveVariable -> .)
    PARINI          reduce using rule 108 (checkFunction -> .)

    saveVariable                   shift and go to state 123
    checkFunction                  shift and go to state 124

state 104

    (27) basicStatements -> print .

    ;               reduce using rule 27 (basicStatements -> print .)


state 105

    (24) instr -> cycle .

    ID              reduce using rule 24 (instr -> cycle .)
    PRINT           reduce using rule 24 (instr -> cycle .)
    READ            reduce using rule 24 (instr -> cycle .)
    IF              reduce using rule 24 (instr -> cycle .)
    FOR             reduce using rule 24 (instr -> cycle .)
    WHILE           reduce using rule 24 (instr -> cycle .)
    }               reduce using rule 24 (instr -> cycle .)
    RETURN          reduce using rule 24 (instr -> cycle .)


state 106

    (28) basicStatements -> read .

    ;               reduce using rule 28 (basicStatements -> read .)


state 107

    (22) instr -> basicStatements . ;

    ;               shift and go to state 125


state 108

    (92) forCycle -> errorForCycle . FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign

    FOR             shift and go to state 126


state 109

    (82) body -> errorBody cyInstruction .

    }               reduce using rule 82 (body -> errorBody cyInstruction .)
    RETURN          reduce using rule 82 (body -> errorBody cyInstruction .)


state 110

    (23) instr -> condition .

    ID              reduce using rule 23 (instr -> condition .)
    PRINT           reduce using rule 23 (instr -> condition .)
    READ            reduce using rule 23 (instr -> condition .)
    IF              reduce using rule 23 (instr -> condition .)
    FOR             reduce using rule 23 (instr -> condition .)
    WHILE           reduce using rule 23 (instr -> condition .)
    }               reduce using rule 23 (instr -> condition .)
    RETURN          reduce using rule 23 (instr -> condition .)


state 111

    (26) basicStatements -> funcCall .

    ;               reduce using rule 26 (basicStatements -> funcCall .)


state 112

    (124) condition -> errorCondition . IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso

    IF              shift and go to state 127


state 113

    (25) basicStatements -> assign .

    ;               reduce using rule 25 (basicStatements -> assign .)


state 114

    (57) function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN . flagParameters opReturns } clearVarsTable
    (66) flagParameters -> .

    {               reduce using rule 66 (flagParameters -> .)
    RETURNS         reduce using rule 66 (flagParameters -> .)

    flagParameters                 shift and go to state 128

state 115

    (64) opParameters -> param saveParamToDirProc . errorOpParameters
    (68) errorOpParameters -> .

    PARFIN          reduce using rule 68 (errorOpParameters -> .)

    errorOpParameters              shift and go to state 129

state 116

    (49) param -> saveType type . errorParam ID cyTypeParam cyParam
    (50) errorParam -> .

    ID              reduce using rule 50 (errorParam -> .)

    errorParam                     shift and go to state 130

state 117

    (114) struct -> structType ID saveID createDimension [ CTED saveDimensionSize ] . optionalMatrix secondLap
    (120) optionalMatrix -> . createSecondDimension [ CTED saveSecondDimensionSize ]
    (121) optionalMatrix -> . empty
    (123) createSecondDimension -> .
    (182) empty -> .

    [               reduce using rule 123 (createSecondDimension -> .)
    ;               reduce using rule 182 (empty -> .)

    optionalMatrix                 shift and go to state 131
    createSecondDimension          shift and go to state 132
    empty                          shift and go to state 133

state 118

    (18) main -> errorMain MAIN saveCurrentTemps saveMain { opVars generateInitialQuadruple body } clearVarsTable .

    }               reduce using rule 18 (main -> errorMain MAIN saveCurrentTemps saveMain { opVars generateInitialQuadruple body } clearVarsTable .)


state 119

    (85) cyInstruction -> instr body .

    }               reduce using rule 85 (cyInstruction -> instr body .)
    RETURN          reduce using rule 85 (cyInstruction -> instr body .)


state 120

    (32) read -> READ PARINI . ID saveVariable performRead cyRead PARFIN

    ID              shift and go to state 134


state 121

    (29) print -> PRINT PARINI . exp performPrint cyPrint PARFIN
    (145) exp -> . term performAddSub errorCyExp cyExp
    (150) term -> . fact performMulDiv cyTerm
    (155) fact -> . CTES saveConstantString
    (156) fact -> . cte
    (157) fact -> . funcCall
    (158) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (159) fact -> . ID saveVariable opAccess errorOpAccess
    (178) cte -> . CTED saveConstantInt
    (179) cte -> . CTEF saveConstantFloat
    (180) cte -> . TRUE saveConstantBool
    (181) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 145
    fact                           shift and go to state 146

state 122

    (88) whileCycle -> errorWhileCycle WHILE . saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile
    (90) saveReturn -> .

    PARINI          reduce using rule 90 (saveReturn -> .)

    saveReturn                     shift and go to state 147

state 123

    (98) assign -> ID saveVariable . errorAssign assignOptions performAssign
    (99) errorAssign -> .

    ASGN            reduce using rule 99 (errorAssign -> .)
    [               reduce using rule 99 (errorAssign -> .)

    errorAssign                    shift and go to state 148

state 124

    (106) funcCall -> ID checkFunction . PARINI opParamCall PARFIN checkNumParams

    PARINI          shift and go to state 149


state 125

    (22) instr -> basicStatements ; .

    ID              reduce using rule 22 (instr -> basicStatements ; .)
    PRINT           reduce using rule 22 (instr -> basicStatements ; .)
    READ            reduce using rule 22 (instr -> basicStatements ; .)
    IF              reduce using rule 22 (instr -> basicStatements ; .)
    FOR             reduce using rule 22 (instr -> basicStatements ; .)
    WHILE           reduce using rule 22 (instr -> basicStatements ; .)
    }               reduce using rule 22 (instr -> basicStatements ; .)
    RETURN          reduce using rule 22 (instr -> basicStatements ; .)


state 126

    (92) forCycle -> errorForCycle FOR . PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign

    PARINI          shift and go to state 150


state 127

    (124) condition -> errorCondition IF . PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso

    PARINI          shift and go to state 151


state 128

    (57) function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters . opReturns } clearVarsTable
    (69) opReturns -> . errorOpReturns RETURNS type saveReturnType { opVars saveQuadruple body return
    (70) opReturns -> . { opVars saveQuadruple body
    (73) errorOpReturns -> .

    {               shift and go to state 154
    RETURNS         reduce using rule 73 (errorOpReturns -> .)

    errorOpReturns                 shift and go to state 153
    opReturns                      shift and go to state 152

state 129

    (64) opParameters -> param saveParamToDirProc errorOpParameters .

    PARFIN          reduce using rule 64 (opParameters -> param saveParamToDirProc errorOpParameters .)


state 130

    (49) param -> saveType type errorParam . ID cyTypeParam cyParam

    ID              shift and go to state 155


state 131

    (114) struct -> structType ID saveID createDimension [ CTED saveDimensionSize ] optionalMatrix . secondLap
    (115) secondLap -> .

    ;               reduce using rule 115 (secondLap -> .)

    secondLap                      shift and go to state 156

state 132

    (120) optionalMatrix -> createSecondDimension . [ CTED saveSecondDimensionSize ]

    [               shift and go to state 157


state 133

    (121) optionalMatrix -> empty .

    ;               reduce using rule 121 (optionalMatrix -> empty .)


state 134

    (32) read -> READ PARINI ID . saveVariable performRead cyRead PARFIN
    (191) saveVariable -> .

    ,               reduce using rule 191 (saveVariable -> .)
    PARFIN          reduce using rule 191 (saveVariable -> .)

    saveVariable                   shift and go to state 158

state 135

    (180) cte -> TRUE . saveConstantBool
    (189) saveConstantBool -> .

    MULT            reduce using rule 189 (saveConstantBool -> .)
    DIV             reduce using rule 189 (saveConstantBool -> .)
    RES             reduce using rule 189 (saveConstantBool -> .)
    PLUS            reduce using rule 189 (saveConstantBool -> .)
    MINUS           reduce using rule 189 (saveConstantBool -> .)
    ,               reduce using rule 189 (saveConstantBool -> .)
    PARFIN          reduce using rule 189 (saveConstantBool -> .)
    EQ              reduce using rule 189 (saveConstantBool -> .)
    DIF             reduce using rule 189 (saveConstantBool -> .)
    LTOEQ           reduce using rule 189 (saveConstantBool -> .)
    GTOEQ           reduce using rule 189 (saveConstantBool -> .)
    GT              reduce using rule 189 (saveConstantBool -> .)
    LT              reduce using rule 189 (saveConstantBool -> .)
    AND             reduce using rule 189 (saveConstantBool -> .)
    OR              reduce using rule 189 (saveConstantBool -> .)
    :               reduce using rule 189 (saveConstantBool -> .)
    ;               reduce using rule 189 (saveConstantBool -> .)
    ]               reduce using rule 189 (saveConstantBool -> .)

    saveConstantBool               shift and go to state 159

state 136

    (158) fact -> PARINI . putFondo expresion PARFIN takeFondo
    (193) putFondo -> .

    CTES            reduce using rule 193 (putFondo -> .)
    PARINI          reduce using rule 193 (putFondo -> .)
    ID              reduce using rule 193 (putFondo -> .)
    CTED            reduce using rule 193 (putFondo -> .)
    CTEF            reduce using rule 193 (putFondo -> .)
    TRUE            reduce using rule 193 (putFondo -> .)
    FALSE           reduce using rule 193 (putFondo -> .)

    putFondo                       shift and go to state 160

state 137

    (178) cte -> CTED . saveConstantInt
    (187) saveConstantInt -> .

    MULT            reduce using rule 187 (saveConstantInt -> .)
    DIV             reduce using rule 187 (saveConstantInt -> .)
    RES             reduce using rule 187 (saveConstantInt -> .)
    PLUS            reduce using rule 187 (saveConstantInt -> .)
    MINUS           reduce using rule 187 (saveConstantInt -> .)
    ,               reduce using rule 187 (saveConstantInt -> .)
    PARFIN          reduce using rule 187 (saveConstantInt -> .)
    EQ              reduce using rule 187 (saveConstantInt -> .)
    DIF             reduce using rule 187 (saveConstantInt -> .)
    LTOEQ           reduce using rule 187 (saveConstantInt -> .)
    GTOEQ           reduce using rule 187 (saveConstantInt -> .)
    GT              reduce using rule 187 (saveConstantInt -> .)
    LT              reduce using rule 187 (saveConstantInt -> .)
    AND             reduce using rule 187 (saveConstantInt -> .)
    OR              reduce using rule 187 (saveConstantInt -> .)
    :               reduce using rule 187 (saveConstantInt -> .)
    ;               reduce using rule 187 (saveConstantInt -> .)
    ]               reduce using rule 187 (saveConstantInt -> .)

    saveConstantInt                shift and go to state 161

state 138

    (159) fact -> ID . saveVariable opAccess errorOpAccess
    (106) funcCall -> ID . checkFunction PARINI opParamCall PARFIN checkNumParams
    (191) saveVariable -> .
    (108) checkFunction -> .

    .               reduce using rule 191 (saveVariable -> .)
    [               reduce using rule 191 (saveVariable -> .)
    MULT            reduce using rule 191 (saveVariable -> .)
    DIV             reduce using rule 191 (saveVariable -> .)
    RES             reduce using rule 191 (saveVariable -> .)
    PLUS            reduce using rule 191 (saveVariable -> .)
    MINUS           reduce using rule 191 (saveVariable -> .)
    ,               reduce using rule 191 (saveVariable -> .)
    PARFIN          reduce using rule 191 (saveVariable -> .)
    EQ              reduce using rule 191 (saveVariable -> .)
    DIF             reduce using rule 191 (saveVariable -> .)
    LTOEQ           reduce using rule 191 (saveVariable -> .)
    GTOEQ           reduce using rule 191 (saveVariable -> .)
    GT              reduce using rule 191 (saveVariable -> .)
    LT              reduce using rule 191 (saveVariable -> .)
    AND             reduce using rule 191 (saveVariable -> .)
    OR              reduce using rule 191 (saveVariable -> .)
    ;               reduce using rule 191 (saveVariable -> .)
    ]               reduce using rule 191 (saveVariable -> .)
    PARINI          reduce using rule 108 (checkFunction -> .)

    saveVariable                   shift and go to state 162
    checkFunction                  shift and go to state 124

state 139

    (155) fact -> CTES . saveConstantString
    (190) saveConstantString -> .

    MULT            reduce using rule 190 (saveConstantString -> .)
    DIV             reduce using rule 190 (saveConstantString -> .)
    RES             reduce using rule 190 (saveConstantString -> .)
    PLUS            reduce using rule 190 (saveConstantString -> .)
    MINUS           reduce using rule 190 (saveConstantString -> .)
    ,               reduce using rule 190 (saveConstantString -> .)
    PARFIN          reduce using rule 190 (saveConstantString -> .)
    EQ              reduce using rule 190 (saveConstantString -> .)
    DIF             reduce using rule 190 (saveConstantString -> .)
    LTOEQ           reduce using rule 190 (saveConstantString -> .)
    GTOEQ           reduce using rule 190 (saveConstantString -> .)
    GT              reduce using rule 190 (saveConstantString -> .)
    LT              reduce using rule 190 (saveConstantString -> .)
    AND             reduce using rule 190 (saveConstantString -> .)
    OR              reduce using rule 190 (saveConstantString -> .)
    ;               reduce using rule 190 (saveConstantString -> .)
    ]               reduce using rule 190 (saveConstantString -> .)

    saveConstantString             shift and go to state 163

state 140

    (145) exp -> term . performAddSub errorCyExp cyExp
    (197) performAddSub -> .

    PLUS            reduce using rule 197 (performAddSub -> .)
    MINUS           reduce using rule 197 (performAddSub -> .)
    ,               reduce using rule 197 (performAddSub -> .)
    PARFIN          reduce using rule 197 (performAddSub -> .)
    EQ              reduce using rule 197 (performAddSub -> .)
    DIF             reduce using rule 197 (performAddSub -> .)
    LTOEQ           reduce using rule 197 (performAddSub -> .)
    GTOEQ           reduce using rule 197 (performAddSub -> .)
    GT              reduce using rule 197 (performAddSub -> .)
    LT              reduce using rule 197 (performAddSub -> .)
    AND             reduce using rule 197 (performAddSub -> .)
    OR              reduce using rule 197 (performAddSub -> .)
    ;               reduce using rule 197 (performAddSub -> .)
    ]               reduce using rule 197 (performAddSub -> .)

    performAddSub                  shift and go to state 164

state 141

    (181) cte -> FALSE . saveConstantBool
    (189) saveConstantBool -> .

    MULT            reduce using rule 189 (saveConstantBool -> .)
    DIV             reduce using rule 189 (saveConstantBool -> .)
    RES             reduce using rule 189 (saveConstantBool -> .)
    PLUS            reduce using rule 189 (saveConstantBool -> .)
    MINUS           reduce using rule 189 (saveConstantBool -> .)
    ,               reduce using rule 189 (saveConstantBool -> .)
    PARFIN          reduce using rule 189 (saveConstantBool -> .)
    EQ              reduce using rule 189 (saveConstantBool -> .)
    DIF             reduce using rule 189 (saveConstantBool -> .)
    LTOEQ           reduce using rule 189 (saveConstantBool -> .)
    GTOEQ           reduce using rule 189 (saveConstantBool -> .)
    GT              reduce using rule 189 (saveConstantBool -> .)
    LT              reduce using rule 189 (saveConstantBool -> .)
    AND             reduce using rule 189 (saveConstantBool -> .)
    OR              reduce using rule 189 (saveConstantBool -> .)
    :               reduce using rule 189 (saveConstantBool -> .)
    ;               reduce using rule 189 (saveConstantBool -> .)
    ]               reduce using rule 189 (saveConstantBool -> .)

    saveConstantBool               shift and go to state 165

state 142

    (157) fact -> funcCall .

    MULT            reduce using rule 157 (fact -> funcCall .)
    DIV             reduce using rule 157 (fact -> funcCall .)
    RES             reduce using rule 157 (fact -> funcCall .)
    PLUS            reduce using rule 157 (fact -> funcCall .)
    MINUS           reduce using rule 157 (fact -> funcCall .)
    EQ              reduce using rule 157 (fact -> funcCall .)
    DIF             reduce using rule 157 (fact -> funcCall .)
    LTOEQ           reduce using rule 157 (fact -> funcCall .)
    GTOEQ           reduce using rule 157 (fact -> funcCall .)
    GT              reduce using rule 157 (fact -> funcCall .)
    LT              reduce using rule 157 (fact -> funcCall .)
    AND             reduce using rule 157 (fact -> funcCall .)
    OR              reduce using rule 157 (fact -> funcCall .)
    ]               reduce using rule 157 (fact -> funcCall .)
    ,               reduce using rule 157 (fact -> funcCall .)
    PARFIN          reduce using rule 157 (fact -> funcCall .)
    ;               reduce using rule 157 (fact -> funcCall .)


state 143

    (156) fact -> cte .

    MULT            reduce using rule 156 (fact -> cte .)
    DIV             reduce using rule 156 (fact -> cte .)
    RES             reduce using rule 156 (fact -> cte .)
    PLUS            reduce using rule 156 (fact -> cte .)
    MINUS           reduce using rule 156 (fact -> cte .)
    EQ              reduce using rule 156 (fact -> cte .)
    DIF             reduce using rule 156 (fact -> cte .)
    LTOEQ           reduce using rule 156 (fact -> cte .)
    GTOEQ           reduce using rule 156 (fact -> cte .)
    GT              reduce using rule 156 (fact -> cte .)
    LT              reduce using rule 156 (fact -> cte .)
    AND             reduce using rule 156 (fact -> cte .)
    OR              reduce using rule 156 (fact -> cte .)
    ]               reduce using rule 156 (fact -> cte .)
    ,               reduce using rule 156 (fact -> cte .)
    PARFIN          reduce using rule 156 (fact -> cte .)
    ;               reduce using rule 156 (fact -> cte .)


state 144

    (179) cte -> CTEF . saveConstantFloat
    (188) saveConstantFloat -> .

    MULT            reduce using rule 188 (saveConstantFloat -> .)
    DIV             reduce using rule 188 (saveConstantFloat -> .)
    RES             reduce using rule 188 (saveConstantFloat -> .)
    PLUS            reduce using rule 188 (saveConstantFloat -> .)
    MINUS           reduce using rule 188 (saveConstantFloat -> .)
    ,               reduce using rule 188 (saveConstantFloat -> .)
    PARFIN          reduce using rule 188 (saveConstantFloat -> .)
    EQ              reduce using rule 188 (saveConstantFloat -> .)
    DIF             reduce using rule 188 (saveConstantFloat -> .)
    LTOEQ           reduce using rule 188 (saveConstantFloat -> .)
    GTOEQ           reduce using rule 188 (saveConstantFloat -> .)
    GT              reduce using rule 188 (saveConstantFloat -> .)
    LT              reduce using rule 188 (saveConstantFloat -> .)
    AND             reduce using rule 188 (saveConstantFloat -> .)
    OR              reduce using rule 188 (saveConstantFloat -> .)
    :               reduce using rule 188 (saveConstantFloat -> .)
    ;               reduce using rule 188 (saveConstantFloat -> .)
    ]               reduce using rule 188 (saveConstantFloat -> .)

    saveConstantFloat              shift and go to state 166

state 145

    (29) print -> PRINT PARINI exp . performPrint cyPrint PARFIN
    (200) performPrint -> .

    ,               reduce using rule 200 (performPrint -> .)
    PARFIN          reduce using rule 200 (performPrint -> .)

    performPrint                   shift and go to state 167

state 146

    (150) term -> fact . performMulDiv cyTerm
    (196) performMulDiv -> .

    MULT            reduce using rule 196 (performMulDiv -> .)
    DIV             reduce using rule 196 (performMulDiv -> .)
    RES             reduce using rule 196 (performMulDiv -> .)
    PLUS            reduce using rule 196 (performMulDiv -> .)
    MINUS           reduce using rule 196 (performMulDiv -> .)
    ,               reduce using rule 196 (performMulDiv -> .)
    PARFIN          reduce using rule 196 (performMulDiv -> .)
    EQ              reduce using rule 196 (performMulDiv -> .)
    DIF             reduce using rule 196 (performMulDiv -> .)
    LTOEQ           reduce using rule 196 (performMulDiv -> .)
    GTOEQ           reduce using rule 196 (performMulDiv -> .)
    GT              reduce using rule 196 (performMulDiv -> .)
    LT              reduce using rule 196 (performMulDiv -> .)
    AND             reduce using rule 196 (performMulDiv -> .)
    OR              reduce using rule 196 (performMulDiv -> .)
    ;               reduce using rule 196 (performMulDiv -> .)
    ]               reduce using rule 196 (performMulDiv -> .)

    performMulDiv                  shift and go to state 168

state 147

    (88) whileCycle -> errorWhileCycle WHILE saveReturn . PARINI expresion PARFIN saveFalso { body } repeatWhile

    PARINI          shift and go to state 169


state 148

    (98) assign -> ID saveVariable errorAssign . assignOptions performAssign
    (100) assignOptions -> . init
    (101) assignOptions -> . initDict
    (102) assignOptions -> . resaveID saveToDimensionStacks [ expresion verifyIndex ] assignMatrix accessStruct init
    (39) init -> . ASGN saveOperator errorInit initWith
    (43) initDict -> . ASGN PARINI dictType : dictType PARFIN errorInitDict
    (164) resaveID -> .

    ASGN            shift and go to state 170
    [               reduce using rule 164 (resaveID -> .)

    initDict                       shift and go to state 174
    assignOptions                  shift and go to state 172
    init                           shift and go to state 171
    resaveID                       shift and go to state 173

state 149

    (106) funcCall -> ID checkFunction PARINI . opParamCall PARFIN checkNumParams
    (109) opParamCall -> . expresion checkParamType cyParamCall
    (110) opParamCall -> . empty
    (131) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (182) empty -> .
    (136) sExp -> . exp errorOpSExp opSExp performRelational
    (145) exp -> . term performAddSub errorCyExp cyExp
    (150) term -> . fact performMulDiv cyTerm
    (155) fact -> . CTES saveConstantString
    (156) fact -> . cte
    (157) fact -> . funcCall
    (158) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (159) fact -> . ID saveVariable opAccess errorOpAccess
    (178) cte -> . CTED saveConstantInt
    (179) cte -> . CTEF saveConstantFloat
    (180) cte -> . TRUE saveConstantBool
    (181) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    PARFIN          reduce using rule 182 (empty -> .)
    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    opParamCall                    shift and go to state 175
    sExp                           shift and go to state 176
    empty                          shift and go to state 177
    expresion                      shift and go to state 178
    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 179
    fact                           shift and go to state 146

state 150

    (92) forCycle -> errorForCycle FOR PARINI . assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign
    (98) assign -> . ID saveVariable errorAssign assignOptions performAssign

    ID              shift and go to state 180

    assign                         shift and go to state 181

state 151

    (124) condition -> errorCondition IF PARINI . expresion PARFIN saveFalso { body } optionalElse rellenaFalso
    (131) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (136) sExp -> . exp errorOpSExp opSExp performRelational
    (145) exp -> . term performAddSub errorCyExp cyExp
    (150) term -> . fact performMulDiv cyTerm
    (155) fact -> . CTES saveConstantString
    (156) fact -> . cte
    (157) fact -> . funcCall
    (158) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (159) fact -> . ID saveVariable opAccess errorOpAccess
    (178) cte -> . CTED saveConstantInt
    (179) cte -> . CTEF saveConstantFloat
    (180) cte -> . TRUE saveConstantBool
    (181) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    sExp                           shift and go to state 176
    expresion                      shift and go to state 182
    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 179
    fact                           shift and go to state 146

state 152

    (57) function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns . } clearVarsTable

    }               shift and go to state 183


state 153

    (69) opReturns -> errorOpReturns . RETURNS type saveReturnType { opVars saveQuadruple body return

    RETURNS         shift and go to state 184


state 154

    (70) opReturns -> { . opVars saveQuadruple body
    (6) opVars -> . vars
    (7) opVars -> . empty
    (10) vars -> . errorVars VARS declare
    (182) empty -> .
    (12) errorVars -> .

    ID              reduce using rule 182 (empty -> .)
    PRINT           reduce using rule 182 (empty -> .)
    READ            reduce using rule 182 (empty -> .)
    IF              reduce using rule 182 (empty -> .)
    FOR             reduce using rule 182 (empty -> .)
    WHILE           reduce using rule 182 (empty -> .)
    }               reduce using rule 182 (empty -> .)
    VARS            reduce using rule 12 (errorVars -> .)

    vars                           shift and go to state 8
    opVars                         shift and go to state 185
    errorVars                      shift and go to state 10
    empty                          shift and go to state 11

state 155

    (49) param -> saveType type errorParam ID . cyTypeParam cyParam
    (53) cyTypeParam -> . , saveTypeParam saveID ID cyTypeParam
    (54) cyTypeParam -> . empty
    (182) empty -> .

    ,               shift and go to state 58
    ;               reduce using rule 182 (empty -> .)
    PARFIN          reduce using rule 182 (empty -> .)

    empty                          shift and go to state 59
    cyTypeParam                    shift and go to state 186

state 156

    (114) struct -> structType ID saveID createDimension [ CTED saveDimensionSize ] optionalMatrix secondLap .

    ;               reduce using rule 114 (struct -> structType ID saveID createDimension [ CTED saveDimensionSize ] optionalMatrix secondLap .)


state 157

    (120) optionalMatrix -> createSecondDimension [ . CTED saveSecondDimensionSize ]

    CTED            shift and go to state 187


state 158

    (32) read -> READ PARINI ID saveVariable . performRead cyRead PARFIN
    (201) performRead -> .

    ,               reduce using rule 201 (performRead -> .)
    PARFIN          reduce using rule 201 (performRead -> .)

    performRead                    shift and go to state 188

state 159

    (180) cte -> TRUE saveConstantBool .

    MULT            reduce using rule 180 (cte -> TRUE saveConstantBool .)
    DIV             reduce using rule 180 (cte -> TRUE saveConstantBool .)
    RES             reduce using rule 180 (cte -> TRUE saveConstantBool .)
    PLUS            reduce using rule 180 (cte -> TRUE saveConstantBool .)
    MINUS           reduce using rule 180 (cte -> TRUE saveConstantBool .)
    EQ              reduce using rule 180 (cte -> TRUE saveConstantBool .)
    DIF             reduce using rule 180 (cte -> TRUE saveConstantBool .)
    LTOEQ           reduce using rule 180 (cte -> TRUE saveConstantBool .)
    GTOEQ           reduce using rule 180 (cte -> TRUE saveConstantBool .)
    GT              reduce using rule 180 (cte -> TRUE saveConstantBool .)
    LT              reduce using rule 180 (cte -> TRUE saveConstantBool .)
    AND             reduce using rule 180 (cte -> TRUE saveConstantBool .)
    OR              reduce using rule 180 (cte -> TRUE saveConstantBool .)
    ]               reduce using rule 180 (cte -> TRUE saveConstantBool .)
    ,               reduce using rule 180 (cte -> TRUE saveConstantBool .)
    PARFIN          reduce using rule 180 (cte -> TRUE saveConstantBool .)
    ;               reduce using rule 180 (cte -> TRUE saveConstantBool .)
    :               reduce using rule 180 (cte -> TRUE saveConstantBool .)


state 160

    (158) fact -> PARINI putFondo . expresion PARFIN takeFondo
    (131) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (136) sExp -> . exp errorOpSExp opSExp performRelational
    (145) exp -> . term performAddSub errorCyExp cyExp
    (150) term -> . fact performMulDiv cyTerm
    (155) fact -> . CTES saveConstantString
    (156) fact -> . cte
    (157) fact -> . funcCall
    (158) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (159) fact -> . ID saveVariable opAccess errorOpAccess
    (178) cte -> . CTED saveConstantInt
    (179) cte -> . CTEF saveConstantFloat
    (180) cte -> . TRUE saveConstantBool
    (181) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    sExp                           shift and go to state 176
    expresion                      shift and go to state 189
    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 179
    fact                           shift and go to state 146

state 161

    (178) cte -> CTED saveConstantInt .

    MULT            reduce using rule 178 (cte -> CTED saveConstantInt .)
    DIV             reduce using rule 178 (cte -> CTED saveConstantInt .)
    RES             reduce using rule 178 (cte -> CTED saveConstantInt .)
    PLUS            reduce using rule 178 (cte -> CTED saveConstantInt .)
    MINUS           reduce using rule 178 (cte -> CTED saveConstantInt .)
    EQ              reduce using rule 178 (cte -> CTED saveConstantInt .)
    DIF             reduce using rule 178 (cte -> CTED saveConstantInt .)
    LTOEQ           reduce using rule 178 (cte -> CTED saveConstantInt .)
    GTOEQ           reduce using rule 178 (cte -> CTED saveConstantInt .)
    GT              reduce using rule 178 (cte -> CTED saveConstantInt .)
    LT              reduce using rule 178 (cte -> CTED saveConstantInt .)
    AND             reduce using rule 178 (cte -> CTED saveConstantInt .)
    OR              reduce using rule 178 (cte -> CTED saveConstantInt .)
    ]               reduce using rule 178 (cte -> CTED saveConstantInt .)
    ,               reduce using rule 178 (cte -> CTED saveConstantInt .)
    PARFIN          reduce using rule 178 (cte -> CTED saveConstantInt .)
    ;               reduce using rule 178 (cte -> CTED saveConstantInt .)
    :               reduce using rule 178 (cte -> CTED saveConstantInt .)


state 162

    (159) fact -> ID saveVariable . opAccess errorOpAccess
    (161) opAccess -> . resaveID opStruct
    (162) opAccess -> . opDictionary
    (163) opAccess -> . empty
    (164) resaveID -> .
    (175) opDictionary -> . . dictIndex
    (182) empty -> .

    [               reduce using rule 164 (resaveID -> .)
    .               shift and go to state 193
    MULT            reduce using rule 182 (empty -> .)
    DIV             reduce using rule 182 (empty -> .)
    RES             reduce using rule 182 (empty -> .)
    PLUS            reduce using rule 182 (empty -> .)
    MINUS           reduce using rule 182 (empty -> .)
    ,               reduce using rule 182 (empty -> .)
    PARFIN          reduce using rule 182 (empty -> .)
    EQ              reduce using rule 182 (empty -> .)
    DIF             reduce using rule 182 (empty -> .)
    LTOEQ           reduce using rule 182 (empty -> .)
    GTOEQ           reduce using rule 182 (empty -> .)
    GT              reduce using rule 182 (empty -> .)
    LT              reduce using rule 182 (empty -> .)
    AND             reduce using rule 182 (empty -> .)
    OR              reduce using rule 182 (empty -> .)
    ;               reduce using rule 182 (empty -> .)
    ]               reduce using rule 182 (empty -> .)

    resaveID                       shift and go to state 190
    opDictionary                   shift and go to state 191
    opAccess                       shift and go to state 192
    empty                          shift and go to state 194

state 163

    (155) fact -> CTES saveConstantString .

    MULT            reduce using rule 155 (fact -> CTES saveConstantString .)
    DIV             reduce using rule 155 (fact -> CTES saveConstantString .)
    RES             reduce using rule 155 (fact -> CTES saveConstantString .)
    PLUS            reduce using rule 155 (fact -> CTES saveConstantString .)
    MINUS           reduce using rule 155 (fact -> CTES saveConstantString .)
    EQ              reduce using rule 155 (fact -> CTES saveConstantString .)
    DIF             reduce using rule 155 (fact -> CTES saveConstantString .)
    LTOEQ           reduce using rule 155 (fact -> CTES saveConstantString .)
    GTOEQ           reduce using rule 155 (fact -> CTES saveConstantString .)
    GT              reduce using rule 155 (fact -> CTES saveConstantString .)
    LT              reduce using rule 155 (fact -> CTES saveConstantString .)
    AND             reduce using rule 155 (fact -> CTES saveConstantString .)
    OR              reduce using rule 155 (fact -> CTES saveConstantString .)
    ]               reduce using rule 155 (fact -> CTES saveConstantString .)
    ,               reduce using rule 155 (fact -> CTES saveConstantString .)
    PARFIN          reduce using rule 155 (fact -> CTES saveConstantString .)
    ;               reduce using rule 155 (fact -> CTES saveConstantString .)


state 164

    (145) exp -> term performAddSub . errorCyExp cyExp
    (149) errorCyExp -> .

    PLUS            reduce using rule 149 (errorCyExp -> .)
    MINUS           reduce using rule 149 (errorCyExp -> .)
    ,               reduce using rule 149 (errorCyExp -> .)
    PARFIN          reduce using rule 149 (errorCyExp -> .)
    EQ              reduce using rule 149 (errorCyExp -> .)
    DIF             reduce using rule 149 (errorCyExp -> .)
    LTOEQ           reduce using rule 149 (errorCyExp -> .)
    GTOEQ           reduce using rule 149 (errorCyExp -> .)
    GT              reduce using rule 149 (errorCyExp -> .)
    LT              reduce using rule 149 (errorCyExp -> .)
    AND             reduce using rule 149 (errorCyExp -> .)
    OR              reduce using rule 149 (errorCyExp -> .)
    ;               reduce using rule 149 (errorCyExp -> .)
    ]               reduce using rule 149 (errorCyExp -> .)

    errorCyExp                     shift and go to state 195

state 165

    (181) cte -> FALSE saveConstantBool .

    MULT            reduce using rule 181 (cte -> FALSE saveConstantBool .)
    DIV             reduce using rule 181 (cte -> FALSE saveConstantBool .)
    RES             reduce using rule 181 (cte -> FALSE saveConstantBool .)
    PLUS            reduce using rule 181 (cte -> FALSE saveConstantBool .)
    MINUS           reduce using rule 181 (cte -> FALSE saveConstantBool .)
    EQ              reduce using rule 181 (cte -> FALSE saveConstantBool .)
    DIF             reduce using rule 181 (cte -> FALSE saveConstantBool .)
    LTOEQ           reduce using rule 181 (cte -> FALSE saveConstantBool .)
    GTOEQ           reduce using rule 181 (cte -> FALSE saveConstantBool .)
    GT              reduce using rule 181 (cte -> FALSE saveConstantBool .)
    LT              reduce using rule 181 (cte -> FALSE saveConstantBool .)
    AND             reduce using rule 181 (cte -> FALSE saveConstantBool .)
    OR              reduce using rule 181 (cte -> FALSE saveConstantBool .)
    ]               reduce using rule 181 (cte -> FALSE saveConstantBool .)
    ,               reduce using rule 181 (cte -> FALSE saveConstantBool .)
    PARFIN          reduce using rule 181 (cte -> FALSE saveConstantBool .)
    ;               reduce using rule 181 (cte -> FALSE saveConstantBool .)
    :               reduce using rule 181 (cte -> FALSE saveConstantBool .)


state 166

    (179) cte -> CTEF saveConstantFloat .

    MULT            reduce using rule 179 (cte -> CTEF saveConstantFloat .)
    DIV             reduce using rule 179 (cte -> CTEF saveConstantFloat .)
    RES             reduce using rule 179 (cte -> CTEF saveConstantFloat .)
    PLUS            reduce using rule 179 (cte -> CTEF saveConstantFloat .)
    MINUS           reduce using rule 179 (cte -> CTEF saveConstantFloat .)
    EQ              reduce using rule 179 (cte -> CTEF saveConstantFloat .)
    DIF             reduce using rule 179 (cte -> CTEF saveConstantFloat .)
    LTOEQ           reduce using rule 179 (cte -> CTEF saveConstantFloat .)
    GTOEQ           reduce using rule 179 (cte -> CTEF saveConstantFloat .)
    GT              reduce using rule 179 (cte -> CTEF saveConstantFloat .)
    LT              reduce using rule 179 (cte -> CTEF saveConstantFloat .)
    AND             reduce using rule 179 (cte -> CTEF saveConstantFloat .)
    OR              reduce using rule 179 (cte -> CTEF saveConstantFloat .)
    ]               reduce using rule 179 (cte -> CTEF saveConstantFloat .)
    ,               reduce using rule 179 (cte -> CTEF saveConstantFloat .)
    PARFIN          reduce using rule 179 (cte -> CTEF saveConstantFloat .)
    ;               reduce using rule 179 (cte -> CTEF saveConstantFloat .)
    :               reduce using rule 179 (cte -> CTEF saveConstantFloat .)


state 167

    (29) print -> PRINT PARINI exp performPrint . cyPrint PARFIN
    (30) cyPrint -> . , fix exp performPrint cyPrint
    (31) cyPrint -> . empty
    (182) empty -> .

    ,               shift and go to state 197
    PARFIN          reduce using rule 182 (empty -> .)

    cyPrint                        shift and go to state 196
    empty                          shift and go to state 198

state 168

    (150) term -> fact performMulDiv . cyTerm
    (151) cyTerm -> . MULT saveOperator errorFact term
    (152) cyTerm -> . DIV saveOperator term
    (153) cyTerm -> . RES saveOperator term
    (154) cyTerm -> . empty
    (182) empty -> .

    MULT            shift and go to state 203
    DIV             shift and go to state 202
    RES             shift and go to state 199
    PLUS            reduce using rule 182 (empty -> .)
    MINUS           reduce using rule 182 (empty -> .)
    ,               reduce using rule 182 (empty -> .)
    PARFIN          reduce using rule 182 (empty -> .)
    EQ              reduce using rule 182 (empty -> .)
    DIF             reduce using rule 182 (empty -> .)
    LTOEQ           reduce using rule 182 (empty -> .)
    GTOEQ           reduce using rule 182 (empty -> .)
    GT              reduce using rule 182 (empty -> .)
    LT              reduce using rule 182 (empty -> .)
    AND             reduce using rule 182 (empty -> .)
    OR              reduce using rule 182 (empty -> .)
    ;               reduce using rule 182 (empty -> .)
    ]               reduce using rule 182 (empty -> .)

    cyTerm                         shift and go to state 200
    empty                          shift and go to state 201

state 169

    (88) whileCycle -> errorWhileCycle WHILE saveReturn PARINI . expresion PARFIN saveFalso { body } repeatWhile
    (131) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (136) sExp -> . exp errorOpSExp opSExp performRelational
    (145) exp -> . term performAddSub errorCyExp cyExp
    (150) term -> . fact performMulDiv cyTerm
    (155) fact -> . CTES saveConstantString
    (156) fact -> . cte
    (157) fact -> . funcCall
    (158) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (159) fact -> . ID saveVariable opAccess errorOpAccess
    (178) cte -> . CTED saveConstantInt
    (179) cte -> . CTEF saveConstantFloat
    (180) cte -> . TRUE saveConstantBool
    (181) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    sExp                           shift and go to state 176
    expresion                      shift and go to state 204
    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 179
    fact                           shift and go to state 146

state 170

    (39) init -> ASGN . saveOperator errorInit initWith
    (43) initDict -> ASGN . PARINI dictType : dictType PARFIN errorInitDict
    (192) saveOperator -> .

  ! shift/reduce conflict for PARINI resolved as shift
    PARINI          shift and go to state 206
    ID              reduce using rule 192 (saveOperator -> .)
    CTES            reduce using rule 192 (saveOperator -> .)
    CTED            reduce using rule 192 (saveOperator -> .)
    CTEF            reduce using rule 192 (saveOperator -> .)
    TRUE            reduce using rule 192 (saveOperator -> .)
    FALSE           reduce using rule 192 (saveOperator -> .)

  ! PARINI          [ reduce using rule 192 (saveOperator -> .) ]

    saveOperator                   shift and go to state 205

state 171

    (100) assignOptions -> init .

    ;               reduce using rule 100 (assignOptions -> init .)
    PARFIN          reduce using rule 100 (assignOptions -> init .)


state 172

    (98) assign -> ID saveVariable errorAssign assignOptions . performAssign
    (195) performAssign -> .

    ;               reduce using rule 195 (performAssign -> .)
    PARFIN          reduce using rule 195 (performAssign -> .)

    performAssign                  shift and go to state 207

state 173

    (102) assignOptions -> resaveID . saveToDimensionStacks [ expresion verifyIndex ] assignMatrix accessStruct init
    (169) saveToDimensionStacks -> .

    [               reduce using rule 169 (saveToDimensionStacks -> .)

    saveToDimensionStacks          shift and go to state 208

state 174

    (101) assignOptions -> initDict .

    ;               reduce using rule 101 (assignOptions -> initDict .)
    PARFIN          reduce using rule 101 (assignOptions -> initDict .)


state 175

    (106) funcCall -> ID checkFunction PARINI opParamCall . PARFIN checkNumParams

    PARFIN          shift and go to state 209


state 176

    (131) expresion -> sExp . performAndOr cyExpresion errorExpresion
    (199) performAndOr -> .

    AND             reduce using rule 199 (performAndOr -> .)
    OR              reduce using rule 199 (performAndOr -> .)
    ,               reduce using rule 199 (performAndOr -> .)
    PARFIN          reduce using rule 199 (performAndOr -> .)
    ;               reduce using rule 199 (performAndOr -> .)
    ]               reduce using rule 199 (performAndOr -> .)

    performAndOr                   shift and go to state 210

state 177

    (110) opParamCall -> empty .

    PARFIN          reduce using rule 110 (opParamCall -> empty .)


state 178

    (109) opParamCall -> expresion . checkParamType cyParamCall
    (113) checkParamType -> .

    ,               reduce using rule 113 (checkParamType -> .)
    PARFIN          reduce using rule 113 (checkParamType -> .)

    checkParamType                 shift and go to state 211

state 179

    (136) sExp -> exp . errorOpSExp opSExp performRelational
    (144) errorOpSExp -> .

    EQ              reduce using rule 144 (errorOpSExp -> .)
    DIF             reduce using rule 144 (errorOpSExp -> .)
    LTOEQ           reduce using rule 144 (errorOpSExp -> .)
    GTOEQ           reduce using rule 144 (errorOpSExp -> .)
    GT              reduce using rule 144 (errorOpSExp -> .)
    LT              reduce using rule 144 (errorOpSExp -> .)
    AND             reduce using rule 144 (errorOpSExp -> .)
    OR              reduce using rule 144 (errorOpSExp -> .)
    ,               reduce using rule 144 (errorOpSExp -> .)
    PARFIN          reduce using rule 144 (errorOpSExp -> .)
    ;               reduce using rule 144 (errorOpSExp -> .)
    ]               reduce using rule 144 (errorOpSExp -> .)

    errorOpSExp                    shift and go to state 212

state 180

    (98) assign -> ID . saveVariable errorAssign assignOptions performAssign
    (191) saveVariable -> .

    ASGN            reduce using rule 191 (saveVariable -> .)
    [               reduce using rule 191 (saveVariable -> .)

    saveVariable                   shift and go to state 123

state 181

    (92) forCycle -> errorForCycle FOR PARINI assign . ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign

    ;               shift and go to state 213


state 182

    (124) condition -> errorCondition IF PARINI expresion . PARFIN saveFalso { body } optionalElse rellenaFalso

    PARFIN          shift and go to state 214


state 183

    (57) function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } . clearVarsTable
    (60) clearVarsTable -> .

    FUNC            reduce using rule 60 (clearVarsTable -> .)
    MAIN            reduce using rule 60 (clearVarsTable -> .)

    clearVarsTable                 shift and go to state 215

state 184

    (69) opReturns -> errorOpReturns RETURNS . type saveReturnType { opVars saveQuadruple body return
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    errorType                      shift and go to state 31
    type                           shift and go to state 216

state 185

    (70) opReturns -> { opVars . saveQuadruple body
    (71) saveQuadruple -> .

    ID              reduce using rule 71 (saveQuadruple -> .)
    PRINT           reduce using rule 71 (saveQuadruple -> .)
    READ            reduce using rule 71 (saveQuadruple -> .)
    IF              reduce using rule 71 (saveQuadruple -> .)
    FOR             reduce using rule 71 (saveQuadruple -> .)
    WHILE           reduce using rule 71 (saveQuadruple -> .)
    }               reduce using rule 71 (saveQuadruple -> .)

    saveQuadruple                  shift and go to state 217

state 186

    (49) param -> saveType type errorParam ID cyTypeParam . cyParam
    (51) cyParam -> . errorCyParam saveTypeParam saveID ; param
    (52) cyParam -> . empty saveTypeParam saveID
    (56) errorCyParam -> .
    (182) empty -> .

    ;               reduce using rule 56 (errorCyParam -> .)
    PARFIN          reduce using rule 182 (empty -> .)

    empty                          shift and go to state 218
    cyParam                        shift and go to state 220
    errorCyParam                   shift and go to state 219

state 187

    (120) optionalMatrix -> createSecondDimension [ CTED . saveSecondDimensionSize ]
    (122) saveSecondDimensionSize -> .

    ]               reduce using rule 122 (saveSecondDimensionSize -> .)

    saveSecondDimensionSize        shift and go to state 221

state 188

    (32) read -> READ PARINI ID saveVariable performRead . cyRead PARFIN
    (33) cyRead -> . , fix ID saveVariable performRead cyRead
    (34) cyRead -> . empty
    (182) empty -> .

    ,               shift and go to state 222
    PARFIN          reduce using rule 182 (empty -> .)

    cyRead                         shift and go to state 223
    empty                          shift and go to state 224

state 189

    (158) fact -> PARINI putFondo expresion . PARFIN takeFondo

    PARFIN          shift and go to state 225


state 190

    (161) opAccess -> resaveID . opStruct
    (166) opStruct -> . errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct
    (170) errorOpStruct -> .

    [               reduce using rule 170 (errorOpStruct -> .)

    errorOpStruct                  shift and go to state 226
    opStruct                       shift and go to state 227

state 191

    (162) opAccess -> opDictionary .

    MULT            reduce using rule 162 (opAccess -> opDictionary .)
    DIV             reduce using rule 162 (opAccess -> opDictionary .)
    RES             reduce using rule 162 (opAccess -> opDictionary .)
    PLUS            reduce using rule 162 (opAccess -> opDictionary .)
    MINUS           reduce using rule 162 (opAccess -> opDictionary .)
    ,               reduce using rule 162 (opAccess -> opDictionary .)
    PARFIN          reduce using rule 162 (opAccess -> opDictionary .)
    EQ              reduce using rule 162 (opAccess -> opDictionary .)
    DIF             reduce using rule 162 (opAccess -> opDictionary .)
    LTOEQ           reduce using rule 162 (opAccess -> opDictionary .)
    GTOEQ           reduce using rule 162 (opAccess -> opDictionary .)
    GT              reduce using rule 162 (opAccess -> opDictionary .)
    LT              reduce using rule 162 (opAccess -> opDictionary .)
    AND             reduce using rule 162 (opAccess -> opDictionary .)
    OR              reduce using rule 162 (opAccess -> opDictionary .)
    ;               reduce using rule 162 (opAccess -> opDictionary .)
    ]               reduce using rule 162 (opAccess -> opDictionary .)


state 192

    (159) fact -> ID saveVariable opAccess . errorOpAccess
    (165) errorOpAccess -> .

    MULT            reduce using rule 165 (errorOpAccess -> .)
    DIV             reduce using rule 165 (errorOpAccess -> .)
    RES             reduce using rule 165 (errorOpAccess -> .)
    PLUS            reduce using rule 165 (errorOpAccess -> .)
    MINUS           reduce using rule 165 (errorOpAccess -> .)
    ,               reduce using rule 165 (errorOpAccess -> .)
    PARFIN          reduce using rule 165 (errorOpAccess -> .)
    EQ              reduce using rule 165 (errorOpAccess -> .)
    DIF             reduce using rule 165 (errorOpAccess -> .)
    LTOEQ           reduce using rule 165 (errorOpAccess -> .)
    GTOEQ           reduce using rule 165 (errorOpAccess -> .)
    GT              reduce using rule 165 (errorOpAccess -> .)
    LT              reduce using rule 165 (errorOpAccess -> .)
    AND             reduce using rule 165 (errorOpAccess -> .)
    OR              reduce using rule 165 (errorOpAccess -> .)
    ;               reduce using rule 165 (errorOpAccess -> .)
    ]               reduce using rule 165 (errorOpAccess -> .)

    errorOpAccess                  shift and go to state 228

state 193

    (175) opDictionary -> . . dictIndex
    (176) dictIndex -> . FIRST
    (177) dictIndex -> . LAST

    FIRST           shift and go to state 229
    LAST            shift and go to state 230

    dictIndex                      shift and go to state 231

state 194

    (163) opAccess -> empty .

    MULT            reduce using rule 163 (opAccess -> empty .)
    DIV             reduce using rule 163 (opAccess -> empty .)
    RES             reduce using rule 163 (opAccess -> empty .)
    PLUS            reduce using rule 163 (opAccess -> empty .)
    MINUS           reduce using rule 163 (opAccess -> empty .)
    ,               reduce using rule 163 (opAccess -> empty .)
    PARFIN          reduce using rule 163 (opAccess -> empty .)
    EQ              reduce using rule 163 (opAccess -> empty .)
    DIF             reduce using rule 163 (opAccess -> empty .)
    LTOEQ           reduce using rule 163 (opAccess -> empty .)
    GTOEQ           reduce using rule 163 (opAccess -> empty .)
    GT              reduce using rule 163 (opAccess -> empty .)
    LT              reduce using rule 163 (opAccess -> empty .)
    AND             reduce using rule 163 (opAccess -> empty .)
    OR              reduce using rule 163 (opAccess -> empty .)
    ;               reduce using rule 163 (opAccess -> empty .)
    ]               reduce using rule 163 (opAccess -> empty .)


state 195

    (145) exp -> term performAddSub errorCyExp . cyExp
    (146) cyExp -> . PLUS saveOperator exp
    (147) cyExp -> . MINUS saveOperator exp
    (148) cyExp -> . empty
    (182) empty -> .

    PLUS            shift and go to state 233
    MINUS           shift and go to state 234
    ,               reduce using rule 182 (empty -> .)
    PARFIN          reduce using rule 182 (empty -> .)
    EQ              reduce using rule 182 (empty -> .)
    DIF             reduce using rule 182 (empty -> .)
    LTOEQ           reduce using rule 182 (empty -> .)
    GTOEQ           reduce using rule 182 (empty -> .)
    GT              reduce using rule 182 (empty -> .)
    LT              reduce using rule 182 (empty -> .)
    AND             reduce using rule 182 (empty -> .)
    OR              reduce using rule 182 (empty -> .)
    ;               reduce using rule 182 (empty -> .)
    ]               reduce using rule 182 (empty -> .)

    cyExp                          shift and go to state 232
    empty                          shift and go to state 235

state 196

    (29) print -> PRINT PARINI exp performPrint cyPrint . PARFIN

    PARFIN          shift and go to state 236


state 197

    (30) cyPrint -> , . fix exp performPrint cyPrint
    (35) fix -> .

    CTES            reduce using rule 35 (fix -> .)
    PARINI          reduce using rule 35 (fix -> .)
    ID              reduce using rule 35 (fix -> .)
    CTED            reduce using rule 35 (fix -> .)
    CTEF            reduce using rule 35 (fix -> .)
    TRUE            reduce using rule 35 (fix -> .)
    FALSE           reduce using rule 35 (fix -> .)

    fix                            shift and go to state 237

state 198

    (31) cyPrint -> empty .

    PARFIN          reduce using rule 31 (cyPrint -> empty .)


state 199

    (153) cyTerm -> RES . saveOperator term
    (192) saveOperator -> .

    CTES            reduce using rule 192 (saveOperator -> .)
    PARINI          reduce using rule 192 (saveOperator -> .)
    ID              reduce using rule 192 (saveOperator -> .)
    CTED            reduce using rule 192 (saveOperator -> .)
    CTEF            reduce using rule 192 (saveOperator -> .)
    TRUE            reduce using rule 192 (saveOperator -> .)
    FALSE           reduce using rule 192 (saveOperator -> .)

    saveOperator                   shift and go to state 238

state 200

    (150) term -> fact performMulDiv cyTerm .

    PLUS            reduce using rule 150 (term -> fact performMulDiv cyTerm .)
    MINUS           reduce using rule 150 (term -> fact performMulDiv cyTerm .)
    ,               reduce using rule 150 (term -> fact performMulDiv cyTerm .)
    PARFIN          reduce using rule 150 (term -> fact performMulDiv cyTerm .)
    EQ              reduce using rule 150 (term -> fact performMulDiv cyTerm .)
    DIF             reduce using rule 150 (term -> fact performMulDiv cyTerm .)
    LTOEQ           reduce using rule 150 (term -> fact performMulDiv cyTerm .)
    GTOEQ           reduce using rule 150 (term -> fact performMulDiv cyTerm .)
    GT              reduce using rule 150 (term -> fact performMulDiv cyTerm .)
    LT              reduce using rule 150 (term -> fact performMulDiv cyTerm .)
    AND             reduce using rule 150 (term -> fact performMulDiv cyTerm .)
    OR              reduce using rule 150 (term -> fact performMulDiv cyTerm .)
    ;               reduce using rule 150 (term -> fact performMulDiv cyTerm .)
    ]               reduce using rule 150 (term -> fact performMulDiv cyTerm .)


state 201

    (154) cyTerm -> empty .

    PLUS            reduce using rule 154 (cyTerm -> empty .)
    MINUS           reduce using rule 154 (cyTerm -> empty .)
    ,               reduce using rule 154 (cyTerm -> empty .)
    PARFIN          reduce using rule 154 (cyTerm -> empty .)
    EQ              reduce using rule 154 (cyTerm -> empty .)
    DIF             reduce using rule 154 (cyTerm -> empty .)
    LTOEQ           reduce using rule 154 (cyTerm -> empty .)
    GTOEQ           reduce using rule 154 (cyTerm -> empty .)
    GT              reduce using rule 154 (cyTerm -> empty .)
    LT              reduce using rule 154 (cyTerm -> empty .)
    AND             reduce using rule 154 (cyTerm -> empty .)
    OR              reduce using rule 154 (cyTerm -> empty .)
    ;               reduce using rule 154 (cyTerm -> empty .)
    ]               reduce using rule 154 (cyTerm -> empty .)


state 202

    (152) cyTerm -> DIV . saveOperator term
    (192) saveOperator -> .

    CTES            reduce using rule 192 (saveOperator -> .)
    PARINI          reduce using rule 192 (saveOperator -> .)
    ID              reduce using rule 192 (saveOperator -> .)
    CTED            reduce using rule 192 (saveOperator -> .)
    CTEF            reduce using rule 192 (saveOperator -> .)
    TRUE            reduce using rule 192 (saveOperator -> .)
    FALSE           reduce using rule 192 (saveOperator -> .)

    saveOperator                   shift and go to state 239

state 203

    (151) cyTerm -> MULT . saveOperator errorFact term
    (192) saveOperator -> .

    CTES            reduce using rule 192 (saveOperator -> .)
    PARINI          reduce using rule 192 (saveOperator -> .)
    ID              reduce using rule 192 (saveOperator -> .)
    CTED            reduce using rule 192 (saveOperator -> .)
    CTEF            reduce using rule 192 (saveOperator -> .)
    TRUE            reduce using rule 192 (saveOperator -> .)
    FALSE           reduce using rule 192 (saveOperator -> .)

    saveOperator                   shift and go to state 240

state 204

    (88) whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion . PARFIN saveFalso { body } repeatWhile

    PARFIN          shift and go to state 241


state 205

    (39) init -> ASGN saveOperator . errorInit initWith
    (40) errorInit -> .

    ID              reduce using rule 40 (errorInit -> .)
    CTES            reduce using rule 40 (errorInit -> .)
    PARINI          reduce using rule 40 (errorInit -> .)
    CTED            reduce using rule 40 (errorInit -> .)
    CTEF            reduce using rule 40 (errorInit -> .)
    TRUE            reduce using rule 40 (errorInit -> .)
    FALSE           reduce using rule 40 (errorInit -> .)

    errorInit                      shift and go to state 242

state 206

    (43) initDict -> ASGN PARINI . dictType : dictType PARFIN errorInitDict
    (45) dictType -> . errorDictType CTES
    (46) dictType -> . cte
    (47) dictType -> . ID
    (48) errorDictType -> .
    (178) cte -> . CTED saveConstantInt
    (179) cte -> . CTEF saveConstantFloat
    (180) cte -> . TRUE saveConstantBool
    (181) cte -> . FALSE saveConstantBool

    ID              shift and go to state 246
    CTES            reduce using rule 48 (errorDictType -> .)
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    dictType                       shift and go to state 243
    errorDictType                  shift and go to state 244
    cte                            shift and go to state 245

state 207

    (98) assign -> ID saveVariable errorAssign assignOptions performAssign .

    ;               reduce using rule 98 (assign -> ID saveVariable errorAssign assignOptions performAssign .)
    PARFIN          reduce using rule 98 (assign -> ID saveVariable errorAssign assignOptions performAssign .)


state 208

    (102) assignOptions -> resaveID saveToDimensionStacks . [ expresion verifyIndex ] assignMatrix accessStruct init

    [               shift and go to state 247


state 209

    (106) funcCall -> ID checkFunction PARINI opParamCall PARFIN . checkNumParams
    (107) checkNumParams -> .

    ;               reduce using rule 107 (checkNumParams -> .)
    MULT            reduce using rule 107 (checkNumParams -> .)
    DIV             reduce using rule 107 (checkNumParams -> .)
    RES             reduce using rule 107 (checkNumParams -> .)
    PLUS            reduce using rule 107 (checkNumParams -> .)
    MINUS           reduce using rule 107 (checkNumParams -> .)
    ,               reduce using rule 107 (checkNumParams -> .)
    PARFIN          reduce using rule 107 (checkNumParams -> .)
    EQ              reduce using rule 107 (checkNumParams -> .)
    DIF             reduce using rule 107 (checkNumParams -> .)
    LTOEQ           reduce using rule 107 (checkNumParams -> .)
    GTOEQ           reduce using rule 107 (checkNumParams -> .)
    GT              reduce using rule 107 (checkNumParams -> .)
    LT              reduce using rule 107 (checkNumParams -> .)
    AND             reduce using rule 107 (checkNumParams -> .)
    OR              reduce using rule 107 (checkNumParams -> .)
    ]               reduce using rule 107 (checkNumParams -> .)

    checkNumParams                 shift and go to state 248

state 210

    (131) expresion -> sExp performAndOr . cyExpresion errorExpresion
    (133) cyExpresion -> . AND saveOperator expresion
    (134) cyExpresion -> . OR saveOperator expresion
    (135) cyExpresion -> . empty
    (182) empty -> .

    AND             shift and go to state 249
    OR              shift and go to state 250
    ,               reduce using rule 182 (empty -> .)
    PARFIN          reduce using rule 182 (empty -> .)
    ;               reduce using rule 182 (empty -> .)
    ]               reduce using rule 182 (empty -> .)

    cyExpresion                    shift and go to state 251
    empty                          shift and go to state 252

state 211

    (109) opParamCall -> expresion checkParamType . cyParamCall
    (111) cyParamCall -> . , expresion checkParamType cyParamCall
    (112) cyParamCall -> . empty
    (182) empty -> .

    ,               shift and go to state 255
    PARFIN          reduce using rule 182 (empty -> .)

    cyParamCall                    shift and go to state 253
    empty                          shift and go to state 254

state 212

    (136) sExp -> exp errorOpSExp . opSExp performRelational
    (137) opSExp -> . EQ saveOperator exp
    (138) opSExp -> . DIF saveOperator exp
    (139) opSExp -> . LTOEQ saveOperator exp
    (140) opSExp -> . GTOEQ saveOperator exp
    (141) opSExp -> . GT saveOperator exp
    (142) opSExp -> . LT saveOperator exp
    (143) opSExp -> . empty
    (182) empty -> .

    EQ              shift and go to state 261
    DIF             shift and go to state 258
    LTOEQ           shift and go to state 257
    GTOEQ           shift and go to state 260
    GT              shift and go to state 256
    LT              shift and go to state 259
    AND             reduce using rule 182 (empty -> .)
    OR              reduce using rule 182 (empty -> .)
    ,               reduce using rule 182 (empty -> .)
    PARFIN          reduce using rule 182 (empty -> .)
    ;               reduce using rule 182 (empty -> .)
    ]               reduce using rule 182 (empty -> .)

    empty                          shift and go to state 262
    opSExp                         shift and go to state 263

state 213

    (92) forCycle -> errorForCycle FOR PARINI assign ; . saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign
    (90) saveReturn -> .

    CTES            reduce using rule 90 (saveReturn -> .)
    PARINI          reduce using rule 90 (saveReturn -> .)
    ID              reduce using rule 90 (saveReturn -> .)
    CTED            reduce using rule 90 (saveReturn -> .)
    CTEF            reduce using rule 90 (saveReturn -> .)
    TRUE            reduce using rule 90 (saveReturn -> .)
    FALSE           reduce using rule 90 (saveReturn -> .)

    saveReturn                     shift and go to state 264

state 214

    (124) condition -> errorCondition IF PARINI expresion PARFIN . saveFalso { body } optionalElse rellenaFalso
    (185) saveFalso -> .

    {               reduce using rule 185 (saveFalso -> .)

    saveFalso                      shift and go to state 265

state 215

    (57) function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable .

    FUNC            reduce using rule 57 (function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable .)
    MAIN            reduce using rule 57 (function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable .)


state 216

    (69) opReturns -> errorOpReturns RETURNS type . saveReturnType { opVars saveQuadruple body return
    (72) saveReturnType -> .

    {               reduce using rule 72 (saveReturnType -> .)

    saveReturnType                 shift and go to state 266

state 217

    (70) opReturns -> { opVars saveQuadruple . body
    (82) body -> . errorBody cyInstruction
    (83) body -> . empty
    (84) errorBody -> .
    (182) empty -> .

    ID              reduce using rule 84 (errorBody -> .)
    PRINT           reduce using rule 84 (errorBody -> .)
    READ            reduce using rule 84 (errorBody -> .)
    IF              reduce using rule 84 (errorBody -> .)
    FOR             reduce using rule 84 (errorBody -> .)
    WHILE           reduce using rule 84 (errorBody -> .)
    }               reduce using rule 182 (empty -> .)

    body                           shift and go to state 267
    errorBody                      shift and go to state 87
    empty                          shift and go to state 88

state 218

    (52) cyParam -> empty . saveTypeParam saveID
    (55) saveTypeParam -> .

    PARFIN          reduce using rule 55 (saveTypeParam -> .)

    saveTypeParam                  shift and go to state 268

state 219

    (51) cyParam -> errorCyParam . saveTypeParam saveID ; param
    (55) saveTypeParam -> .

    ;               reduce using rule 55 (saveTypeParam -> .)

    saveTypeParam                  shift and go to state 269

state 220

    (49) param -> saveType type errorParam ID cyTypeParam cyParam .

    PARFIN          reduce using rule 49 (param -> saveType type errorParam ID cyTypeParam cyParam .)


state 221

    (120) optionalMatrix -> createSecondDimension [ CTED saveSecondDimensionSize . ]

    ]               shift and go to state 270


state 222

    (33) cyRead -> , . fix ID saveVariable performRead cyRead
    (35) fix -> .

    ID              reduce using rule 35 (fix -> .)

    fix                            shift and go to state 271

state 223

    (32) read -> READ PARINI ID saveVariable performRead cyRead . PARFIN

    PARFIN          shift and go to state 272


state 224

    (34) cyRead -> empty .

    PARFIN          reduce using rule 34 (cyRead -> empty .)


state 225

    (158) fact -> PARINI putFondo expresion PARFIN . takeFondo
    (194) takeFondo -> .

    MULT            reduce using rule 194 (takeFondo -> .)
    DIV             reduce using rule 194 (takeFondo -> .)
    RES             reduce using rule 194 (takeFondo -> .)
    PLUS            reduce using rule 194 (takeFondo -> .)
    MINUS           reduce using rule 194 (takeFondo -> .)
    ,               reduce using rule 194 (takeFondo -> .)
    PARFIN          reduce using rule 194 (takeFondo -> .)
    EQ              reduce using rule 194 (takeFondo -> .)
    DIF             reduce using rule 194 (takeFondo -> .)
    LTOEQ           reduce using rule 194 (takeFondo -> .)
    GTOEQ           reduce using rule 194 (takeFondo -> .)
    GT              reduce using rule 194 (takeFondo -> .)
    LT              reduce using rule 194 (takeFondo -> .)
    AND             reduce using rule 194 (takeFondo -> .)
    OR              reduce using rule 194 (takeFondo -> .)
    ;               reduce using rule 194 (takeFondo -> .)
    ]               reduce using rule 194 (takeFondo -> .)

    takeFondo                      shift and go to state 273

state 226

    (166) opStruct -> errorOpStruct . saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct
    (169) saveToDimensionStacks -> .

    [               reduce using rule 169 (saveToDimensionStacks -> .)

    saveToDimensionStacks          shift and go to state 274

state 227

    (161) opAccess -> resaveID opStruct .

    MULT            reduce using rule 161 (opAccess -> resaveID opStruct .)
    DIV             reduce using rule 161 (opAccess -> resaveID opStruct .)
    RES             reduce using rule 161 (opAccess -> resaveID opStruct .)
    PLUS            reduce using rule 161 (opAccess -> resaveID opStruct .)
    MINUS           reduce using rule 161 (opAccess -> resaveID opStruct .)
    ,               reduce using rule 161 (opAccess -> resaveID opStruct .)
    PARFIN          reduce using rule 161 (opAccess -> resaveID opStruct .)
    EQ              reduce using rule 161 (opAccess -> resaveID opStruct .)
    DIF             reduce using rule 161 (opAccess -> resaveID opStruct .)
    LTOEQ           reduce using rule 161 (opAccess -> resaveID opStruct .)
    GTOEQ           reduce using rule 161 (opAccess -> resaveID opStruct .)
    GT              reduce using rule 161 (opAccess -> resaveID opStruct .)
    LT              reduce using rule 161 (opAccess -> resaveID opStruct .)
    AND             reduce using rule 161 (opAccess -> resaveID opStruct .)
    OR              reduce using rule 161 (opAccess -> resaveID opStruct .)
    ;               reduce using rule 161 (opAccess -> resaveID opStruct .)
    ]               reduce using rule 161 (opAccess -> resaveID opStruct .)


state 228

    (159) fact -> ID saveVariable opAccess errorOpAccess .

    MULT            reduce using rule 159 (fact -> ID saveVariable opAccess errorOpAccess .)
    DIV             reduce using rule 159 (fact -> ID saveVariable opAccess errorOpAccess .)
    RES             reduce using rule 159 (fact -> ID saveVariable opAccess errorOpAccess .)
    PLUS            reduce using rule 159 (fact -> ID saveVariable opAccess errorOpAccess .)
    MINUS           reduce using rule 159 (fact -> ID saveVariable opAccess errorOpAccess .)
    EQ              reduce using rule 159 (fact -> ID saveVariable opAccess errorOpAccess .)
    DIF             reduce using rule 159 (fact -> ID saveVariable opAccess errorOpAccess .)
    LTOEQ           reduce using rule 159 (fact -> ID saveVariable opAccess errorOpAccess .)
    GTOEQ           reduce using rule 159 (fact -> ID saveVariable opAccess errorOpAccess .)
    GT              reduce using rule 159 (fact -> ID saveVariable opAccess errorOpAccess .)
    LT              reduce using rule 159 (fact -> ID saveVariable opAccess errorOpAccess .)
    AND             reduce using rule 159 (fact -> ID saveVariable opAccess errorOpAccess .)
    OR              reduce using rule 159 (fact -> ID saveVariable opAccess errorOpAccess .)
    ]               reduce using rule 159 (fact -> ID saveVariable opAccess errorOpAccess .)
    ,               reduce using rule 159 (fact -> ID saveVariable opAccess errorOpAccess .)
    PARFIN          reduce using rule 159 (fact -> ID saveVariable opAccess errorOpAccess .)
    ;               reduce using rule 159 (fact -> ID saveVariable opAccess errorOpAccess .)


state 229

    (176) dictIndex -> FIRST .

    MULT            reduce using rule 176 (dictIndex -> FIRST .)
    DIV             reduce using rule 176 (dictIndex -> FIRST .)
    RES             reduce using rule 176 (dictIndex -> FIRST .)
    PLUS            reduce using rule 176 (dictIndex -> FIRST .)
    MINUS           reduce using rule 176 (dictIndex -> FIRST .)
    ,               reduce using rule 176 (dictIndex -> FIRST .)
    PARFIN          reduce using rule 176 (dictIndex -> FIRST .)
    EQ              reduce using rule 176 (dictIndex -> FIRST .)
    DIF             reduce using rule 176 (dictIndex -> FIRST .)
    LTOEQ           reduce using rule 176 (dictIndex -> FIRST .)
    GTOEQ           reduce using rule 176 (dictIndex -> FIRST .)
    GT              reduce using rule 176 (dictIndex -> FIRST .)
    LT              reduce using rule 176 (dictIndex -> FIRST .)
    AND             reduce using rule 176 (dictIndex -> FIRST .)
    OR              reduce using rule 176 (dictIndex -> FIRST .)
    ;               reduce using rule 176 (dictIndex -> FIRST .)
    ]               reduce using rule 176 (dictIndex -> FIRST .)


state 230

    (177) dictIndex -> LAST .

    MULT            reduce using rule 177 (dictIndex -> LAST .)
    DIV             reduce using rule 177 (dictIndex -> LAST .)
    RES             reduce using rule 177 (dictIndex -> LAST .)
    PLUS            reduce using rule 177 (dictIndex -> LAST .)
    MINUS           reduce using rule 177 (dictIndex -> LAST .)
    ,               reduce using rule 177 (dictIndex -> LAST .)
    PARFIN          reduce using rule 177 (dictIndex -> LAST .)
    EQ              reduce using rule 177 (dictIndex -> LAST .)
    DIF             reduce using rule 177 (dictIndex -> LAST .)
    LTOEQ           reduce using rule 177 (dictIndex -> LAST .)
    GTOEQ           reduce using rule 177 (dictIndex -> LAST .)
    GT              reduce using rule 177 (dictIndex -> LAST .)
    LT              reduce using rule 177 (dictIndex -> LAST .)
    AND             reduce using rule 177 (dictIndex -> LAST .)
    OR              reduce using rule 177 (dictIndex -> LAST .)
    ;               reduce using rule 177 (dictIndex -> LAST .)
    ]               reduce using rule 177 (dictIndex -> LAST .)


state 231

    (175) opDictionary -> . dictIndex .

    MULT            reduce using rule 175 (opDictionary -> . dictIndex .)
    DIV             reduce using rule 175 (opDictionary -> . dictIndex .)
    RES             reduce using rule 175 (opDictionary -> . dictIndex .)
    PLUS            reduce using rule 175 (opDictionary -> . dictIndex .)
    MINUS           reduce using rule 175 (opDictionary -> . dictIndex .)
    ,               reduce using rule 175 (opDictionary -> . dictIndex .)
    PARFIN          reduce using rule 175 (opDictionary -> . dictIndex .)
    EQ              reduce using rule 175 (opDictionary -> . dictIndex .)
    DIF             reduce using rule 175 (opDictionary -> . dictIndex .)
    LTOEQ           reduce using rule 175 (opDictionary -> . dictIndex .)
    GTOEQ           reduce using rule 175 (opDictionary -> . dictIndex .)
    GT              reduce using rule 175 (opDictionary -> . dictIndex .)
    LT              reduce using rule 175 (opDictionary -> . dictIndex .)
    AND             reduce using rule 175 (opDictionary -> . dictIndex .)
    OR              reduce using rule 175 (opDictionary -> . dictIndex .)
    ;               reduce using rule 175 (opDictionary -> . dictIndex .)
    ]               reduce using rule 175 (opDictionary -> . dictIndex .)


state 232

    (145) exp -> term performAddSub errorCyExp cyExp .

    EQ              reduce using rule 145 (exp -> term performAddSub errorCyExp cyExp .)
    DIF             reduce using rule 145 (exp -> term performAddSub errorCyExp cyExp .)
    LTOEQ           reduce using rule 145 (exp -> term performAddSub errorCyExp cyExp .)
    GTOEQ           reduce using rule 145 (exp -> term performAddSub errorCyExp cyExp .)
    GT              reduce using rule 145 (exp -> term performAddSub errorCyExp cyExp .)
    LT              reduce using rule 145 (exp -> term performAddSub errorCyExp cyExp .)
    AND             reduce using rule 145 (exp -> term performAddSub errorCyExp cyExp .)
    OR              reduce using rule 145 (exp -> term performAddSub errorCyExp cyExp .)
    PARFIN          reduce using rule 145 (exp -> term performAddSub errorCyExp cyExp .)
    ,               reduce using rule 145 (exp -> term performAddSub errorCyExp cyExp .)
    ;               reduce using rule 145 (exp -> term performAddSub errorCyExp cyExp .)
    ]               reduce using rule 145 (exp -> term performAddSub errorCyExp cyExp .)


state 233

    (146) cyExp -> PLUS . saveOperator exp
    (192) saveOperator -> .

    CTES            reduce using rule 192 (saveOperator -> .)
    PARINI          reduce using rule 192 (saveOperator -> .)
    ID              reduce using rule 192 (saveOperator -> .)
    CTED            reduce using rule 192 (saveOperator -> .)
    CTEF            reduce using rule 192 (saveOperator -> .)
    TRUE            reduce using rule 192 (saveOperator -> .)
    FALSE           reduce using rule 192 (saveOperator -> .)

    saveOperator                   shift and go to state 275

state 234

    (147) cyExp -> MINUS . saveOperator exp
    (192) saveOperator -> .

    CTES            reduce using rule 192 (saveOperator -> .)
    PARINI          reduce using rule 192 (saveOperator -> .)
    ID              reduce using rule 192 (saveOperator -> .)
    CTED            reduce using rule 192 (saveOperator -> .)
    CTEF            reduce using rule 192 (saveOperator -> .)
    TRUE            reduce using rule 192 (saveOperator -> .)
    FALSE           reduce using rule 192 (saveOperator -> .)

    saveOperator                   shift and go to state 276

state 235

    (148) cyExp -> empty .

    ,               reduce using rule 148 (cyExp -> empty .)
    PARFIN          reduce using rule 148 (cyExp -> empty .)
    EQ              reduce using rule 148 (cyExp -> empty .)
    DIF             reduce using rule 148 (cyExp -> empty .)
    LTOEQ           reduce using rule 148 (cyExp -> empty .)
    GTOEQ           reduce using rule 148 (cyExp -> empty .)
    GT              reduce using rule 148 (cyExp -> empty .)
    LT              reduce using rule 148 (cyExp -> empty .)
    AND             reduce using rule 148 (cyExp -> empty .)
    OR              reduce using rule 148 (cyExp -> empty .)
    ;               reduce using rule 148 (cyExp -> empty .)
    ]               reduce using rule 148 (cyExp -> empty .)


state 236

    (29) print -> PRINT PARINI exp performPrint cyPrint PARFIN .

    ;               reduce using rule 29 (print -> PRINT PARINI exp performPrint cyPrint PARFIN .)


state 237

    (30) cyPrint -> , fix . exp performPrint cyPrint
    (145) exp -> . term performAddSub errorCyExp cyExp
    (150) term -> . fact performMulDiv cyTerm
    (155) fact -> . CTES saveConstantString
    (156) fact -> . cte
    (157) fact -> . funcCall
    (158) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (159) fact -> . ID saveVariable opAccess errorOpAccess
    (178) cte -> . CTED saveConstantInt
    (179) cte -> . CTEF saveConstantFloat
    (180) cte -> . TRUE saveConstantBool
    (181) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 277
    fact                           shift and go to state 146

state 238

    (153) cyTerm -> RES saveOperator . term
    (150) term -> . fact performMulDiv cyTerm
    (155) fact -> . CTES saveConstantString
    (156) fact -> . cte
    (157) fact -> . funcCall
    (158) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (159) fact -> . ID saveVariable opAccess errorOpAccess
    (178) cte -> . CTED saveConstantInt
    (179) cte -> . CTEF saveConstantFloat
    (180) cte -> . TRUE saveConstantBool
    (181) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    term                           shift and go to state 278
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    fact                           shift and go to state 146

state 239

    (152) cyTerm -> DIV saveOperator . term
    (150) term -> . fact performMulDiv cyTerm
    (155) fact -> . CTES saveConstantString
    (156) fact -> . cte
    (157) fact -> . funcCall
    (158) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (159) fact -> . ID saveVariable opAccess errorOpAccess
    (178) cte -> . CTED saveConstantInt
    (179) cte -> . CTEF saveConstantFloat
    (180) cte -> . TRUE saveConstantBool
    (181) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    term                           shift and go to state 279
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    fact                           shift and go to state 146

state 240

    (151) cyTerm -> MULT saveOperator . errorFact term
    (160) errorFact -> .

    CTES            reduce using rule 160 (errorFact -> .)
    PARINI          reduce using rule 160 (errorFact -> .)
    ID              reduce using rule 160 (errorFact -> .)
    CTED            reduce using rule 160 (errorFact -> .)
    CTEF            reduce using rule 160 (errorFact -> .)
    TRUE            reduce using rule 160 (errorFact -> .)
    FALSE           reduce using rule 160 (errorFact -> .)

    errorFact                      shift and go to state 280

state 241

    (88) whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN . saveFalso { body } repeatWhile
    (185) saveFalso -> .

    {               reduce using rule 185 (saveFalso -> .)

    saveFalso                      shift and go to state 281

state 242

    (39) init -> ASGN saveOperator errorInit . initWith
    (41) initWith -> . expresion
    (42) initWith -> . funcCall
    (131) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams
    (136) sExp -> . exp errorOpSExp opSExp performRelational
    (145) exp -> . term performAddSub errorCyExp cyExp
    (150) term -> . fact performMulDiv cyTerm
    (155) fact -> . CTES saveConstantString
    (156) fact -> . cte
    (157) fact -> . funcCall
    (158) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (159) fact -> . ID saveVariable opAccess errorOpAccess
    (178) cte -> . CTED saveConstantInt
    (179) cte -> . CTEF saveConstantFloat
    (180) cte -> . TRUE saveConstantBool
    (181) cte -> . FALSE saveConstantBool

    ID              shift and go to state 283
    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    initWith                       shift and go to state 282
    sExp                           shift and go to state 176
    expresion                      shift and go to state 284
    term                           shift and go to state 140
    funcCall                       shift and go to state 285
    cte                            shift and go to state 143
    exp                            shift and go to state 179
    fact                           shift and go to state 146

state 243

    (43) initDict -> ASGN PARINI dictType . : dictType PARFIN errorInitDict

    :               shift and go to state 286


state 244

    (45) dictType -> errorDictType . CTES

    CTES            shift and go to state 287


state 245

    (46) dictType -> cte .

    PARFIN          reduce using rule 46 (dictType -> cte .)
    :               reduce using rule 46 (dictType -> cte .)


state 246

    (47) dictType -> ID .

    PARFIN          reduce using rule 47 (dictType -> ID .)
    :               reduce using rule 47 (dictType -> ID .)


state 247

    (102) assignOptions -> resaveID saveToDimensionStacks [ . expresion verifyIndex ] assignMatrix accessStruct init
    (131) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (136) sExp -> . exp errorOpSExp opSExp performRelational
    (145) exp -> . term performAddSub errorCyExp cyExp
    (150) term -> . fact performMulDiv cyTerm
    (155) fact -> . CTES saveConstantString
    (156) fact -> . cte
    (157) fact -> . funcCall
    (158) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (159) fact -> . ID saveVariable opAccess errorOpAccess
    (178) cte -> . CTED saveConstantInt
    (179) cte -> . CTEF saveConstantFloat
    (180) cte -> . TRUE saveConstantBool
    (181) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    sExp                           shift and go to state 176
    expresion                      shift and go to state 288
    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 179
    fact                           shift and go to state 146

state 248

    (106) funcCall -> ID checkFunction PARINI opParamCall PARFIN checkNumParams .

    MULT            reduce using rule 106 (funcCall -> ID checkFunction PARINI opParamCall PARFIN checkNumParams .)
    DIV             reduce using rule 106 (funcCall -> ID checkFunction PARINI opParamCall PARFIN checkNumParams .)
    RES             reduce using rule 106 (funcCall -> ID checkFunction PARINI opParamCall PARFIN checkNumParams .)
    PLUS            reduce using rule 106 (funcCall -> ID checkFunction PARINI opParamCall PARFIN checkNumParams .)
    MINUS           reduce using rule 106 (funcCall -> ID checkFunction PARINI opParamCall PARFIN checkNumParams .)
    AND             reduce using rule 106 (funcCall -> ID checkFunction PARINI opParamCall PARFIN checkNumParams .)
    OR              reduce using rule 106 (funcCall -> ID checkFunction PARINI opParamCall PARFIN checkNumParams .)
    ,               reduce using rule 106 (funcCall -> ID checkFunction PARINI opParamCall PARFIN checkNumParams .)
    PARFIN          reduce using rule 106 (funcCall -> ID checkFunction PARINI opParamCall PARFIN checkNumParams .)
    ;               reduce using rule 106 (funcCall -> ID checkFunction PARINI opParamCall PARFIN checkNumParams .)
    ]               reduce using rule 106 (funcCall -> ID checkFunction PARINI opParamCall PARFIN checkNumParams .)
    EQ              reduce using rule 106 (funcCall -> ID checkFunction PARINI opParamCall PARFIN checkNumParams .)
    DIF             reduce using rule 106 (funcCall -> ID checkFunction PARINI opParamCall PARFIN checkNumParams .)
    LTOEQ           reduce using rule 106 (funcCall -> ID checkFunction PARINI opParamCall PARFIN checkNumParams .)
    GTOEQ           reduce using rule 106 (funcCall -> ID checkFunction PARINI opParamCall PARFIN checkNumParams .)
    GT              reduce using rule 106 (funcCall -> ID checkFunction PARINI opParamCall PARFIN checkNumParams .)
    LT              reduce using rule 106 (funcCall -> ID checkFunction PARINI opParamCall PARFIN checkNumParams .)


state 249

    (133) cyExpresion -> AND . saveOperator expresion
    (192) saveOperator -> .

    CTES            reduce using rule 192 (saveOperator -> .)
    PARINI          reduce using rule 192 (saveOperator -> .)
    ID              reduce using rule 192 (saveOperator -> .)
    CTED            reduce using rule 192 (saveOperator -> .)
    CTEF            reduce using rule 192 (saveOperator -> .)
    TRUE            reduce using rule 192 (saveOperator -> .)
    FALSE           reduce using rule 192 (saveOperator -> .)

    saveOperator                   shift and go to state 289

state 250

    (134) cyExpresion -> OR . saveOperator expresion
    (192) saveOperator -> .

    CTES            reduce using rule 192 (saveOperator -> .)
    PARINI          reduce using rule 192 (saveOperator -> .)
    ID              reduce using rule 192 (saveOperator -> .)
    CTED            reduce using rule 192 (saveOperator -> .)
    CTEF            reduce using rule 192 (saveOperator -> .)
    TRUE            reduce using rule 192 (saveOperator -> .)
    FALSE           reduce using rule 192 (saveOperator -> .)

    saveOperator                   shift and go to state 290

state 251

    (131) expresion -> sExp performAndOr cyExpresion . errorExpresion
    (132) errorExpresion -> .

    ,               reduce using rule 132 (errorExpresion -> .)
    PARFIN          reduce using rule 132 (errorExpresion -> .)
    ;               reduce using rule 132 (errorExpresion -> .)
    ]               reduce using rule 132 (errorExpresion -> .)

    errorExpresion                 shift and go to state 291

state 252

    (135) cyExpresion -> empty .

    ,               reduce using rule 135 (cyExpresion -> empty .)
    PARFIN          reduce using rule 135 (cyExpresion -> empty .)
    ;               reduce using rule 135 (cyExpresion -> empty .)
    ]               reduce using rule 135 (cyExpresion -> empty .)


state 253

    (109) opParamCall -> expresion checkParamType cyParamCall .

    PARFIN          reduce using rule 109 (opParamCall -> expresion checkParamType cyParamCall .)


state 254

    (112) cyParamCall -> empty .

    PARFIN          reduce using rule 112 (cyParamCall -> empty .)


state 255

    (111) cyParamCall -> , . expresion checkParamType cyParamCall
    (131) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (136) sExp -> . exp errorOpSExp opSExp performRelational
    (145) exp -> . term performAddSub errorCyExp cyExp
    (150) term -> . fact performMulDiv cyTerm
    (155) fact -> . CTES saveConstantString
    (156) fact -> . cte
    (157) fact -> . funcCall
    (158) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (159) fact -> . ID saveVariable opAccess errorOpAccess
    (178) cte -> . CTED saveConstantInt
    (179) cte -> . CTEF saveConstantFloat
    (180) cte -> . TRUE saveConstantBool
    (181) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    sExp                           shift and go to state 176
    expresion                      shift and go to state 292
    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 179
    fact                           shift and go to state 146

state 256

    (141) opSExp -> GT . saveOperator exp
    (192) saveOperator -> .

    CTES            reduce using rule 192 (saveOperator -> .)
    PARINI          reduce using rule 192 (saveOperator -> .)
    ID              reduce using rule 192 (saveOperator -> .)
    CTED            reduce using rule 192 (saveOperator -> .)
    CTEF            reduce using rule 192 (saveOperator -> .)
    TRUE            reduce using rule 192 (saveOperator -> .)
    FALSE           reduce using rule 192 (saveOperator -> .)

    saveOperator                   shift and go to state 293

state 257

    (139) opSExp -> LTOEQ . saveOperator exp
    (192) saveOperator -> .

    CTES            reduce using rule 192 (saveOperator -> .)
    PARINI          reduce using rule 192 (saveOperator -> .)
    ID              reduce using rule 192 (saveOperator -> .)
    CTED            reduce using rule 192 (saveOperator -> .)
    CTEF            reduce using rule 192 (saveOperator -> .)
    TRUE            reduce using rule 192 (saveOperator -> .)
    FALSE           reduce using rule 192 (saveOperator -> .)

    saveOperator                   shift and go to state 294

state 258

    (138) opSExp -> DIF . saveOperator exp
    (192) saveOperator -> .

    CTES            reduce using rule 192 (saveOperator -> .)
    PARINI          reduce using rule 192 (saveOperator -> .)
    ID              reduce using rule 192 (saveOperator -> .)
    CTED            reduce using rule 192 (saveOperator -> .)
    CTEF            reduce using rule 192 (saveOperator -> .)
    TRUE            reduce using rule 192 (saveOperator -> .)
    FALSE           reduce using rule 192 (saveOperator -> .)

    saveOperator                   shift and go to state 295

state 259

    (142) opSExp -> LT . saveOperator exp
    (192) saveOperator -> .

    CTES            reduce using rule 192 (saveOperator -> .)
    PARINI          reduce using rule 192 (saveOperator -> .)
    ID              reduce using rule 192 (saveOperator -> .)
    CTED            reduce using rule 192 (saveOperator -> .)
    CTEF            reduce using rule 192 (saveOperator -> .)
    TRUE            reduce using rule 192 (saveOperator -> .)
    FALSE           reduce using rule 192 (saveOperator -> .)

    saveOperator                   shift and go to state 296

state 260

    (140) opSExp -> GTOEQ . saveOperator exp
    (192) saveOperator -> .

    CTES            reduce using rule 192 (saveOperator -> .)
    PARINI          reduce using rule 192 (saveOperator -> .)
    ID              reduce using rule 192 (saveOperator -> .)
    CTED            reduce using rule 192 (saveOperator -> .)
    CTEF            reduce using rule 192 (saveOperator -> .)
    TRUE            reduce using rule 192 (saveOperator -> .)
    FALSE           reduce using rule 192 (saveOperator -> .)

    saveOperator                   shift and go to state 297

state 261

    (137) opSExp -> EQ . saveOperator exp
    (192) saveOperator -> .

    CTES            reduce using rule 192 (saveOperator -> .)
    PARINI          reduce using rule 192 (saveOperator -> .)
    ID              reduce using rule 192 (saveOperator -> .)
    CTED            reduce using rule 192 (saveOperator -> .)
    CTEF            reduce using rule 192 (saveOperator -> .)
    TRUE            reduce using rule 192 (saveOperator -> .)
    FALSE           reduce using rule 192 (saveOperator -> .)

    saveOperator                   shift and go to state 298

state 262

    (143) opSExp -> empty .

    AND             reduce using rule 143 (opSExp -> empty .)
    OR              reduce using rule 143 (opSExp -> empty .)
    ,               reduce using rule 143 (opSExp -> empty .)
    PARFIN          reduce using rule 143 (opSExp -> empty .)
    ;               reduce using rule 143 (opSExp -> empty .)
    ]               reduce using rule 143 (opSExp -> empty .)


state 263

    (136) sExp -> exp errorOpSExp opSExp . performRelational
    (198) performRelational -> .

    AND             reduce using rule 198 (performRelational -> .)
    OR              reduce using rule 198 (performRelational -> .)
    ,               reduce using rule 198 (performRelational -> .)
    PARFIN          reduce using rule 198 (performRelational -> .)
    ;               reduce using rule 198 (performRelational -> .)
    ]               reduce using rule 198 (performRelational -> .)

    performRelational              shift and go to state 299

state 264

    (92) forCycle -> errorForCycle FOR PARINI assign ; saveReturn . expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign
    (131) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (136) sExp -> . exp errorOpSExp opSExp performRelational
    (145) exp -> . term performAddSub errorCyExp cyExp
    (150) term -> . fact performMulDiv cyTerm
    (155) fact -> . CTES saveConstantString
    (156) fact -> . cte
    (157) fact -> . funcCall
    (158) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (159) fact -> . ID saveVariable opAccess errorOpAccess
    (178) cte -> . CTED saveConstantInt
    (179) cte -> . CTEF saveConstantFloat
    (180) cte -> . TRUE saveConstantBool
    (181) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    sExp                           shift and go to state 176
    expresion                      shift and go to state 300
    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    fact                           shift and go to state 146
    exp                            shift and go to state 179

state 265

    (124) condition -> errorCondition IF PARINI expresion PARFIN saveFalso . { body } optionalElse rellenaFalso

    {               shift and go to state 301


state 266

    (69) opReturns -> errorOpReturns RETURNS type saveReturnType . { opVars saveQuadruple body return

    {               shift and go to state 302


state 267

    (70) opReturns -> { opVars saveQuadruple body .

    }               reduce using rule 70 (opReturns -> { opVars saveQuadruple body .)


state 268

    (52) cyParam -> empty saveTypeParam . saveID
    (11) saveID -> .

    PARFIN          reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 303

state 269

    (51) cyParam -> errorCyParam saveTypeParam . saveID ; param
    (11) saveID -> .

    ;               reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 304

state 270

    (120) optionalMatrix -> createSecondDimension [ CTED saveSecondDimensionSize ] .

    ;               reduce using rule 120 (optionalMatrix -> createSecondDimension [ CTED saveSecondDimensionSize ] .)


state 271

    (33) cyRead -> , fix . ID saveVariable performRead cyRead

    ID              shift and go to state 305


state 272

    (32) read -> READ PARINI ID saveVariable performRead cyRead PARFIN .

    ;               reduce using rule 32 (read -> READ PARINI ID saveVariable performRead cyRead PARFIN .)


state 273

    (158) fact -> PARINI putFondo expresion PARFIN takeFondo .

    MULT            reduce using rule 158 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    DIV             reduce using rule 158 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    RES             reduce using rule 158 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    PLUS            reduce using rule 158 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    MINUS           reduce using rule 158 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    EQ              reduce using rule 158 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    DIF             reduce using rule 158 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    LTOEQ           reduce using rule 158 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    GTOEQ           reduce using rule 158 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    GT              reduce using rule 158 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    LT              reduce using rule 158 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    AND             reduce using rule 158 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    OR              reduce using rule 158 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    ]               reduce using rule 158 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    ,               reduce using rule 158 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    PARFIN          reduce using rule 158 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    ;               reduce using rule 158 (fact -> PARINI putFondo expresion PARFIN takeFondo .)


state 274

    (166) opStruct -> errorOpStruct saveToDimensionStacks . [ expresion verifyIndex ] opMatrix accessStruct

    [               shift and go to state 306


state 275

    (146) cyExp -> PLUS saveOperator . exp
    (145) exp -> . term performAddSub errorCyExp cyExp
    (150) term -> . fact performMulDiv cyTerm
    (155) fact -> . CTES saveConstantString
    (156) fact -> . cte
    (157) fact -> . funcCall
    (158) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (159) fact -> . ID saveVariable opAccess errorOpAccess
    (178) cte -> . CTED saveConstantInt
    (179) cte -> . CTEF saveConstantFloat
    (180) cte -> . TRUE saveConstantBool
    (181) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 307
    fact                           shift and go to state 146

state 276

    (147) cyExp -> MINUS saveOperator . exp
    (145) exp -> . term performAddSub errorCyExp cyExp
    (150) term -> . fact performMulDiv cyTerm
    (155) fact -> . CTES saveConstantString
    (156) fact -> . cte
    (157) fact -> . funcCall
    (158) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (159) fact -> . ID saveVariable opAccess errorOpAccess
    (178) cte -> . CTED saveConstantInt
    (179) cte -> . CTEF saveConstantFloat
    (180) cte -> . TRUE saveConstantBool
    (181) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 308
    fact                           shift and go to state 146

state 277

    (30) cyPrint -> , fix exp . performPrint cyPrint
    (200) performPrint -> .

    ,               reduce using rule 200 (performPrint -> .)
    PARFIN          reduce using rule 200 (performPrint -> .)

    performPrint                   shift and go to state 309

state 278

    (153) cyTerm -> RES saveOperator term .

    PLUS            reduce using rule 153 (cyTerm -> RES saveOperator term .)
    MINUS           reduce using rule 153 (cyTerm -> RES saveOperator term .)
    ,               reduce using rule 153 (cyTerm -> RES saveOperator term .)
    PARFIN          reduce using rule 153 (cyTerm -> RES saveOperator term .)
    EQ              reduce using rule 153 (cyTerm -> RES saveOperator term .)
    DIF             reduce using rule 153 (cyTerm -> RES saveOperator term .)
    LTOEQ           reduce using rule 153 (cyTerm -> RES saveOperator term .)
    GTOEQ           reduce using rule 153 (cyTerm -> RES saveOperator term .)
    GT              reduce using rule 153 (cyTerm -> RES saveOperator term .)
    LT              reduce using rule 153 (cyTerm -> RES saveOperator term .)
    AND             reduce using rule 153 (cyTerm -> RES saveOperator term .)
    OR              reduce using rule 153 (cyTerm -> RES saveOperator term .)
    ;               reduce using rule 153 (cyTerm -> RES saveOperator term .)
    ]               reduce using rule 153 (cyTerm -> RES saveOperator term .)


state 279

    (152) cyTerm -> DIV saveOperator term .

    PLUS            reduce using rule 152 (cyTerm -> DIV saveOperator term .)
    MINUS           reduce using rule 152 (cyTerm -> DIV saveOperator term .)
    ,               reduce using rule 152 (cyTerm -> DIV saveOperator term .)
    PARFIN          reduce using rule 152 (cyTerm -> DIV saveOperator term .)
    EQ              reduce using rule 152 (cyTerm -> DIV saveOperator term .)
    DIF             reduce using rule 152 (cyTerm -> DIV saveOperator term .)
    LTOEQ           reduce using rule 152 (cyTerm -> DIV saveOperator term .)
    GTOEQ           reduce using rule 152 (cyTerm -> DIV saveOperator term .)
    GT              reduce using rule 152 (cyTerm -> DIV saveOperator term .)
    LT              reduce using rule 152 (cyTerm -> DIV saveOperator term .)
    AND             reduce using rule 152 (cyTerm -> DIV saveOperator term .)
    OR              reduce using rule 152 (cyTerm -> DIV saveOperator term .)
    ;               reduce using rule 152 (cyTerm -> DIV saveOperator term .)
    ]               reduce using rule 152 (cyTerm -> DIV saveOperator term .)


state 280

    (151) cyTerm -> MULT saveOperator errorFact . term
    (150) term -> . fact performMulDiv cyTerm
    (155) fact -> . CTES saveConstantString
    (156) fact -> . cte
    (157) fact -> . funcCall
    (158) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (159) fact -> . ID saveVariable opAccess errorOpAccess
    (178) cte -> . CTED saveConstantInt
    (179) cte -> . CTEF saveConstantFloat
    (180) cte -> . TRUE saveConstantBool
    (181) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    term                           shift and go to state 310
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    fact                           shift and go to state 146

state 281

    (88) whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso . { body } repeatWhile

    {               shift and go to state 311


state 282

    (39) init -> ASGN saveOperator errorInit initWith .

    ;               reduce using rule 39 (init -> ASGN saveOperator errorInit initWith .)
    PARFIN          reduce using rule 39 (init -> ASGN saveOperator errorInit initWith .)


state 283

    (106) funcCall -> ID . checkFunction PARINI opParamCall PARFIN checkNumParams
    (159) fact -> ID . saveVariable opAccess errorOpAccess
    (108) checkFunction -> .
    (191) saveVariable -> .

    PARINI          reduce using rule 108 (checkFunction -> .)
    .               reduce using rule 191 (saveVariable -> .)
    [               reduce using rule 191 (saveVariable -> .)
    MULT            reduce using rule 191 (saveVariable -> .)
    DIV             reduce using rule 191 (saveVariable -> .)
    RES             reduce using rule 191 (saveVariable -> .)
    PLUS            reduce using rule 191 (saveVariable -> .)
    MINUS           reduce using rule 191 (saveVariable -> .)
    EQ              reduce using rule 191 (saveVariable -> .)
    DIF             reduce using rule 191 (saveVariable -> .)
    LTOEQ           reduce using rule 191 (saveVariable -> .)
    GTOEQ           reduce using rule 191 (saveVariable -> .)
    GT              reduce using rule 191 (saveVariable -> .)
    LT              reduce using rule 191 (saveVariable -> .)
    AND             reduce using rule 191 (saveVariable -> .)
    OR              reduce using rule 191 (saveVariable -> .)
    ;               reduce using rule 191 (saveVariable -> .)
    PARFIN          reduce using rule 191 (saveVariable -> .)

    saveVariable                   shift and go to state 162
    checkFunction                  shift and go to state 124

state 284

    (41) initWith -> expresion .

    ;               reduce using rule 41 (initWith -> expresion .)
    PARFIN          reduce using rule 41 (initWith -> expresion .)


state 285

    (42) initWith -> funcCall .
    (157) fact -> funcCall .

  ! reduce/reduce conflict for ; resolved using rule 42 (initWith -> funcCall .)
  ! reduce/reduce conflict for PARFIN resolved using rule 42 (initWith -> funcCall .)
    ;               reduce using rule 42 (initWith -> funcCall .)
    PARFIN          reduce using rule 42 (initWith -> funcCall .)
    MULT            reduce using rule 157 (fact -> funcCall .)
    DIV             reduce using rule 157 (fact -> funcCall .)
    RES             reduce using rule 157 (fact -> funcCall .)
    PLUS            reduce using rule 157 (fact -> funcCall .)
    MINUS           reduce using rule 157 (fact -> funcCall .)
    EQ              reduce using rule 157 (fact -> funcCall .)
    DIF             reduce using rule 157 (fact -> funcCall .)
    LTOEQ           reduce using rule 157 (fact -> funcCall .)
    GTOEQ           reduce using rule 157 (fact -> funcCall .)
    GT              reduce using rule 157 (fact -> funcCall .)
    LT              reduce using rule 157 (fact -> funcCall .)
    AND             reduce using rule 157 (fact -> funcCall .)
    OR              reduce using rule 157 (fact -> funcCall .)

  ! ;               [ reduce using rule 157 (fact -> funcCall .) ]
  ! PARFIN          [ reduce using rule 157 (fact -> funcCall .) ]


state 286

    (43) initDict -> ASGN PARINI dictType : . dictType PARFIN errorInitDict
    (45) dictType -> . errorDictType CTES
    (46) dictType -> . cte
    (47) dictType -> . ID
    (48) errorDictType -> .
    (178) cte -> . CTED saveConstantInt
    (179) cte -> . CTEF saveConstantFloat
    (180) cte -> . TRUE saveConstantBool
    (181) cte -> . FALSE saveConstantBool

    ID              shift and go to state 246
    CTES            reduce using rule 48 (errorDictType -> .)
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    dictType                       shift and go to state 312
    errorDictType                  shift and go to state 244
    cte                            shift and go to state 245

state 287

    (45) dictType -> errorDictType CTES .

    PARFIN          reduce using rule 45 (dictType -> errorDictType CTES .)
    :               reduce using rule 45 (dictType -> errorDictType CTES .)


state 288

    (102) assignOptions -> resaveID saveToDimensionStacks [ expresion . verifyIndex ] assignMatrix accessStruct init
    (168) verifyIndex -> .

    ]               reduce using rule 168 (verifyIndex -> .)

    verifyIndex                    shift and go to state 313

state 289

    (133) cyExpresion -> AND saveOperator . expresion
    (131) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (136) sExp -> . exp errorOpSExp opSExp performRelational
    (145) exp -> . term performAddSub errorCyExp cyExp
    (150) term -> . fact performMulDiv cyTerm
    (155) fact -> . CTES saveConstantString
    (156) fact -> . cte
    (157) fact -> . funcCall
    (158) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (159) fact -> . ID saveVariable opAccess errorOpAccess
    (178) cte -> . CTED saveConstantInt
    (179) cte -> . CTEF saveConstantFloat
    (180) cte -> . TRUE saveConstantBool
    (181) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    sExp                           shift and go to state 176
    expresion                      shift and go to state 314
    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 179
    fact                           shift and go to state 146

state 290

    (134) cyExpresion -> OR saveOperator . expresion
    (131) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (136) sExp -> . exp errorOpSExp opSExp performRelational
    (145) exp -> . term performAddSub errorCyExp cyExp
    (150) term -> . fact performMulDiv cyTerm
    (155) fact -> . CTES saveConstantString
    (156) fact -> . cte
    (157) fact -> . funcCall
    (158) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (159) fact -> . ID saveVariable opAccess errorOpAccess
    (178) cte -> . CTED saveConstantInt
    (179) cte -> . CTEF saveConstantFloat
    (180) cte -> . TRUE saveConstantBool
    (181) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    sExp                           shift and go to state 176
    expresion                      shift and go to state 315
    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 179
    fact                           shift and go to state 146

state 291

    (131) expresion -> sExp performAndOr cyExpresion errorExpresion .

    ,               reduce using rule 131 (expresion -> sExp performAndOr cyExpresion errorExpresion .)
    PARFIN          reduce using rule 131 (expresion -> sExp performAndOr cyExpresion errorExpresion .)
    ;               reduce using rule 131 (expresion -> sExp performAndOr cyExpresion errorExpresion .)
    ]               reduce using rule 131 (expresion -> sExp performAndOr cyExpresion errorExpresion .)


state 292

    (111) cyParamCall -> , expresion . checkParamType cyParamCall
    (113) checkParamType -> .

    ,               reduce using rule 113 (checkParamType -> .)
    PARFIN          reduce using rule 113 (checkParamType -> .)

    checkParamType                 shift and go to state 316

state 293

    (141) opSExp -> GT saveOperator . exp
    (145) exp -> . term performAddSub errorCyExp cyExp
    (150) term -> . fact performMulDiv cyTerm
    (155) fact -> . CTES saveConstantString
    (156) fact -> . cte
    (157) fact -> . funcCall
    (158) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (159) fact -> . ID saveVariable opAccess errorOpAccess
    (178) cte -> . CTED saveConstantInt
    (179) cte -> . CTEF saveConstantFloat
    (180) cte -> . TRUE saveConstantBool
    (181) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 317
    fact                           shift and go to state 146

state 294

    (139) opSExp -> LTOEQ saveOperator . exp
    (145) exp -> . term performAddSub errorCyExp cyExp
    (150) term -> . fact performMulDiv cyTerm
    (155) fact -> . CTES saveConstantString
    (156) fact -> . cte
    (157) fact -> . funcCall
    (158) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (159) fact -> . ID saveVariable opAccess errorOpAccess
    (178) cte -> . CTED saveConstantInt
    (179) cte -> . CTEF saveConstantFloat
    (180) cte -> . TRUE saveConstantBool
    (181) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 318
    fact                           shift and go to state 146

state 295

    (138) opSExp -> DIF saveOperator . exp
    (145) exp -> . term performAddSub errorCyExp cyExp
    (150) term -> . fact performMulDiv cyTerm
    (155) fact -> . CTES saveConstantString
    (156) fact -> . cte
    (157) fact -> . funcCall
    (158) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (159) fact -> . ID saveVariable opAccess errorOpAccess
    (178) cte -> . CTED saveConstantInt
    (179) cte -> . CTEF saveConstantFloat
    (180) cte -> . TRUE saveConstantBool
    (181) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 319
    fact                           shift and go to state 146

state 296

    (142) opSExp -> LT saveOperator . exp
    (145) exp -> . term performAddSub errorCyExp cyExp
    (150) term -> . fact performMulDiv cyTerm
    (155) fact -> . CTES saveConstantString
    (156) fact -> . cte
    (157) fact -> . funcCall
    (158) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (159) fact -> . ID saveVariable opAccess errorOpAccess
    (178) cte -> . CTED saveConstantInt
    (179) cte -> . CTEF saveConstantFloat
    (180) cte -> . TRUE saveConstantBool
    (181) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 320
    fact                           shift and go to state 146

state 297

    (140) opSExp -> GTOEQ saveOperator . exp
    (145) exp -> . term performAddSub errorCyExp cyExp
    (150) term -> . fact performMulDiv cyTerm
    (155) fact -> . CTES saveConstantString
    (156) fact -> . cte
    (157) fact -> . funcCall
    (158) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (159) fact -> . ID saveVariable opAccess errorOpAccess
    (178) cte -> . CTED saveConstantInt
    (179) cte -> . CTEF saveConstantFloat
    (180) cte -> . TRUE saveConstantBool
    (181) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 321
    fact                           shift and go to state 146

state 298

    (137) opSExp -> EQ saveOperator . exp
    (145) exp -> . term performAddSub errorCyExp cyExp
    (150) term -> . fact performMulDiv cyTerm
    (155) fact -> . CTES saveConstantString
    (156) fact -> . cte
    (157) fact -> . funcCall
    (158) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (159) fact -> . ID saveVariable opAccess errorOpAccess
    (178) cte -> . CTED saveConstantInt
    (179) cte -> . CTEF saveConstantFloat
    (180) cte -> . TRUE saveConstantBool
    (181) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 322
    fact                           shift and go to state 146

state 299

    (136) sExp -> exp errorOpSExp opSExp performRelational .

    AND             reduce using rule 136 (sExp -> exp errorOpSExp opSExp performRelational .)
    OR              reduce using rule 136 (sExp -> exp errorOpSExp opSExp performRelational .)
    ,               reduce using rule 136 (sExp -> exp errorOpSExp opSExp performRelational .)
    PARFIN          reduce using rule 136 (sExp -> exp errorOpSExp opSExp performRelational .)
    ;               reduce using rule 136 (sExp -> exp errorOpSExp opSExp performRelational .)
    ]               reduce using rule 136 (sExp -> exp errorOpSExp opSExp performRelational .)


state 300

    (92) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion . saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign
    (185) saveFalso -> .

    ;               reduce using rule 185 (saveFalso -> .)

    saveFalso                      shift and go to state 323

state 301

    (124) condition -> errorCondition IF PARINI expresion PARFIN saveFalso { . body } optionalElse rellenaFalso
    (82) body -> . errorBody cyInstruction
    (83) body -> . empty
    (84) errorBody -> .
    (182) empty -> .

    ID              reduce using rule 84 (errorBody -> .)
    PRINT           reduce using rule 84 (errorBody -> .)
    READ            reduce using rule 84 (errorBody -> .)
    IF              reduce using rule 84 (errorBody -> .)
    FOR             reduce using rule 84 (errorBody -> .)
    WHILE           reduce using rule 84 (errorBody -> .)
    }               reduce using rule 182 (empty -> .)

    body                           shift and go to state 324
    errorBody                      shift and go to state 87
    empty                          shift and go to state 88

state 302

    (69) opReturns -> errorOpReturns RETURNS type saveReturnType { . opVars saveQuadruple body return
    (6) opVars -> . vars
    (7) opVars -> . empty
    (10) vars -> . errorVars VARS declare
    (182) empty -> .
    (12) errorVars -> .

    RETURN          reduce using rule 182 (empty -> .)
    ID              reduce using rule 182 (empty -> .)
    PRINT           reduce using rule 182 (empty -> .)
    READ            reduce using rule 182 (empty -> .)
    IF              reduce using rule 182 (empty -> .)
    FOR             reduce using rule 182 (empty -> .)
    WHILE           reduce using rule 182 (empty -> .)
    VARS            reduce using rule 12 (errorVars -> .)

    vars                           shift and go to state 8
    opVars                         shift and go to state 325
    errorVars                      shift and go to state 10
    empty                          shift and go to state 11

state 303

    (52) cyParam -> empty saveTypeParam saveID .

    PARFIN          reduce using rule 52 (cyParam -> empty saveTypeParam saveID .)


state 304

    (51) cyParam -> errorCyParam saveTypeParam saveID . ; param

    ;               shift and go to state 326


state 305

    (33) cyRead -> , fix ID . saveVariable performRead cyRead
    (191) saveVariable -> .

    ,               reduce using rule 191 (saveVariable -> .)
    PARFIN          reduce using rule 191 (saveVariable -> .)

    saveVariable                   shift and go to state 327

state 306

    (166) opStruct -> errorOpStruct saveToDimensionStacks [ . expresion verifyIndex ] opMatrix accessStruct
    (131) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (136) sExp -> . exp errorOpSExp opSExp performRelational
    (145) exp -> . term performAddSub errorCyExp cyExp
    (150) term -> . fact performMulDiv cyTerm
    (155) fact -> . CTES saveConstantString
    (156) fact -> . cte
    (157) fact -> . funcCall
    (158) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (159) fact -> . ID saveVariable opAccess errorOpAccess
    (178) cte -> . CTED saveConstantInt
    (179) cte -> . CTEF saveConstantFloat
    (180) cte -> . TRUE saveConstantBool
    (181) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    sExp                           shift and go to state 176
    expresion                      shift and go to state 328
    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 179
    fact                           shift and go to state 146

state 307

    (146) cyExp -> PLUS saveOperator exp .

    ,               reduce using rule 146 (cyExp -> PLUS saveOperator exp .)
    PARFIN          reduce using rule 146 (cyExp -> PLUS saveOperator exp .)
    EQ              reduce using rule 146 (cyExp -> PLUS saveOperator exp .)
    DIF             reduce using rule 146 (cyExp -> PLUS saveOperator exp .)
    LTOEQ           reduce using rule 146 (cyExp -> PLUS saveOperator exp .)
    GTOEQ           reduce using rule 146 (cyExp -> PLUS saveOperator exp .)
    GT              reduce using rule 146 (cyExp -> PLUS saveOperator exp .)
    LT              reduce using rule 146 (cyExp -> PLUS saveOperator exp .)
    AND             reduce using rule 146 (cyExp -> PLUS saveOperator exp .)
    OR              reduce using rule 146 (cyExp -> PLUS saveOperator exp .)
    ;               reduce using rule 146 (cyExp -> PLUS saveOperator exp .)
    ]               reduce using rule 146 (cyExp -> PLUS saveOperator exp .)


state 308

    (147) cyExp -> MINUS saveOperator exp .

    ,               reduce using rule 147 (cyExp -> MINUS saveOperator exp .)
    PARFIN          reduce using rule 147 (cyExp -> MINUS saveOperator exp .)
    EQ              reduce using rule 147 (cyExp -> MINUS saveOperator exp .)
    DIF             reduce using rule 147 (cyExp -> MINUS saveOperator exp .)
    LTOEQ           reduce using rule 147 (cyExp -> MINUS saveOperator exp .)
    GTOEQ           reduce using rule 147 (cyExp -> MINUS saveOperator exp .)
    GT              reduce using rule 147 (cyExp -> MINUS saveOperator exp .)
    LT              reduce using rule 147 (cyExp -> MINUS saveOperator exp .)
    AND             reduce using rule 147 (cyExp -> MINUS saveOperator exp .)
    OR              reduce using rule 147 (cyExp -> MINUS saveOperator exp .)
    ;               reduce using rule 147 (cyExp -> MINUS saveOperator exp .)
    ]               reduce using rule 147 (cyExp -> MINUS saveOperator exp .)


state 309

    (30) cyPrint -> , fix exp performPrint . cyPrint
    (30) cyPrint -> . , fix exp performPrint cyPrint
    (31) cyPrint -> . empty
    (182) empty -> .

    ,               shift and go to state 197
    PARFIN          reduce using rule 182 (empty -> .)

    empty                          shift and go to state 198
    cyPrint                        shift and go to state 329

state 310

    (151) cyTerm -> MULT saveOperator errorFact term .

    PLUS            reduce using rule 151 (cyTerm -> MULT saveOperator errorFact term .)
    MINUS           reduce using rule 151 (cyTerm -> MULT saveOperator errorFact term .)
    ,               reduce using rule 151 (cyTerm -> MULT saveOperator errorFact term .)
    PARFIN          reduce using rule 151 (cyTerm -> MULT saveOperator errorFact term .)
    EQ              reduce using rule 151 (cyTerm -> MULT saveOperator errorFact term .)
    DIF             reduce using rule 151 (cyTerm -> MULT saveOperator errorFact term .)
    LTOEQ           reduce using rule 151 (cyTerm -> MULT saveOperator errorFact term .)
    GTOEQ           reduce using rule 151 (cyTerm -> MULT saveOperator errorFact term .)
    GT              reduce using rule 151 (cyTerm -> MULT saveOperator errorFact term .)
    LT              reduce using rule 151 (cyTerm -> MULT saveOperator errorFact term .)
    AND             reduce using rule 151 (cyTerm -> MULT saveOperator errorFact term .)
    OR              reduce using rule 151 (cyTerm -> MULT saveOperator errorFact term .)
    ;               reduce using rule 151 (cyTerm -> MULT saveOperator errorFact term .)
    ]               reduce using rule 151 (cyTerm -> MULT saveOperator errorFact term .)


state 311

    (88) whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { . body } repeatWhile
    (82) body -> . errorBody cyInstruction
    (83) body -> . empty
    (84) errorBody -> .
    (182) empty -> .

    ID              reduce using rule 84 (errorBody -> .)
    PRINT           reduce using rule 84 (errorBody -> .)
    READ            reduce using rule 84 (errorBody -> .)
    IF              reduce using rule 84 (errorBody -> .)
    FOR             reduce using rule 84 (errorBody -> .)
    WHILE           reduce using rule 84 (errorBody -> .)
    }               reduce using rule 182 (empty -> .)

    body                           shift and go to state 330
    errorBody                      shift and go to state 87
    empty                          shift and go to state 88

state 312

    (43) initDict -> ASGN PARINI dictType : dictType . PARFIN errorInitDict

    PARFIN          shift and go to state 331


state 313

    (102) assignOptions -> resaveID saveToDimensionStacks [ expresion verifyIndex . ] assignMatrix accessStruct init

    ]               shift and go to state 332


state 314

    (133) cyExpresion -> AND saveOperator expresion .

    ,               reduce using rule 133 (cyExpresion -> AND saveOperator expresion .)
    PARFIN          reduce using rule 133 (cyExpresion -> AND saveOperator expresion .)
    ;               reduce using rule 133 (cyExpresion -> AND saveOperator expresion .)
    ]               reduce using rule 133 (cyExpresion -> AND saveOperator expresion .)


state 315

    (134) cyExpresion -> OR saveOperator expresion .

    ,               reduce using rule 134 (cyExpresion -> OR saveOperator expresion .)
    PARFIN          reduce using rule 134 (cyExpresion -> OR saveOperator expresion .)
    ;               reduce using rule 134 (cyExpresion -> OR saveOperator expresion .)
    ]               reduce using rule 134 (cyExpresion -> OR saveOperator expresion .)


state 316

    (111) cyParamCall -> , expresion checkParamType . cyParamCall
    (111) cyParamCall -> . , expresion checkParamType cyParamCall
    (112) cyParamCall -> . empty
    (182) empty -> .

    ,               shift and go to state 255
    PARFIN          reduce using rule 182 (empty -> .)

    cyParamCall                    shift and go to state 333
    empty                          shift and go to state 254

state 317

    (141) opSExp -> GT saveOperator exp .

    AND             reduce using rule 141 (opSExp -> GT saveOperator exp .)
    OR              reduce using rule 141 (opSExp -> GT saveOperator exp .)
    ,               reduce using rule 141 (opSExp -> GT saveOperator exp .)
    PARFIN          reduce using rule 141 (opSExp -> GT saveOperator exp .)
    ;               reduce using rule 141 (opSExp -> GT saveOperator exp .)
    ]               reduce using rule 141 (opSExp -> GT saveOperator exp .)


state 318

    (139) opSExp -> LTOEQ saveOperator exp .

    AND             reduce using rule 139 (opSExp -> LTOEQ saveOperator exp .)
    OR              reduce using rule 139 (opSExp -> LTOEQ saveOperator exp .)
    ,               reduce using rule 139 (opSExp -> LTOEQ saveOperator exp .)
    PARFIN          reduce using rule 139 (opSExp -> LTOEQ saveOperator exp .)
    ;               reduce using rule 139 (opSExp -> LTOEQ saveOperator exp .)
    ]               reduce using rule 139 (opSExp -> LTOEQ saveOperator exp .)


state 319

    (138) opSExp -> DIF saveOperator exp .

    AND             reduce using rule 138 (opSExp -> DIF saveOperator exp .)
    OR              reduce using rule 138 (opSExp -> DIF saveOperator exp .)
    ,               reduce using rule 138 (opSExp -> DIF saveOperator exp .)
    PARFIN          reduce using rule 138 (opSExp -> DIF saveOperator exp .)
    ;               reduce using rule 138 (opSExp -> DIF saveOperator exp .)
    ]               reduce using rule 138 (opSExp -> DIF saveOperator exp .)


state 320

    (142) opSExp -> LT saveOperator exp .

    AND             reduce using rule 142 (opSExp -> LT saveOperator exp .)
    OR              reduce using rule 142 (opSExp -> LT saveOperator exp .)
    ,               reduce using rule 142 (opSExp -> LT saveOperator exp .)
    PARFIN          reduce using rule 142 (opSExp -> LT saveOperator exp .)
    ;               reduce using rule 142 (opSExp -> LT saveOperator exp .)
    ]               reduce using rule 142 (opSExp -> LT saveOperator exp .)


state 321

    (140) opSExp -> GTOEQ saveOperator exp .

    AND             reduce using rule 140 (opSExp -> GTOEQ saveOperator exp .)
    OR              reduce using rule 140 (opSExp -> GTOEQ saveOperator exp .)
    ,               reduce using rule 140 (opSExp -> GTOEQ saveOperator exp .)
    PARFIN          reduce using rule 140 (opSExp -> GTOEQ saveOperator exp .)
    ;               reduce using rule 140 (opSExp -> GTOEQ saveOperator exp .)
    ]               reduce using rule 140 (opSExp -> GTOEQ saveOperator exp .)


state 322

    (137) opSExp -> EQ saveOperator exp .

    AND             reduce using rule 137 (opSExp -> EQ saveOperator exp .)
    OR              reduce using rule 137 (opSExp -> EQ saveOperator exp .)
    ,               reduce using rule 137 (opSExp -> EQ saveOperator exp .)
    PARFIN          reduce using rule 137 (opSExp -> EQ saveOperator exp .)
    ;               reduce using rule 137 (opSExp -> EQ saveOperator exp .)
    ]               reduce using rule 137 (opSExp -> EQ saveOperator exp .)


state 323

    (92) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso . ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign

    ;               shift and go to state 334


state 324

    (124) condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body . } optionalElse rellenaFalso

    }               shift and go to state 335


state 325

    (69) opReturns -> errorOpReturns RETURNS type saveReturnType { opVars . saveQuadruple body return
    (71) saveQuadruple -> .

    RETURN          reduce using rule 71 (saveQuadruple -> .)
    ID              reduce using rule 71 (saveQuadruple -> .)
    PRINT           reduce using rule 71 (saveQuadruple -> .)
    READ            reduce using rule 71 (saveQuadruple -> .)
    IF              reduce using rule 71 (saveQuadruple -> .)
    FOR             reduce using rule 71 (saveQuadruple -> .)
    WHILE           reduce using rule 71 (saveQuadruple -> .)

    saveQuadruple                  shift and go to state 336

state 326

    (51) cyParam -> errorCyParam saveTypeParam saveID ; . param
    (49) param -> . saveType type errorParam ID cyTypeParam cyParam
    (3) saveType -> .

    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)

    param                          shift and go to state 337
    saveType                       shift and go to state 91

state 327

    (33) cyRead -> , fix ID saveVariable . performRead cyRead
    (201) performRead -> .

    ,               reduce using rule 201 (performRead -> .)
    PARFIN          reduce using rule 201 (performRead -> .)

    performRead                    shift and go to state 338

state 328

    (166) opStruct -> errorOpStruct saveToDimensionStacks [ expresion . verifyIndex ] opMatrix accessStruct
    (168) verifyIndex -> .

    ]               reduce using rule 168 (verifyIndex -> .)

    verifyIndex                    shift and go to state 339

state 329

    (30) cyPrint -> , fix exp performPrint cyPrint .

    PARFIN          reduce using rule 30 (cyPrint -> , fix exp performPrint cyPrint .)


state 330

    (88) whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body . } repeatWhile

    }               shift and go to state 340


state 331

    (43) initDict -> ASGN PARINI dictType : dictType PARFIN . errorInitDict
    (44) errorInitDict -> .

    ;               reduce using rule 44 (errorInitDict -> .)
    PARFIN          reduce using rule 44 (errorInitDict -> .)

    errorInitDict                  shift and go to state 341

state 332

    (102) assignOptions -> resaveID saveToDimensionStacks [ expresion verifyIndex ] . assignMatrix accessStruct init
    (103) assignMatrix -> . [ expresion verifySecondIndex ] errorAssignMatrix
    (104) assignMatrix -> . empty
    (182) empty -> .

    [               shift and go to state 343
    ASGN            reduce using rule 182 (empty -> .)

    assignMatrix                   shift and go to state 342
    empty                          shift and go to state 344

state 333

    (111) cyParamCall -> , expresion checkParamType cyParamCall .

    PARFIN          reduce using rule 111 (cyParamCall -> , expresion checkParamType cyParamCall .)


state 334

    (92) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; . saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign
    (93) saltoBody -> .

    ID              reduce using rule 93 (saltoBody -> .)

    saltoBody                      shift and go to state 345

state 335

    (124) condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } . optionalElse rellenaFalso
    (126) optionalElse -> . errorElse ELSE saveVerdadero { body }
    (127) optionalElse -> . empty
    (128) errorElse -> .
    (182) empty -> .

    ELSE            reduce using rule 128 (errorElse -> .)
    ID              reduce using rule 182 (empty -> .)
    PRINT           reduce using rule 182 (empty -> .)
    READ            reduce using rule 182 (empty -> .)
    IF              reduce using rule 182 (empty -> .)
    FOR             reduce using rule 182 (empty -> .)
    WHILE           reduce using rule 182 (empty -> .)
    }               reduce using rule 182 (empty -> .)
    RETURN          reduce using rule 182 (empty -> .)

    errorElse                      shift and go to state 347
    optionalElse                   shift and go to state 346
    empty                          shift and go to state 348

state 336

    (69) opReturns -> errorOpReturns RETURNS type saveReturnType { opVars saveQuadruple . body return
    (82) body -> . errorBody cyInstruction
    (83) body -> . empty
    (84) errorBody -> .
    (182) empty -> .

    ID              reduce using rule 84 (errorBody -> .)
    PRINT           reduce using rule 84 (errorBody -> .)
    READ            reduce using rule 84 (errorBody -> .)
    IF              reduce using rule 84 (errorBody -> .)
    FOR             reduce using rule 84 (errorBody -> .)
    WHILE           reduce using rule 84 (errorBody -> .)
    RETURN          reduce using rule 182 (empty -> .)

    body                           shift and go to state 349
    errorBody                      shift and go to state 87
    empty                          shift and go to state 88

state 337

    (51) cyParam -> errorCyParam saveTypeParam saveID ; param .

    PARFIN          reduce using rule 51 (cyParam -> errorCyParam saveTypeParam saveID ; param .)


state 338

    (33) cyRead -> , fix ID saveVariable performRead . cyRead
    (33) cyRead -> . , fix ID saveVariable performRead cyRead
    (34) cyRead -> . empty
    (182) empty -> .

    ,               shift and go to state 222
    PARFIN          reduce using rule 182 (empty -> .)

    cyRead                         shift and go to state 350
    empty                          shift and go to state 224

state 339

    (166) opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex . ] opMatrix accessStruct

    ]               shift and go to state 351


state 340

    (88) whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } . repeatWhile
    (89) repeatWhile -> .

    ID              reduce using rule 89 (repeatWhile -> .)
    PRINT           reduce using rule 89 (repeatWhile -> .)
    READ            reduce using rule 89 (repeatWhile -> .)
    IF              reduce using rule 89 (repeatWhile -> .)
    FOR             reduce using rule 89 (repeatWhile -> .)
    WHILE           reduce using rule 89 (repeatWhile -> .)
    }               reduce using rule 89 (repeatWhile -> .)
    RETURN          reduce using rule 89 (repeatWhile -> .)

    repeatWhile                    shift and go to state 352

state 341

    (43) initDict -> ASGN PARINI dictType : dictType PARFIN errorInitDict .

    ;               reduce using rule 43 (initDict -> ASGN PARINI dictType : dictType PARFIN errorInitDict .)
    PARFIN          reduce using rule 43 (initDict -> ASGN PARINI dictType : dictType PARFIN errorInitDict .)


state 342

    (102) assignOptions -> resaveID saveToDimensionStacks [ expresion verifyIndex ] assignMatrix . accessStruct init
    (167) accessStruct -> .

    ASGN            reduce using rule 167 (accessStruct -> .)

    accessStruct                   shift and go to state 353

state 343

    (103) assignMatrix -> [ . expresion verifySecondIndex ] errorAssignMatrix
    (131) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (136) sExp -> . exp errorOpSExp opSExp performRelational
    (145) exp -> . term performAddSub errorCyExp cyExp
    (150) term -> . fact performMulDiv cyTerm
    (155) fact -> . CTES saveConstantString
    (156) fact -> . cte
    (157) fact -> . funcCall
    (158) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (159) fact -> . ID saveVariable opAccess errorOpAccess
    (178) cte -> . CTED saveConstantInt
    (179) cte -> . CTEF saveConstantFloat
    (180) cte -> . TRUE saveConstantBool
    (181) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    sExp                           shift and go to state 176
    expresion                      shift and go to state 354
    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 179
    fact                           shift and go to state 146

state 344

    (104) assignMatrix -> empty .

    ASGN            reduce using rule 104 (assignMatrix -> empty .)


state 345

    (92) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody . assign returnFor PARFIN { rellenaBody body } returnAssign
    (98) assign -> . ID saveVariable errorAssign assignOptions performAssign

    ID              shift and go to state 180

    assign                         shift and go to state 355

state 346

    (124) condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse . rellenaFalso
    (184) rellenaFalso -> .

    ID              reduce using rule 184 (rellenaFalso -> .)
    PRINT           reduce using rule 184 (rellenaFalso -> .)
    READ            reduce using rule 184 (rellenaFalso -> .)
    IF              reduce using rule 184 (rellenaFalso -> .)
    FOR             reduce using rule 184 (rellenaFalso -> .)
    WHILE           reduce using rule 184 (rellenaFalso -> .)
    }               reduce using rule 184 (rellenaFalso -> .)
    RETURN          reduce using rule 184 (rellenaFalso -> .)

    rellenaFalso                   shift and go to state 356

state 347

    (126) optionalElse -> errorElse . ELSE saveVerdadero { body }

    ELSE            shift and go to state 357


state 348

    (127) optionalElse -> empty .

    ID              reduce using rule 127 (optionalElse -> empty .)
    PRINT           reduce using rule 127 (optionalElse -> empty .)
    READ            reduce using rule 127 (optionalElse -> empty .)
    IF              reduce using rule 127 (optionalElse -> empty .)
    FOR             reduce using rule 127 (optionalElse -> empty .)
    WHILE           reduce using rule 127 (optionalElse -> empty .)
    }               reduce using rule 127 (optionalElse -> empty .)
    RETURN          reduce using rule 127 (optionalElse -> empty .)


state 349

    (69) opReturns -> errorOpReturns RETURNS type saveReturnType { opVars saveQuadruple body . return
    (61) return -> . errorReturn RETURN expresion saveReturnValue ;
    (63) errorReturn -> .

    RETURN          reduce using rule 63 (errorReturn -> .)

    return                         shift and go to state 358
    errorReturn                    shift and go to state 359

state 350

    (33) cyRead -> , fix ID saveVariable performRead cyRead .

    PARFIN          reduce using rule 33 (cyRead -> , fix ID saveVariable performRead cyRead .)


state 351

    (166) opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] . opMatrix accessStruct
    (171) opMatrix -> . errorOpMatrix [ expresion verifySecondIndex ]
    (172) opMatrix -> . empty
    (174) errorOpMatrix -> .
    (182) empty -> .

    [               reduce using rule 174 (errorOpMatrix -> .)
    MULT            reduce using rule 182 (empty -> .)
    DIV             reduce using rule 182 (empty -> .)
    RES             reduce using rule 182 (empty -> .)
    PLUS            reduce using rule 182 (empty -> .)
    MINUS           reduce using rule 182 (empty -> .)
    ,               reduce using rule 182 (empty -> .)
    PARFIN          reduce using rule 182 (empty -> .)
    EQ              reduce using rule 182 (empty -> .)
    DIF             reduce using rule 182 (empty -> .)
    LTOEQ           reduce using rule 182 (empty -> .)
    GTOEQ           reduce using rule 182 (empty -> .)
    GT              reduce using rule 182 (empty -> .)
    LT              reduce using rule 182 (empty -> .)
    AND             reduce using rule 182 (empty -> .)
    OR              reduce using rule 182 (empty -> .)
    ;               reduce using rule 182 (empty -> .)
    ]               reduce using rule 182 (empty -> .)

    errorOpMatrix                  shift and go to state 360
    opMatrix                       shift and go to state 361
    empty                          shift and go to state 362

state 352

    (88) whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile .

    ID              reduce using rule 88 (whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile .)
    PRINT           reduce using rule 88 (whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile .)
    READ            reduce using rule 88 (whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile .)
    IF              reduce using rule 88 (whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile .)
    FOR             reduce using rule 88 (whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile .)
    WHILE           reduce using rule 88 (whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile .)
    }               reduce using rule 88 (whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile .)
    RETURN          reduce using rule 88 (whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile .)


state 353

    (102) assignOptions -> resaveID saveToDimensionStacks [ expresion verifyIndex ] assignMatrix accessStruct . init
    (39) init -> . ASGN saveOperator errorInit initWith

    ASGN            shift and go to state 363

    init                           shift and go to state 364

state 354

    (103) assignMatrix -> [ expresion . verifySecondIndex ] errorAssignMatrix
    (173) verifySecondIndex -> .

    ]               reduce using rule 173 (verifySecondIndex -> .)

    verifySecondIndex              shift and go to state 365

state 355

    (92) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign . returnFor PARFIN { rellenaBody body } returnAssign
    (94) returnFor -> .

    PARFIN          reduce using rule 94 (returnFor -> .)

    returnFor                      shift and go to state 366

state 356

    (124) condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso .

    ID              reduce using rule 124 (condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso .)
    PRINT           reduce using rule 124 (condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso .)
    READ            reduce using rule 124 (condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso .)
    IF              reduce using rule 124 (condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso .)
    FOR             reduce using rule 124 (condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso .)
    WHILE           reduce using rule 124 (condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso .)
    }               reduce using rule 124 (condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso .)
    RETURN          reduce using rule 124 (condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso .)


state 357

    (126) optionalElse -> errorElse ELSE . saveVerdadero { body }
    (186) saveVerdadero -> .

    {               reduce using rule 186 (saveVerdadero -> .)

    saveVerdadero                  shift and go to state 367

state 358

    (69) opReturns -> errorOpReturns RETURNS type saveReturnType { opVars saveQuadruple body return .

    }               reduce using rule 69 (opReturns -> errorOpReturns RETURNS type saveReturnType { opVars saveQuadruple body return .)


state 359

    (61) return -> errorReturn . RETURN expresion saveReturnValue ;

    RETURN          shift and go to state 368


state 360

    (171) opMatrix -> errorOpMatrix . [ expresion verifySecondIndex ]

    [               shift and go to state 369


state 361

    (166) opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix . accessStruct
    (167) accessStruct -> .

    MULT            reduce using rule 167 (accessStruct -> .)
    DIV             reduce using rule 167 (accessStruct -> .)
    RES             reduce using rule 167 (accessStruct -> .)
    PLUS            reduce using rule 167 (accessStruct -> .)
    MINUS           reduce using rule 167 (accessStruct -> .)
    ,               reduce using rule 167 (accessStruct -> .)
    PARFIN          reduce using rule 167 (accessStruct -> .)
    EQ              reduce using rule 167 (accessStruct -> .)
    DIF             reduce using rule 167 (accessStruct -> .)
    LTOEQ           reduce using rule 167 (accessStruct -> .)
    GTOEQ           reduce using rule 167 (accessStruct -> .)
    GT              reduce using rule 167 (accessStruct -> .)
    LT              reduce using rule 167 (accessStruct -> .)
    AND             reduce using rule 167 (accessStruct -> .)
    OR              reduce using rule 167 (accessStruct -> .)
    ;               reduce using rule 167 (accessStruct -> .)
    ]               reduce using rule 167 (accessStruct -> .)

    accessStruct                   shift and go to state 370

state 362

    (172) opMatrix -> empty .

    MULT            reduce using rule 172 (opMatrix -> empty .)
    DIV             reduce using rule 172 (opMatrix -> empty .)
    RES             reduce using rule 172 (opMatrix -> empty .)
    PLUS            reduce using rule 172 (opMatrix -> empty .)
    MINUS           reduce using rule 172 (opMatrix -> empty .)
    ,               reduce using rule 172 (opMatrix -> empty .)
    PARFIN          reduce using rule 172 (opMatrix -> empty .)
    EQ              reduce using rule 172 (opMatrix -> empty .)
    DIF             reduce using rule 172 (opMatrix -> empty .)
    LTOEQ           reduce using rule 172 (opMatrix -> empty .)
    GTOEQ           reduce using rule 172 (opMatrix -> empty .)
    GT              reduce using rule 172 (opMatrix -> empty .)
    LT              reduce using rule 172 (opMatrix -> empty .)
    AND             reduce using rule 172 (opMatrix -> empty .)
    OR              reduce using rule 172 (opMatrix -> empty .)
    ;               reduce using rule 172 (opMatrix -> empty .)
    ]               reduce using rule 172 (opMatrix -> empty .)


state 363

    (39) init -> ASGN . saveOperator errorInit initWith
    (192) saveOperator -> .

    ID              reduce using rule 192 (saveOperator -> .)
    CTES            reduce using rule 192 (saveOperator -> .)
    PARINI          reduce using rule 192 (saveOperator -> .)
    CTED            reduce using rule 192 (saveOperator -> .)
    CTEF            reduce using rule 192 (saveOperator -> .)
    TRUE            reduce using rule 192 (saveOperator -> .)
    FALSE           reduce using rule 192 (saveOperator -> .)

    saveOperator                   shift and go to state 205

state 364

    (102) assignOptions -> resaveID saveToDimensionStacks [ expresion verifyIndex ] assignMatrix accessStruct init .

    ;               reduce using rule 102 (assignOptions -> resaveID saveToDimensionStacks [ expresion verifyIndex ] assignMatrix accessStruct init .)
    PARFIN          reduce using rule 102 (assignOptions -> resaveID saveToDimensionStacks [ expresion verifyIndex ] assignMatrix accessStruct init .)


state 365

    (103) assignMatrix -> [ expresion verifySecondIndex . ] errorAssignMatrix

    ]               shift and go to state 371


state 366

    (92) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor . PARFIN { rellenaBody body } returnAssign

    PARFIN          shift and go to state 372


state 367

    (126) optionalElse -> errorElse ELSE saveVerdadero . { body }

    {               shift and go to state 373


state 368

    (61) return -> errorReturn RETURN . expresion saveReturnValue ;
    (131) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (136) sExp -> . exp errorOpSExp opSExp performRelational
    (145) exp -> . term performAddSub errorCyExp cyExp
    (150) term -> . fact performMulDiv cyTerm
    (155) fact -> . CTES saveConstantString
    (156) fact -> . cte
    (157) fact -> . funcCall
    (158) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (159) fact -> . ID saveVariable opAccess errorOpAccess
    (178) cte -> . CTED saveConstantInt
    (179) cte -> . CTEF saveConstantFloat
    (180) cte -> . TRUE saveConstantBool
    (181) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    sExp                           shift and go to state 176
    expresion                      shift and go to state 374
    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 179
    fact                           shift and go to state 146

state 369

    (171) opMatrix -> errorOpMatrix [ . expresion verifySecondIndex ]
    (131) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (136) sExp -> . exp errorOpSExp opSExp performRelational
    (145) exp -> . term performAddSub errorCyExp cyExp
    (150) term -> . fact performMulDiv cyTerm
    (155) fact -> . CTES saveConstantString
    (156) fact -> . cte
    (157) fact -> . funcCall
    (158) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (159) fact -> . ID saveVariable opAccess errorOpAccess
    (178) cte -> . CTED saveConstantInt
    (179) cte -> . CTEF saveConstantFloat
    (180) cte -> . TRUE saveConstantBool
    (181) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    sExp                           shift and go to state 176
    expresion                      shift and go to state 375
    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 179
    fact                           shift and go to state 146

state 370

    (166) opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct .

    MULT            reduce using rule 166 (opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct .)
    DIV             reduce using rule 166 (opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct .)
    RES             reduce using rule 166 (opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct .)
    PLUS            reduce using rule 166 (opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct .)
    MINUS           reduce using rule 166 (opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct .)
    ,               reduce using rule 166 (opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct .)
    PARFIN          reduce using rule 166 (opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct .)
    EQ              reduce using rule 166 (opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct .)
    DIF             reduce using rule 166 (opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct .)
    LTOEQ           reduce using rule 166 (opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct .)
    GTOEQ           reduce using rule 166 (opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct .)
    GT              reduce using rule 166 (opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct .)
    LT              reduce using rule 166 (opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct .)
    AND             reduce using rule 166 (opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct .)
    OR              reduce using rule 166 (opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct .)
    ;               reduce using rule 166 (opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct .)
    ]               reduce using rule 166 (opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct .)


state 371

    (103) assignMatrix -> [ expresion verifySecondIndex ] . errorAssignMatrix
    (105) errorAssignMatrix -> .

    ASGN            reduce using rule 105 (errorAssignMatrix -> .)

    errorAssignMatrix              shift and go to state 376

state 372

    (92) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN . { rellenaBody body } returnAssign

    {               shift and go to state 377


state 373

    (126) optionalElse -> errorElse ELSE saveVerdadero { . body }
    (82) body -> . errorBody cyInstruction
    (83) body -> . empty
    (84) errorBody -> .
    (182) empty -> .

    ID              reduce using rule 84 (errorBody -> .)
    PRINT           reduce using rule 84 (errorBody -> .)
    READ            reduce using rule 84 (errorBody -> .)
    IF              reduce using rule 84 (errorBody -> .)
    FOR             reduce using rule 84 (errorBody -> .)
    WHILE           reduce using rule 84 (errorBody -> .)
    }               reduce using rule 182 (empty -> .)

    body                           shift and go to state 378
    errorBody                      shift and go to state 87
    empty                          shift and go to state 88

state 374

    (61) return -> errorReturn RETURN expresion . saveReturnValue ;
    (62) saveReturnValue -> .

    ;               reduce using rule 62 (saveReturnValue -> .)

    saveReturnValue                shift and go to state 379

state 375

    (171) opMatrix -> errorOpMatrix [ expresion . verifySecondIndex ]
    (173) verifySecondIndex -> .

    ]               reduce using rule 173 (verifySecondIndex -> .)

    verifySecondIndex              shift and go to state 380

state 376

    (103) assignMatrix -> [ expresion verifySecondIndex ] errorAssignMatrix .

    ASGN            reduce using rule 103 (assignMatrix -> [ expresion verifySecondIndex ] errorAssignMatrix .)


state 377

    (92) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { . rellenaBody body } returnAssign
    (95) rellenaBody -> .

    }               reduce using rule 95 (rellenaBody -> .)
    ID              reduce using rule 95 (rellenaBody -> .)
    PRINT           reduce using rule 95 (rellenaBody -> .)
    READ            reduce using rule 95 (rellenaBody -> .)
    IF              reduce using rule 95 (rellenaBody -> .)
    FOR             reduce using rule 95 (rellenaBody -> .)
    WHILE           reduce using rule 95 (rellenaBody -> .)

    rellenaBody                    shift and go to state 381

state 378

    (126) optionalElse -> errorElse ELSE saveVerdadero { body . }

    }               shift and go to state 382


state 379

    (61) return -> errorReturn RETURN expresion saveReturnValue . ;

    ;               shift and go to state 383


state 380

    (171) opMatrix -> errorOpMatrix [ expresion verifySecondIndex . ]

    ]               shift and go to state 384


state 381

    (92) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody . body } returnAssign
    (82) body -> . errorBody cyInstruction
    (83) body -> . empty
    (84) errorBody -> .
    (182) empty -> .

    ID              reduce using rule 84 (errorBody -> .)
    PRINT           reduce using rule 84 (errorBody -> .)
    READ            reduce using rule 84 (errorBody -> .)
    IF              reduce using rule 84 (errorBody -> .)
    FOR             reduce using rule 84 (errorBody -> .)
    WHILE           reduce using rule 84 (errorBody -> .)
    }               reduce using rule 182 (empty -> .)

    body                           shift and go to state 385
    errorBody                      shift and go to state 87
    empty                          shift and go to state 88

state 382

    (126) optionalElse -> errorElse ELSE saveVerdadero { body } .

    ID              reduce using rule 126 (optionalElse -> errorElse ELSE saveVerdadero { body } .)
    PRINT           reduce using rule 126 (optionalElse -> errorElse ELSE saveVerdadero { body } .)
    READ            reduce using rule 126 (optionalElse -> errorElse ELSE saveVerdadero { body } .)
    IF              reduce using rule 126 (optionalElse -> errorElse ELSE saveVerdadero { body } .)
    FOR             reduce using rule 126 (optionalElse -> errorElse ELSE saveVerdadero { body } .)
    WHILE           reduce using rule 126 (optionalElse -> errorElse ELSE saveVerdadero { body } .)
    }               reduce using rule 126 (optionalElse -> errorElse ELSE saveVerdadero { body } .)
    RETURN          reduce using rule 126 (optionalElse -> errorElse ELSE saveVerdadero { body } .)


state 383

    (61) return -> errorReturn RETURN expresion saveReturnValue ; .

    }               reduce using rule 61 (return -> errorReturn RETURN expresion saveReturnValue ; .)


state 384

    (171) opMatrix -> errorOpMatrix [ expresion verifySecondIndex ] .

    MULT            reduce using rule 171 (opMatrix -> errorOpMatrix [ expresion verifySecondIndex ] .)
    DIV             reduce using rule 171 (opMatrix -> errorOpMatrix [ expresion verifySecondIndex ] .)
    RES             reduce using rule 171 (opMatrix -> errorOpMatrix [ expresion verifySecondIndex ] .)
    PLUS            reduce using rule 171 (opMatrix -> errorOpMatrix [ expresion verifySecondIndex ] .)
    MINUS           reduce using rule 171 (opMatrix -> errorOpMatrix [ expresion verifySecondIndex ] .)
    ,               reduce using rule 171 (opMatrix -> errorOpMatrix [ expresion verifySecondIndex ] .)
    PARFIN          reduce using rule 171 (opMatrix -> errorOpMatrix [ expresion verifySecondIndex ] .)
    EQ              reduce using rule 171 (opMatrix -> errorOpMatrix [ expresion verifySecondIndex ] .)
    DIF             reduce using rule 171 (opMatrix -> errorOpMatrix [ expresion verifySecondIndex ] .)
    LTOEQ           reduce using rule 171 (opMatrix -> errorOpMatrix [ expresion verifySecondIndex ] .)
    GTOEQ           reduce using rule 171 (opMatrix -> errorOpMatrix [ expresion verifySecondIndex ] .)
    GT              reduce using rule 171 (opMatrix -> errorOpMatrix [ expresion verifySecondIndex ] .)
    LT              reduce using rule 171 (opMatrix -> errorOpMatrix [ expresion verifySecondIndex ] .)
    AND             reduce using rule 171 (opMatrix -> errorOpMatrix [ expresion verifySecondIndex ] .)
    OR              reduce using rule 171 (opMatrix -> errorOpMatrix [ expresion verifySecondIndex ] .)
    ;               reduce using rule 171 (opMatrix -> errorOpMatrix [ expresion verifySecondIndex ] .)
    ]               reduce using rule 171 (opMatrix -> errorOpMatrix [ expresion verifySecondIndex ] .)


state 385

    (92) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body . } returnAssign

    }               shift and go to state 386


state 386

    (92) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } . returnAssign
    (96) returnAssign -> .

    ID              reduce using rule 96 (returnAssign -> .)
    PRINT           reduce using rule 96 (returnAssign -> .)
    READ            reduce using rule 96 (returnAssign -> .)
    IF              reduce using rule 96 (returnAssign -> .)
    FOR             reduce using rule 96 (returnAssign -> .)
    WHILE           reduce using rule 96 (returnAssign -> .)
    }               reduce using rule 96 (returnAssign -> .)
    RETURN          reduce using rule 96 (returnAssign -> .)

    returnAssign                   shift and go to state 387

state 387

    (92) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign .

    ID              reduce using rule 92 (forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign .)
    PRINT           reduce using rule 92 (forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign .)
    READ            reduce using rule 92 (forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign .)
    IF              reduce using rule 92 (forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign .)
    FOR             reduce using rule 92 (forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign .)
    WHILE           reduce using rule 92 (forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign .)
    }               reduce using rule 92 (forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign .)
    RETURN          reduce using rule 92 (forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PARINI in state 170 resolved as shift
WARNING: reduce/reduce conflict in state 285 resolved using rule (initWith -> funcCall)
WARNING: rejected rule (fact -> funcCall) in state 285
