Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables
Rule 2     changeCurrentScope -> <empty>
Rule 3     saveType -> <empty>
Rule 4     saveProc -> <empty>
Rule 5     errorProgram -> <empty>
Rule 6     opVars -> vars
Rule 7     opVars -> empty
Rule 8     opFunctions -> function opFunctions
Rule 9     opFunctions -> empty
Rule 10    vars -> errorVars VARS declare
Rule 11    saveID -> <empty>
Rule 12    errorVars -> <empty>
Rule 13    type -> errorType INT
Rule 14    type -> FLOAT
Rule 15    type -> STRING
Rule 16    type -> BOOL
Rule 17    errorType -> <empty>
Rule 18    main -> errorMain MAIN saveMain { opVars body } clearVarsTable
Rule 19    saveMain -> <empty>
Rule 20    errorMain -> <empty>
Rule 21    instr -> basicStatements ;
Rule 22    instr -> condition
Rule 23    instr -> cycle
Rule 24    basicStatements -> assign
Rule 25    basicStatements -> funcCall
Rule 26    basicStatements -> print
Rule 27    basicStatements -> read
Rule 28    print -> PRINT PARINI exp performPrint cyPrint PARFIN
Rule 29    cyPrint -> , fix exp performPrint cyPrint
Rule 30    cyPrint -> empty
Rule 31    read -> READ PARINI ID performRead cyRead PARFIN
Rule 32    cyRead -> , fix ID performRead cyRead
Rule 33    cyRead -> empty
Rule 34    fix -> <empty>
Rule 35    declare -> basicDeclare
Rule 36    declare -> structDeclare
Rule 37    declare -> dictDeclare
Rule 38    init -> ASGN saveOperator errorInit initWith
Rule 39    errorInit -> <empty>
Rule 40    initWith -> expresion
Rule 41    initWith -> fact
Rule 42    initWith -> funcCall
Rule 43    initDict -> ASGN PARINI dictType : dictType PARFIN errorInitDict
Rule 44    errorInitDict -> <empty>
Rule 45    dictType -> errorDictType CTES
Rule 46    dictType -> cte
Rule 47    dictType -> ID
Rule 48    errorDictType -> <empty>
Rule 49    param -> saveType type errorParam ID cyTypeParam cyParam
Rule 50    errorParam -> <empty>
Rule 51    cyParam -> errorCyParam saveID saveTypeParam ; param
Rule 52    cyParam -> empty saveID saveTypeParam
Rule 53    cyTypeParam -> , saveID saveTypeParam ID cyTypeParam
Rule 54    cyTypeParam -> empty
Rule 55    saveTypeParam -> <empty>
Rule 56    errorCyParam -> <empty>
Rule 57    function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
Rule 58    errorFunction -> <empty>
Rule 59    clearVarsTable -> <empty>
Rule 60    return -> errorReturn RETURN expresion ;
Rule 61    errorReturn -> <empty>
Rule 62    opParameters -> param saveParamToDirProc errorOpParameters
Rule 63    opParameters -> empty
Rule 64    flagParameters -> <empty>
Rule 65    saveParamToDirProc -> <empty>
Rule 66    errorOpParameters -> <empty>
Rule 67    opReturns -> errorOpReturns RETURNS type saveReturnType { opVars body return
Rule 68    opReturns -> { opVars body
Rule 69    saveReturnType -> <empty>
Rule 70    errorOpReturns -> <empty>
Rule 71    basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
Rule 72    errorBasicDeclare -> <empty>
Rule 73    structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare
Rule 74    errorStructDeclare -> <empty>
Rule 75    dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare
Rule 76    errorDictDeclare -> <empty>
Rule 77    cyDeclare -> declare
Rule 78    cyDeclare -> empty
Rule 79    body -> errorBody cyInstruction
Rule 80    body -> empty
Rule 81    errorBody -> <empty>
Rule 82    cyInstruction -> instr body
Rule 83    cycle -> forCycle
Rule 84    cycle -> whileCycle
Rule 85    whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body }
Rule 86    errorWhileCycle -> <empty>
Rule 87    forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body }
Rule 88    errorForCycle -> <empty>
Rule 89    assign -> ID saveVariable errorAssign assignOptions performAssign
Rule 90    errorAssign -> <empty>
Rule 91    assignOptions -> init
Rule 92    assignOptions -> initDict
Rule 93    assignOptions -> [ expresion ] assignMatrix init
Rule 94    assignMatrix -> [ expresion ] errorAssignMatrix
Rule 95    assignMatrix -> empty
Rule 96    errorAssignMatrix -> <empty>
Rule 97    funcCall -> ID PARINI opParamCall PARFIN
Rule 98    opParamCall -> expresion cyParamCall
Rule 99    opParamCall -> empty
Rule 100   cyParamCall -> , expresion cyParamCall
Rule 101   cyParamCall -> empty
Rule 102   struct -> structType [ CTED ] optionalMatrix
Rule 103   structType -> type
Rule 104   structType -> DICT dict
Rule 105   optionalMatrix -> [ CTED ]
Rule 106   optionalMatrix -> empty
Rule 107   condition -> errorCondition IF PARINI expresion PARFIN { body } optionalElse
Rule 108   errorCondition -> <empty>
Rule 109   optionalElse -> errorElse ELSE { body }
Rule 110   optionalElse -> empty
Rule 111   errorElse -> <empty>
Rule 112   dict -> errorDict PARINI type : type PARFIN
Rule 113   errorDict -> <empty>
Rule 114   expresion -> sExp performAndOr cyExpresion errorExpresion
Rule 115   errorExpresion -> <empty>
Rule 116   cyExpresion -> AND saveOperator expresion
Rule 117   cyExpresion -> OR saveOperator expresion
Rule 118   cyExpresion -> empty
Rule 119   sExp -> exp errorOpSExp opSExp performRelational
Rule 120   opSExp -> EQ saveOperator exp
Rule 121   opSExp -> DIF saveOperator exp
Rule 122   opSExp -> LTOEQ saveOperator exp
Rule 123   opSExp -> GTOEQ saveOperator exp
Rule 124   opSExp -> GT saveOperator exp
Rule 125   opSExp -> LT saveOperator exp
Rule 126   opSExp -> empty
Rule 127   errorOpSExp -> <empty>
Rule 128   exp -> term performAddSub errorCyExp cyExp
Rule 129   cyExp -> PLUS saveOperator exp
Rule 130   cyExp -> MINUS saveOperator exp
Rule 131   cyExp -> empty
Rule 132   errorCyExp -> <empty>
Rule 133   term -> fact performMulDiv cyTerm
Rule 134   cyTerm -> MULT saveOperator errorFact term
Rule 135   cyTerm -> DIV saveOperator term
Rule 136   cyTerm -> empty
Rule 137   fact -> CTES
Rule 138   fact -> cte
Rule 139   fact -> funcCall
Rule 140   fact -> PARINI putFondo expresion PARFIN takeFondo
Rule 141   fact -> ID saveVariable opAccess errorOpAccess
Rule 142   errorFact -> <empty>
Rule 143   opAccess -> opStruct
Rule 144   opAccess -> opDictionary
Rule 145   opAccess -> empty
Rule 146   errorOpAccess -> <empty>
Rule 147   opStruct -> errorOpStruct [ expresion ] opMatrix
Rule 148   errorOpStruct -> <empty>
Rule 149   opMatrix -> errorOpMatrix [ expresion ]
Rule 150   opMatrix -> empty
Rule 151   errorOpMatrix -> <empty>
Rule 152   opDictionary -> . dictIndex
Rule 153   dictIndex -> FIRST
Rule 154   dictIndex -> LAST
Rule 155   cte -> CTED
Rule 156   cte -> CTEF
Rule 157   cte -> TRUE
Rule 158   cte -> FALSE
Rule 159   empty -> <empty>
Rule 160   printTables -> <empty>
Rule 161   saveVariable -> <empty>
Rule 162   saveOperator -> <empty>
Rule 163   putFondo -> <empty>
Rule 164   takeFondo -> <empty>
Rule 165   performAssign -> <empty>
Rule 166   performMulDiv -> <empty>
Rule 167   performAddSub -> <empty>
Rule 168   performRelational -> <empty>
Rule 169   performAndOr -> <empty>
Rule 170   performPrint -> <empty>
Rule 171   performRead -> <empty>

Terminals, with rules where they appear

,                    : 29 32 53 100
.                    : 152
:                    : 43 112
;                    : 21 51 60 71 73 75 87 87
AND                  : 116
ASGN                 : 38 43
BOOL                 : 16
CTED                 : 102 105 155
CTEF                 : 156
CTES                 : 45 137
DICT                 : 75 104
DIF                  : 121
DIV                  : 135
ELSE                 : 109
EQ                   : 120
FALSE                : 158
FIRST                : 153
FLOAT                : 14
FOR                  : 87
FUNC                 : 57
GT                   : 124
GTOEQ                : 123
ID                   : 1 31 32 47 49 53 57 71 73 75 89 97 141
IF                   : 107
INT                  : 13
LAST                 : 154
LT                   : 125
LTOEQ                : 122
MAIN                 : 18
MINUS                : 130
MULT                 : 134
OR                   : 117
PARFIN               : 28 31 43 57 85 87 97 107 112 140
PARINI               : 28 31 43 57 85 87 97 107 112 140
PLUS                 : 129
PRINT                : 28
PROGRAM              : 1
READ                 : 31
RETURN               : 60
RETURNS              : 67
STRING               : 15
STRUCT               : 73
TRUE                 : 157
VARS                 : 10
WHILE                : 85
[                    : 93 94 102 105 147 149
]                    : 93 94 102 105 147 149
error                : 
{                    : 1 18 67 68 85 87 107 109
}                    : 1 18 57 85 87 107 109

Nonterminals, with rules where they appear

assign               : 24 87 87
assignMatrix         : 93
assignOptions        : 89
basicDeclare         : 35
basicStatements      : 21
body                 : 18 67 68 82 85 87 107 109
changeCurrentScope   : 1
clearVarsTable       : 18 57
condition            : 22
cte                  : 46 138
cyDeclare            : 71 73 75
cyExp                : 128
cyExpresion          : 114
cyInstruction        : 79
cyParam              : 49
cyParamCall          : 98 100
cyPrint              : 28 29
cyRead               : 31 32
cyTerm               : 133
cyTypeParam          : 49 53 71
cycle                : 23
declare              : 10 77
dict                 : 75 104
dictDeclare          : 37
dictIndex            : 152
dictType             : 43 43
empty                : 7 9 30 33 52 54 63 78 80 95 99 101 106 110 118 126 131 136 145 150
errorAssign          : 89
errorAssignMatrix    : 94
errorBasicDeclare    : 71
errorBody            : 79
errorCondition       : 107
errorCyExp           : 128
errorCyParam         : 51
errorDict            : 112
errorDictDeclare     : 75
errorDictType        : 45
errorElse            : 109
errorExpresion       : 114
errorFact            : 134
errorForCycle        : 87
errorFunction        : 57
errorInit            : 38
errorInitDict        : 43
errorMain            : 18
errorOpAccess        : 141
errorOpMatrix        : 149
errorOpParameters    : 62
errorOpReturns       : 67
errorOpSExp          : 119
errorOpStruct        : 147
errorParam           : 49
errorProgram         : 1
errorReturn          : 60
errorStructDeclare   : 73
errorType            : 13
errorVars            : 10
errorWhileCycle      : 85
exp                  : 28 29 119 120 121 122 123 124 125 129 130
expresion            : 40 60 85 87 93 94 98 100 107 116 117 140 147 149
fact                 : 41 133
fix                  : 29 32
flagParameters       : 57 57
forCycle             : 83
funcCall             : 25 42 139
function             : 8
init                 : 91 93
initDict             : 92
initWith             : 38
instr                : 82
main                 : 1
opAccess             : 141
opDictionary         : 144
opFunctions          : 1 8
opMatrix             : 147
opParamCall          : 97
opParameters         : 57
opReturns            : 57
opSExp               : 119
opStruct             : 143
opVars               : 1 18 67 68
optionalElse         : 107
optionalMatrix       : 102
param                : 51 62
performAddSub        : 128
performAndOr         : 114
performAssign        : 89
performMulDiv        : 133
performPrint         : 28 29
performRead          : 31 32
performRelational    : 119
print                : 26
printTables          : 1
program              : 0
putFondo             : 140
read                 : 27
return               : 67
sExp                 : 114
saveID               : 51 52 53 71
saveMain             : 18
saveOperator         : 38 116 117 120 121 122 123 124 125 129 130 134 135
saveParamToDirProc   : 62
saveProc             : 1 57
saveReturnType       : 67
saveType             : 1 49 57 71
saveTypeParam        : 51 52 53
saveVariable         : 89 141
struct               : 73
structDeclare        : 36
structType           : 102
takeFondo            : 140
term                 : 128 134 135
type                 : 49 67 71 103 112 112
vars                 : 6
whileCycle           : 84

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables
    (5) errorProgram -> .

    PROGRAM         reduce using rule 5 (errorProgram -> .)

    errorProgram                   shift and go to state 2
    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> errorProgram . PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables

    PROGRAM         shift and go to state 3


state 3

    (1) program -> errorProgram PROGRAM . saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables
    (3) saveType -> .

    ID              reduce using rule 3 (saveType -> .)

    saveType                       shift and go to state 4

state 4

    (1) program -> errorProgram PROGRAM saveType . ID saveProc { opVars changeCurrentScope opFunctions main } printTables

    ID              shift and go to state 5


state 5

    (1) program -> errorProgram PROGRAM saveType ID . saveProc { opVars changeCurrentScope opFunctions main } printTables
    (4) saveProc -> .

    {               reduce using rule 4 (saveProc -> .)

    saveProc                       shift and go to state 6

state 6

    (1) program -> errorProgram PROGRAM saveType ID saveProc . { opVars changeCurrentScope opFunctions main } printTables

    {               shift and go to state 7


state 7

    (1) program -> errorProgram PROGRAM saveType ID saveProc { . opVars changeCurrentScope opFunctions main } printTables
    (6) opVars -> . vars
    (7) opVars -> . empty
    (10) vars -> . errorVars VARS declare
    (159) empty -> .
    (12) errorVars -> .

    MAIN            reduce using rule 159 (empty -> .)
    FUNC            reduce using rule 159 (empty -> .)
    VARS            reduce using rule 12 (errorVars -> .)

    vars                           shift and go to state 8
    opVars                         shift and go to state 9
    errorVars                      shift and go to state 10
    empty                          shift and go to state 11

state 8

    (6) opVars -> vars .

    RETURN          reduce using rule 6 (opVars -> vars .)
    ID              reduce using rule 6 (opVars -> vars .)
    PRINT           reduce using rule 6 (opVars -> vars .)
    READ            reduce using rule 6 (opVars -> vars .)
    IF              reduce using rule 6 (opVars -> vars .)
    FOR             reduce using rule 6 (opVars -> vars .)
    WHILE           reduce using rule 6 (opVars -> vars .)
    }               reduce using rule 6 (opVars -> vars .)
    MAIN            reduce using rule 6 (opVars -> vars .)
    FUNC            reduce using rule 6 (opVars -> vars .)


state 9

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars . changeCurrentScope opFunctions main } printTables
    (2) changeCurrentScope -> .

    MAIN            reduce using rule 2 (changeCurrentScope -> .)
    FUNC            reduce using rule 2 (changeCurrentScope -> .)

    changeCurrentScope             shift and go to state 12

state 10

    (10) vars -> errorVars . VARS declare

    VARS            shift and go to state 13


state 11

    (7) opVars -> empty .

    RETURN          reduce using rule 7 (opVars -> empty .)
    ID              reduce using rule 7 (opVars -> empty .)
    PRINT           reduce using rule 7 (opVars -> empty .)
    READ            reduce using rule 7 (opVars -> empty .)
    IF              reduce using rule 7 (opVars -> empty .)
    FOR             reduce using rule 7 (opVars -> empty .)
    WHILE           reduce using rule 7 (opVars -> empty .)
    }               reduce using rule 7 (opVars -> empty .)
    MAIN            reduce using rule 7 (opVars -> empty .)
    FUNC            reduce using rule 7 (opVars -> empty .)


state 12

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope . opFunctions main } printTables
    (8) opFunctions -> . function opFunctions
    (9) opFunctions -> . empty
    (57) function -> . errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (159) empty -> .
    (58) errorFunction -> .

    MAIN            reduce using rule 159 (empty -> .)
    FUNC            reduce using rule 58 (errorFunction -> .)

    function                       shift and go to state 16
    errorFunction                  shift and go to state 17
    empty                          shift and go to state 15
    opFunctions                    shift and go to state 14

state 13

    (10) vars -> errorVars VARS . declare
    (35) declare -> . basicDeclare
    (36) declare -> . structDeclare
    (37) declare -> . dictDeclare
    (71) basicDeclare -> . saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (73) structDeclare -> . errorStructDeclare STRUCT ID struct ; cyDeclare
    (75) dictDeclare -> . errorDictDeclare DICT ID dict ; cyDeclare
    (3) saveType -> .
    (74) errorStructDeclare -> .
    (76) errorDictDeclare -> .

    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)
    STRUCT          reduce using rule 74 (errorStructDeclare -> .)
    DICT            reduce using rule 76 (errorDictDeclare -> .)

    dictDeclare                    shift and go to state 18
    saveType                       shift and go to state 19
    errorDictDeclare               shift and go to state 20
    structDeclare                  shift and go to state 21
    errorStructDeclare             shift and go to state 22
    basicDeclare                   shift and go to state 23
    declare                        shift and go to state 24

state 14

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions . main } printTables
    (18) main -> . errorMain MAIN saveMain { opVars body } clearVarsTable
    (20) errorMain -> .

    MAIN            reduce using rule 20 (errorMain -> .)

    main                           shift and go to state 25
    errorMain                      shift and go to state 26

state 15

    (9) opFunctions -> empty .

    MAIN            reduce using rule 9 (opFunctions -> empty .)


state 16

    (8) opFunctions -> function . opFunctions
    (8) opFunctions -> . function opFunctions
    (9) opFunctions -> . empty
    (57) function -> . errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (159) empty -> .
    (58) errorFunction -> .

    MAIN            reduce using rule 159 (empty -> .)
    FUNC            reduce using rule 58 (errorFunction -> .)

    function                       shift and go to state 16
    errorFunction                  shift and go to state 17
    empty                          shift and go to state 15
    opFunctions                    shift and go to state 27

state 17

    (57) function -> errorFunction . FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable

    FUNC            shift and go to state 28


state 18

    (37) declare -> dictDeclare .

    MAIN            reduce using rule 37 (declare -> dictDeclare .)
    FUNC            reduce using rule 37 (declare -> dictDeclare .)
    }               reduce using rule 37 (declare -> dictDeclare .)
    ID              reduce using rule 37 (declare -> dictDeclare .)
    PRINT           reduce using rule 37 (declare -> dictDeclare .)
    READ            reduce using rule 37 (declare -> dictDeclare .)
    IF              reduce using rule 37 (declare -> dictDeclare .)
    FOR             reduce using rule 37 (declare -> dictDeclare .)
    WHILE           reduce using rule 37 (declare -> dictDeclare .)
    RETURN          reduce using rule 37 (declare -> dictDeclare .)


state 19

    (71) basicDeclare -> saveType . type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    errorType                      shift and go to state 31
    type                           shift and go to state 33

state 20

    (75) dictDeclare -> errorDictDeclare . DICT ID dict ; cyDeclare

    DICT            shift and go to state 34


state 21

    (36) declare -> structDeclare .

    MAIN            reduce using rule 36 (declare -> structDeclare .)
    FUNC            reduce using rule 36 (declare -> structDeclare .)
    }               reduce using rule 36 (declare -> structDeclare .)
    ID              reduce using rule 36 (declare -> structDeclare .)
    PRINT           reduce using rule 36 (declare -> structDeclare .)
    READ            reduce using rule 36 (declare -> structDeclare .)
    IF              reduce using rule 36 (declare -> structDeclare .)
    FOR             reduce using rule 36 (declare -> structDeclare .)
    WHILE           reduce using rule 36 (declare -> structDeclare .)
    RETURN          reduce using rule 36 (declare -> structDeclare .)


state 22

    (73) structDeclare -> errorStructDeclare . STRUCT ID struct ; cyDeclare

    STRUCT          shift and go to state 35


state 23

    (35) declare -> basicDeclare .

    MAIN            reduce using rule 35 (declare -> basicDeclare .)
    FUNC            reduce using rule 35 (declare -> basicDeclare .)
    }               reduce using rule 35 (declare -> basicDeclare .)
    ID              reduce using rule 35 (declare -> basicDeclare .)
    PRINT           reduce using rule 35 (declare -> basicDeclare .)
    READ            reduce using rule 35 (declare -> basicDeclare .)
    IF              reduce using rule 35 (declare -> basicDeclare .)
    FOR             reduce using rule 35 (declare -> basicDeclare .)
    WHILE           reduce using rule 35 (declare -> basicDeclare .)
    RETURN          reduce using rule 35 (declare -> basicDeclare .)


state 24

    (10) vars -> errorVars VARS declare .

    ID              reduce using rule 10 (vars -> errorVars VARS declare .)
    PRINT           reduce using rule 10 (vars -> errorVars VARS declare .)
    READ            reduce using rule 10 (vars -> errorVars VARS declare .)
    IF              reduce using rule 10 (vars -> errorVars VARS declare .)
    FOR             reduce using rule 10 (vars -> errorVars VARS declare .)
    WHILE           reduce using rule 10 (vars -> errorVars VARS declare .)
    }               reduce using rule 10 (vars -> errorVars VARS declare .)
    MAIN            reduce using rule 10 (vars -> errorVars VARS declare .)
    FUNC            reduce using rule 10 (vars -> errorVars VARS declare .)
    RETURN          reduce using rule 10 (vars -> errorVars VARS declare .)


state 25

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main . } printTables

    }               shift and go to state 36


state 26

    (18) main -> errorMain . MAIN saveMain { opVars body } clearVarsTable

    MAIN            shift and go to state 37


state 27

    (8) opFunctions -> function opFunctions .

    MAIN            reduce using rule 8 (opFunctions -> function opFunctions .)


state 28

    (57) function -> errorFunction FUNC . saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (3) saveType -> .

    ID              reduce using rule 3 (saveType -> .)

    saveType                       shift and go to state 38

state 29

    (14) type -> FLOAT .

    {               reduce using rule 14 (type -> FLOAT .)
    PARFIN          reduce using rule 14 (type -> FLOAT .)
    :               reduce using rule 14 (type -> FLOAT .)
    ID              reduce using rule 14 (type -> FLOAT .)
    [               reduce using rule 14 (type -> FLOAT .)


state 30

    (15) type -> STRING .

    {               reduce using rule 15 (type -> STRING .)
    PARFIN          reduce using rule 15 (type -> STRING .)
    :               reduce using rule 15 (type -> STRING .)
    ID              reduce using rule 15 (type -> STRING .)
    [               reduce using rule 15 (type -> STRING .)


state 31

    (13) type -> errorType . INT

    INT             shift and go to state 39


state 32

    (16) type -> BOOL .

    {               reduce using rule 16 (type -> BOOL .)
    PARFIN          reduce using rule 16 (type -> BOOL .)
    :               reduce using rule 16 (type -> BOOL .)
    ID              reduce using rule 16 (type -> BOOL .)
    [               reduce using rule 16 (type -> BOOL .)


state 33

    (71) basicDeclare -> saveType type . errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (72) errorBasicDeclare -> .

    ID              reduce using rule 72 (errorBasicDeclare -> .)

    errorBasicDeclare              shift and go to state 40

state 34

    (75) dictDeclare -> errorDictDeclare DICT . ID dict ; cyDeclare

    ID              shift and go to state 41


state 35

    (73) structDeclare -> errorStructDeclare STRUCT . ID struct ; cyDeclare

    ID              shift and go to state 42


state 36

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } . printTables
    (160) printTables -> .

    $end            reduce using rule 160 (printTables -> .)

    printTables                    shift and go to state 43

state 37

    (18) main -> errorMain MAIN . saveMain { opVars body } clearVarsTable
    (19) saveMain -> .

    {               reduce using rule 19 (saveMain -> .)

    saveMain                       shift and go to state 44

state 38

    (57) function -> errorFunction FUNC saveType . ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable

    ID              shift and go to state 45


state 39

    (13) type -> errorType INT .

    {               reduce using rule 13 (type -> errorType INT .)
    PARFIN          reduce using rule 13 (type -> errorType INT .)
    :               reduce using rule 13 (type -> errorType INT .)
    ID              reduce using rule 13 (type -> errorType INT .)
    [               reduce using rule 13 (type -> errorType INT .)


state 40

    (71) basicDeclare -> saveType type errorBasicDeclare . ID cyTypeParam saveID ; cyDeclare

    ID              shift and go to state 46


state 41

    (75) dictDeclare -> errorDictDeclare DICT ID . dict ; cyDeclare
    (112) dict -> . errorDict PARINI type : type PARFIN
    (113) errorDict -> .

    PARINI          reduce using rule 113 (errorDict -> .)

    dict                           shift and go to state 48
    errorDict                      shift and go to state 47

state 42

    (73) structDeclare -> errorStructDeclare STRUCT ID . struct ; cyDeclare
    (102) struct -> . structType [ CTED ] optionalMatrix
    (103) structType -> . type
    (104) structType -> . DICT dict
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    DICT            shift and go to state 51
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    structType                     shift and go to state 49
    struct                         shift and go to state 50
    errorType                      shift and go to state 31
    type                           shift and go to state 52

state 43

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables .

    $end            reduce using rule 1 (program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables .)


state 44

    (18) main -> errorMain MAIN saveMain . { opVars body } clearVarsTable

    {               shift and go to state 53


state 45

    (57) function -> errorFunction FUNC saveType ID . saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (4) saveProc -> .

    PARINI          reduce using rule 4 (saveProc -> .)

    saveProc                       shift and go to state 54

state 46

    (71) basicDeclare -> saveType type errorBasicDeclare ID . cyTypeParam saveID ; cyDeclare
    (53) cyTypeParam -> . , saveID saveTypeParam ID cyTypeParam
    (54) cyTypeParam -> . empty
    (159) empty -> .

    ,               shift and go to state 55
    ;               reduce using rule 159 (empty -> .)

    empty                          shift and go to state 56
    cyTypeParam                    shift and go to state 57

state 47

    (112) dict -> errorDict . PARINI type : type PARFIN

    PARINI          shift and go to state 58


state 48

    (75) dictDeclare -> errorDictDeclare DICT ID dict . ; cyDeclare

    ;               shift and go to state 59


state 49

    (102) struct -> structType . [ CTED ] optionalMatrix

    [               shift and go to state 60


state 50

    (73) structDeclare -> errorStructDeclare STRUCT ID struct . ; cyDeclare

    ;               shift and go to state 61


state 51

    (104) structType -> DICT . dict
    (112) dict -> . errorDict PARINI type : type PARFIN
    (113) errorDict -> .

    PARINI          reduce using rule 113 (errorDict -> .)

    dict                           shift and go to state 62
    errorDict                      shift and go to state 47

state 52

    (103) structType -> type .

    [               reduce using rule 103 (structType -> type .)


state 53

    (18) main -> errorMain MAIN saveMain { . opVars body } clearVarsTable
    (6) opVars -> . vars
    (7) opVars -> . empty
    (10) vars -> . errorVars VARS declare
    (159) empty -> .
    (12) errorVars -> .

    }               reduce using rule 159 (empty -> .)
    ID              reduce using rule 159 (empty -> .)
    PRINT           reduce using rule 159 (empty -> .)
    READ            reduce using rule 159 (empty -> .)
    IF              reduce using rule 159 (empty -> .)
    FOR             reduce using rule 159 (empty -> .)
    WHILE           reduce using rule 159 (empty -> .)
    VARS            reduce using rule 12 (errorVars -> .)

    vars                           shift and go to state 8
    opVars                         shift and go to state 63
    errorVars                      shift and go to state 10
    empty                          shift and go to state 11

state 54

    (57) function -> errorFunction FUNC saveType ID saveProc . flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (64) flagParameters -> .

    PARINI          reduce using rule 64 (flagParameters -> .)

    flagParameters                 shift and go to state 64

state 55

    (53) cyTypeParam -> , . saveID saveTypeParam ID cyTypeParam
    (11) saveID -> .

    ID              reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 65

state 56

    (54) cyTypeParam -> empty .

    ;               reduce using rule 54 (cyTypeParam -> empty .)
    PARFIN          reduce using rule 54 (cyTypeParam -> empty .)


state 57

    (71) basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam . saveID ; cyDeclare
    (11) saveID -> .

    ;               reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 66

state 58

    (112) dict -> errorDict PARINI . type : type PARFIN
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    errorType                      shift and go to state 31
    type                           shift and go to state 67

state 59

    (75) dictDeclare -> errorDictDeclare DICT ID dict ; . cyDeclare
    (77) cyDeclare -> . declare
    (78) cyDeclare -> . empty
    (35) declare -> . basicDeclare
    (36) declare -> . structDeclare
    (37) declare -> . dictDeclare
    (159) empty -> .
    (71) basicDeclare -> . saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (73) structDeclare -> . errorStructDeclare STRUCT ID struct ; cyDeclare
    (75) dictDeclare -> . errorDictDeclare DICT ID dict ; cyDeclare
    (3) saveType -> .
    (74) errorStructDeclare -> .
    (76) errorDictDeclare -> .

    MAIN            reduce using rule 159 (empty -> .)
    FUNC            reduce using rule 159 (empty -> .)
    }               reduce using rule 159 (empty -> .)
    ID              reduce using rule 159 (empty -> .)
    PRINT           reduce using rule 159 (empty -> .)
    READ            reduce using rule 159 (empty -> .)
    IF              reduce using rule 159 (empty -> .)
    FOR             reduce using rule 159 (empty -> .)
    WHILE           reduce using rule 159 (empty -> .)
    RETURN          reduce using rule 159 (empty -> .)
    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)
    STRUCT          reduce using rule 74 (errorStructDeclare -> .)
    DICT            reduce using rule 76 (errorDictDeclare -> .)

    dictDeclare                    shift and go to state 18
    cyDeclare                      shift and go to state 68
    saveType                       shift and go to state 19
    structDeclare                  shift and go to state 21
    errorDictDeclare               shift and go to state 20
    errorStructDeclare             shift and go to state 22
    basicDeclare                   shift and go to state 23
    declare                        shift and go to state 69
    empty                          shift and go to state 70

state 60

    (102) struct -> structType [ . CTED ] optionalMatrix

    CTED            shift and go to state 71


state 61

    (73) structDeclare -> errorStructDeclare STRUCT ID struct ; . cyDeclare
    (77) cyDeclare -> . declare
    (78) cyDeclare -> . empty
    (35) declare -> . basicDeclare
    (36) declare -> . structDeclare
    (37) declare -> . dictDeclare
    (159) empty -> .
    (71) basicDeclare -> . saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (73) structDeclare -> . errorStructDeclare STRUCT ID struct ; cyDeclare
    (75) dictDeclare -> . errorDictDeclare DICT ID dict ; cyDeclare
    (3) saveType -> .
    (74) errorStructDeclare -> .
    (76) errorDictDeclare -> .

    MAIN            reduce using rule 159 (empty -> .)
    FUNC            reduce using rule 159 (empty -> .)
    }               reduce using rule 159 (empty -> .)
    ID              reduce using rule 159 (empty -> .)
    PRINT           reduce using rule 159 (empty -> .)
    READ            reduce using rule 159 (empty -> .)
    IF              reduce using rule 159 (empty -> .)
    FOR             reduce using rule 159 (empty -> .)
    WHILE           reduce using rule 159 (empty -> .)
    RETURN          reduce using rule 159 (empty -> .)
    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)
    STRUCT          reduce using rule 74 (errorStructDeclare -> .)
    DICT            reduce using rule 76 (errorDictDeclare -> .)

    dictDeclare                    shift and go to state 18
    cyDeclare                      shift and go to state 72
    saveType                       shift and go to state 19
    errorDictDeclare               shift and go to state 20
    structDeclare                  shift and go to state 21
    basicDeclare                   shift and go to state 23
    declare                        shift and go to state 69
    empty                          shift and go to state 70
    errorStructDeclare             shift and go to state 22

state 62

    (104) structType -> DICT dict .

    [               reduce using rule 104 (structType -> DICT dict .)


state 63

    (18) main -> errorMain MAIN saveMain { opVars . body } clearVarsTable
    (79) body -> . errorBody cyInstruction
    (80) body -> . empty
    (81) errorBody -> .
    (159) empty -> .

    ID              reduce using rule 81 (errorBody -> .)
    PRINT           reduce using rule 81 (errorBody -> .)
    READ            reduce using rule 81 (errorBody -> .)
    IF              reduce using rule 81 (errorBody -> .)
    FOR             reduce using rule 81 (errorBody -> .)
    WHILE           reduce using rule 81 (errorBody -> .)
    }               reduce using rule 159 (empty -> .)

    body                           shift and go to state 73
    errorBody                      shift and go to state 74
    empty                          shift and go to state 75

state 64

    (57) function -> errorFunction FUNC saveType ID saveProc flagParameters . PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable

    PARINI          shift and go to state 76


state 65

    (53) cyTypeParam -> , saveID . saveTypeParam ID cyTypeParam
    (55) saveTypeParam -> .

    ID              reduce using rule 55 (saveTypeParam -> .)

    saveTypeParam                  shift and go to state 77

state 66

    (71) basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID . ; cyDeclare

    ;               shift and go to state 78


state 67

    (112) dict -> errorDict PARINI type . : type PARFIN

    :               shift and go to state 79


state 68

    (75) dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .

    MAIN            reduce using rule 75 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    FUNC            reduce using rule 75 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    }               reduce using rule 75 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    ID              reduce using rule 75 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    PRINT           reduce using rule 75 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    READ            reduce using rule 75 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    IF              reduce using rule 75 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    FOR             reduce using rule 75 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    WHILE           reduce using rule 75 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    RETURN          reduce using rule 75 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)


state 69

    (77) cyDeclare -> declare .

    MAIN            reduce using rule 77 (cyDeclare -> declare .)
    FUNC            reduce using rule 77 (cyDeclare -> declare .)
    }               reduce using rule 77 (cyDeclare -> declare .)
    ID              reduce using rule 77 (cyDeclare -> declare .)
    PRINT           reduce using rule 77 (cyDeclare -> declare .)
    READ            reduce using rule 77 (cyDeclare -> declare .)
    IF              reduce using rule 77 (cyDeclare -> declare .)
    FOR             reduce using rule 77 (cyDeclare -> declare .)
    WHILE           reduce using rule 77 (cyDeclare -> declare .)
    RETURN          reduce using rule 77 (cyDeclare -> declare .)


state 70

    (78) cyDeclare -> empty .

    MAIN            reduce using rule 78 (cyDeclare -> empty .)
    FUNC            reduce using rule 78 (cyDeclare -> empty .)
    }               reduce using rule 78 (cyDeclare -> empty .)
    ID              reduce using rule 78 (cyDeclare -> empty .)
    PRINT           reduce using rule 78 (cyDeclare -> empty .)
    READ            reduce using rule 78 (cyDeclare -> empty .)
    IF              reduce using rule 78 (cyDeclare -> empty .)
    FOR             reduce using rule 78 (cyDeclare -> empty .)
    WHILE           reduce using rule 78 (cyDeclare -> empty .)
    RETURN          reduce using rule 78 (cyDeclare -> empty .)


state 71

    (102) struct -> structType [ CTED . ] optionalMatrix

    ]               shift and go to state 80


state 72

    (73) structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .

    MAIN            reduce using rule 73 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    FUNC            reduce using rule 73 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    }               reduce using rule 73 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    ID              reduce using rule 73 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    PRINT           reduce using rule 73 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    READ            reduce using rule 73 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    IF              reduce using rule 73 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    FOR             reduce using rule 73 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    WHILE           reduce using rule 73 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    RETURN          reduce using rule 73 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)


state 73

    (18) main -> errorMain MAIN saveMain { opVars body . } clearVarsTable

    }               shift and go to state 81


state 74

    (79) body -> errorBody . cyInstruction
    (82) cyInstruction -> . instr body
    (21) instr -> . basicStatements ;
    (22) instr -> . condition
    (23) instr -> . cycle
    (24) basicStatements -> . assign
    (25) basicStatements -> . funcCall
    (26) basicStatements -> . print
    (27) basicStatements -> . read
    (107) condition -> . errorCondition IF PARINI expresion PARFIN { body } optionalElse
    (83) cycle -> . forCycle
    (84) cycle -> . whileCycle
    (89) assign -> . ID saveVariable errorAssign assignOptions performAssign
    (97) funcCall -> . ID PARINI opParamCall PARFIN
    (28) print -> . PRINT PARINI exp performPrint cyPrint PARFIN
    (31) read -> . READ PARINI ID performRead cyRead PARFIN
    (108) errorCondition -> .
    (87) forCycle -> . errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body }
    (85) whileCycle -> . errorWhileCycle WHILE PARINI expresion PARFIN { body }
    (88) errorForCycle -> .
    (86) errorWhileCycle -> .

    ID              shift and go to state 88
    PRINT           shift and go to state 85
    READ            shift and go to state 83
    IF              reduce using rule 108 (errorCondition -> .)
    FOR             reduce using rule 88 (errorForCycle -> .)
    WHILE           reduce using rule 86 (errorWhileCycle -> .)

    instr                          shift and go to state 82
    whileCycle                     shift and go to state 84
    forCycle                       shift and go to state 86
    errorWhileCycle                shift and go to state 87
    condition                      shift and go to state 95
    print                          shift and go to state 89
    read                           shift and go to state 91
    basicStatements                shift and go to state 92
    errorForCycle                  shift and go to state 93
    cyInstruction                  shift and go to state 94
    cycle                          shift and go to state 90
    funcCall                       shift and go to state 96
    errorCondition                 shift and go to state 97
    assign                         shift and go to state 98

state 75

    (80) body -> empty .

    }               reduce using rule 80 (body -> empty .)
    RETURN          reduce using rule 80 (body -> empty .)


state 76

    (57) function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI . opParameters PARFIN flagParameters opReturns } clearVarsTable
    (62) opParameters -> . param saveParamToDirProc errorOpParameters
    (63) opParameters -> . empty
    (49) param -> . saveType type errorParam ID cyTypeParam cyParam
    (159) empty -> .
    (3) saveType -> .

    PARFIN          reduce using rule 159 (empty -> .)
    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)

    opParameters                   shift and go to state 99
    param                          shift and go to state 100
    saveType                       shift and go to state 101
    empty                          shift and go to state 102

state 77

    (53) cyTypeParam -> , saveID saveTypeParam . ID cyTypeParam

    ID              shift and go to state 103


state 78

    (71) basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; . cyDeclare
    (77) cyDeclare -> . declare
    (78) cyDeclare -> . empty
    (35) declare -> . basicDeclare
    (36) declare -> . structDeclare
    (37) declare -> . dictDeclare
    (159) empty -> .
    (71) basicDeclare -> . saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (73) structDeclare -> . errorStructDeclare STRUCT ID struct ; cyDeclare
    (75) dictDeclare -> . errorDictDeclare DICT ID dict ; cyDeclare
    (3) saveType -> .
    (74) errorStructDeclare -> .
    (76) errorDictDeclare -> .

    MAIN            reduce using rule 159 (empty -> .)
    FUNC            reduce using rule 159 (empty -> .)
    }               reduce using rule 159 (empty -> .)
    ID              reduce using rule 159 (empty -> .)
    PRINT           reduce using rule 159 (empty -> .)
    READ            reduce using rule 159 (empty -> .)
    IF              reduce using rule 159 (empty -> .)
    FOR             reduce using rule 159 (empty -> .)
    WHILE           reduce using rule 159 (empty -> .)
    RETURN          reduce using rule 159 (empty -> .)
    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)
    STRUCT          reduce using rule 74 (errorStructDeclare -> .)
    DICT            reduce using rule 76 (errorDictDeclare -> .)

    dictDeclare                    shift and go to state 18
    cyDeclare                      shift and go to state 104
    basicDeclare                   shift and go to state 23
    saveType                       shift and go to state 19
    errorDictDeclare               shift and go to state 20
    empty                          shift and go to state 70
    structDeclare                  shift and go to state 21
    errorStructDeclare             shift and go to state 22
    declare                        shift and go to state 69

state 79

    (112) dict -> errorDict PARINI type : . type PARFIN
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    errorType                      shift and go to state 31
    type                           shift and go to state 105

state 80

    (102) struct -> structType [ CTED ] . optionalMatrix
    (105) optionalMatrix -> . [ CTED ]
    (106) optionalMatrix -> . empty
    (159) empty -> .

    [               shift and go to state 107
    ;               reduce using rule 159 (empty -> .)

    empty                          shift and go to state 108
    optionalMatrix                 shift and go to state 106

state 81

    (18) main -> errorMain MAIN saveMain { opVars body } . clearVarsTable
    (59) clearVarsTable -> .

    }               reduce using rule 59 (clearVarsTable -> .)

    clearVarsTable                 shift and go to state 109

state 82

    (82) cyInstruction -> instr . body
    (79) body -> . errorBody cyInstruction
    (80) body -> . empty
    (81) errorBody -> .
    (159) empty -> .

    ID              reduce using rule 81 (errorBody -> .)
    PRINT           reduce using rule 81 (errorBody -> .)
    READ            reduce using rule 81 (errorBody -> .)
    IF              reduce using rule 81 (errorBody -> .)
    FOR             reduce using rule 81 (errorBody -> .)
    WHILE           reduce using rule 81 (errorBody -> .)
    }               reduce using rule 159 (empty -> .)
    RETURN          reduce using rule 159 (empty -> .)

    body                           shift and go to state 110
    errorBody                      shift and go to state 74
    empty                          shift and go to state 75

state 83

    (31) read -> READ . PARINI ID performRead cyRead PARFIN

    PARINI          shift and go to state 111


state 84

    (84) cycle -> whileCycle .

    ID              reduce using rule 84 (cycle -> whileCycle .)
    PRINT           reduce using rule 84 (cycle -> whileCycle .)
    READ            reduce using rule 84 (cycle -> whileCycle .)
    IF              reduce using rule 84 (cycle -> whileCycle .)
    FOR             reduce using rule 84 (cycle -> whileCycle .)
    WHILE           reduce using rule 84 (cycle -> whileCycle .)
    }               reduce using rule 84 (cycle -> whileCycle .)
    RETURN          reduce using rule 84 (cycle -> whileCycle .)


state 85

    (28) print -> PRINT . PARINI exp performPrint cyPrint PARFIN

    PARINI          shift and go to state 112


state 86

    (83) cycle -> forCycle .

    ID              reduce using rule 83 (cycle -> forCycle .)
    PRINT           reduce using rule 83 (cycle -> forCycle .)
    READ            reduce using rule 83 (cycle -> forCycle .)
    IF              reduce using rule 83 (cycle -> forCycle .)
    FOR             reduce using rule 83 (cycle -> forCycle .)
    WHILE           reduce using rule 83 (cycle -> forCycle .)
    }               reduce using rule 83 (cycle -> forCycle .)
    RETURN          reduce using rule 83 (cycle -> forCycle .)


state 87

    (85) whileCycle -> errorWhileCycle . WHILE PARINI expresion PARFIN { body }

    WHILE           shift and go to state 113


state 88

    (89) assign -> ID . saveVariable errorAssign assignOptions performAssign
    (97) funcCall -> ID . PARINI opParamCall PARFIN
    (161) saveVariable -> .

    PARINI          shift and go to state 115
    [               reduce using rule 161 (saveVariable -> .)
    ASGN            reduce using rule 161 (saveVariable -> .)

    saveVariable                   shift and go to state 114

state 89

    (26) basicStatements -> print .

    ;               reduce using rule 26 (basicStatements -> print .)


state 90

    (23) instr -> cycle .

    ID              reduce using rule 23 (instr -> cycle .)
    PRINT           reduce using rule 23 (instr -> cycle .)
    READ            reduce using rule 23 (instr -> cycle .)
    IF              reduce using rule 23 (instr -> cycle .)
    FOR             reduce using rule 23 (instr -> cycle .)
    WHILE           reduce using rule 23 (instr -> cycle .)
    }               reduce using rule 23 (instr -> cycle .)
    RETURN          reduce using rule 23 (instr -> cycle .)


state 91

    (27) basicStatements -> read .

    ;               reduce using rule 27 (basicStatements -> read .)


state 92

    (21) instr -> basicStatements . ;

    ;               shift and go to state 116


state 93

    (87) forCycle -> errorForCycle . FOR PARINI assign ; expresion ; assign PARFIN { body }

    FOR             shift and go to state 117


state 94

    (79) body -> errorBody cyInstruction .

    }               reduce using rule 79 (body -> errorBody cyInstruction .)
    RETURN          reduce using rule 79 (body -> errorBody cyInstruction .)


state 95

    (22) instr -> condition .

    ID              reduce using rule 22 (instr -> condition .)
    PRINT           reduce using rule 22 (instr -> condition .)
    READ            reduce using rule 22 (instr -> condition .)
    IF              reduce using rule 22 (instr -> condition .)
    FOR             reduce using rule 22 (instr -> condition .)
    WHILE           reduce using rule 22 (instr -> condition .)
    }               reduce using rule 22 (instr -> condition .)
    RETURN          reduce using rule 22 (instr -> condition .)


state 96

    (25) basicStatements -> funcCall .

    ;               reduce using rule 25 (basicStatements -> funcCall .)


state 97

    (107) condition -> errorCondition . IF PARINI expresion PARFIN { body } optionalElse

    IF              shift and go to state 118


state 98

    (24) basicStatements -> assign .

    ;               reduce using rule 24 (basicStatements -> assign .)


state 99

    (57) function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters . PARFIN flagParameters opReturns } clearVarsTable

    PARFIN          shift and go to state 119


state 100

    (62) opParameters -> param . saveParamToDirProc errorOpParameters
    (65) saveParamToDirProc -> .

    PARFIN          reduce using rule 65 (saveParamToDirProc -> .)

    saveParamToDirProc             shift and go to state 120

state 101

    (49) param -> saveType . type errorParam ID cyTypeParam cyParam
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    type                           shift and go to state 121
    errorType                      shift and go to state 31

state 102

    (63) opParameters -> empty .

    PARFIN          reduce using rule 63 (opParameters -> empty .)


state 103

    (53) cyTypeParam -> , saveID saveTypeParam ID . cyTypeParam
    (53) cyTypeParam -> . , saveID saveTypeParam ID cyTypeParam
    (54) cyTypeParam -> . empty
    (159) empty -> .

    ,               shift and go to state 55
    ;               reduce using rule 159 (empty -> .)
    PARFIN          reduce using rule 159 (empty -> .)

    cyTypeParam                    shift and go to state 122
    empty                          shift and go to state 56

state 104

    (71) basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .

    MAIN            reduce using rule 71 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    FUNC            reduce using rule 71 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    }               reduce using rule 71 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    ID              reduce using rule 71 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    PRINT           reduce using rule 71 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    READ            reduce using rule 71 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    IF              reduce using rule 71 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    FOR             reduce using rule 71 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    WHILE           reduce using rule 71 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    RETURN          reduce using rule 71 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)


state 105

    (112) dict -> errorDict PARINI type : type . PARFIN

    PARFIN          shift and go to state 123


state 106

    (102) struct -> structType [ CTED ] optionalMatrix .

    ;               reduce using rule 102 (struct -> structType [ CTED ] optionalMatrix .)


state 107

    (105) optionalMatrix -> [ . CTED ]

    CTED            shift and go to state 124


state 108

    (106) optionalMatrix -> empty .

    ;               reduce using rule 106 (optionalMatrix -> empty .)


state 109

    (18) main -> errorMain MAIN saveMain { opVars body } clearVarsTable .

    }               reduce using rule 18 (main -> errorMain MAIN saveMain { opVars body } clearVarsTable .)


state 110

    (82) cyInstruction -> instr body .

    }               reduce using rule 82 (cyInstruction -> instr body .)
    RETURN          reduce using rule 82 (cyInstruction -> instr body .)


state 111

    (31) read -> READ PARINI . ID performRead cyRead PARFIN

    ID              shift and go to state 125


state 112

    (28) print -> PRINT PARINI . exp performPrint cyPrint PARFIN
    (128) exp -> . term performAddSub errorCyExp cyExp
    (133) term -> . fact performMulDiv cyTerm
    (137) fact -> . CTES
    (138) fact -> . cte
    (139) fact -> . funcCall
    (140) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (141) fact -> . ID saveVariable opAccess errorOpAccess
    (155) cte -> . CTED
    (156) cte -> . CTEF
    (157) cte -> . TRUE
    (158) cte -> . FALSE
    (97) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 136
    fact                           shift and go to state 137

state 113

    (85) whileCycle -> errorWhileCycle WHILE . PARINI expresion PARFIN { body }

    PARINI          shift and go to state 138


state 114

    (89) assign -> ID saveVariable . errorAssign assignOptions performAssign
    (90) errorAssign -> .

    [               reduce using rule 90 (errorAssign -> .)
    ASGN            reduce using rule 90 (errorAssign -> .)

    errorAssign                    shift and go to state 139

state 115

    (97) funcCall -> ID PARINI . opParamCall PARFIN
    (98) opParamCall -> . expresion cyParamCall
    (99) opParamCall -> . empty
    (114) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (159) empty -> .
    (119) sExp -> . exp errorOpSExp opSExp performRelational
    (128) exp -> . term performAddSub errorCyExp cyExp
    (133) term -> . fact performMulDiv cyTerm
    (137) fact -> . CTES
    (138) fact -> . cte
    (139) fact -> . funcCall
    (140) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (141) fact -> . ID saveVariable opAccess errorOpAccess
    (155) cte -> . CTED
    (156) cte -> . CTEF
    (157) cte -> . TRUE
    (158) cte -> . FALSE
    (97) funcCall -> . ID PARINI opParamCall PARFIN

    PARFIN          reduce using rule 159 (empty -> .)
    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    opParamCall                    shift and go to state 140
    sExp                           shift and go to state 141
    empty                          shift and go to state 142
    expresion                      shift and go to state 143
    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 144
    fact                           shift and go to state 137

state 116

    (21) instr -> basicStatements ; .

    ID              reduce using rule 21 (instr -> basicStatements ; .)
    PRINT           reduce using rule 21 (instr -> basicStatements ; .)
    READ            reduce using rule 21 (instr -> basicStatements ; .)
    IF              reduce using rule 21 (instr -> basicStatements ; .)
    FOR             reduce using rule 21 (instr -> basicStatements ; .)
    WHILE           reduce using rule 21 (instr -> basicStatements ; .)
    }               reduce using rule 21 (instr -> basicStatements ; .)
    RETURN          reduce using rule 21 (instr -> basicStatements ; .)


state 117

    (87) forCycle -> errorForCycle FOR . PARINI assign ; expresion ; assign PARFIN { body }

    PARINI          shift and go to state 145


state 118

    (107) condition -> errorCondition IF . PARINI expresion PARFIN { body } optionalElse

    PARINI          shift and go to state 146


state 119

    (57) function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN . flagParameters opReturns } clearVarsTable
    (64) flagParameters -> .

    {               reduce using rule 64 (flagParameters -> .)
    RETURNS         reduce using rule 64 (flagParameters -> .)

    flagParameters                 shift and go to state 147

state 120

    (62) opParameters -> param saveParamToDirProc . errorOpParameters
    (66) errorOpParameters -> .

    PARFIN          reduce using rule 66 (errorOpParameters -> .)

    errorOpParameters              shift and go to state 148

state 121

    (49) param -> saveType type . errorParam ID cyTypeParam cyParam
    (50) errorParam -> .

    ID              reduce using rule 50 (errorParam -> .)

    errorParam                     shift and go to state 149

state 122

    (53) cyTypeParam -> , saveID saveTypeParam ID cyTypeParam .

    ;               reduce using rule 53 (cyTypeParam -> , saveID saveTypeParam ID cyTypeParam .)
    PARFIN          reduce using rule 53 (cyTypeParam -> , saveID saveTypeParam ID cyTypeParam .)


state 123

    (112) dict -> errorDict PARINI type : type PARFIN .

    ;               reduce using rule 112 (dict -> errorDict PARINI type : type PARFIN .)
    [               reduce using rule 112 (dict -> errorDict PARINI type : type PARFIN .)


state 124

    (105) optionalMatrix -> [ CTED . ]

    ]               shift and go to state 150


state 125

    (31) read -> READ PARINI ID . performRead cyRead PARFIN
    (171) performRead -> .

    ,               reduce using rule 171 (performRead -> .)
    PARFIN          reduce using rule 171 (performRead -> .)

    performRead                    shift and go to state 151

state 126

    (157) cte -> TRUE .

    MULT            reduce using rule 157 (cte -> TRUE .)
    DIV             reduce using rule 157 (cte -> TRUE .)
    PLUS            reduce using rule 157 (cte -> TRUE .)
    MINUS           reduce using rule 157 (cte -> TRUE .)
    EQ              reduce using rule 157 (cte -> TRUE .)
    DIF             reduce using rule 157 (cte -> TRUE .)
    LTOEQ           reduce using rule 157 (cte -> TRUE .)
    GTOEQ           reduce using rule 157 (cte -> TRUE .)
    GT              reduce using rule 157 (cte -> TRUE .)
    LT              reduce using rule 157 (cte -> TRUE .)
    AND             reduce using rule 157 (cte -> TRUE .)
    OR              reduce using rule 157 (cte -> TRUE .)
    ]               reduce using rule 157 (cte -> TRUE .)
    :               reduce using rule 157 (cte -> TRUE .)
    PARFIN          reduce using rule 157 (cte -> TRUE .)
    ,               reduce using rule 157 (cte -> TRUE .)
    ;               reduce using rule 157 (cte -> TRUE .)


state 127

    (140) fact -> PARINI . putFondo expresion PARFIN takeFondo
    (163) putFondo -> .

    CTES            reduce using rule 163 (putFondo -> .)
    PARINI          reduce using rule 163 (putFondo -> .)
    ID              reduce using rule 163 (putFondo -> .)
    CTED            reduce using rule 163 (putFondo -> .)
    CTEF            reduce using rule 163 (putFondo -> .)
    TRUE            reduce using rule 163 (putFondo -> .)
    FALSE           reduce using rule 163 (putFondo -> .)

    putFondo                       shift and go to state 152

state 128

    (155) cte -> CTED .

    MULT            reduce using rule 155 (cte -> CTED .)
    DIV             reduce using rule 155 (cte -> CTED .)
    PLUS            reduce using rule 155 (cte -> CTED .)
    MINUS           reduce using rule 155 (cte -> CTED .)
    EQ              reduce using rule 155 (cte -> CTED .)
    DIF             reduce using rule 155 (cte -> CTED .)
    LTOEQ           reduce using rule 155 (cte -> CTED .)
    GTOEQ           reduce using rule 155 (cte -> CTED .)
    GT              reduce using rule 155 (cte -> CTED .)
    LT              reduce using rule 155 (cte -> CTED .)
    AND             reduce using rule 155 (cte -> CTED .)
    OR              reduce using rule 155 (cte -> CTED .)
    ]               reduce using rule 155 (cte -> CTED .)
    :               reduce using rule 155 (cte -> CTED .)
    PARFIN          reduce using rule 155 (cte -> CTED .)
    ,               reduce using rule 155 (cte -> CTED .)
    ;               reduce using rule 155 (cte -> CTED .)


state 129

    (141) fact -> ID . saveVariable opAccess errorOpAccess
    (97) funcCall -> ID . PARINI opParamCall PARFIN
    (161) saveVariable -> .

    PARINI          shift and go to state 115
    .               reduce using rule 161 (saveVariable -> .)
    [               reduce using rule 161 (saveVariable -> .)
    MULT            reduce using rule 161 (saveVariable -> .)
    DIV             reduce using rule 161 (saveVariable -> .)
    PLUS            reduce using rule 161 (saveVariable -> .)
    MINUS           reduce using rule 161 (saveVariable -> .)
    ,               reduce using rule 161 (saveVariable -> .)
    PARFIN          reduce using rule 161 (saveVariable -> .)
    EQ              reduce using rule 161 (saveVariable -> .)
    DIF             reduce using rule 161 (saveVariable -> .)
    LTOEQ           reduce using rule 161 (saveVariable -> .)
    GTOEQ           reduce using rule 161 (saveVariable -> .)
    GT              reduce using rule 161 (saveVariable -> .)
    LT              reduce using rule 161 (saveVariable -> .)
    AND             reduce using rule 161 (saveVariable -> .)
    OR              reduce using rule 161 (saveVariable -> .)
    ]               reduce using rule 161 (saveVariable -> .)
    ;               reduce using rule 161 (saveVariable -> .)

    saveVariable                   shift and go to state 153

state 130

    (137) fact -> CTES .

    MULT            reduce using rule 137 (fact -> CTES .)
    DIV             reduce using rule 137 (fact -> CTES .)
    PLUS            reduce using rule 137 (fact -> CTES .)
    MINUS           reduce using rule 137 (fact -> CTES .)
    ,               reduce using rule 137 (fact -> CTES .)
    PARFIN          reduce using rule 137 (fact -> CTES .)
    EQ              reduce using rule 137 (fact -> CTES .)
    DIF             reduce using rule 137 (fact -> CTES .)
    LTOEQ           reduce using rule 137 (fact -> CTES .)
    GTOEQ           reduce using rule 137 (fact -> CTES .)
    GT              reduce using rule 137 (fact -> CTES .)
    LT              reduce using rule 137 (fact -> CTES .)
    AND             reduce using rule 137 (fact -> CTES .)
    OR              reduce using rule 137 (fact -> CTES .)
    ]               reduce using rule 137 (fact -> CTES .)
    ;               reduce using rule 137 (fact -> CTES .)


state 131

    (128) exp -> term . performAddSub errorCyExp cyExp
    (167) performAddSub -> .

    PLUS            reduce using rule 167 (performAddSub -> .)
    MINUS           reduce using rule 167 (performAddSub -> .)
    ,               reduce using rule 167 (performAddSub -> .)
    PARFIN          reduce using rule 167 (performAddSub -> .)
    EQ              reduce using rule 167 (performAddSub -> .)
    DIF             reduce using rule 167 (performAddSub -> .)
    LTOEQ           reduce using rule 167 (performAddSub -> .)
    GTOEQ           reduce using rule 167 (performAddSub -> .)
    GT              reduce using rule 167 (performAddSub -> .)
    LT              reduce using rule 167 (performAddSub -> .)
    AND             reduce using rule 167 (performAddSub -> .)
    OR              reduce using rule 167 (performAddSub -> .)
    ]               reduce using rule 167 (performAddSub -> .)
    ;               reduce using rule 167 (performAddSub -> .)

    performAddSub                  shift and go to state 154

state 132

    (158) cte -> FALSE .

    MULT            reduce using rule 158 (cte -> FALSE .)
    DIV             reduce using rule 158 (cte -> FALSE .)
    PLUS            reduce using rule 158 (cte -> FALSE .)
    MINUS           reduce using rule 158 (cte -> FALSE .)
    EQ              reduce using rule 158 (cte -> FALSE .)
    DIF             reduce using rule 158 (cte -> FALSE .)
    LTOEQ           reduce using rule 158 (cte -> FALSE .)
    GTOEQ           reduce using rule 158 (cte -> FALSE .)
    GT              reduce using rule 158 (cte -> FALSE .)
    LT              reduce using rule 158 (cte -> FALSE .)
    AND             reduce using rule 158 (cte -> FALSE .)
    OR              reduce using rule 158 (cte -> FALSE .)
    ]               reduce using rule 158 (cte -> FALSE .)
    :               reduce using rule 158 (cte -> FALSE .)
    PARFIN          reduce using rule 158 (cte -> FALSE .)
    ,               reduce using rule 158 (cte -> FALSE .)
    ;               reduce using rule 158 (cte -> FALSE .)


state 133

    (139) fact -> funcCall .

    MULT            reduce using rule 139 (fact -> funcCall .)
    DIV             reduce using rule 139 (fact -> funcCall .)
    PLUS            reduce using rule 139 (fact -> funcCall .)
    MINUS           reduce using rule 139 (fact -> funcCall .)
    ,               reduce using rule 139 (fact -> funcCall .)
    PARFIN          reduce using rule 139 (fact -> funcCall .)
    EQ              reduce using rule 139 (fact -> funcCall .)
    DIF             reduce using rule 139 (fact -> funcCall .)
    LTOEQ           reduce using rule 139 (fact -> funcCall .)
    GTOEQ           reduce using rule 139 (fact -> funcCall .)
    GT              reduce using rule 139 (fact -> funcCall .)
    LT              reduce using rule 139 (fact -> funcCall .)
    AND             reduce using rule 139 (fact -> funcCall .)
    OR              reduce using rule 139 (fact -> funcCall .)
    ]               reduce using rule 139 (fact -> funcCall .)
    ;               reduce using rule 139 (fact -> funcCall .)


state 134

    (138) fact -> cte .

    MULT            reduce using rule 138 (fact -> cte .)
    DIV             reduce using rule 138 (fact -> cte .)
    PLUS            reduce using rule 138 (fact -> cte .)
    MINUS           reduce using rule 138 (fact -> cte .)
    ,               reduce using rule 138 (fact -> cte .)
    PARFIN          reduce using rule 138 (fact -> cte .)
    EQ              reduce using rule 138 (fact -> cte .)
    DIF             reduce using rule 138 (fact -> cte .)
    LTOEQ           reduce using rule 138 (fact -> cte .)
    GTOEQ           reduce using rule 138 (fact -> cte .)
    GT              reduce using rule 138 (fact -> cte .)
    LT              reduce using rule 138 (fact -> cte .)
    AND             reduce using rule 138 (fact -> cte .)
    OR              reduce using rule 138 (fact -> cte .)
    ]               reduce using rule 138 (fact -> cte .)
    ;               reduce using rule 138 (fact -> cte .)


state 135

    (156) cte -> CTEF .

    MULT            reduce using rule 156 (cte -> CTEF .)
    DIV             reduce using rule 156 (cte -> CTEF .)
    PLUS            reduce using rule 156 (cte -> CTEF .)
    MINUS           reduce using rule 156 (cte -> CTEF .)
    EQ              reduce using rule 156 (cte -> CTEF .)
    DIF             reduce using rule 156 (cte -> CTEF .)
    LTOEQ           reduce using rule 156 (cte -> CTEF .)
    GTOEQ           reduce using rule 156 (cte -> CTEF .)
    GT              reduce using rule 156 (cte -> CTEF .)
    LT              reduce using rule 156 (cte -> CTEF .)
    AND             reduce using rule 156 (cte -> CTEF .)
    OR              reduce using rule 156 (cte -> CTEF .)
    ]               reduce using rule 156 (cte -> CTEF .)
    :               reduce using rule 156 (cte -> CTEF .)
    PARFIN          reduce using rule 156 (cte -> CTEF .)
    ,               reduce using rule 156 (cte -> CTEF .)
    ;               reduce using rule 156 (cte -> CTEF .)


state 136

    (28) print -> PRINT PARINI exp . performPrint cyPrint PARFIN
    (170) performPrint -> .

    ,               reduce using rule 170 (performPrint -> .)
    PARFIN          reduce using rule 170 (performPrint -> .)

    performPrint                   shift and go to state 155

state 137

    (133) term -> fact . performMulDiv cyTerm
    (166) performMulDiv -> .

    MULT            reduce using rule 166 (performMulDiv -> .)
    DIV             reduce using rule 166 (performMulDiv -> .)
    PLUS            reduce using rule 166 (performMulDiv -> .)
    MINUS           reduce using rule 166 (performMulDiv -> .)
    ,               reduce using rule 166 (performMulDiv -> .)
    PARFIN          reduce using rule 166 (performMulDiv -> .)
    EQ              reduce using rule 166 (performMulDiv -> .)
    DIF             reduce using rule 166 (performMulDiv -> .)
    LTOEQ           reduce using rule 166 (performMulDiv -> .)
    GTOEQ           reduce using rule 166 (performMulDiv -> .)
    GT              reduce using rule 166 (performMulDiv -> .)
    LT              reduce using rule 166 (performMulDiv -> .)
    AND             reduce using rule 166 (performMulDiv -> .)
    OR              reduce using rule 166 (performMulDiv -> .)
    ]               reduce using rule 166 (performMulDiv -> .)
    ;               reduce using rule 166 (performMulDiv -> .)

    performMulDiv                  shift and go to state 156

state 138

    (85) whileCycle -> errorWhileCycle WHILE PARINI . expresion PARFIN { body }
    (114) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (119) sExp -> . exp errorOpSExp opSExp performRelational
    (128) exp -> . term performAddSub errorCyExp cyExp
    (133) term -> . fact performMulDiv cyTerm
    (137) fact -> . CTES
    (138) fact -> . cte
    (139) fact -> . funcCall
    (140) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (141) fact -> . ID saveVariable opAccess errorOpAccess
    (155) cte -> . CTED
    (156) cte -> . CTEF
    (157) cte -> . TRUE
    (158) cte -> . FALSE
    (97) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    sExp                           shift and go to state 141
    expresion                      shift and go to state 157
    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 144
    fact                           shift and go to state 137

state 139

    (89) assign -> ID saveVariable errorAssign . assignOptions performAssign
    (91) assignOptions -> . init
    (92) assignOptions -> . initDict
    (93) assignOptions -> . [ expresion ] assignMatrix init
    (38) init -> . ASGN saveOperator errorInit initWith
    (43) initDict -> . ASGN PARINI dictType : dictType PARFIN errorInitDict

    [               shift and go to state 162
    ASGN            shift and go to state 160

    initDict                       shift and go to state 158
    assignOptions                  shift and go to state 159
    init                           shift and go to state 161

state 140

    (97) funcCall -> ID PARINI opParamCall . PARFIN

    PARFIN          shift and go to state 163


state 141

    (114) expresion -> sExp . performAndOr cyExpresion errorExpresion
    (169) performAndOr -> .

    AND             reduce using rule 169 (performAndOr -> .)
    OR              reduce using rule 169 (performAndOr -> .)
    ,               reduce using rule 169 (performAndOr -> .)
    PARFIN          reduce using rule 169 (performAndOr -> .)
    ]               reduce using rule 169 (performAndOr -> .)
    ;               reduce using rule 169 (performAndOr -> .)

    performAndOr                   shift and go to state 164

state 142

    (99) opParamCall -> empty .

    PARFIN          reduce using rule 99 (opParamCall -> empty .)


state 143

    (98) opParamCall -> expresion . cyParamCall
    (100) cyParamCall -> . , expresion cyParamCall
    (101) cyParamCall -> . empty
    (159) empty -> .

    ,               shift and go to state 166
    PARFIN          reduce using rule 159 (empty -> .)

    cyParamCall                    shift and go to state 165
    empty                          shift and go to state 167

state 144

    (119) sExp -> exp . errorOpSExp opSExp performRelational
    (127) errorOpSExp -> .

    EQ              reduce using rule 127 (errorOpSExp -> .)
    DIF             reduce using rule 127 (errorOpSExp -> .)
    LTOEQ           reduce using rule 127 (errorOpSExp -> .)
    GTOEQ           reduce using rule 127 (errorOpSExp -> .)
    GT              reduce using rule 127 (errorOpSExp -> .)
    LT              reduce using rule 127 (errorOpSExp -> .)
    AND             reduce using rule 127 (errorOpSExp -> .)
    OR              reduce using rule 127 (errorOpSExp -> .)
    ,               reduce using rule 127 (errorOpSExp -> .)
    PARFIN          reduce using rule 127 (errorOpSExp -> .)
    ]               reduce using rule 127 (errorOpSExp -> .)
    ;               reduce using rule 127 (errorOpSExp -> .)

    errorOpSExp                    shift and go to state 168

state 145

    (87) forCycle -> errorForCycle FOR PARINI . assign ; expresion ; assign PARFIN { body }
    (89) assign -> . ID saveVariable errorAssign assignOptions performAssign

    ID              shift and go to state 169

    assign                         shift and go to state 170

state 146

    (107) condition -> errorCondition IF PARINI . expresion PARFIN { body } optionalElse
    (114) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (119) sExp -> . exp errorOpSExp opSExp performRelational
    (128) exp -> . term performAddSub errorCyExp cyExp
    (133) term -> . fact performMulDiv cyTerm
    (137) fact -> . CTES
    (138) fact -> . cte
    (139) fact -> . funcCall
    (140) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (141) fact -> . ID saveVariable opAccess errorOpAccess
    (155) cte -> . CTED
    (156) cte -> . CTEF
    (157) cte -> . TRUE
    (158) cte -> . FALSE
    (97) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    sExp                           shift and go to state 141
    expresion                      shift and go to state 171
    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 144
    fact                           shift and go to state 137

state 147

    (57) function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters . opReturns } clearVarsTable
    (67) opReturns -> . errorOpReturns RETURNS type saveReturnType { opVars body return
    (68) opReturns -> . { opVars body
    (70) errorOpReturns -> .

    {               shift and go to state 174
    RETURNS         reduce using rule 70 (errorOpReturns -> .)

    errorOpReturns                 shift and go to state 173
    opReturns                      shift and go to state 172

state 148

    (62) opParameters -> param saveParamToDirProc errorOpParameters .

    PARFIN          reduce using rule 62 (opParameters -> param saveParamToDirProc errorOpParameters .)


state 149

    (49) param -> saveType type errorParam . ID cyTypeParam cyParam

    ID              shift and go to state 175


state 150

    (105) optionalMatrix -> [ CTED ] .

    ;               reduce using rule 105 (optionalMatrix -> [ CTED ] .)


state 151

    (31) read -> READ PARINI ID performRead . cyRead PARFIN
    (32) cyRead -> . , fix ID performRead cyRead
    (33) cyRead -> . empty
    (159) empty -> .

    ,               shift and go to state 176
    PARFIN          reduce using rule 159 (empty -> .)

    cyRead                         shift and go to state 177
    empty                          shift and go to state 178

state 152

    (140) fact -> PARINI putFondo . expresion PARFIN takeFondo
    (114) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (119) sExp -> . exp errorOpSExp opSExp performRelational
    (128) exp -> . term performAddSub errorCyExp cyExp
    (133) term -> . fact performMulDiv cyTerm
    (137) fact -> . CTES
    (138) fact -> . cte
    (139) fact -> . funcCall
    (140) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (141) fact -> . ID saveVariable opAccess errorOpAccess
    (155) cte -> . CTED
    (156) cte -> . CTEF
    (157) cte -> . TRUE
    (158) cte -> . FALSE
    (97) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    sExp                           shift and go to state 141
    expresion                      shift and go to state 179
    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 144
    fact                           shift and go to state 137

state 153

    (141) fact -> ID saveVariable . opAccess errorOpAccess
    (143) opAccess -> . opStruct
    (144) opAccess -> . opDictionary
    (145) opAccess -> . empty
    (147) opStruct -> . errorOpStruct [ expresion ] opMatrix
    (152) opDictionary -> . . dictIndex
    (159) empty -> .
    (148) errorOpStruct -> .

    .               shift and go to state 184
    MULT            reduce using rule 159 (empty -> .)
    DIV             reduce using rule 159 (empty -> .)
    PLUS            reduce using rule 159 (empty -> .)
    MINUS           reduce using rule 159 (empty -> .)
    ,               reduce using rule 159 (empty -> .)
    PARFIN          reduce using rule 159 (empty -> .)
    EQ              reduce using rule 159 (empty -> .)
    DIF             reduce using rule 159 (empty -> .)
    LTOEQ           reduce using rule 159 (empty -> .)
    GTOEQ           reduce using rule 159 (empty -> .)
    GT              reduce using rule 159 (empty -> .)
    LT              reduce using rule 159 (empty -> .)
    AND             reduce using rule 159 (empty -> .)
    OR              reduce using rule 159 (empty -> .)
    ]               reduce using rule 159 (empty -> .)
    ;               reduce using rule 159 (empty -> .)
    [               reduce using rule 148 (errorOpStruct -> .)

    errorOpStruct                  shift and go to state 180
    opDictionary                   shift and go to state 181
    opStruct                       shift and go to state 182
    opAccess                       shift and go to state 183
    empty                          shift and go to state 185

state 154

    (128) exp -> term performAddSub . errorCyExp cyExp
    (132) errorCyExp -> .

    PLUS            reduce using rule 132 (errorCyExp -> .)
    MINUS           reduce using rule 132 (errorCyExp -> .)
    ,               reduce using rule 132 (errorCyExp -> .)
    PARFIN          reduce using rule 132 (errorCyExp -> .)
    EQ              reduce using rule 132 (errorCyExp -> .)
    DIF             reduce using rule 132 (errorCyExp -> .)
    LTOEQ           reduce using rule 132 (errorCyExp -> .)
    GTOEQ           reduce using rule 132 (errorCyExp -> .)
    GT              reduce using rule 132 (errorCyExp -> .)
    LT              reduce using rule 132 (errorCyExp -> .)
    AND             reduce using rule 132 (errorCyExp -> .)
    OR              reduce using rule 132 (errorCyExp -> .)
    ]               reduce using rule 132 (errorCyExp -> .)
    ;               reduce using rule 132 (errorCyExp -> .)

    errorCyExp                     shift and go to state 186

state 155

    (28) print -> PRINT PARINI exp performPrint . cyPrint PARFIN
    (29) cyPrint -> . , fix exp performPrint cyPrint
    (30) cyPrint -> . empty
    (159) empty -> .

    ,               shift and go to state 188
    PARFIN          reduce using rule 159 (empty -> .)

    cyPrint                        shift and go to state 187
    empty                          shift and go to state 189

state 156

    (133) term -> fact performMulDiv . cyTerm
    (134) cyTerm -> . MULT saveOperator errorFact term
    (135) cyTerm -> . DIV saveOperator term
    (136) cyTerm -> . empty
    (159) empty -> .

    MULT            shift and go to state 193
    DIV             shift and go to state 192
    PLUS            reduce using rule 159 (empty -> .)
    MINUS           reduce using rule 159 (empty -> .)
    ,               reduce using rule 159 (empty -> .)
    PARFIN          reduce using rule 159 (empty -> .)
    EQ              reduce using rule 159 (empty -> .)
    DIF             reduce using rule 159 (empty -> .)
    LTOEQ           reduce using rule 159 (empty -> .)
    GTOEQ           reduce using rule 159 (empty -> .)
    GT              reduce using rule 159 (empty -> .)
    LT              reduce using rule 159 (empty -> .)
    AND             reduce using rule 159 (empty -> .)
    OR              reduce using rule 159 (empty -> .)
    ]               reduce using rule 159 (empty -> .)
    ;               reduce using rule 159 (empty -> .)

    cyTerm                         shift and go to state 190
    empty                          shift and go to state 191

state 157

    (85) whileCycle -> errorWhileCycle WHILE PARINI expresion . PARFIN { body }

    PARFIN          shift and go to state 194


state 158

    (92) assignOptions -> initDict .

    ;               reduce using rule 92 (assignOptions -> initDict .)
    PARFIN          reduce using rule 92 (assignOptions -> initDict .)


state 159

    (89) assign -> ID saveVariable errorAssign assignOptions . performAssign
    (165) performAssign -> .

    ;               reduce using rule 165 (performAssign -> .)
    PARFIN          reduce using rule 165 (performAssign -> .)

    performAssign                  shift and go to state 195

state 160

    (38) init -> ASGN . saveOperator errorInit initWith
    (43) initDict -> ASGN . PARINI dictType : dictType PARFIN errorInitDict
    (162) saveOperator -> .

  ! shift/reduce conflict for PARINI resolved as shift
    PARINI          shift and go to state 197
    CTES            reduce using rule 162 (saveOperator -> .)
    ID              reduce using rule 162 (saveOperator -> .)
    CTED            reduce using rule 162 (saveOperator -> .)
    CTEF            reduce using rule 162 (saveOperator -> .)
    TRUE            reduce using rule 162 (saveOperator -> .)
    FALSE           reduce using rule 162 (saveOperator -> .)

  ! PARINI          [ reduce using rule 162 (saveOperator -> .) ]

    saveOperator                   shift and go to state 196

state 161

    (91) assignOptions -> init .

    ;               reduce using rule 91 (assignOptions -> init .)
    PARFIN          reduce using rule 91 (assignOptions -> init .)


state 162

    (93) assignOptions -> [ . expresion ] assignMatrix init
    (114) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (119) sExp -> . exp errorOpSExp opSExp performRelational
    (128) exp -> . term performAddSub errorCyExp cyExp
    (133) term -> . fact performMulDiv cyTerm
    (137) fact -> . CTES
    (138) fact -> . cte
    (139) fact -> . funcCall
    (140) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (141) fact -> . ID saveVariable opAccess errorOpAccess
    (155) cte -> . CTED
    (156) cte -> . CTEF
    (157) cte -> . TRUE
    (158) cte -> . FALSE
    (97) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    sExp                           shift and go to state 141
    expresion                      shift and go to state 198
    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 144
    fact                           shift and go to state 137

state 163

    (97) funcCall -> ID PARINI opParamCall PARFIN .

    MULT            reduce using rule 97 (funcCall -> ID PARINI opParamCall PARFIN .)
    DIV             reduce using rule 97 (funcCall -> ID PARINI opParamCall PARFIN .)
    PLUS            reduce using rule 97 (funcCall -> ID PARINI opParamCall PARFIN .)
    MINUS           reduce using rule 97 (funcCall -> ID PARINI opParamCall PARFIN .)
    ,               reduce using rule 97 (funcCall -> ID PARINI opParamCall PARFIN .)
    PARFIN          reduce using rule 97 (funcCall -> ID PARINI opParamCall PARFIN .)
    EQ              reduce using rule 97 (funcCall -> ID PARINI opParamCall PARFIN .)
    DIF             reduce using rule 97 (funcCall -> ID PARINI opParamCall PARFIN .)
    LTOEQ           reduce using rule 97 (funcCall -> ID PARINI opParamCall PARFIN .)
    GTOEQ           reduce using rule 97 (funcCall -> ID PARINI opParamCall PARFIN .)
    GT              reduce using rule 97 (funcCall -> ID PARINI opParamCall PARFIN .)
    LT              reduce using rule 97 (funcCall -> ID PARINI opParamCall PARFIN .)
    AND             reduce using rule 97 (funcCall -> ID PARINI opParamCall PARFIN .)
    OR              reduce using rule 97 (funcCall -> ID PARINI opParamCall PARFIN .)
    ]               reduce using rule 97 (funcCall -> ID PARINI opParamCall PARFIN .)
    ;               reduce using rule 97 (funcCall -> ID PARINI opParamCall PARFIN .)


state 164

    (114) expresion -> sExp performAndOr . cyExpresion errorExpresion
    (116) cyExpresion -> . AND saveOperator expresion
    (117) cyExpresion -> . OR saveOperator expresion
    (118) cyExpresion -> . empty
    (159) empty -> .

    AND             shift and go to state 199
    OR              shift and go to state 200
    ,               reduce using rule 159 (empty -> .)
    PARFIN          reduce using rule 159 (empty -> .)
    ]               reduce using rule 159 (empty -> .)
    ;               reduce using rule 159 (empty -> .)

    cyExpresion                    shift and go to state 201
    empty                          shift and go to state 202

state 165

    (98) opParamCall -> expresion cyParamCall .

    PARFIN          reduce using rule 98 (opParamCall -> expresion cyParamCall .)


state 166

    (100) cyParamCall -> , . expresion cyParamCall
    (114) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (119) sExp -> . exp errorOpSExp opSExp performRelational
    (128) exp -> . term performAddSub errorCyExp cyExp
    (133) term -> . fact performMulDiv cyTerm
    (137) fact -> . CTES
    (138) fact -> . cte
    (139) fact -> . funcCall
    (140) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (141) fact -> . ID saveVariable opAccess errorOpAccess
    (155) cte -> . CTED
    (156) cte -> . CTEF
    (157) cte -> . TRUE
    (158) cte -> . FALSE
    (97) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    sExp                           shift and go to state 141
    expresion                      shift and go to state 203
    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 144
    fact                           shift and go to state 137

state 167

    (101) cyParamCall -> empty .

    PARFIN          reduce using rule 101 (cyParamCall -> empty .)


state 168

    (119) sExp -> exp errorOpSExp . opSExp performRelational
    (120) opSExp -> . EQ saveOperator exp
    (121) opSExp -> . DIF saveOperator exp
    (122) opSExp -> . LTOEQ saveOperator exp
    (123) opSExp -> . GTOEQ saveOperator exp
    (124) opSExp -> . GT saveOperator exp
    (125) opSExp -> . LT saveOperator exp
    (126) opSExp -> . empty
    (159) empty -> .

    EQ              shift and go to state 209
    DIF             shift and go to state 206
    LTOEQ           shift and go to state 205
    GTOEQ           shift and go to state 208
    GT              shift and go to state 204
    LT              shift and go to state 207
    AND             reduce using rule 159 (empty -> .)
    OR              reduce using rule 159 (empty -> .)
    ,               reduce using rule 159 (empty -> .)
    PARFIN          reduce using rule 159 (empty -> .)
    ]               reduce using rule 159 (empty -> .)
    ;               reduce using rule 159 (empty -> .)

    empty                          shift and go to state 210
    opSExp                         shift and go to state 211

state 169

    (89) assign -> ID . saveVariable errorAssign assignOptions performAssign
    (161) saveVariable -> .

    [               reduce using rule 161 (saveVariable -> .)
    ASGN            reduce using rule 161 (saveVariable -> .)

    saveVariable                   shift and go to state 114

state 170

    (87) forCycle -> errorForCycle FOR PARINI assign . ; expresion ; assign PARFIN { body }

    ;               shift and go to state 212


state 171

    (107) condition -> errorCondition IF PARINI expresion . PARFIN { body } optionalElse

    PARFIN          shift and go to state 213


state 172

    (57) function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns . } clearVarsTable

    }               shift and go to state 214


state 173

    (67) opReturns -> errorOpReturns . RETURNS type saveReturnType { opVars body return

    RETURNS         shift and go to state 215


state 174

    (68) opReturns -> { . opVars body
    (6) opVars -> . vars
    (7) opVars -> . empty
    (10) vars -> . errorVars VARS declare
    (159) empty -> .
    (12) errorVars -> .

    ID              reduce using rule 159 (empty -> .)
    PRINT           reduce using rule 159 (empty -> .)
    READ            reduce using rule 159 (empty -> .)
    IF              reduce using rule 159 (empty -> .)
    FOR             reduce using rule 159 (empty -> .)
    WHILE           reduce using rule 159 (empty -> .)
    }               reduce using rule 159 (empty -> .)
    VARS            reduce using rule 12 (errorVars -> .)

    vars                           shift and go to state 8
    opVars                         shift and go to state 216
    errorVars                      shift and go to state 10
    empty                          shift and go to state 11

state 175

    (49) param -> saveType type errorParam ID . cyTypeParam cyParam
    (53) cyTypeParam -> . , saveID saveTypeParam ID cyTypeParam
    (54) cyTypeParam -> . empty
    (159) empty -> .

    ,               shift and go to state 55
    ;               reduce using rule 159 (empty -> .)
    PARFIN          reduce using rule 159 (empty -> .)

    empty                          shift and go to state 56
    cyTypeParam                    shift and go to state 217

state 176

    (32) cyRead -> , . fix ID performRead cyRead
    (34) fix -> .

    ID              reduce using rule 34 (fix -> .)

    fix                            shift and go to state 218

state 177

    (31) read -> READ PARINI ID performRead cyRead . PARFIN

    PARFIN          shift and go to state 219


state 178

    (33) cyRead -> empty .

    PARFIN          reduce using rule 33 (cyRead -> empty .)


state 179

    (140) fact -> PARINI putFondo expresion . PARFIN takeFondo

    PARFIN          shift and go to state 220


state 180

    (147) opStruct -> errorOpStruct . [ expresion ] opMatrix

    [               shift and go to state 221


state 181

    (144) opAccess -> opDictionary .

    MULT            reduce using rule 144 (opAccess -> opDictionary .)
    DIV             reduce using rule 144 (opAccess -> opDictionary .)
    PLUS            reduce using rule 144 (opAccess -> opDictionary .)
    MINUS           reduce using rule 144 (opAccess -> opDictionary .)
    ,               reduce using rule 144 (opAccess -> opDictionary .)
    PARFIN          reduce using rule 144 (opAccess -> opDictionary .)
    EQ              reduce using rule 144 (opAccess -> opDictionary .)
    DIF             reduce using rule 144 (opAccess -> opDictionary .)
    LTOEQ           reduce using rule 144 (opAccess -> opDictionary .)
    GTOEQ           reduce using rule 144 (opAccess -> opDictionary .)
    GT              reduce using rule 144 (opAccess -> opDictionary .)
    LT              reduce using rule 144 (opAccess -> opDictionary .)
    AND             reduce using rule 144 (opAccess -> opDictionary .)
    OR              reduce using rule 144 (opAccess -> opDictionary .)
    ]               reduce using rule 144 (opAccess -> opDictionary .)
    ;               reduce using rule 144 (opAccess -> opDictionary .)


state 182

    (143) opAccess -> opStruct .

    MULT            reduce using rule 143 (opAccess -> opStruct .)
    DIV             reduce using rule 143 (opAccess -> opStruct .)
    PLUS            reduce using rule 143 (opAccess -> opStruct .)
    MINUS           reduce using rule 143 (opAccess -> opStruct .)
    ,               reduce using rule 143 (opAccess -> opStruct .)
    PARFIN          reduce using rule 143 (opAccess -> opStruct .)
    EQ              reduce using rule 143 (opAccess -> opStruct .)
    DIF             reduce using rule 143 (opAccess -> opStruct .)
    LTOEQ           reduce using rule 143 (opAccess -> opStruct .)
    GTOEQ           reduce using rule 143 (opAccess -> opStruct .)
    GT              reduce using rule 143 (opAccess -> opStruct .)
    LT              reduce using rule 143 (opAccess -> opStruct .)
    AND             reduce using rule 143 (opAccess -> opStruct .)
    OR              reduce using rule 143 (opAccess -> opStruct .)
    ]               reduce using rule 143 (opAccess -> opStruct .)
    ;               reduce using rule 143 (opAccess -> opStruct .)


state 183

    (141) fact -> ID saveVariable opAccess . errorOpAccess
    (146) errorOpAccess -> .

    MULT            reduce using rule 146 (errorOpAccess -> .)
    DIV             reduce using rule 146 (errorOpAccess -> .)
    PLUS            reduce using rule 146 (errorOpAccess -> .)
    MINUS           reduce using rule 146 (errorOpAccess -> .)
    ,               reduce using rule 146 (errorOpAccess -> .)
    PARFIN          reduce using rule 146 (errorOpAccess -> .)
    EQ              reduce using rule 146 (errorOpAccess -> .)
    DIF             reduce using rule 146 (errorOpAccess -> .)
    LTOEQ           reduce using rule 146 (errorOpAccess -> .)
    GTOEQ           reduce using rule 146 (errorOpAccess -> .)
    GT              reduce using rule 146 (errorOpAccess -> .)
    LT              reduce using rule 146 (errorOpAccess -> .)
    AND             reduce using rule 146 (errorOpAccess -> .)
    OR              reduce using rule 146 (errorOpAccess -> .)
    ]               reduce using rule 146 (errorOpAccess -> .)
    ;               reduce using rule 146 (errorOpAccess -> .)

    errorOpAccess                  shift and go to state 222

state 184

    (152) opDictionary -> . . dictIndex
    (153) dictIndex -> . FIRST
    (154) dictIndex -> . LAST

    FIRST           shift and go to state 223
    LAST            shift and go to state 224

    dictIndex                      shift and go to state 225

state 185

    (145) opAccess -> empty .

    MULT            reduce using rule 145 (opAccess -> empty .)
    DIV             reduce using rule 145 (opAccess -> empty .)
    PLUS            reduce using rule 145 (opAccess -> empty .)
    MINUS           reduce using rule 145 (opAccess -> empty .)
    ,               reduce using rule 145 (opAccess -> empty .)
    PARFIN          reduce using rule 145 (opAccess -> empty .)
    EQ              reduce using rule 145 (opAccess -> empty .)
    DIF             reduce using rule 145 (opAccess -> empty .)
    LTOEQ           reduce using rule 145 (opAccess -> empty .)
    GTOEQ           reduce using rule 145 (opAccess -> empty .)
    GT              reduce using rule 145 (opAccess -> empty .)
    LT              reduce using rule 145 (opAccess -> empty .)
    AND             reduce using rule 145 (opAccess -> empty .)
    OR              reduce using rule 145 (opAccess -> empty .)
    ]               reduce using rule 145 (opAccess -> empty .)
    ;               reduce using rule 145 (opAccess -> empty .)


state 186

    (128) exp -> term performAddSub errorCyExp . cyExp
    (129) cyExp -> . PLUS saveOperator exp
    (130) cyExp -> . MINUS saveOperator exp
    (131) cyExp -> . empty
    (159) empty -> .

    PLUS            shift and go to state 227
    MINUS           shift and go to state 228
    ,               reduce using rule 159 (empty -> .)
    PARFIN          reduce using rule 159 (empty -> .)
    EQ              reduce using rule 159 (empty -> .)
    DIF             reduce using rule 159 (empty -> .)
    LTOEQ           reduce using rule 159 (empty -> .)
    GTOEQ           reduce using rule 159 (empty -> .)
    GT              reduce using rule 159 (empty -> .)
    LT              reduce using rule 159 (empty -> .)
    AND             reduce using rule 159 (empty -> .)
    OR              reduce using rule 159 (empty -> .)
    ]               reduce using rule 159 (empty -> .)
    ;               reduce using rule 159 (empty -> .)

    cyExp                          shift and go to state 226
    empty                          shift and go to state 229

state 187

    (28) print -> PRINT PARINI exp performPrint cyPrint . PARFIN

    PARFIN          shift and go to state 230


state 188

    (29) cyPrint -> , . fix exp performPrint cyPrint
    (34) fix -> .

    CTES            reduce using rule 34 (fix -> .)
    PARINI          reduce using rule 34 (fix -> .)
    ID              reduce using rule 34 (fix -> .)
    CTED            reduce using rule 34 (fix -> .)
    CTEF            reduce using rule 34 (fix -> .)
    TRUE            reduce using rule 34 (fix -> .)
    FALSE           reduce using rule 34 (fix -> .)

    fix                            shift and go to state 231

state 189

    (30) cyPrint -> empty .

    PARFIN          reduce using rule 30 (cyPrint -> empty .)


state 190

    (133) term -> fact performMulDiv cyTerm .

    PLUS            reduce using rule 133 (term -> fact performMulDiv cyTerm .)
    MINUS           reduce using rule 133 (term -> fact performMulDiv cyTerm .)
    EQ              reduce using rule 133 (term -> fact performMulDiv cyTerm .)
    DIF             reduce using rule 133 (term -> fact performMulDiv cyTerm .)
    LTOEQ           reduce using rule 133 (term -> fact performMulDiv cyTerm .)
    GTOEQ           reduce using rule 133 (term -> fact performMulDiv cyTerm .)
    GT              reduce using rule 133 (term -> fact performMulDiv cyTerm .)
    LT              reduce using rule 133 (term -> fact performMulDiv cyTerm .)
    AND             reduce using rule 133 (term -> fact performMulDiv cyTerm .)
    OR              reduce using rule 133 (term -> fact performMulDiv cyTerm .)
    ]               reduce using rule 133 (term -> fact performMulDiv cyTerm .)
    ,               reduce using rule 133 (term -> fact performMulDiv cyTerm .)
    PARFIN          reduce using rule 133 (term -> fact performMulDiv cyTerm .)
    ;               reduce using rule 133 (term -> fact performMulDiv cyTerm .)


state 191

    (136) cyTerm -> empty .

    PLUS            reduce using rule 136 (cyTerm -> empty .)
    MINUS           reduce using rule 136 (cyTerm -> empty .)
    ,               reduce using rule 136 (cyTerm -> empty .)
    PARFIN          reduce using rule 136 (cyTerm -> empty .)
    EQ              reduce using rule 136 (cyTerm -> empty .)
    DIF             reduce using rule 136 (cyTerm -> empty .)
    LTOEQ           reduce using rule 136 (cyTerm -> empty .)
    GTOEQ           reduce using rule 136 (cyTerm -> empty .)
    GT              reduce using rule 136 (cyTerm -> empty .)
    LT              reduce using rule 136 (cyTerm -> empty .)
    AND             reduce using rule 136 (cyTerm -> empty .)
    OR              reduce using rule 136 (cyTerm -> empty .)
    ]               reduce using rule 136 (cyTerm -> empty .)
    ;               reduce using rule 136 (cyTerm -> empty .)


state 192

    (135) cyTerm -> DIV . saveOperator term
    (162) saveOperator -> .

    CTES            reduce using rule 162 (saveOperator -> .)
    PARINI          reduce using rule 162 (saveOperator -> .)
    ID              reduce using rule 162 (saveOperator -> .)
    CTED            reduce using rule 162 (saveOperator -> .)
    CTEF            reduce using rule 162 (saveOperator -> .)
    TRUE            reduce using rule 162 (saveOperator -> .)
    FALSE           reduce using rule 162 (saveOperator -> .)

    saveOperator                   shift and go to state 232

state 193

    (134) cyTerm -> MULT . saveOperator errorFact term
    (162) saveOperator -> .

    CTES            reduce using rule 162 (saveOperator -> .)
    PARINI          reduce using rule 162 (saveOperator -> .)
    ID              reduce using rule 162 (saveOperator -> .)
    CTED            reduce using rule 162 (saveOperator -> .)
    CTEF            reduce using rule 162 (saveOperator -> .)
    TRUE            reduce using rule 162 (saveOperator -> .)
    FALSE           reduce using rule 162 (saveOperator -> .)

    saveOperator                   shift and go to state 233

state 194

    (85) whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN . { body }

    {               shift and go to state 234


state 195

    (89) assign -> ID saveVariable errorAssign assignOptions performAssign .

    ;               reduce using rule 89 (assign -> ID saveVariable errorAssign assignOptions performAssign .)
    PARFIN          reduce using rule 89 (assign -> ID saveVariable errorAssign assignOptions performAssign .)


state 196

    (38) init -> ASGN saveOperator . errorInit initWith
    (39) errorInit -> .

    CTES            reduce using rule 39 (errorInit -> .)
    PARINI          reduce using rule 39 (errorInit -> .)
    ID              reduce using rule 39 (errorInit -> .)
    CTED            reduce using rule 39 (errorInit -> .)
    CTEF            reduce using rule 39 (errorInit -> .)
    TRUE            reduce using rule 39 (errorInit -> .)
    FALSE           reduce using rule 39 (errorInit -> .)

    errorInit                      shift and go to state 235

state 197

    (43) initDict -> ASGN PARINI . dictType : dictType PARFIN errorInitDict
    (45) dictType -> . errorDictType CTES
    (46) dictType -> . cte
    (47) dictType -> . ID
    (48) errorDictType -> .
    (155) cte -> . CTED
    (156) cte -> . CTEF
    (157) cte -> . TRUE
    (158) cte -> . FALSE

    ID              shift and go to state 239
    CTES            reduce using rule 48 (errorDictType -> .)
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    dictType                       shift and go to state 236
    errorDictType                  shift and go to state 237
    cte                            shift and go to state 238

state 198

    (93) assignOptions -> [ expresion . ] assignMatrix init

    ]               shift and go to state 240


state 199

    (116) cyExpresion -> AND . saveOperator expresion
    (162) saveOperator -> .

    CTES            reduce using rule 162 (saveOperator -> .)
    PARINI          reduce using rule 162 (saveOperator -> .)
    ID              reduce using rule 162 (saveOperator -> .)
    CTED            reduce using rule 162 (saveOperator -> .)
    CTEF            reduce using rule 162 (saveOperator -> .)
    TRUE            reduce using rule 162 (saveOperator -> .)
    FALSE           reduce using rule 162 (saveOperator -> .)

    saveOperator                   shift and go to state 241

state 200

    (117) cyExpresion -> OR . saveOperator expresion
    (162) saveOperator -> .

    CTES            reduce using rule 162 (saveOperator -> .)
    PARINI          reduce using rule 162 (saveOperator -> .)
    ID              reduce using rule 162 (saveOperator -> .)
    CTED            reduce using rule 162 (saveOperator -> .)
    CTEF            reduce using rule 162 (saveOperator -> .)
    TRUE            reduce using rule 162 (saveOperator -> .)
    FALSE           reduce using rule 162 (saveOperator -> .)

    saveOperator                   shift and go to state 242

state 201

    (114) expresion -> sExp performAndOr cyExpresion . errorExpresion
    (115) errorExpresion -> .

    ,               reduce using rule 115 (errorExpresion -> .)
    PARFIN          reduce using rule 115 (errorExpresion -> .)
    ]               reduce using rule 115 (errorExpresion -> .)
    ;               reduce using rule 115 (errorExpresion -> .)

    errorExpresion                 shift and go to state 243

state 202

    (118) cyExpresion -> empty .

    ,               reduce using rule 118 (cyExpresion -> empty .)
    PARFIN          reduce using rule 118 (cyExpresion -> empty .)
    ]               reduce using rule 118 (cyExpresion -> empty .)
    ;               reduce using rule 118 (cyExpresion -> empty .)


state 203

    (100) cyParamCall -> , expresion . cyParamCall
    (100) cyParamCall -> . , expresion cyParamCall
    (101) cyParamCall -> . empty
    (159) empty -> .

    ,               shift and go to state 166
    PARFIN          reduce using rule 159 (empty -> .)

    cyParamCall                    shift and go to state 244
    empty                          shift and go to state 167

state 204

    (124) opSExp -> GT . saveOperator exp
    (162) saveOperator -> .

    CTES            reduce using rule 162 (saveOperator -> .)
    PARINI          reduce using rule 162 (saveOperator -> .)
    ID              reduce using rule 162 (saveOperator -> .)
    CTED            reduce using rule 162 (saveOperator -> .)
    CTEF            reduce using rule 162 (saveOperator -> .)
    TRUE            reduce using rule 162 (saveOperator -> .)
    FALSE           reduce using rule 162 (saveOperator -> .)

    saveOperator                   shift and go to state 245

state 205

    (122) opSExp -> LTOEQ . saveOperator exp
    (162) saveOperator -> .

    CTES            reduce using rule 162 (saveOperator -> .)
    PARINI          reduce using rule 162 (saveOperator -> .)
    ID              reduce using rule 162 (saveOperator -> .)
    CTED            reduce using rule 162 (saveOperator -> .)
    CTEF            reduce using rule 162 (saveOperator -> .)
    TRUE            reduce using rule 162 (saveOperator -> .)
    FALSE           reduce using rule 162 (saveOperator -> .)

    saveOperator                   shift and go to state 246

state 206

    (121) opSExp -> DIF . saveOperator exp
    (162) saveOperator -> .

    CTES            reduce using rule 162 (saveOperator -> .)
    PARINI          reduce using rule 162 (saveOperator -> .)
    ID              reduce using rule 162 (saveOperator -> .)
    CTED            reduce using rule 162 (saveOperator -> .)
    CTEF            reduce using rule 162 (saveOperator -> .)
    TRUE            reduce using rule 162 (saveOperator -> .)
    FALSE           reduce using rule 162 (saveOperator -> .)

    saveOperator                   shift and go to state 247

state 207

    (125) opSExp -> LT . saveOperator exp
    (162) saveOperator -> .

    CTES            reduce using rule 162 (saveOperator -> .)
    PARINI          reduce using rule 162 (saveOperator -> .)
    ID              reduce using rule 162 (saveOperator -> .)
    CTED            reduce using rule 162 (saveOperator -> .)
    CTEF            reduce using rule 162 (saveOperator -> .)
    TRUE            reduce using rule 162 (saveOperator -> .)
    FALSE           reduce using rule 162 (saveOperator -> .)

    saveOperator                   shift and go to state 248

state 208

    (123) opSExp -> GTOEQ . saveOperator exp
    (162) saveOperator -> .

    CTES            reduce using rule 162 (saveOperator -> .)
    PARINI          reduce using rule 162 (saveOperator -> .)
    ID              reduce using rule 162 (saveOperator -> .)
    CTED            reduce using rule 162 (saveOperator -> .)
    CTEF            reduce using rule 162 (saveOperator -> .)
    TRUE            reduce using rule 162 (saveOperator -> .)
    FALSE           reduce using rule 162 (saveOperator -> .)

    saveOperator                   shift and go to state 249

state 209

    (120) opSExp -> EQ . saveOperator exp
    (162) saveOperator -> .

    CTES            reduce using rule 162 (saveOperator -> .)
    PARINI          reduce using rule 162 (saveOperator -> .)
    ID              reduce using rule 162 (saveOperator -> .)
    CTED            reduce using rule 162 (saveOperator -> .)
    CTEF            reduce using rule 162 (saveOperator -> .)
    TRUE            reduce using rule 162 (saveOperator -> .)
    FALSE           reduce using rule 162 (saveOperator -> .)

    saveOperator                   shift and go to state 250

state 210

    (126) opSExp -> empty .

    AND             reduce using rule 126 (opSExp -> empty .)
    OR              reduce using rule 126 (opSExp -> empty .)
    ,               reduce using rule 126 (opSExp -> empty .)
    PARFIN          reduce using rule 126 (opSExp -> empty .)
    ]               reduce using rule 126 (opSExp -> empty .)
    ;               reduce using rule 126 (opSExp -> empty .)


state 211

    (119) sExp -> exp errorOpSExp opSExp . performRelational
    (168) performRelational -> .

    AND             reduce using rule 168 (performRelational -> .)
    OR              reduce using rule 168 (performRelational -> .)
    ,               reduce using rule 168 (performRelational -> .)
    PARFIN          reduce using rule 168 (performRelational -> .)
    ]               reduce using rule 168 (performRelational -> .)
    ;               reduce using rule 168 (performRelational -> .)

    performRelational              shift and go to state 251

state 212

    (87) forCycle -> errorForCycle FOR PARINI assign ; . expresion ; assign PARFIN { body }
    (114) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (119) sExp -> . exp errorOpSExp opSExp performRelational
    (128) exp -> . term performAddSub errorCyExp cyExp
    (133) term -> . fact performMulDiv cyTerm
    (137) fact -> . CTES
    (138) fact -> . cte
    (139) fact -> . funcCall
    (140) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (141) fact -> . ID saveVariable opAccess errorOpAccess
    (155) cte -> . CTED
    (156) cte -> . CTEF
    (157) cte -> . TRUE
    (158) cte -> . FALSE
    (97) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    sExp                           shift and go to state 141
    expresion                      shift and go to state 252
    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 144
    fact                           shift and go to state 137

state 213

    (107) condition -> errorCondition IF PARINI expresion PARFIN . { body } optionalElse

    {               shift and go to state 253


state 214

    (57) function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } . clearVarsTable
    (59) clearVarsTable -> .

    FUNC            reduce using rule 59 (clearVarsTable -> .)
    MAIN            reduce using rule 59 (clearVarsTable -> .)

    clearVarsTable                 shift and go to state 254

state 215

    (67) opReturns -> errorOpReturns RETURNS . type saveReturnType { opVars body return
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    errorType                      shift and go to state 31
    type                           shift and go to state 255

state 216

    (68) opReturns -> { opVars . body
    (79) body -> . errorBody cyInstruction
    (80) body -> . empty
    (81) errorBody -> .
    (159) empty -> .

    ID              reduce using rule 81 (errorBody -> .)
    PRINT           reduce using rule 81 (errorBody -> .)
    READ            reduce using rule 81 (errorBody -> .)
    IF              reduce using rule 81 (errorBody -> .)
    FOR             reduce using rule 81 (errorBody -> .)
    WHILE           reduce using rule 81 (errorBody -> .)
    }               reduce using rule 159 (empty -> .)

    body                           shift and go to state 256
    empty                          shift and go to state 75
    errorBody                      shift and go to state 74

state 217

    (49) param -> saveType type errorParam ID cyTypeParam . cyParam
    (51) cyParam -> . errorCyParam saveID saveTypeParam ; param
    (52) cyParam -> . empty saveID saveTypeParam
    (56) errorCyParam -> .
    (159) empty -> .

    ;               reduce using rule 56 (errorCyParam -> .)
    PARFIN          reduce using rule 159 (empty -> .)

    empty                          shift and go to state 257
    cyParam                        shift and go to state 259
    errorCyParam                   shift and go to state 258

state 218

    (32) cyRead -> , fix . ID performRead cyRead

    ID              shift and go to state 260


state 219

    (31) read -> READ PARINI ID performRead cyRead PARFIN .

    ;               reduce using rule 31 (read -> READ PARINI ID performRead cyRead PARFIN .)


state 220

    (140) fact -> PARINI putFondo expresion PARFIN . takeFondo
    (164) takeFondo -> .

    MULT            reduce using rule 164 (takeFondo -> .)
    DIV             reduce using rule 164 (takeFondo -> .)
    PLUS            reduce using rule 164 (takeFondo -> .)
    MINUS           reduce using rule 164 (takeFondo -> .)
    ,               reduce using rule 164 (takeFondo -> .)
    PARFIN          reduce using rule 164 (takeFondo -> .)
    EQ              reduce using rule 164 (takeFondo -> .)
    DIF             reduce using rule 164 (takeFondo -> .)
    LTOEQ           reduce using rule 164 (takeFondo -> .)
    GTOEQ           reduce using rule 164 (takeFondo -> .)
    GT              reduce using rule 164 (takeFondo -> .)
    LT              reduce using rule 164 (takeFondo -> .)
    AND             reduce using rule 164 (takeFondo -> .)
    OR              reduce using rule 164 (takeFondo -> .)
    ]               reduce using rule 164 (takeFondo -> .)
    ;               reduce using rule 164 (takeFondo -> .)

    takeFondo                      shift and go to state 261

state 221

    (147) opStruct -> errorOpStruct [ . expresion ] opMatrix
    (114) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (119) sExp -> . exp errorOpSExp opSExp performRelational
    (128) exp -> . term performAddSub errorCyExp cyExp
    (133) term -> . fact performMulDiv cyTerm
    (137) fact -> . CTES
    (138) fact -> . cte
    (139) fact -> . funcCall
    (140) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (141) fact -> . ID saveVariable opAccess errorOpAccess
    (155) cte -> . CTED
    (156) cte -> . CTEF
    (157) cte -> . TRUE
    (158) cte -> . FALSE
    (97) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    sExp                           shift and go to state 141
    expresion                      shift and go to state 262
    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 144
    fact                           shift and go to state 137

state 222

    (141) fact -> ID saveVariable opAccess errorOpAccess .

    MULT            reduce using rule 141 (fact -> ID saveVariable opAccess errorOpAccess .)
    DIV             reduce using rule 141 (fact -> ID saveVariable opAccess errorOpAccess .)
    PLUS            reduce using rule 141 (fact -> ID saveVariable opAccess errorOpAccess .)
    MINUS           reduce using rule 141 (fact -> ID saveVariable opAccess errorOpAccess .)
    ,               reduce using rule 141 (fact -> ID saveVariable opAccess errorOpAccess .)
    PARFIN          reduce using rule 141 (fact -> ID saveVariable opAccess errorOpAccess .)
    EQ              reduce using rule 141 (fact -> ID saveVariable opAccess errorOpAccess .)
    DIF             reduce using rule 141 (fact -> ID saveVariable opAccess errorOpAccess .)
    LTOEQ           reduce using rule 141 (fact -> ID saveVariable opAccess errorOpAccess .)
    GTOEQ           reduce using rule 141 (fact -> ID saveVariable opAccess errorOpAccess .)
    GT              reduce using rule 141 (fact -> ID saveVariable opAccess errorOpAccess .)
    LT              reduce using rule 141 (fact -> ID saveVariable opAccess errorOpAccess .)
    AND             reduce using rule 141 (fact -> ID saveVariable opAccess errorOpAccess .)
    OR              reduce using rule 141 (fact -> ID saveVariable opAccess errorOpAccess .)
    ]               reduce using rule 141 (fact -> ID saveVariable opAccess errorOpAccess .)
    ;               reduce using rule 141 (fact -> ID saveVariable opAccess errorOpAccess .)


state 223

    (153) dictIndex -> FIRST .

    MULT            reduce using rule 153 (dictIndex -> FIRST .)
    DIV             reduce using rule 153 (dictIndex -> FIRST .)
    PLUS            reduce using rule 153 (dictIndex -> FIRST .)
    MINUS           reduce using rule 153 (dictIndex -> FIRST .)
    ,               reduce using rule 153 (dictIndex -> FIRST .)
    PARFIN          reduce using rule 153 (dictIndex -> FIRST .)
    EQ              reduce using rule 153 (dictIndex -> FIRST .)
    DIF             reduce using rule 153 (dictIndex -> FIRST .)
    LTOEQ           reduce using rule 153 (dictIndex -> FIRST .)
    GTOEQ           reduce using rule 153 (dictIndex -> FIRST .)
    GT              reduce using rule 153 (dictIndex -> FIRST .)
    LT              reduce using rule 153 (dictIndex -> FIRST .)
    AND             reduce using rule 153 (dictIndex -> FIRST .)
    OR              reduce using rule 153 (dictIndex -> FIRST .)
    ]               reduce using rule 153 (dictIndex -> FIRST .)
    ;               reduce using rule 153 (dictIndex -> FIRST .)


state 224

    (154) dictIndex -> LAST .

    MULT            reduce using rule 154 (dictIndex -> LAST .)
    DIV             reduce using rule 154 (dictIndex -> LAST .)
    PLUS            reduce using rule 154 (dictIndex -> LAST .)
    MINUS           reduce using rule 154 (dictIndex -> LAST .)
    ,               reduce using rule 154 (dictIndex -> LAST .)
    PARFIN          reduce using rule 154 (dictIndex -> LAST .)
    EQ              reduce using rule 154 (dictIndex -> LAST .)
    DIF             reduce using rule 154 (dictIndex -> LAST .)
    LTOEQ           reduce using rule 154 (dictIndex -> LAST .)
    GTOEQ           reduce using rule 154 (dictIndex -> LAST .)
    GT              reduce using rule 154 (dictIndex -> LAST .)
    LT              reduce using rule 154 (dictIndex -> LAST .)
    AND             reduce using rule 154 (dictIndex -> LAST .)
    OR              reduce using rule 154 (dictIndex -> LAST .)
    ]               reduce using rule 154 (dictIndex -> LAST .)
    ;               reduce using rule 154 (dictIndex -> LAST .)


state 225

    (152) opDictionary -> . dictIndex .

    MULT            reduce using rule 152 (opDictionary -> . dictIndex .)
    DIV             reduce using rule 152 (opDictionary -> . dictIndex .)
    PLUS            reduce using rule 152 (opDictionary -> . dictIndex .)
    MINUS           reduce using rule 152 (opDictionary -> . dictIndex .)
    ,               reduce using rule 152 (opDictionary -> . dictIndex .)
    PARFIN          reduce using rule 152 (opDictionary -> . dictIndex .)
    EQ              reduce using rule 152 (opDictionary -> . dictIndex .)
    DIF             reduce using rule 152 (opDictionary -> . dictIndex .)
    LTOEQ           reduce using rule 152 (opDictionary -> . dictIndex .)
    GTOEQ           reduce using rule 152 (opDictionary -> . dictIndex .)
    GT              reduce using rule 152 (opDictionary -> . dictIndex .)
    LT              reduce using rule 152 (opDictionary -> . dictIndex .)
    AND             reduce using rule 152 (opDictionary -> . dictIndex .)
    OR              reduce using rule 152 (opDictionary -> . dictIndex .)
    ]               reduce using rule 152 (opDictionary -> . dictIndex .)
    ;               reduce using rule 152 (opDictionary -> . dictIndex .)


state 226

    (128) exp -> term performAddSub errorCyExp cyExp .

    EQ              reduce using rule 128 (exp -> term performAddSub errorCyExp cyExp .)
    DIF             reduce using rule 128 (exp -> term performAddSub errorCyExp cyExp .)
    LTOEQ           reduce using rule 128 (exp -> term performAddSub errorCyExp cyExp .)
    GTOEQ           reduce using rule 128 (exp -> term performAddSub errorCyExp cyExp .)
    GT              reduce using rule 128 (exp -> term performAddSub errorCyExp cyExp .)
    LT              reduce using rule 128 (exp -> term performAddSub errorCyExp cyExp .)
    AND             reduce using rule 128 (exp -> term performAddSub errorCyExp cyExp .)
    OR              reduce using rule 128 (exp -> term performAddSub errorCyExp cyExp .)
    ,               reduce using rule 128 (exp -> term performAddSub errorCyExp cyExp .)
    PARFIN          reduce using rule 128 (exp -> term performAddSub errorCyExp cyExp .)
    ]               reduce using rule 128 (exp -> term performAddSub errorCyExp cyExp .)
    ;               reduce using rule 128 (exp -> term performAddSub errorCyExp cyExp .)


state 227

    (129) cyExp -> PLUS . saveOperator exp
    (162) saveOperator -> .

    CTES            reduce using rule 162 (saveOperator -> .)
    PARINI          reduce using rule 162 (saveOperator -> .)
    ID              reduce using rule 162 (saveOperator -> .)
    CTED            reduce using rule 162 (saveOperator -> .)
    CTEF            reduce using rule 162 (saveOperator -> .)
    TRUE            reduce using rule 162 (saveOperator -> .)
    FALSE           reduce using rule 162 (saveOperator -> .)

    saveOperator                   shift and go to state 263

state 228

    (130) cyExp -> MINUS . saveOperator exp
    (162) saveOperator -> .

    CTES            reduce using rule 162 (saveOperator -> .)
    PARINI          reduce using rule 162 (saveOperator -> .)
    ID              reduce using rule 162 (saveOperator -> .)
    CTED            reduce using rule 162 (saveOperator -> .)
    CTEF            reduce using rule 162 (saveOperator -> .)
    TRUE            reduce using rule 162 (saveOperator -> .)
    FALSE           reduce using rule 162 (saveOperator -> .)

    saveOperator                   shift and go to state 264

state 229

    (131) cyExp -> empty .

    ,               reduce using rule 131 (cyExp -> empty .)
    PARFIN          reduce using rule 131 (cyExp -> empty .)
    EQ              reduce using rule 131 (cyExp -> empty .)
    DIF             reduce using rule 131 (cyExp -> empty .)
    LTOEQ           reduce using rule 131 (cyExp -> empty .)
    GTOEQ           reduce using rule 131 (cyExp -> empty .)
    GT              reduce using rule 131 (cyExp -> empty .)
    LT              reduce using rule 131 (cyExp -> empty .)
    AND             reduce using rule 131 (cyExp -> empty .)
    OR              reduce using rule 131 (cyExp -> empty .)
    ]               reduce using rule 131 (cyExp -> empty .)
    ;               reduce using rule 131 (cyExp -> empty .)


state 230

    (28) print -> PRINT PARINI exp performPrint cyPrint PARFIN .

    ;               reduce using rule 28 (print -> PRINT PARINI exp performPrint cyPrint PARFIN .)


state 231

    (29) cyPrint -> , fix . exp performPrint cyPrint
    (128) exp -> . term performAddSub errorCyExp cyExp
    (133) term -> . fact performMulDiv cyTerm
    (137) fact -> . CTES
    (138) fact -> . cte
    (139) fact -> . funcCall
    (140) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (141) fact -> . ID saveVariable opAccess errorOpAccess
    (155) cte -> . CTED
    (156) cte -> . CTEF
    (157) cte -> . TRUE
    (158) cte -> . FALSE
    (97) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 265
    fact                           shift and go to state 137

state 232

    (135) cyTerm -> DIV saveOperator . term
    (133) term -> . fact performMulDiv cyTerm
    (137) fact -> . CTES
    (138) fact -> . cte
    (139) fact -> . funcCall
    (140) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (141) fact -> . ID saveVariable opAccess errorOpAccess
    (155) cte -> . CTED
    (156) cte -> . CTEF
    (157) cte -> . TRUE
    (158) cte -> . FALSE
    (97) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    term                           shift and go to state 266
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    fact                           shift and go to state 137

state 233

    (134) cyTerm -> MULT saveOperator . errorFact term
    (142) errorFact -> .

    CTES            reduce using rule 142 (errorFact -> .)
    PARINI          reduce using rule 142 (errorFact -> .)
    ID              reduce using rule 142 (errorFact -> .)
    CTED            reduce using rule 142 (errorFact -> .)
    CTEF            reduce using rule 142 (errorFact -> .)
    TRUE            reduce using rule 142 (errorFact -> .)
    FALSE           reduce using rule 142 (errorFact -> .)

    errorFact                      shift and go to state 267

state 234

    (85) whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { . body }
    (79) body -> . errorBody cyInstruction
    (80) body -> . empty
    (81) errorBody -> .
    (159) empty -> .

    ID              reduce using rule 81 (errorBody -> .)
    PRINT           reduce using rule 81 (errorBody -> .)
    READ            reduce using rule 81 (errorBody -> .)
    IF              reduce using rule 81 (errorBody -> .)
    FOR             reduce using rule 81 (errorBody -> .)
    WHILE           reduce using rule 81 (errorBody -> .)
    }               reduce using rule 159 (empty -> .)

    body                           shift and go to state 268
    errorBody                      shift and go to state 74
    empty                          shift and go to state 75

state 235

    (38) init -> ASGN saveOperator errorInit . initWith
    (40) initWith -> . expresion
    (41) initWith -> . fact
    (42) initWith -> . funcCall
    (114) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (137) fact -> . CTES
    (138) fact -> . cte
    (139) fact -> . funcCall
    (140) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (141) fact -> . ID saveVariable opAccess errorOpAccess
    (97) funcCall -> . ID PARINI opParamCall PARFIN
    (119) sExp -> . exp errorOpSExp opSExp performRelational
    (155) cte -> . CTED
    (156) cte -> . CTEF
    (157) cte -> . TRUE
    (158) cte -> . FALSE
    (128) exp -> . term performAddSub errorCyExp cyExp
    (133) term -> . fact performMulDiv cyTerm

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    initWith                       shift and go to state 269
    sExp                           shift and go to state 141
    expresion                      shift and go to state 270
    term                           shift and go to state 131
    funcCall                       shift and go to state 271
    cte                            shift and go to state 134
    exp                            shift and go to state 144
    fact                           shift and go to state 272

state 236

    (43) initDict -> ASGN PARINI dictType . : dictType PARFIN errorInitDict

    :               shift and go to state 273


state 237

    (45) dictType -> errorDictType . CTES

    CTES            shift and go to state 274


state 238

    (46) dictType -> cte .

    :               reduce using rule 46 (dictType -> cte .)
    PARFIN          reduce using rule 46 (dictType -> cte .)


state 239

    (47) dictType -> ID .

    :               reduce using rule 47 (dictType -> ID .)
    PARFIN          reduce using rule 47 (dictType -> ID .)


state 240

    (93) assignOptions -> [ expresion ] . assignMatrix init
    (94) assignMatrix -> . [ expresion ] errorAssignMatrix
    (95) assignMatrix -> . empty
    (159) empty -> .

    [               shift and go to state 276
    ASGN            reduce using rule 159 (empty -> .)

    assignMatrix                   shift and go to state 275
    empty                          shift and go to state 277

state 241

    (116) cyExpresion -> AND saveOperator . expresion
    (114) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (119) sExp -> . exp errorOpSExp opSExp performRelational
    (128) exp -> . term performAddSub errorCyExp cyExp
    (133) term -> . fact performMulDiv cyTerm
    (137) fact -> . CTES
    (138) fact -> . cte
    (139) fact -> . funcCall
    (140) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (141) fact -> . ID saveVariable opAccess errorOpAccess
    (155) cte -> . CTED
    (156) cte -> . CTEF
    (157) cte -> . TRUE
    (158) cte -> . FALSE
    (97) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    sExp                           shift and go to state 141
    expresion                      shift and go to state 278
    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 144
    fact                           shift and go to state 137

state 242

    (117) cyExpresion -> OR saveOperator . expresion
    (114) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (119) sExp -> . exp errorOpSExp opSExp performRelational
    (128) exp -> . term performAddSub errorCyExp cyExp
    (133) term -> . fact performMulDiv cyTerm
    (137) fact -> . CTES
    (138) fact -> . cte
    (139) fact -> . funcCall
    (140) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (141) fact -> . ID saveVariable opAccess errorOpAccess
    (155) cte -> . CTED
    (156) cte -> . CTEF
    (157) cte -> . TRUE
    (158) cte -> . FALSE
    (97) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    sExp                           shift and go to state 141
    expresion                      shift and go to state 279
    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 144
    fact                           shift and go to state 137

state 243

    (114) expresion -> sExp performAndOr cyExpresion errorExpresion .

    ,               reduce using rule 114 (expresion -> sExp performAndOr cyExpresion errorExpresion .)
    PARFIN          reduce using rule 114 (expresion -> sExp performAndOr cyExpresion errorExpresion .)
    ]               reduce using rule 114 (expresion -> sExp performAndOr cyExpresion errorExpresion .)
    ;               reduce using rule 114 (expresion -> sExp performAndOr cyExpresion errorExpresion .)


state 244

    (100) cyParamCall -> , expresion cyParamCall .

    PARFIN          reduce using rule 100 (cyParamCall -> , expresion cyParamCall .)


state 245

    (124) opSExp -> GT saveOperator . exp
    (128) exp -> . term performAddSub errorCyExp cyExp
    (133) term -> . fact performMulDiv cyTerm
    (137) fact -> . CTES
    (138) fact -> . cte
    (139) fact -> . funcCall
    (140) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (141) fact -> . ID saveVariable opAccess errorOpAccess
    (155) cte -> . CTED
    (156) cte -> . CTEF
    (157) cte -> . TRUE
    (158) cte -> . FALSE
    (97) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 280
    fact                           shift and go to state 137

state 246

    (122) opSExp -> LTOEQ saveOperator . exp
    (128) exp -> . term performAddSub errorCyExp cyExp
    (133) term -> . fact performMulDiv cyTerm
    (137) fact -> . CTES
    (138) fact -> . cte
    (139) fact -> . funcCall
    (140) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (141) fact -> . ID saveVariable opAccess errorOpAccess
    (155) cte -> . CTED
    (156) cte -> . CTEF
    (157) cte -> . TRUE
    (158) cte -> . FALSE
    (97) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 281
    fact                           shift and go to state 137

state 247

    (121) opSExp -> DIF saveOperator . exp
    (128) exp -> . term performAddSub errorCyExp cyExp
    (133) term -> . fact performMulDiv cyTerm
    (137) fact -> . CTES
    (138) fact -> . cte
    (139) fact -> . funcCall
    (140) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (141) fact -> . ID saveVariable opAccess errorOpAccess
    (155) cte -> . CTED
    (156) cte -> . CTEF
    (157) cte -> . TRUE
    (158) cte -> . FALSE
    (97) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 282
    fact                           shift and go to state 137

state 248

    (125) opSExp -> LT saveOperator . exp
    (128) exp -> . term performAddSub errorCyExp cyExp
    (133) term -> . fact performMulDiv cyTerm
    (137) fact -> . CTES
    (138) fact -> . cte
    (139) fact -> . funcCall
    (140) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (141) fact -> . ID saveVariable opAccess errorOpAccess
    (155) cte -> . CTED
    (156) cte -> . CTEF
    (157) cte -> . TRUE
    (158) cte -> . FALSE
    (97) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 283
    fact                           shift and go to state 137

state 249

    (123) opSExp -> GTOEQ saveOperator . exp
    (128) exp -> . term performAddSub errorCyExp cyExp
    (133) term -> . fact performMulDiv cyTerm
    (137) fact -> . CTES
    (138) fact -> . cte
    (139) fact -> . funcCall
    (140) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (141) fact -> . ID saveVariable opAccess errorOpAccess
    (155) cte -> . CTED
    (156) cte -> . CTEF
    (157) cte -> . TRUE
    (158) cte -> . FALSE
    (97) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 284
    fact                           shift and go to state 137

state 250

    (120) opSExp -> EQ saveOperator . exp
    (128) exp -> . term performAddSub errorCyExp cyExp
    (133) term -> . fact performMulDiv cyTerm
    (137) fact -> . CTES
    (138) fact -> . cte
    (139) fact -> . funcCall
    (140) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (141) fact -> . ID saveVariable opAccess errorOpAccess
    (155) cte -> . CTED
    (156) cte -> . CTEF
    (157) cte -> . TRUE
    (158) cte -> . FALSE
    (97) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 285
    fact                           shift and go to state 137

state 251

    (119) sExp -> exp errorOpSExp opSExp performRelational .

    AND             reduce using rule 119 (sExp -> exp errorOpSExp opSExp performRelational .)
    OR              reduce using rule 119 (sExp -> exp errorOpSExp opSExp performRelational .)
    ]               reduce using rule 119 (sExp -> exp errorOpSExp opSExp performRelational .)
    ,               reduce using rule 119 (sExp -> exp errorOpSExp opSExp performRelational .)
    PARFIN          reduce using rule 119 (sExp -> exp errorOpSExp opSExp performRelational .)
    ;               reduce using rule 119 (sExp -> exp errorOpSExp opSExp performRelational .)


state 252

    (87) forCycle -> errorForCycle FOR PARINI assign ; expresion . ; assign PARFIN { body }

    ;               shift and go to state 286


state 253

    (107) condition -> errorCondition IF PARINI expresion PARFIN { . body } optionalElse
    (79) body -> . errorBody cyInstruction
    (80) body -> . empty
    (81) errorBody -> .
    (159) empty -> .

    ID              reduce using rule 81 (errorBody -> .)
    PRINT           reduce using rule 81 (errorBody -> .)
    READ            reduce using rule 81 (errorBody -> .)
    IF              reduce using rule 81 (errorBody -> .)
    FOR             reduce using rule 81 (errorBody -> .)
    WHILE           reduce using rule 81 (errorBody -> .)
    }               reduce using rule 159 (empty -> .)

    body                           shift and go to state 287
    errorBody                      shift and go to state 74
    empty                          shift and go to state 75

state 254

    (57) function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable .

    FUNC            reduce using rule 57 (function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable .)
    MAIN            reduce using rule 57 (function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable .)


state 255

    (67) opReturns -> errorOpReturns RETURNS type . saveReturnType { opVars body return
    (69) saveReturnType -> .

    {               reduce using rule 69 (saveReturnType -> .)

    saveReturnType                 shift and go to state 288

state 256

    (68) opReturns -> { opVars body .

    }               reduce using rule 68 (opReturns -> { opVars body .)


state 257

    (52) cyParam -> empty . saveID saveTypeParam
    (11) saveID -> .

    PARFIN          reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 289

state 258

    (51) cyParam -> errorCyParam . saveID saveTypeParam ; param
    (11) saveID -> .

    ;               reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 290

state 259

    (49) param -> saveType type errorParam ID cyTypeParam cyParam .

    PARFIN          reduce using rule 49 (param -> saveType type errorParam ID cyTypeParam cyParam .)


state 260

    (32) cyRead -> , fix ID . performRead cyRead
    (171) performRead -> .

    ,               reduce using rule 171 (performRead -> .)
    PARFIN          reduce using rule 171 (performRead -> .)

    performRead                    shift and go to state 291

state 261

    (140) fact -> PARINI putFondo expresion PARFIN takeFondo .

    MULT            reduce using rule 140 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    DIV             reduce using rule 140 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    PLUS            reduce using rule 140 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    MINUS           reduce using rule 140 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    ,               reduce using rule 140 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    PARFIN          reduce using rule 140 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    EQ              reduce using rule 140 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    DIF             reduce using rule 140 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    LTOEQ           reduce using rule 140 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    GTOEQ           reduce using rule 140 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    GT              reduce using rule 140 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    LT              reduce using rule 140 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    AND             reduce using rule 140 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    OR              reduce using rule 140 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    ]               reduce using rule 140 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    ;               reduce using rule 140 (fact -> PARINI putFondo expresion PARFIN takeFondo .)


state 262

    (147) opStruct -> errorOpStruct [ expresion . ] opMatrix

    ]               shift and go to state 292


state 263

    (129) cyExp -> PLUS saveOperator . exp
    (128) exp -> . term performAddSub errorCyExp cyExp
    (133) term -> . fact performMulDiv cyTerm
    (137) fact -> . CTES
    (138) fact -> . cte
    (139) fact -> . funcCall
    (140) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (141) fact -> . ID saveVariable opAccess errorOpAccess
    (155) cte -> . CTED
    (156) cte -> . CTEF
    (157) cte -> . TRUE
    (158) cte -> . FALSE
    (97) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 293
    fact                           shift and go to state 137

state 264

    (130) cyExp -> MINUS saveOperator . exp
    (128) exp -> . term performAddSub errorCyExp cyExp
    (133) term -> . fact performMulDiv cyTerm
    (137) fact -> . CTES
    (138) fact -> . cte
    (139) fact -> . funcCall
    (140) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (141) fact -> . ID saveVariable opAccess errorOpAccess
    (155) cte -> . CTED
    (156) cte -> . CTEF
    (157) cte -> . TRUE
    (158) cte -> . FALSE
    (97) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 294
    fact                           shift and go to state 137

state 265

    (29) cyPrint -> , fix exp . performPrint cyPrint
    (170) performPrint -> .

    ,               reduce using rule 170 (performPrint -> .)
    PARFIN          reduce using rule 170 (performPrint -> .)

    performPrint                   shift and go to state 295

state 266

    (135) cyTerm -> DIV saveOperator term .

    PLUS            reduce using rule 135 (cyTerm -> DIV saveOperator term .)
    MINUS           reduce using rule 135 (cyTerm -> DIV saveOperator term .)
    ,               reduce using rule 135 (cyTerm -> DIV saveOperator term .)
    PARFIN          reduce using rule 135 (cyTerm -> DIV saveOperator term .)
    EQ              reduce using rule 135 (cyTerm -> DIV saveOperator term .)
    DIF             reduce using rule 135 (cyTerm -> DIV saveOperator term .)
    LTOEQ           reduce using rule 135 (cyTerm -> DIV saveOperator term .)
    GTOEQ           reduce using rule 135 (cyTerm -> DIV saveOperator term .)
    GT              reduce using rule 135 (cyTerm -> DIV saveOperator term .)
    LT              reduce using rule 135 (cyTerm -> DIV saveOperator term .)
    AND             reduce using rule 135 (cyTerm -> DIV saveOperator term .)
    OR              reduce using rule 135 (cyTerm -> DIV saveOperator term .)
    ]               reduce using rule 135 (cyTerm -> DIV saveOperator term .)
    ;               reduce using rule 135 (cyTerm -> DIV saveOperator term .)


state 267

    (134) cyTerm -> MULT saveOperator errorFact . term
    (133) term -> . fact performMulDiv cyTerm
    (137) fact -> . CTES
    (138) fact -> . cte
    (139) fact -> . funcCall
    (140) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (141) fact -> . ID saveVariable opAccess errorOpAccess
    (155) cte -> . CTED
    (156) cte -> . CTEF
    (157) cte -> . TRUE
    (158) cte -> . FALSE
    (97) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    term                           shift and go to state 296
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    fact                           shift and go to state 137

state 268

    (85) whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body . }

    }               shift and go to state 297


state 269

    (38) init -> ASGN saveOperator errorInit initWith .

    ;               reduce using rule 38 (init -> ASGN saveOperator errorInit initWith .)
    PARFIN          reduce using rule 38 (init -> ASGN saveOperator errorInit initWith .)


state 270

    (40) initWith -> expresion .

    ;               reduce using rule 40 (initWith -> expresion .)
    PARFIN          reduce using rule 40 (initWith -> expresion .)


state 271

    (42) initWith -> funcCall .
    (139) fact -> funcCall .

  ! reduce/reduce conflict for ; resolved using rule 42 (initWith -> funcCall .)
  ! reduce/reduce conflict for PARFIN resolved using rule 42 (initWith -> funcCall .)
    ;               reduce using rule 42 (initWith -> funcCall .)
    PARFIN          reduce using rule 42 (initWith -> funcCall .)
    MULT            reduce using rule 139 (fact -> funcCall .)
    DIV             reduce using rule 139 (fact -> funcCall .)
    PLUS            reduce using rule 139 (fact -> funcCall .)
    MINUS           reduce using rule 139 (fact -> funcCall .)
    EQ              reduce using rule 139 (fact -> funcCall .)
    DIF             reduce using rule 139 (fact -> funcCall .)
    LTOEQ           reduce using rule 139 (fact -> funcCall .)
    GTOEQ           reduce using rule 139 (fact -> funcCall .)
    GT              reduce using rule 139 (fact -> funcCall .)
    LT              reduce using rule 139 (fact -> funcCall .)
    AND             reduce using rule 139 (fact -> funcCall .)
    OR              reduce using rule 139 (fact -> funcCall .)

  ! ;               [ reduce using rule 139 (fact -> funcCall .) ]
  ! PARFIN          [ reduce using rule 139 (fact -> funcCall .) ]


state 272

    (41) initWith -> fact .
    (133) term -> fact . performMulDiv cyTerm
    (166) performMulDiv -> .

  ! reduce/reduce conflict for ; resolved using rule 41 (initWith -> fact .)
  ! reduce/reduce conflict for PARFIN resolved using rule 41 (initWith -> fact .)
    ;               reduce using rule 41 (initWith -> fact .)
    PARFIN          reduce using rule 41 (initWith -> fact .)
    MULT            reduce using rule 166 (performMulDiv -> .)
    DIV             reduce using rule 166 (performMulDiv -> .)
    PLUS            reduce using rule 166 (performMulDiv -> .)
    MINUS           reduce using rule 166 (performMulDiv -> .)
    EQ              reduce using rule 166 (performMulDiv -> .)
    DIF             reduce using rule 166 (performMulDiv -> .)
    LTOEQ           reduce using rule 166 (performMulDiv -> .)
    GTOEQ           reduce using rule 166 (performMulDiv -> .)
    GT              reduce using rule 166 (performMulDiv -> .)
    LT              reduce using rule 166 (performMulDiv -> .)
    AND             reduce using rule 166 (performMulDiv -> .)
    OR              reduce using rule 166 (performMulDiv -> .)

  ! ;               [ reduce using rule 166 (performMulDiv -> .) ]
  ! PARFIN          [ reduce using rule 166 (performMulDiv -> .) ]

    performMulDiv                  shift and go to state 156

state 273

    (43) initDict -> ASGN PARINI dictType : . dictType PARFIN errorInitDict
    (45) dictType -> . errorDictType CTES
    (46) dictType -> . cte
    (47) dictType -> . ID
    (48) errorDictType -> .
    (155) cte -> . CTED
    (156) cte -> . CTEF
    (157) cte -> . TRUE
    (158) cte -> . FALSE

    ID              shift and go to state 239
    CTES            reduce using rule 48 (errorDictType -> .)
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    dictType                       shift and go to state 298
    errorDictType                  shift and go to state 237
    cte                            shift and go to state 238

state 274

    (45) dictType -> errorDictType CTES .

    :               reduce using rule 45 (dictType -> errorDictType CTES .)
    PARFIN          reduce using rule 45 (dictType -> errorDictType CTES .)


state 275

    (93) assignOptions -> [ expresion ] assignMatrix . init
    (38) init -> . ASGN saveOperator errorInit initWith

    ASGN            shift and go to state 299

    init                           shift and go to state 300

state 276

    (94) assignMatrix -> [ . expresion ] errorAssignMatrix
    (114) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (119) sExp -> . exp errorOpSExp opSExp performRelational
    (128) exp -> . term performAddSub errorCyExp cyExp
    (133) term -> . fact performMulDiv cyTerm
    (137) fact -> . CTES
    (138) fact -> . cte
    (139) fact -> . funcCall
    (140) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (141) fact -> . ID saveVariable opAccess errorOpAccess
    (155) cte -> . CTED
    (156) cte -> . CTEF
    (157) cte -> . TRUE
    (158) cte -> . FALSE
    (97) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    sExp                           shift and go to state 141
    expresion                      shift and go to state 301
    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 144
    fact                           shift and go to state 137

state 277

    (95) assignMatrix -> empty .

    ASGN            reduce using rule 95 (assignMatrix -> empty .)


state 278

    (116) cyExpresion -> AND saveOperator expresion .

    ,               reduce using rule 116 (cyExpresion -> AND saveOperator expresion .)
    PARFIN          reduce using rule 116 (cyExpresion -> AND saveOperator expresion .)
    ]               reduce using rule 116 (cyExpresion -> AND saveOperator expresion .)
    ;               reduce using rule 116 (cyExpresion -> AND saveOperator expresion .)


state 279

    (117) cyExpresion -> OR saveOperator expresion .

    ,               reduce using rule 117 (cyExpresion -> OR saveOperator expresion .)
    PARFIN          reduce using rule 117 (cyExpresion -> OR saveOperator expresion .)
    ]               reduce using rule 117 (cyExpresion -> OR saveOperator expresion .)
    ;               reduce using rule 117 (cyExpresion -> OR saveOperator expresion .)


state 280

    (124) opSExp -> GT saveOperator exp .

    AND             reduce using rule 124 (opSExp -> GT saveOperator exp .)
    OR              reduce using rule 124 (opSExp -> GT saveOperator exp .)
    ,               reduce using rule 124 (opSExp -> GT saveOperator exp .)
    PARFIN          reduce using rule 124 (opSExp -> GT saveOperator exp .)
    ]               reduce using rule 124 (opSExp -> GT saveOperator exp .)
    ;               reduce using rule 124 (opSExp -> GT saveOperator exp .)


state 281

    (122) opSExp -> LTOEQ saveOperator exp .

    AND             reduce using rule 122 (opSExp -> LTOEQ saveOperator exp .)
    OR              reduce using rule 122 (opSExp -> LTOEQ saveOperator exp .)
    ,               reduce using rule 122 (opSExp -> LTOEQ saveOperator exp .)
    PARFIN          reduce using rule 122 (opSExp -> LTOEQ saveOperator exp .)
    ]               reduce using rule 122 (opSExp -> LTOEQ saveOperator exp .)
    ;               reduce using rule 122 (opSExp -> LTOEQ saveOperator exp .)


state 282

    (121) opSExp -> DIF saveOperator exp .

    AND             reduce using rule 121 (opSExp -> DIF saveOperator exp .)
    OR              reduce using rule 121 (opSExp -> DIF saveOperator exp .)
    ,               reduce using rule 121 (opSExp -> DIF saveOperator exp .)
    PARFIN          reduce using rule 121 (opSExp -> DIF saveOperator exp .)
    ]               reduce using rule 121 (opSExp -> DIF saveOperator exp .)
    ;               reduce using rule 121 (opSExp -> DIF saveOperator exp .)


state 283

    (125) opSExp -> LT saveOperator exp .

    AND             reduce using rule 125 (opSExp -> LT saveOperator exp .)
    OR              reduce using rule 125 (opSExp -> LT saveOperator exp .)
    ,               reduce using rule 125 (opSExp -> LT saveOperator exp .)
    PARFIN          reduce using rule 125 (opSExp -> LT saveOperator exp .)
    ]               reduce using rule 125 (opSExp -> LT saveOperator exp .)
    ;               reduce using rule 125 (opSExp -> LT saveOperator exp .)


state 284

    (123) opSExp -> GTOEQ saveOperator exp .

    AND             reduce using rule 123 (opSExp -> GTOEQ saveOperator exp .)
    OR              reduce using rule 123 (opSExp -> GTOEQ saveOperator exp .)
    ,               reduce using rule 123 (opSExp -> GTOEQ saveOperator exp .)
    PARFIN          reduce using rule 123 (opSExp -> GTOEQ saveOperator exp .)
    ]               reduce using rule 123 (opSExp -> GTOEQ saveOperator exp .)
    ;               reduce using rule 123 (opSExp -> GTOEQ saveOperator exp .)


state 285

    (120) opSExp -> EQ saveOperator exp .

    AND             reduce using rule 120 (opSExp -> EQ saveOperator exp .)
    OR              reduce using rule 120 (opSExp -> EQ saveOperator exp .)
    ,               reduce using rule 120 (opSExp -> EQ saveOperator exp .)
    PARFIN          reduce using rule 120 (opSExp -> EQ saveOperator exp .)
    ]               reduce using rule 120 (opSExp -> EQ saveOperator exp .)
    ;               reduce using rule 120 (opSExp -> EQ saveOperator exp .)


state 286

    (87) forCycle -> errorForCycle FOR PARINI assign ; expresion ; . assign PARFIN { body }
    (89) assign -> . ID saveVariable errorAssign assignOptions performAssign

    ID              shift and go to state 169

    assign                         shift and go to state 302

state 287

    (107) condition -> errorCondition IF PARINI expresion PARFIN { body . } optionalElse

    }               shift and go to state 303


state 288

    (67) opReturns -> errorOpReturns RETURNS type saveReturnType . { opVars body return

    {               shift and go to state 304


state 289

    (52) cyParam -> empty saveID . saveTypeParam
    (55) saveTypeParam -> .

    PARFIN          reduce using rule 55 (saveTypeParam -> .)

    saveTypeParam                  shift and go to state 305

state 290

    (51) cyParam -> errorCyParam saveID . saveTypeParam ; param
    (55) saveTypeParam -> .

    ;               reduce using rule 55 (saveTypeParam -> .)

    saveTypeParam                  shift and go to state 306

state 291

    (32) cyRead -> , fix ID performRead . cyRead
    (32) cyRead -> . , fix ID performRead cyRead
    (33) cyRead -> . empty
    (159) empty -> .

    ,               shift and go to state 176
    PARFIN          reduce using rule 159 (empty -> .)

    cyRead                         shift and go to state 307
    empty                          shift and go to state 178

state 292

    (147) opStruct -> errorOpStruct [ expresion ] . opMatrix
    (149) opMatrix -> . errorOpMatrix [ expresion ]
    (150) opMatrix -> . empty
    (151) errorOpMatrix -> .
    (159) empty -> .

    [               reduce using rule 151 (errorOpMatrix -> .)
    MULT            reduce using rule 159 (empty -> .)
    DIV             reduce using rule 159 (empty -> .)
    PLUS            reduce using rule 159 (empty -> .)
    MINUS           reduce using rule 159 (empty -> .)
    ,               reduce using rule 159 (empty -> .)
    PARFIN          reduce using rule 159 (empty -> .)
    EQ              reduce using rule 159 (empty -> .)
    DIF             reduce using rule 159 (empty -> .)
    LTOEQ           reduce using rule 159 (empty -> .)
    GTOEQ           reduce using rule 159 (empty -> .)
    GT              reduce using rule 159 (empty -> .)
    LT              reduce using rule 159 (empty -> .)
    AND             reduce using rule 159 (empty -> .)
    OR              reduce using rule 159 (empty -> .)
    ]               reduce using rule 159 (empty -> .)
    ;               reduce using rule 159 (empty -> .)

    empty                          shift and go to state 310
    errorOpMatrix                  shift and go to state 308
    opMatrix                       shift and go to state 309

state 293

    (129) cyExp -> PLUS saveOperator exp .

    ,               reduce using rule 129 (cyExp -> PLUS saveOperator exp .)
    PARFIN          reduce using rule 129 (cyExp -> PLUS saveOperator exp .)
    EQ              reduce using rule 129 (cyExp -> PLUS saveOperator exp .)
    DIF             reduce using rule 129 (cyExp -> PLUS saveOperator exp .)
    LTOEQ           reduce using rule 129 (cyExp -> PLUS saveOperator exp .)
    GTOEQ           reduce using rule 129 (cyExp -> PLUS saveOperator exp .)
    GT              reduce using rule 129 (cyExp -> PLUS saveOperator exp .)
    LT              reduce using rule 129 (cyExp -> PLUS saveOperator exp .)
    AND             reduce using rule 129 (cyExp -> PLUS saveOperator exp .)
    OR              reduce using rule 129 (cyExp -> PLUS saveOperator exp .)
    ]               reduce using rule 129 (cyExp -> PLUS saveOperator exp .)
    ;               reduce using rule 129 (cyExp -> PLUS saveOperator exp .)


state 294

    (130) cyExp -> MINUS saveOperator exp .

    ,               reduce using rule 130 (cyExp -> MINUS saveOperator exp .)
    PARFIN          reduce using rule 130 (cyExp -> MINUS saveOperator exp .)
    EQ              reduce using rule 130 (cyExp -> MINUS saveOperator exp .)
    DIF             reduce using rule 130 (cyExp -> MINUS saveOperator exp .)
    LTOEQ           reduce using rule 130 (cyExp -> MINUS saveOperator exp .)
    GTOEQ           reduce using rule 130 (cyExp -> MINUS saveOperator exp .)
    GT              reduce using rule 130 (cyExp -> MINUS saveOperator exp .)
    LT              reduce using rule 130 (cyExp -> MINUS saveOperator exp .)
    AND             reduce using rule 130 (cyExp -> MINUS saveOperator exp .)
    OR              reduce using rule 130 (cyExp -> MINUS saveOperator exp .)
    ]               reduce using rule 130 (cyExp -> MINUS saveOperator exp .)
    ;               reduce using rule 130 (cyExp -> MINUS saveOperator exp .)


state 295

    (29) cyPrint -> , fix exp performPrint . cyPrint
    (29) cyPrint -> . , fix exp performPrint cyPrint
    (30) cyPrint -> . empty
    (159) empty -> .

    ,               shift and go to state 188
    PARFIN          reduce using rule 159 (empty -> .)

    empty                          shift and go to state 189
    cyPrint                        shift and go to state 311

state 296

    (134) cyTerm -> MULT saveOperator errorFact term .

    PLUS            reduce using rule 134 (cyTerm -> MULT saveOperator errorFact term .)
    MINUS           reduce using rule 134 (cyTerm -> MULT saveOperator errorFact term .)
    ,               reduce using rule 134 (cyTerm -> MULT saveOperator errorFact term .)
    PARFIN          reduce using rule 134 (cyTerm -> MULT saveOperator errorFact term .)
    EQ              reduce using rule 134 (cyTerm -> MULT saveOperator errorFact term .)
    DIF             reduce using rule 134 (cyTerm -> MULT saveOperator errorFact term .)
    LTOEQ           reduce using rule 134 (cyTerm -> MULT saveOperator errorFact term .)
    GTOEQ           reduce using rule 134 (cyTerm -> MULT saveOperator errorFact term .)
    GT              reduce using rule 134 (cyTerm -> MULT saveOperator errorFact term .)
    LT              reduce using rule 134 (cyTerm -> MULT saveOperator errorFact term .)
    AND             reduce using rule 134 (cyTerm -> MULT saveOperator errorFact term .)
    OR              reduce using rule 134 (cyTerm -> MULT saveOperator errorFact term .)
    ]               reduce using rule 134 (cyTerm -> MULT saveOperator errorFact term .)
    ;               reduce using rule 134 (cyTerm -> MULT saveOperator errorFact term .)


state 297

    (85) whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body } .

    ID              reduce using rule 85 (whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body } .)
    PRINT           reduce using rule 85 (whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body } .)
    READ            reduce using rule 85 (whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body } .)
    IF              reduce using rule 85 (whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body } .)
    FOR             reduce using rule 85 (whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body } .)
    WHILE           reduce using rule 85 (whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body } .)
    }               reduce using rule 85 (whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body } .)
    RETURN          reduce using rule 85 (whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body } .)


state 298

    (43) initDict -> ASGN PARINI dictType : dictType . PARFIN errorInitDict

    PARFIN          shift and go to state 312


state 299

    (38) init -> ASGN . saveOperator errorInit initWith
    (162) saveOperator -> .

    CTES            reduce using rule 162 (saveOperator -> .)
    PARINI          reduce using rule 162 (saveOperator -> .)
    ID              reduce using rule 162 (saveOperator -> .)
    CTED            reduce using rule 162 (saveOperator -> .)
    CTEF            reduce using rule 162 (saveOperator -> .)
    TRUE            reduce using rule 162 (saveOperator -> .)
    FALSE           reduce using rule 162 (saveOperator -> .)

    saveOperator                   shift and go to state 196

state 300

    (93) assignOptions -> [ expresion ] assignMatrix init .

    ;               reduce using rule 93 (assignOptions -> [ expresion ] assignMatrix init .)
    PARFIN          reduce using rule 93 (assignOptions -> [ expresion ] assignMatrix init .)


state 301

    (94) assignMatrix -> [ expresion . ] errorAssignMatrix

    ]               shift and go to state 313


state 302

    (87) forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign . PARFIN { body }

    PARFIN          shift and go to state 314


state 303

    (107) condition -> errorCondition IF PARINI expresion PARFIN { body } . optionalElse
    (109) optionalElse -> . errorElse ELSE { body }
    (110) optionalElse -> . empty
    (111) errorElse -> .
    (159) empty -> .

    ELSE            reduce using rule 111 (errorElse -> .)
    ID              reduce using rule 159 (empty -> .)
    PRINT           reduce using rule 159 (empty -> .)
    READ            reduce using rule 159 (empty -> .)
    IF              reduce using rule 159 (empty -> .)
    FOR             reduce using rule 159 (empty -> .)
    WHILE           reduce using rule 159 (empty -> .)
    }               reduce using rule 159 (empty -> .)
    RETURN          reduce using rule 159 (empty -> .)

    errorElse                      shift and go to state 316
    optionalElse                   shift and go to state 315
    empty                          shift and go to state 317

state 304

    (67) opReturns -> errorOpReturns RETURNS type saveReturnType { . opVars body return
    (6) opVars -> . vars
    (7) opVars -> . empty
    (10) vars -> . errorVars VARS declare
    (159) empty -> .
    (12) errorVars -> .

    RETURN          reduce using rule 159 (empty -> .)
    ID              reduce using rule 159 (empty -> .)
    PRINT           reduce using rule 159 (empty -> .)
    READ            reduce using rule 159 (empty -> .)
    IF              reduce using rule 159 (empty -> .)
    FOR             reduce using rule 159 (empty -> .)
    WHILE           reduce using rule 159 (empty -> .)
    VARS            reduce using rule 12 (errorVars -> .)

    vars                           shift and go to state 8
    opVars                         shift and go to state 318
    errorVars                      shift and go to state 10
    empty                          shift and go to state 11

state 305

    (52) cyParam -> empty saveID saveTypeParam .

    PARFIN          reduce using rule 52 (cyParam -> empty saveID saveTypeParam .)


state 306

    (51) cyParam -> errorCyParam saveID saveTypeParam . ; param

    ;               shift and go to state 319


state 307

    (32) cyRead -> , fix ID performRead cyRead .

    PARFIN          reduce using rule 32 (cyRead -> , fix ID performRead cyRead .)


state 308

    (149) opMatrix -> errorOpMatrix . [ expresion ]

    [               shift and go to state 320


state 309

    (147) opStruct -> errorOpStruct [ expresion ] opMatrix .

    MULT            reduce using rule 147 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    DIV             reduce using rule 147 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    PLUS            reduce using rule 147 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    MINUS           reduce using rule 147 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    ,               reduce using rule 147 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    PARFIN          reduce using rule 147 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    EQ              reduce using rule 147 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    DIF             reduce using rule 147 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    LTOEQ           reduce using rule 147 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    GTOEQ           reduce using rule 147 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    GT              reduce using rule 147 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    LT              reduce using rule 147 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    AND             reduce using rule 147 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    OR              reduce using rule 147 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    ]               reduce using rule 147 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    ;               reduce using rule 147 (opStruct -> errorOpStruct [ expresion ] opMatrix .)


state 310

    (150) opMatrix -> empty .

    MULT            reduce using rule 150 (opMatrix -> empty .)
    DIV             reduce using rule 150 (opMatrix -> empty .)
    PLUS            reduce using rule 150 (opMatrix -> empty .)
    MINUS           reduce using rule 150 (opMatrix -> empty .)
    ,               reduce using rule 150 (opMatrix -> empty .)
    PARFIN          reduce using rule 150 (opMatrix -> empty .)
    EQ              reduce using rule 150 (opMatrix -> empty .)
    DIF             reduce using rule 150 (opMatrix -> empty .)
    LTOEQ           reduce using rule 150 (opMatrix -> empty .)
    GTOEQ           reduce using rule 150 (opMatrix -> empty .)
    GT              reduce using rule 150 (opMatrix -> empty .)
    LT              reduce using rule 150 (opMatrix -> empty .)
    AND             reduce using rule 150 (opMatrix -> empty .)
    OR              reduce using rule 150 (opMatrix -> empty .)
    ]               reduce using rule 150 (opMatrix -> empty .)
    ;               reduce using rule 150 (opMatrix -> empty .)


state 311

    (29) cyPrint -> , fix exp performPrint cyPrint .

    PARFIN          reduce using rule 29 (cyPrint -> , fix exp performPrint cyPrint .)


state 312

    (43) initDict -> ASGN PARINI dictType : dictType PARFIN . errorInitDict
    (44) errorInitDict -> .

    ;               reduce using rule 44 (errorInitDict -> .)
    PARFIN          reduce using rule 44 (errorInitDict -> .)

    errorInitDict                  shift and go to state 321

state 313

    (94) assignMatrix -> [ expresion ] . errorAssignMatrix
    (96) errorAssignMatrix -> .

    ASGN            reduce using rule 96 (errorAssignMatrix -> .)

    errorAssignMatrix              shift and go to state 322

state 314

    (87) forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN . { body }

    {               shift and go to state 323


state 315

    (107) condition -> errorCondition IF PARINI expresion PARFIN { body } optionalElse .

    ID              reduce using rule 107 (condition -> errorCondition IF PARINI expresion PARFIN { body } optionalElse .)
    PRINT           reduce using rule 107 (condition -> errorCondition IF PARINI expresion PARFIN { body } optionalElse .)
    READ            reduce using rule 107 (condition -> errorCondition IF PARINI expresion PARFIN { body } optionalElse .)
    IF              reduce using rule 107 (condition -> errorCondition IF PARINI expresion PARFIN { body } optionalElse .)
    FOR             reduce using rule 107 (condition -> errorCondition IF PARINI expresion PARFIN { body } optionalElse .)
    WHILE           reduce using rule 107 (condition -> errorCondition IF PARINI expresion PARFIN { body } optionalElse .)
    }               reduce using rule 107 (condition -> errorCondition IF PARINI expresion PARFIN { body } optionalElse .)
    RETURN          reduce using rule 107 (condition -> errorCondition IF PARINI expresion PARFIN { body } optionalElse .)


state 316

    (109) optionalElse -> errorElse . ELSE { body }

    ELSE            shift and go to state 324


state 317

    (110) optionalElse -> empty .

    ID              reduce using rule 110 (optionalElse -> empty .)
    PRINT           reduce using rule 110 (optionalElse -> empty .)
    READ            reduce using rule 110 (optionalElse -> empty .)
    IF              reduce using rule 110 (optionalElse -> empty .)
    FOR             reduce using rule 110 (optionalElse -> empty .)
    WHILE           reduce using rule 110 (optionalElse -> empty .)
    }               reduce using rule 110 (optionalElse -> empty .)
    RETURN          reduce using rule 110 (optionalElse -> empty .)


state 318

    (67) opReturns -> errorOpReturns RETURNS type saveReturnType { opVars . body return
    (79) body -> . errorBody cyInstruction
    (80) body -> . empty
    (81) errorBody -> .
    (159) empty -> .

    ID              reduce using rule 81 (errorBody -> .)
    PRINT           reduce using rule 81 (errorBody -> .)
    READ            reduce using rule 81 (errorBody -> .)
    IF              reduce using rule 81 (errorBody -> .)
    FOR             reduce using rule 81 (errorBody -> .)
    WHILE           reduce using rule 81 (errorBody -> .)
    RETURN          reduce using rule 159 (empty -> .)

    body                           shift and go to state 325
    errorBody                      shift and go to state 74
    empty                          shift and go to state 75

state 319

    (51) cyParam -> errorCyParam saveID saveTypeParam ; . param
    (49) param -> . saveType type errorParam ID cyTypeParam cyParam
    (3) saveType -> .

    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)

    param                          shift and go to state 326
    saveType                       shift and go to state 101

state 320

    (149) opMatrix -> errorOpMatrix [ . expresion ]
    (114) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (119) sExp -> . exp errorOpSExp opSExp performRelational
    (128) exp -> . term performAddSub errorCyExp cyExp
    (133) term -> . fact performMulDiv cyTerm
    (137) fact -> . CTES
    (138) fact -> . cte
    (139) fact -> . funcCall
    (140) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (141) fact -> . ID saveVariable opAccess errorOpAccess
    (155) cte -> . CTED
    (156) cte -> . CTEF
    (157) cte -> . TRUE
    (158) cte -> . FALSE
    (97) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    sExp                           shift and go to state 141
    expresion                      shift and go to state 327
    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 144
    fact                           shift and go to state 137

state 321

    (43) initDict -> ASGN PARINI dictType : dictType PARFIN errorInitDict .

    ;               reduce using rule 43 (initDict -> ASGN PARINI dictType : dictType PARFIN errorInitDict .)
    PARFIN          reduce using rule 43 (initDict -> ASGN PARINI dictType : dictType PARFIN errorInitDict .)


state 322

    (94) assignMatrix -> [ expresion ] errorAssignMatrix .

    ASGN            reduce using rule 94 (assignMatrix -> [ expresion ] errorAssignMatrix .)


state 323

    (87) forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { . body }
    (79) body -> . errorBody cyInstruction
    (80) body -> . empty
    (81) errorBody -> .
    (159) empty -> .

    ID              reduce using rule 81 (errorBody -> .)
    PRINT           reduce using rule 81 (errorBody -> .)
    READ            reduce using rule 81 (errorBody -> .)
    IF              reduce using rule 81 (errorBody -> .)
    FOR             reduce using rule 81 (errorBody -> .)
    WHILE           reduce using rule 81 (errorBody -> .)
    }               reduce using rule 159 (empty -> .)

    body                           shift and go to state 328
    errorBody                      shift and go to state 74
    empty                          shift and go to state 75

state 324

    (109) optionalElse -> errorElse ELSE . { body }

    {               shift and go to state 329


state 325

    (67) opReturns -> errorOpReturns RETURNS type saveReturnType { opVars body . return
    (60) return -> . errorReturn RETURN expresion ;
    (61) errorReturn -> .

    RETURN          reduce using rule 61 (errorReturn -> .)

    return                         shift and go to state 330
    errorReturn                    shift and go to state 331

state 326

    (51) cyParam -> errorCyParam saveID saveTypeParam ; param .

    PARFIN          reduce using rule 51 (cyParam -> errorCyParam saveID saveTypeParam ; param .)


state 327

    (149) opMatrix -> errorOpMatrix [ expresion . ]

    ]               shift and go to state 332


state 328

    (87) forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body . }

    }               shift and go to state 333


state 329

    (109) optionalElse -> errorElse ELSE { . body }
    (79) body -> . errorBody cyInstruction
    (80) body -> . empty
    (81) errorBody -> .
    (159) empty -> .

    ID              reduce using rule 81 (errorBody -> .)
    PRINT           reduce using rule 81 (errorBody -> .)
    READ            reduce using rule 81 (errorBody -> .)
    IF              reduce using rule 81 (errorBody -> .)
    FOR             reduce using rule 81 (errorBody -> .)
    WHILE           reduce using rule 81 (errorBody -> .)
    }               reduce using rule 159 (empty -> .)

    body                           shift and go to state 334
    empty                          shift and go to state 75
    errorBody                      shift and go to state 74

state 330

    (67) opReturns -> errorOpReturns RETURNS type saveReturnType { opVars body return .

    }               reduce using rule 67 (opReturns -> errorOpReturns RETURNS type saveReturnType { opVars body return .)


state 331

    (60) return -> errorReturn . RETURN expresion ;

    RETURN          shift and go to state 335


state 332

    (149) opMatrix -> errorOpMatrix [ expresion ] .

    MULT            reduce using rule 149 (opMatrix -> errorOpMatrix [ expresion ] .)
    DIV             reduce using rule 149 (opMatrix -> errorOpMatrix [ expresion ] .)
    PLUS            reduce using rule 149 (opMatrix -> errorOpMatrix [ expresion ] .)
    MINUS           reduce using rule 149 (opMatrix -> errorOpMatrix [ expresion ] .)
    ,               reduce using rule 149 (opMatrix -> errorOpMatrix [ expresion ] .)
    PARFIN          reduce using rule 149 (opMatrix -> errorOpMatrix [ expresion ] .)
    EQ              reduce using rule 149 (opMatrix -> errorOpMatrix [ expresion ] .)
    DIF             reduce using rule 149 (opMatrix -> errorOpMatrix [ expresion ] .)
    LTOEQ           reduce using rule 149 (opMatrix -> errorOpMatrix [ expresion ] .)
    GTOEQ           reduce using rule 149 (opMatrix -> errorOpMatrix [ expresion ] .)
    GT              reduce using rule 149 (opMatrix -> errorOpMatrix [ expresion ] .)
    LT              reduce using rule 149 (opMatrix -> errorOpMatrix [ expresion ] .)
    AND             reduce using rule 149 (opMatrix -> errorOpMatrix [ expresion ] .)
    OR              reduce using rule 149 (opMatrix -> errorOpMatrix [ expresion ] .)
    ]               reduce using rule 149 (opMatrix -> errorOpMatrix [ expresion ] .)
    ;               reduce using rule 149 (opMatrix -> errorOpMatrix [ expresion ] .)


state 333

    (87) forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body } .

    ID              reduce using rule 87 (forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body } .)
    PRINT           reduce using rule 87 (forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body } .)
    READ            reduce using rule 87 (forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body } .)
    IF              reduce using rule 87 (forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body } .)
    FOR             reduce using rule 87 (forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body } .)
    WHILE           reduce using rule 87 (forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body } .)
    }               reduce using rule 87 (forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body } .)
    RETURN          reduce using rule 87 (forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body } .)


state 334

    (109) optionalElse -> errorElse ELSE { body . }

    }               shift and go to state 336


state 335

    (60) return -> errorReturn RETURN . expresion ;
    (114) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (119) sExp -> . exp errorOpSExp opSExp performRelational
    (128) exp -> . term performAddSub errorCyExp cyExp
    (133) term -> . fact performMulDiv cyTerm
    (137) fact -> . CTES
    (138) fact -> . cte
    (139) fact -> . funcCall
    (140) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (141) fact -> . ID saveVariable opAccess errorOpAccess
    (155) cte -> . CTED
    (156) cte -> . CTEF
    (157) cte -> . TRUE
    (158) cte -> . FALSE
    (97) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    sExp                           shift and go to state 141
    expresion                      shift and go to state 337
    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 144
    fact                           shift and go to state 137

state 336

    (109) optionalElse -> errorElse ELSE { body } .

    ID              reduce using rule 109 (optionalElse -> errorElse ELSE { body } .)
    PRINT           reduce using rule 109 (optionalElse -> errorElse ELSE { body } .)
    READ            reduce using rule 109 (optionalElse -> errorElse ELSE { body } .)
    IF              reduce using rule 109 (optionalElse -> errorElse ELSE { body } .)
    FOR             reduce using rule 109 (optionalElse -> errorElse ELSE { body } .)
    WHILE           reduce using rule 109 (optionalElse -> errorElse ELSE { body } .)
    }               reduce using rule 109 (optionalElse -> errorElse ELSE { body } .)
    RETURN          reduce using rule 109 (optionalElse -> errorElse ELSE { body } .)


state 337

    (60) return -> errorReturn RETURN expresion . ;

    ;               shift and go to state 338


state 338

    (60) return -> errorReturn RETURN expresion ; .

    }               reduce using rule 60 (return -> errorReturn RETURN expresion ; .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PARINI in state 160 resolved as shift
WARNING: reduce/reduce conflict in state 271 resolved using rule (initWith -> funcCall)
WARNING: rejected rule (fact -> funcCall) in state 271
WARNING: reduce/reduce conflict in state 272 resolved using rule (initWith -> fact)
WARNING: rejected rule (performMulDiv -> <empty>) in state 272
