Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables
Rule 2     changeCurrentScope -> <empty>
Rule 3     saveType -> <empty>
Rule 4     saveProc -> <empty>
Rule 5     errorProgram -> <empty>
Rule 6     opVars -> vars
Rule 7     opVars -> empty
Rule 8     opFunctions -> function opFunctions
Rule 9     opFunctions -> empty
Rule 10    vars -> errorVars VARS declare
Rule 11    saveID -> <empty>
Rule 12    errorVars -> <empty>
Rule 13    type -> errorType INT
Rule 14    type -> FLOAT
Rule 15    type -> STRING
Rule 16    type -> BOOL
Rule 17    errorType -> <empty>
Rule 18    main -> errorMain MAIN saveCurrentTemps saveMain { opVars generateInitialQuadruple body } clearVarsTable
Rule 19    generateInitialQuadruple -> <empty>
Rule 20    saveMain -> <empty>
Rule 21    errorMain -> <empty>
Rule 22    instr -> basicStatements ;
Rule 23    instr -> condition
Rule 24    instr -> cycle
Rule 25    basicStatements -> assign
Rule 26    basicStatements -> funcCall
Rule 27    basicStatements -> print
Rule 28    basicStatements -> read
Rule 29    print -> PRINT PARINI exp performPrint cyPrint PARFIN
Rule 30    cyPrint -> , fix exp performPrint cyPrint
Rule 31    cyPrint -> empty
Rule 32    read -> READ PARINI ID saveVariable performRead cyRead PARFIN
Rule 33    cyRead -> , fix ID saveVariable performRead cyRead
Rule 34    cyRead -> empty
Rule 35    fix -> <empty>
Rule 36    declare -> basicDeclare
Rule 37    declare -> structDeclare
Rule 38    declare -> dictDeclare
Rule 39    init -> ASGN saveOperator errorInit initWith
Rule 40    errorInit -> <empty>
Rule 41    initWith -> expresion
Rule 42    initWith -> funcCall
Rule 43    initDict -> ASGN PARINI dictType : dictType PARFIN errorInitDict
Rule 44    errorInitDict -> <empty>
Rule 45    dictType -> errorDictType CTES
Rule 46    dictType -> cte
Rule 47    dictType -> ID
Rule 48    errorDictType -> <empty>
Rule 49    param -> saveType type errorParam ID cyTypeParam cyParam
Rule 50    errorParam -> <empty>
Rule 51    cyParam -> errorCyParam saveTypeParam saveID ; param
Rule 52    cyParam -> empty saveTypeParam saveID
Rule 53    cyTypeParam -> , saveTypeParam saveID ID cyTypeParam
Rule 54    cyTypeParam -> empty
Rule 55    saveTypeParam -> <empty>
Rule 56    errorCyParam -> <empty>
Rule 57    function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
Rule 58    saveCurrentTemps -> <empty>
Rule 59    errorFunction -> <empty>
Rule 60    clearVarsTable -> <empty>
Rule 61    return -> errorReturn RETURN expresion saveReturnValue ;
Rule 62    saveReturnValue -> <empty>
Rule 63    errorReturn -> <empty>
Rule 64    opParameters -> param saveParamToDirProc errorOpParameters
Rule 65    opParameters -> empty
Rule 66    flagParameters -> <empty>
Rule 67    saveParamToDirProc -> <empty>
Rule 68    errorOpParameters -> <empty>
Rule 69    opReturns -> errorOpReturns RETURNS type saveReturnType { opVars saveQuadruple body return
Rule 70    opReturns -> { opVars saveQuadruple body
Rule 71    saveQuadruple -> <empty>
Rule 72    saveReturnType -> <empty>
Rule 73    errorOpReturns -> <empty>
Rule 74    basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
Rule 75    errorBasicDeclare -> <empty>
Rule 76    structDeclare -> errorStructDeclare STRUCT struct ; cyDeclare
Rule 77    errorStructDeclare -> <empty>
Rule 78    dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare
Rule 79    errorDictDeclare -> <empty>
Rule 80    cyDeclare -> declare
Rule 81    cyDeclare -> empty
Rule 82    body -> errorBody cyInstruction
Rule 83    body -> empty
Rule 84    errorBody -> <empty>
Rule 85    cyInstruction -> instr body
Rule 86    cycle -> forCycle
Rule 87    cycle -> whileCycle
Rule 88    whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile
Rule 89    repeatWhile -> <empty>
Rule 90    saveReturn -> <empty>
Rule 91    errorWhileCycle -> <empty>
Rule 92    forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign
Rule 93    saltoBody -> <empty>
Rule 94    returnFor -> <empty>
Rule 95    rellenaBody -> <empty>
Rule 96    returnAssign -> <empty>
Rule 97    errorForCycle -> <empty>
Rule 98    assign -> ID saveVariable errorAssign assignOptions performAssign
Rule 99    errorAssign -> <empty>
Rule 100   assignOptions -> init
Rule 101   assignOptions -> initDict
Rule 102   assignOptions -> [ expresion ] assignMatrix init
Rule 103   assignMatrix -> [ expresion ] errorAssignMatrix
Rule 104   assignMatrix -> empty
Rule 105   errorAssignMatrix -> <empty>
Rule 106   funcCall -> ID checkFunction PARINI opParamCall PARFIN checkNumParams
Rule 107   checkNumParams -> <empty>
Rule 108   checkFunction -> <empty>
Rule 109   opParamCall -> expresion checkParamType cyParamCall
Rule 110   opParamCall -> empty
Rule 111   cyParamCall -> , expresion checkParamType cyParamCall
Rule 112   cyParamCall -> empty
Rule 113   checkParamType -> <empty>
Rule 114   struct -> structType ID saveID [ CTED ] optionalMatrix
Rule 115   structType -> saveType type
Rule 116   structType -> DICT dict
Rule 117   optionalMatrix -> [ CTED ]
Rule 118   optionalMatrix -> empty
Rule 119   condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso
Rule 120   errorCondition -> <empty>
Rule 121   optionalElse -> errorElse ELSE saveVerdadero { body }
Rule 122   optionalElse -> empty
Rule 123   errorElse -> <empty>
Rule 124   dict -> errorDict PARINI type : type PARFIN
Rule 125   errorDict -> <empty>
Rule 126   expresion -> sExp performAndOr cyExpresion errorExpresion
Rule 127   errorExpresion -> <empty>
Rule 128   cyExpresion -> AND saveOperator expresion
Rule 129   cyExpresion -> OR saveOperator expresion
Rule 130   cyExpresion -> empty
Rule 131   sExp -> exp errorOpSExp opSExp performRelational
Rule 132   opSExp -> EQ saveOperator exp
Rule 133   opSExp -> DIF saveOperator exp
Rule 134   opSExp -> LTOEQ saveOperator exp
Rule 135   opSExp -> GTOEQ saveOperator exp
Rule 136   opSExp -> GT saveOperator exp
Rule 137   opSExp -> LT saveOperator exp
Rule 138   opSExp -> empty
Rule 139   errorOpSExp -> <empty>
Rule 140   exp -> term performAddSub errorCyExp cyExp
Rule 141   cyExp -> PLUS saveOperator exp
Rule 142   cyExp -> MINUS saveOperator exp
Rule 143   cyExp -> empty
Rule 144   errorCyExp -> <empty>
Rule 145   term -> fact performMulDiv cyTerm
Rule 146   cyTerm -> MULT saveOperator errorFact term
Rule 147   cyTerm -> DIV saveOperator term
Rule 148   cyTerm -> RES saveOperator term
Rule 149   cyTerm -> empty
Rule 150   fact -> CTES saveConstantString
Rule 151   fact -> cte
Rule 152   fact -> funcCall
Rule 153   fact -> PARINI putFondo expresion PARFIN takeFondo
Rule 154   fact -> ID saveVariable opAccess errorOpAccess
Rule 155   errorFact -> <empty>
Rule 156   opAccess -> opStruct
Rule 157   opAccess -> opDictionary
Rule 158   opAccess -> empty
Rule 159   errorOpAccess -> <empty>
Rule 160   opStruct -> errorOpStruct [ expresion ] opMatrix
Rule 161   errorOpStruct -> <empty>
Rule 162   opMatrix -> errorOpMatrix [ expresion ]
Rule 163   opMatrix -> empty
Rule 164   errorOpMatrix -> <empty>
Rule 165   opDictionary -> . dictIndex
Rule 166   dictIndex -> FIRST
Rule 167   dictIndex -> LAST
Rule 168   cte -> CTED saveConstantInt
Rule 169   cte -> CTEF saveConstantFloat
Rule 170   cte -> TRUE saveConstantBool
Rule 171   cte -> FALSE saveConstantBool
Rule 172   empty -> <empty>
Rule 173   printTables -> <empty>
Rule 174   rellenaFalso -> <empty>
Rule 175   saveFalso -> <empty>
Rule 176   saveVerdadero -> <empty>
Rule 177   saveConstantInt -> <empty>
Rule 178   saveConstantFloat -> <empty>
Rule 179   saveConstantBool -> <empty>
Rule 180   saveConstantString -> <empty>
Rule 181   saveVariable -> <empty>
Rule 182   saveOperator -> <empty>
Rule 183   putFondo -> <empty>
Rule 184   takeFondo -> <empty>
Rule 185   performAssign -> <empty>
Rule 186   performMulDiv -> <empty>
Rule 187   performAddSub -> <empty>
Rule 188   performRelational -> <empty>
Rule 189   performAndOr -> <empty>
Rule 190   performPrint -> <empty>
Rule 191   performRead -> <empty>

Terminals, with rules where they appear

,                    : 30 33 53 111
.                    : 165
:                    : 43 124
;                    : 22 51 61 74 76 78 92 92
AND                  : 128
ASGN                 : 39 43
BOOL                 : 16
CTED                 : 114 117 168
CTEF                 : 169
CTES                 : 45 150
DICT                 : 78 116
DIF                  : 133
DIV                  : 147
ELSE                 : 121
EQ                   : 132
FALSE                : 171
FIRST                : 166
FLOAT                : 14
FOR                  : 92
FUNC                 : 57
GT                   : 136
GTOEQ                : 135
ID                   : 1 32 33 47 49 53 57 74 78 98 106 114 154
IF                   : 119
INT                  : 13
LAST                 : 167
LT                   : 137
LTOEQ                : 134
MAIN                 : 18
MINUS                : 142
MULT                 : 146
OR                   : 129
PARFIN               : 29 32 43 57 88 92 106 119 124 153
PARINI               : 29 32 43 57 88 92 106 119 124 153
PLUS                 : 141
PRINT                : 29
PROGRAM              : 1
READ                 : 32
RES                  : 148
RETURN               : 61
RETURNS              : 69
STRING               : 15
STRUCT               : 76
TRUE                 : 170
VARS                 : 10
WHILE                : 88
[                    : 102 103 114 117 160 162
]                    : 102 103 114 117 160 162
error                : 
{                    : 1 18 69 70 88 92 119 121
}                    : 1 18 57 88 92 119 121

Nonterminals, with rules where they appear

assign               : 25 92 92
assignMatrix         : 102
assignOptions        : 98
basicDeclare         : 36
basicStatements      : 22
body                 : 18 69 70 85 88 92 119 121
changeCurrentScope   : 1
checkFunction        : 106
checkNumParams       : 106
checkParamType       : 109 111
clearVarsTable       : 18 57
condition            : 23
cte                  : 46 151
cyDeclare            : 74 76 78
cyExp                : 140
cyExpresion          : 126
cyInstruction        : 82
cyParam              : 49
cyParamCall          : 109 111
cyPrint              : 29 30
cyRead               : 32 33
cyTerm               : 145
cyTypeParam          : 49 53 74
cycle                : 24
declare              : 10 80
dict                 : 78 116
dictDeclare          : 38
dictIndex            : 165
dictType             : 43 43
empty                : 7 9 31 34 52 54 65 81 83 104 110 112 118 122 130 138 143 149 158 163
errorAssign          : 98
errorAssignMatrix    : 103
errorBasicDeclare    : 74
errorBody            : 82
errorCondition       : 119
errorCyExp           : 140
errorCyParam         : 51
errorDict            : 124
errorDictDeclare     : 78
errorDictType        : 45
errorElse            : 121
errorExpresion       : 126
errorFact            : 146
errorForCycle        : 92
errorFunction        : 57
errorInit            : 39
errorInitDict        : 43
errorMain            : 18
errorOpAccess        : 154
errorOpMatrix        : 162
errorOpParameters    : 64
errorOpReturns       : 69
errorOpSExp          : 131
errorOpStruct        : 160
errorParam           : 49
errorProgram         : 1
errorReturn          : 61
errorStructDeclare   : 76
errorType            : 13
errorVars            : 10
errorWhileCycle      : 88
exp                  : 29 30 131 132 133 134 135 136 137 141 142
expresion            : 41 61 88 92 102 103 109 111 119 128 129 153 160 162
fact                 : 145
fix                  : 30 33
flagParameters       : 57 57
forCycle             : 86
funcCall             : 26 42 152
function             : 8
generateInitialQuadruple : 18
init                 : 100 102
initDict             : 101
initWith             : 39
instr                : 85
main                 : 1
opAccess             : 154
opDictionary         : 157
opFunctions          : 1 8
opMatrix             : 160
opParamCall          : 106
opParameters         : 57
opReturns            : 57
opSExp               : 131
opStruct             : 156
opVars               : 1 18 69 70
optionalElse         : 119
optionalMatrix       : 114
param                : 51 64
performAddSub        : 140
performAndOr         : 126
performAssign        : 98
performMulDiv        : 145
performPrint         : 29 30
performRead          : 32 33
performRelational    : 131
print                : 27
printTables          : 1
program              : 0
putFondo             : 153
read                 : 28
rellenaBody          : 92
rellenaFalso         : 119
repeatWhile          : 88
return               : 69
returnAssign         : 92
returnFor            : 92
sExp                 : 126
saltoBody            : 92
saveConstantBool     : 170 171
saveConstantFloat    : 169
saveConstantInt      : 168
saveConstantString   : 150
saveCurrentTemps     : 18 57
saveFalso            : 88 92 119
saveID               : 51 52 53 74 114
saveMain             : 18
saveOperator         : 39 128 129 132 133 134 135 136 137 141 142 146 147 148
saveParamToDirProc   : 64
saveProc             : 1 57
saveQuadruple        : 69 70
saveReturn           : 88 92
saveReturnType       : 69
saveReturnValue      : 61
saveType             : 1 49 57 74 115
saveTypeParam        : 51 52 53
saveVariable         : 32 33 98 154
saveVerdadero        : 121
struct               : 76
structDeclare        : 37
structType           : 114
takeFondo            : 153
term                 : 140 146 147 148
type                 : 49 69 74 115 124 124
vars                 : 6
whileCycle           : 87

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables
    (5) errorProgram -> .

    PROGRAM         reduce using rule 5 (errorProgram -> .)

    errorProgram                   shift and go to state 2
    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> errorProgram . PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables

    PROGRAM         shift and go to state 3


state 3

    (1) program -> errorProgram PROGRAM . saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables
    (3) saveType -> .

    ID              reduce using rule 3 (saveType -> .)

    saveType                       shift and go to state 4

state 4

    (1) program -> errorProgram PROGRAM saveType . ID saveProc { opVars changeCurrentScope opFunctions main } printTables

    ID              shift and go to state 5


state 5

    (1) program -> errorProgram PROGRAM saveType ID . saveProc { opVars changeCurrentScope opFunctions main } printTables
    (4) saveProc -> .

    {               reduce using rule 4 (saveProc -> .)

    saveProc                       shift and go to state 6

state 6

    (1) program -> errorProgram PROGRAM saveType ID saveProc . { opVars changeCurrentScope opFunctions main } printTables

    {               shift and go to state 7


state 7

    (1) program -> errorProgram PROGRAM saveType ID saveProc { . opVars changeCurrentScope opFunctions main } printTables
    (6) opVars -> . vars
    (7) opVars -> . empty
    (10) vars -> . errorVars VARS declare
    (172) empty -> .
    (12) errorVars -> .

    MAIN            reduce using rule 172 (empty -> .)
    FUNC            reduce using rule 172 (empty -> .)
    VARS            reduce using rule 12 (errorVars -> .)

    vars                           shift and go to state 8
    opVars                         shift and go to state 9
    errorVars                      shift and go to state 10
    empty                          shift and go to state 11

state 8

    (6) opVars -> vars .

    }               reduce using rule 6 (opVars -> vars .)
    ID              reduce using rule 6 (opVars -> vars .)
    PRINT           reduce using rule 6 (opVars -> vars .)
    READ            reduce using rule 6 (opVars -> vars .)
    IF              reduce using rule 6 (opVars -> vars .)
    FOR             reduce using rule 6 (opVars -> vars .)
    WHILE           reduce using rule 6 (opVars -> vars .)
    MAIN            reduce using rule 6 (opVars -> vars .)
    FUNC            reduce using rule 6 (opVars -> vars .)
    RETURN          reduce using rule 6 (opVars -> vars .)


state 9

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars . changeCurrentScope opFunctions main } printTables
    (2) changeCurrentScope -> .

    MAIN            reduce using rule 2 (changeCurrentScope -> .)
    FUNC            reduce using rule 2 (changeCurrentScope -> .)

    changeCurrentScope             shift and go to state 12

state 10

    (10) vars -> errorVars . VARS declare

    VARS            shift and go to state 13


state 11

    (7) opVars -> empty .

    }               reduce using rule 7 (opVars -> empty .)
    ID              reduce using rule 7 (opVars -> empty .)
    PRINT           reduce using rule 7 (opVars -> empty .)
    READ            reduce using rule 7 (opVars -> empty .)
    IF              reduce using rule 7 (opVars -> empty .)
    FOR             reduce using rule 7 (opVars -> empty .)
    WHILE           reduce using rule 7 (opVars -> empty .)
    MAIN            reduce using rule 7 (opVars -> empty .)
    FUNC            reduce using rule 7 (opVars -> empty .)
    RETURN          reduce using rule 7 (opVars -> empty .)


state 12

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope . opFunctions main } printTables
    (8) opFunctions -> . function opFunctions
    (9) opFunctions -> . empty
    (57) function -> . errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (172) empty -> .
    (59) errorFunction -> .

    MAIN            reduce using rule 172 (empty -> .)
    FUNC            reduce using rule 59 (errorFunction -> .)

    function                       shift and go to state 16
    errorFunction                  shift and go to state 17
    empty                          shift and go to state 15
    opFunctions                    shift and go to state 14

state 13

    (10) vars -> errorVars VARS . declare
    (36) declare -> . basicDeclare
    (37) declare -> . structDeclare
    (38) declare -> . dictDeclare
    (74) basicDeclare -> . saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (76) structDeclare -> . errorStructDeclare STRUCT struct ; cyDeclare
    (78) dictDeclare -> . errorDictDeclare DICT ID dict ; cyDeclare
    (3) saveType -> .
    (77) errorStructDeclare -> .
    (79) errorDictDeclare -> .

    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)
    STRUCT          reduce using rule 77 (errorStructDeclare -> .)
    DICT            reduce using rule 79 (errorDictDeclare -> .)

    dictDeclare                    shift and go to state 18
    saveType                       shift and go to state 19
    errorDictDeclare               shift and go to state 20
    structDeclare                  shift and go to state 21
    errorStructDeclare             shift and go to state 22
    basicDeclare                   shift and go to state 23
    declare                        shift and go to state 24

state 14

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions . main } printTables
    (18) main -> . errorMain MAIN saveCurrentTemps saveMain { opVars generateInitialQuadruple body } clearVarsTable
    (21) errorMain -> .

    MAIN            reduce using rule 21 (errorMain -> .)

    main                           shift and go to state 25
    errorMain                      shift and go to state 26

state 15

    (9) opFunctions -> empty .

    MAIN            reduce using rule 9 (opFunctions -> empty .)


state 16

    (8) opFunctions -> function . opFunctions
    (8) opFunctions -> . function opFunctions
    (9) opFunctions -> . empty
    (57) function -> . errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (172) empty -> .
    (59) errorFunction -> .

    MAIN            reduce using rule 172 (empty -> .)
    FUNC            reduce using rule 59 (errorFunction -> .)

    function                       shift and go to state 16
    errorFunction                  shift and go to state 17
    empty                          shift and go to state 15
    opFunctions                    shift and go to state 27

state 17

    (57) function -> errorFunction . saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (58) saveCurrentTemps -> .

    FUNC            reduce using rule 58 (saveCurrentTemps -> .)

    saveCurrentTemps               shift and go to state 28

state 18

    (38) declare -> dictDeclare .

    MAIN            reduce using rule 38 (declare -> dictDeclare .)
    FUNC            reduce using rule 38 (declare -> dictDeclare .)
    }               reduce using rule 38 (declare -> dictDeclare .)
    ID              reduce using rule 38 (declare -> dictDeclare .)
    PRINT           reduce using rule 38 (declare -> dictDeclare .)
    READ            reduce using rule 38 (declare -> dictDeclare .)
    IF              reduce using rule 38 (declare -> dictDeclare .)
    FOR             reduce using rule 38 (declare -> dictDeclare .)
    WHILE           reduce using rule 38 (declare -> dictDeclare .)
    RETURN          reduce using rule 38 (declare -> dictDeclare .)


state 19

    (74) basicDeclare -> saveType . type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    errorType                      shift and go to state 31
    type                           shift and go to state 33

state 20

    (78) dictDeclare -> errorDictDeclare . DICT ID dict ; cyDeclare

    DICT            shift and go to state 34


state 21

    (37) declare -> structDeclare .

    MAIN            reduce using rule 37 (declare -> structDeclare .)
    FUNC            reduce using rule 37 (declare -> structDeclare .)
    }               reduce using rule 37 (declare -> structDeclare .)
    ID              reduce using rule 37 (declare -> structDeclare .)
    PRINT           reduce using rule 37 (declare -> structDeclare .)
    READ            reduce using rule 37 (declare -> structDeclare .)
    IF              reduce using rule 37 (declare -> structDeclare .)
    FOR             reduce using rule 37 (declare -> structDeclare .)
    WHILE           reduce using rule 37 (declare -> structDeclare .)
    RETURN          reduce using rule 37 (declare -> structDeclare .)


state 22

    (76) structDeclare -> errorStructDeclare . STRUCT struct ; cyDeclare

    STRUCT          shift and go to state 35


state 23

    (36) declare -> basicDeclare .

    MAIN            reduce using rule 36 (declare -> basicDeclare .)
    FUNC            reduce using rule 36 (declare -> basicDeclare .)
    }               reduce using rule 36 (declare -> basicDeclare .)
    ID              reduce using rule 36 (declare -> basicDeclare .)
    PRINT           reduce using rule 36 (declare -> basicDeclare .)
    READ            reduce using rule 36 (declare -> basicDeclare .)
    IF              reduce using rule 36 (declare -> basicDeclare .)
    FOR             reduce using rule 36 (declare -> basicDeclare .)
    WHILE           reduce using rule 36 (declare -> basicDeclare .)
    RETURN          reduce using rule 36 (declare -> basicDeclare .)


state 24

    (10) vars -> errorVars VARS declare .

    RETURN          reduce using rule 10 (vars -> errorVars VARS declare .)
    ID              reduce using rule 10 (vars -> errorVars VARS declare .)
    PRINT           reduce using rule 10 (vars -> errorVars VARS declare .)
    READ            reduce using rule 10 (vars -> errorVars VARS declare .)
    IF              reduce using rule 10 (vars -> errorVars VARS declare .)
    FOR             reduce using rule 10 (vars -> errorVars VARS declare .)
    WHILE           reduce using rule 10 (vars -> errorVars VARS declare .)
    }               reduce using rule 10 (vars -> errorVars VARS declare .)
    MAIN            reduce using rule 10 (vars -> errorVars VARS declare .)
    FUNC            reduce using rule 10 (vars -> errorVars VARS declare .)


state 25

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main . } printTables

    }               shift and go to state 36


state 26

    (18) main -> errorMain . MAIN saveCurrentTemps saveMain { opVars generateInitialQuadruple body } clearVarsTable

    MAIN            shift and go to state 37


state 27

    (8) opFunctions -> function opFunctions .

    MAIN            reduce using rule 8 (opFunctions -> function opFunctions .)


state 28

    (57) function -> errorFunction saveCurrentTemps . FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable

    FUNC            shift and go to state 38


state 29

    (14) type -> FLOAT .

    PARFIN          reduce using rule 14 (type -> FLOAT .)
    ID              reduce using rule 14 (type -> FLOAT .)
    {               reduce using rule 14 (type -> FLOAT .)
    :               reduce using rule 14 (type -> FLOAT .)


state 30

    (15) type -> STRING .

    PARFIN          reduce using rule 15 (type -> STRING .)
    ID              reduce using rule 15 (type -> STRING .)
    {               reduce using rule 15 (type -> STRING .)
    :               reduce using rule 15 (type -> STRING .)


state 31

    (13) type -> errorType . INT

    INT             shift and go to state 39


state 32

    (16) type -> BOOL .

    PARFIN          reduce using rule 16 (type -> BOOL .)
    ID              reduce using rule 16 (type -> BOOL .)
    {               reduce using rule 16 (type -> BOOL .)
    :               reduce using rule 16 (type -> BOOL .)


state 33

    (74) basicDeclare -> saveType type . errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (75) errorBasicDeclare -> .

    ID              reduce using rule 75 (errorBasicDeclare -> .)

    errorBasicDeclare              shift and go to state 40

state 34

    (78) dictDeclare -> errorDictDeclare DICT . ID dict ; cyDeclare

    ID              shift and go to state 41


state 35

    (76) structDeclare -> errorStructDeclare STRUCT . struct ; cyDeclare
    (114) struct -> . structType ID saveID [ CTED ] optionalMatrix
    (115) structType -> . saveType type
    (116) structType -> . DICT dict
    (3) saveType -> .

    DICT            shift and go to state 45
    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)

    structType                     shift and go to state 42
    struct                         shift and go to state 43
    saveType                       shift and go to state 44

state 36

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } . printTables
    (173) printTables -> .

    $end            reduce using rule 173 (printTables -> .)

    printTables                    shift and go to state 46

state 37

    (18) main -> errorMain MAIN . saveCurrentTemps saveMain { opVars generateInitialQuadruple body } clearVarsTable
    (58) saveCurrentTemps -> .

    {               reduce using rule 58 (saveCurrentTemps -> .)

    saveCurrentTemps               shift and go to state 47

state 38

    (57) function -> errorFunction saveCurrentTemps FUNC . saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (3) saveType -> .

    ID              reduce using rule 3 (saveType -> .)

    saveType                       shift and go to state 48

state 39

    (13) type -> errorType INT .

    PARFIN          reduce using rule 13 (type -> errorType INT .)
    ID              reduce using rule 13 (type -> errorType INT .)
    {               reduce using rule 13 (type -> errorType INT .)
    :               reduce using rule 13 (type -> errorType INT .)


state 40

    (74) basicDeclare -> saveType type errorBasicDeclare . ID cyTypeParam saveID ; cyDeclare

    ID              shift and go to state 49


state 41

    (78) dictDeclare -> errorDictDeclare DICT ID . dict ; cyDeclare
    (124) dict -> . errorDict PARINI type : type PARFIN
    (125) errorDict -> .

    PARINI          reduce using rule 125 (errorDict -> .)

    dict                           shift and go to state 51
    errorDict                      shift and go to state 50

state 42

    (114) struct -> structType . ID saveID [ CTED ] optionalMatrix

    ID              shift and go to state 52


state 43

    (76) structDeclare -> errorStructDeclare STRUCT struct . ; cyDeclare

    ;               shift and go to state 53


state 44

    (115) structType -> saveType . type
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    errorType                      shift and go to state 31
    type                           shift and go to state 54

state 45

    (116) structType -> DICT . dict
    (124) dict -> . errorDict PARINI type : type PARFIN
    (125) errorDict -> .

    PARINI          reduce using rule 125 (errorDict -> .)

    dict                           shift and go to state 55
    errorDict                      shift and go to state 50

state 46

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables .

    $end            reduce using rule 1 (program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables .)


state 47

    (18) main -> errorMain MAIN saveCurrentTemps . saveMain { opVars generateInitialQuadruple body } clearVarsTable
    (20) saveMain -> .

    {               reduce using rule 20 (saveMain -> .)

    saveMain                       shift and go to state 56

state 48

    (57) function -> errorFunction saveCurrentTemps FUNC saveType . ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable

    ID              shift and go to state 57


state 49

    (74) basicDeclare -> saveType type errorBasicDeclare ID . cyTypeParam saveID ; cyDeclare
    (53) cyTypeParam -> . , saveTypeParam saveID ID cyTypeParam
    (54) cyTypeParam -> . empty
    (172) empty -> .

    ,               shift and go to state 58
    ;               reduce using rule 172 (empty -> .)

    empty                          shift and go to state 59
    cyTypeParam                    shift and go to state 60

state 50

    (124) dict -> errorDict . PARINI type : type PARFIN

    PARINI          shift and go to state 61


state 51

    (78) dictDeclare -> errorDictDeclare DICT ID dict . ; cyDeclare

    ;               shift and go to state 62


state 52

    (114) struct -> structType ID . saveID [ CTED ] optionalMatrix
    (11) saveID -> .

    [               reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 63

state 53

    (76) structDeclare -> errorStructDeclare STRUCT struct ; . cyDeclare
    (80) cyDeclare -> . declare
    (81) cyDeclare -> . empty
    (36) declare -> . basicDeclare
    (37) declare -> . structDeclare
    (38) declare -> . dictDeclare
    (172) empty -> .
    (74) basicDeclare -> . saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (76) structDeclare -> . errorStructDeclare STRUCT struct ; cyDeclare
    (78) dictDeclare -> . errorDictDeclare DICT ID dict ; cyDeclare
    (3) saveType -> .
    (77) errorStructDeclare -> .
    (79) errorDictDeclare -> .

    MAIN            reduce using rule 172 (empty -> .)
    FUNC            reduce using rule 172 (empty -> .)
    }               reduce using rule 172 (empty -> .)
    ID              reduce using rule 172 (empty -> .)
    PRINT           reduce using rule 172 (empty -> .)
    READ            reduce using rule 172 (empty -> .)
    IF              reduce using rule 172 (empty -> .)
    FOR             reduce using rule 172 (empty -> .)
    WHILE           reduce using rule 172 (empty -> .)
    RETURN          reduce using rule 172 (empty -> .)
    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)
    STRUCT          reduce using rule 77 (errorStructDeclare -> .)
    DICT            reduce using rule 79 (errorDictDeclare -> .)

    dictDeclare                    shift and go to state 18
    cyDeclare                      shift and go to state 64
    saveType                       shift and go to state 19
    errorDictDeclare               shift and go to state 20
    structDeclare                  shift and go to state 21
    basicDeclare                   shift and go to state 23
    declare                        shift and go to state 65
    empty                          shift and go to state 66
    errorStructDeclare             shift and go to state 22

state 54

    (115) structType -> saveType type .

    ID              reduce using rule 115 (structType -> saveType type .)


state 55

    (116) structType -> DICT dict .

    ID              reduce using rule 116 (structType -> DICT dict .)


state 56

    (18) main -> errorMain MAIN saveCurrentTemps saveMain . { opVars generateInitialQuadruple body } clearVarsTable

    {               shift and go to state 67


state 57

    (57) function -> errorFunction saveCurrentTemps FUNC saveType ID . saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (4) saveProc -> .

    PARINI          reduce using rule 4 (saveProc -> .)

    saveProc                       shift and go to state 68

state 58

    (53) cyTypeParam -> , . saveTypeParam saveID ID cyTypeParam
    (55) saveTypeParam -> .

    ID              reduce using rule 55 (saveTypeParam -> .)

    saveTypeParam                  shift and go to state 69

state 59

    (54) cyTypeParam -> empty .

    ;               reduce using rule 54 (cyTypeParam -> empty .)
    PARFIN          reduce using rule 54 (cyTypeParam -> empty .)


state 60

    (74) basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam . saveID ; cyDeclare
    (11) saveID -> .

    ;               reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 70

state 61

    (124) dict -> errorDict PARINI . type : type PARFIN
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    errorType                      shift and go to state 31
    type                           shift and go to state 71

state 62

    (78) dictDeclare -> errorDictDeclare DICT ID dict ; . cyDeclare
    (80) cyDeclare -> . declare
    (81) cyDeclare -> . empty
    (36) declare -> . basicDeclare
    (37) declare -> . structDeclare
    (38) declare -> . dictDeclare
    (172) empty -> .
    (74) basicDeclare -> . saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (76) structDeclare -> . errorStructDeclare STRUCT struct ; cyDeclare
    (78) dictDeclare -> . errorDictDeclare DICT ID dict ; cyDeclare
    (3) saveType -> .
    (77) errorStructDeclare -> .
    (79) errorDictDeclare -> .

    MAIN            reduce using rule 172 (empty -> .)
    FUNC            reduce using rule 172 (empty -> .)
    }               reduce using rule 172 (empty -> .)
    ID              reduce using rule 172 (empty -> .)
    PRINT           reduce using rule 172 (empty -> .)
    READ            reduce using rule 172 (empty -> .)
    IF              reduce using rule 172 (empty -> .)
    FOR             reduce using rule 172 (empty -> .)
    WHILE           reduce using rule 172 (empty -> .)
    RETURN          reduce using rule 172 (empty -> .)
    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)
    STRUCT          reduce using rule 77 (errorStructDeclare -> .)
    DICT            reduce using rule 79 (errorDictDeclare -> .)

    dictDeclare                    shift and go to state 18
    cyDeclare                      shift and go to state 72
    saveType                       shift and go to state 19
    structDeclare                  shift and go to state 21
    errorDictDeclare               shift and go to state 20
    errorStructDeclare             shift and go to state 22
    basicDeclare                   shift and go to state 23
    declare                        shift and go to state 65
    empty                          shift and go to state 66

state 63

    (114) struct -> structType ID saveID . [ CTED ] optionalMatrix

    [               shift and go to state 73


state 64

    (76) structDeclare -> errorStructDeclare STRUCT struct ; cyDeclare .

    MAIN            reduce using rule 76 (structDeclare -> errorStructDeclare STRUCT struct ; cyDeclare .)
    FUNC            reduce using rule 76 (structDeclare -> errorStructDeclare STRUCT struct ; cyDeclare .)
    }               reduce using rule 76 (structDeclare -> errorStructDeclare STRUCT struct ; cyDeclare .)
    ID              reduce using rule 76 (structDeclare -> errorStructDeclare STRUCT struct ; cyDeclare .)
    PRINT           reduce using rule 76 (structDeclare -> errorStructDeclare STRUCT struct ; cyDeclare .)
    READ            reduce using rule 76 (structDeclare -> errorStructDeclare STRUCT struct ; cyDeclare .)
    IF              reduce using rule 76 (structDeclare -> errorStructDeclare STRUCT struct ; cyDeclare .)
    FOR             reduce using rule 76 (structDeclare -> errorStructDeclare STRUCT struct ; cyDeclare .)
    WHILE           reduce using rule 76 (structDeclare -> errorStructDeclare STRUCT struct ; cyDeclare .)
    RETURN          reduce using rule 76 (structDeclare -> errorStructDeclare STRUCT struct ; cyDeclare .)


state 65

    (80) cyDeclare -> declare .

    MAIN            reduce using rule 80 (cyDeclare -> declare .)
    FUNC            reduce using rule 80 (cyDeclare -> declare .)
    }               reduce using rule 80 (cyDeclare -> declare .)
    ID              reduce using rule 80 (cyDeclare -> declare .)
    PRINT           reduce using rule 80 (cyDeclare -> declare .)
    READ            reduce using rule 80 (cyDeclare -> declare .)
    IF              reduce using rule 80 (cyDeclare -> declare .)
    FOR             reduce using rule 80 (cyDeclare -> declare .)
    WHILE           reduce using rule 80 (cyDeclare -> declare .)
    RETURN          reduce using rule 80 (cyDeclare -> declare .)


state 66

    (81) cyDeclare -> empty .

    MAIN            reduce using rule 81 (cyDeclare -> empty .)
    FUNC            reduce using rule 81 (cyDeclare -> empty .)
    }               reduce using rule 81 (cyDeclare -> empty .)
    ID              reduce using rule 81 (cyDeclare -> empty .)
    PRINT           reduce using rule 81 (cyDeclare -> empty .)
    READ            reduce using rule 81 (cyDeclare -> empty .)
    IF              reduce using rule 81 (cyDeclare -> empty .)
    FOR             reduce using rule 81 (cyDeclare -> empty .)
    WHILE           reduce using rule 81 (cyDeclare -> empty .)
    RETURN          reduce using rule 81 (cyDeclare -> empty .)


state 67

    (18) main -> errorMain MAIN saveCurrentTemps saveMain { . opVars generateInitialQuadruple body } clearVarsTable
    (6) opVars -> . vars
    (7) opVars -> . empty
    (10) vars -> . errorVars VARS declare
    (172) empty -> .
    (12) errorVars -> .

    }               reduce using rule 172 (empty -> .)
    ID              reduce using rule 172 (empty -> .)
    PRINT           reduce using rule 172 (empty -> .)
    READ            reduce using rule 172 (empty -> .)
    IF              reduce using rule 172 (empty -> .)
    FOR             reduce using rule 172 (empty -> .)
    WHILE           reduce using rule 172 (empty -> .)
    VARS            reduce using rule 12 (errorVars -> .)

    vars                           shift and go to state 8
    opVars                         shift and go to state 74
    errorVars                      shift and go to state 10
    empty                          shift and go to state 11

state 68

    (57) function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc . flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (66) flagParameters -> .

    PARINI          reduce using rule 66 (flagParameters -> .)

    flagParameters                 shift and go to state 75

state 69

    (53) cyTypeParam -> , saveTypeParam . saveID ID cyTypeParam
    (11) saveID -> .

    ID              reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 76

state 70

    (74) basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID . ; cyDeclare

    ;               shift and go to state 77


state 71

    (124) dict -> errorDict PARINI type . : type PARFIN

    :               shift and go to state 78


state 72

    (78) dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .

    MAIN            reduce using rule 78 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    FUNC            reduce using rule 78 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    }               reduce using rule 78 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    ID              reduce using rule 78 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    PRINT           reduce using rule 78 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    READ            reduce using rule 78 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    IF              reduce using rule 78 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    FOR             reduce using rule 78 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    WHILE           reduce using rule 78 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    RETURN          reduce using rule 78 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)


state 73

    (114) struct -> structType ID saveID [ . CTED ] optionalMatrix

    CTED            shift and go to state 79


state 74

    (18) main -> errorMain MAIN saveCurrentTemps saveMain { opVars . generateInitialQuadruple body } clearVarsTable
    (19) generateInitialQuadruple -> .

    }               reduce using rule 19 (generateInitialQuadruple -> .)
    ID              reduce using rule 19 (generateInitialQuadruple -> .)
    PRINT           reduce using rule 19 (generateInitialQuadruple -> .)
    READ            reduce using rule 19 (generateInitialQuadruple -> .)
    IF              reduce using rule 19 (generateInitialQuadruple -> .)
    FOR             reduce using rule 19 (generateInitialQuadruple -> .)
    WHILE           reduce using rule 19 (generateInitialQuadruple -> .)

    generateInitialQuadruple       shift and go to state 80

state 75

    (57) function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters . PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable

    PARINI          shift and go to state 81


state 76

    (53) cyTypeParam -> , saveTypeParam saveID . ID cyTypeParam

    ID              shift and go to state 82


state 77

    (74) basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; . cyDeclare
    (80) cyDeclare -> . declare
    (81) cyDeclare -> . empty
    (36) declare -> . basicDeclare
    (37) declare -> . structDeclare
    (38) declare -> . dictDeclare
    (172) empty -> .
    (74) basicDeclare -> . saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (76) structDeclare -> . errorStructDeclare STRUCT struct ; cyDeclare
    (78) dictDeclare -> . errorDictDeclare DICT ID dict ; cyDeclare
    (3) saveType -> .
    (77) errorStructDeclare -> .
    (79) errorDictDeclare -> .

    MAIN            reduce using rule 172 (empty -> .)
    FUNC            reduce using rule 172 (empty -> .)
    }               reduce using rule 172 (empty -> .)
    ID              reduce using rule 172 (empty -> .)
    PRINT           reduce using rule 172 (empty -> .)
    READ            reduce using rule 172 (empty -> .)
    IF              reduce using rule 172 (empty -> .)
    FOR             reduce using rule 172 (empty -> .)
    WHILE           reduce using rule 172 (empty -> .)
    RETURN          reduce using rule 172 (empty -> .)
    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)
    STRUCT          reduce using rule 77 (errorStructDeclare -> .)
    DICT            reduce using rule 79 (errorDictDeclare -> .)

    dictDeclare                    shift and go to state 18
    cyDeclare                      shift and go to state 83
    basicDeclare                   shift and go to state 23
    saveType                       shift and go to state 19
    errorDictDeclare               shift and go to state 20
    empty                          shift and go to state 66
    structDeclare                  shift and go to state 21
    errorStructDeclare             shift and go to state 22
    declare                        shift and go to state 65

state 78

    (124) dict -> errorDict PARINI type : . type PARFIN
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    errorType                      shift and go to state 31
    type                           shift and go to state 84

state 79

    (114) struct -> structType ID saveID [ CTED . ] optionalMatrix

    ]               shift and go to state 85


state 80

    (18) main -> errorMain MAIN saveCurrentTemps saveMain { opVars generateInitialQuadruple . body } clearVarsTable
    (82) body -> . errorBody cyInstruction
    (83) body -> . empty
    (84) errorBody -> .
    (172) empty -> .

    ID              reduce using rule 84 (errorBody -> .)
    PRINT           reduce using rule 84 (errorBody -> .)
    READ            reduce using rule 84 (errorBody -> .)
    IF              reduce using rule 84 (errorBody -> .)
    FOR             reduce using rule 84 (errorBody -> .)
    WHILE           reduce using rule 84 (errorBody -> .)
    }               reduce using rule 172 (empty -> .)

    body                           shift and go to state 86
    errorBody                      shift and go to state 87
    empty                          shift and go to state 88

state 81

    (57) function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI . opParameters PARFIN flagParameters opReturns } clearVarsTable
    (64) opParameters -> . param saveParamToDirProc errorOpParameters
    (65) opParameters -> . empty
    (49) param -> . saveType type errorParam ID cyTypeParam cyParam
    (172) empty -> .
    (3) saveType -> .

    PARFIN          reduce using rule 172 (empty -> .)
    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)

    opParameters                   shift and go to state 89
    param                          shift and go to state 90
    saveType                       shift and go to state 91
    empty                          shift and go to state 92

state 82

    (53) cyTypeParam -> , saveTypeParam saveID ID . cyTypeParam
    (53) cyTypeParam -> . , saveTypeParam saveID ID cyTypeParam
    (54) cyTypeParam -> . empty
    (172) empty -> .

    ,               shift and go to state 58
    ;               reduce using rule 172 (empty -> .)
    PARFIN          reduce using rule 172 (empty -> .)

    cyTypeParam                    shift and go to state 93
    empty                          shift and go to state 59

state 83

    (74) basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .

    MAIN            reduce using rule 74 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    FUNC            reduce using rule 74 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    }               reduce using rule 74 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    ID              reduce using rule 74 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    PRINT           reduce using rule 74 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    READ            reduce using rule 74 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    IF              reduce using rule 74 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    FOR             reduce using rule 74 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    WHILE           reduce using rule 74 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    RETURN          reduce using rule 74 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)


state 84

    (124) dict -> errorDict PARINI type : type . PARFIN

    PARFIN          shift and go to state 94


state 85

    (114) struct -> structType ID saveID [ CTED ] . optionalMatrix
    (117) optionalMatrix -> . [ CTED ]
    (118) optionalMatrix -> . empty
    (172) empty -> .

    [               shift and go to state 97
    ;               reduce using rule 172 (empty -> .)

    empty                          shift and go to state 96
    optionalMatrix                 shift and go to state 95

state 86

    (18) main -> errorMain MAIN saveCurrentTemps saveMain { opVars generateInitialQuadruple body . } clearVarsTable

    }               shift and go to state 98


state 87

    (82) body -> errorBody . cyInstruction
    (85) cyInstruction -> . instr body
    (22) instr -> . basicStatements ;
    (23) instr -> . condition
    (24) instr -> . cycle
    (25) basicStatements -> . assign
    (26) basicStatements -> . funcCall
    (27) basicStatements -> . print
    (28) basicStatements -> . read
    (119) condition -> . errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso
    (86) cycle -> . forCycle
    (87) cycle -> . whileCycle
    (98) assign -> . ID saveVariable errorAssign assignOptions performAssign
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams
    (29) print -> . PRINT PARINI exp performPrint cyPrint PARFIN
    (32) read -> . READ PARINI ID saveVariable performRead cyRead PARFIN
    (120) errorCondition -> .
    (92) forCycle -> . errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign
    (88) whileCycle -> . errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile
    (97) errorForCycle -> .
    (91) errorWhileCycle -> .

    ID              shift and go to state 105
    PRINT           shift and go to state 102
    READ            shift and go to state 100
    IF              reduce using rule 120 (errorCondition -> .)
    FOR             reduce using rule 97 (errorForCycle -> .)
    WHILE           reduce using rule 91 (errorWhileCycle -> .)

    instr                          shift and go to state 99
    whileCycle                     shift and go to state 101
    forCycle                       shift and go to state 103
    errorWhileCycle                shift and go to state 104
    condition                      shift and go to state 112
    print                          shift and go to state 106
    read                           shift and go to state 108
    basicStatements                shift and go to state 109
    errorForCycle                  shift and go to state 110
    cyInstruction                  shift and go to state 111
    cycle                          shift and go to state 107
    funcCall                       shift and go to state 113
    errorCondition                 shift and go to state 114
    assign                         shift and go to state 115

state 88

    (83) body -> empty .

    RETURN          reduce using rule 83 (body -> empty .)
    }               reduce using rule 83 (body -> empty .)


state 89

    (57) function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters . PARFIN flagParameters opReturns } clearVarsTable

    PARFIN          shift and go to state 116


state 90

    (64) opParameters -> param . saveParamToDirProc errorOpParameters
    (67) saveParamToDirProc -> .

    PARFIN          reduce using rule 67 (saveParamToDirProc -> .)

    saveParamToDirProc             shift and go to state 117

state 91

    (49) param -> saveType . type errorParam ID cyTypeParam cyParam
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    type                           shift and go to state 118
    errorType                      shift and go to state 31

state 92

    (65) opParameters -> empty .

    PARFIN          reduce using rule 65 (opParameters -> empty .)


state 93

    (53) cyTypeParam -> , saveTypeParam saveID ID cyTypeParam .

    ;               reduce using rule 53 (cyTypeParam -> , saveTypeParam saveID ID cyTypeParam .)
    PARFIN          reduce using rule 53 (cyTypeParam -> , saveTypeParam saveID ID cyTypeParam .)


state 94

    (124) dict -> errorDict PARINI type : type PARFIN .

    ID              reduce using rule 124 (dict -> errorDict PARINI type : type PARFIN .)
    ;               reduce using rule 124 (dict -> errorDict PARINI type : type PARFIN .)


state 95

    (114) struct -> structType ID saveID [ CTED ] optionalMatrix .

    ;               reduce using rule 114 (struct -> structType ID saveID [ CTED ] optionalMatrix .)


state 96

    (118) optionalMatrix -> empty .

    ;               reduce using rule 118 (optionalMatrix -> empty .)


state 97

    (117) optionalMatrix -> [ . CTED ]

    CTED            shift and go to state 119


state 98

    (18) main -> errorMain MAIN saveCurrentTemps saveMain { opVars generateInitialQuadruple body } . clearVarsTable
    (60) clearVarsTable -> .

    }               reduce using rule 60 (clearVarsTable -> .)

    clearVarsTable                 shift and go to state 120

state 99

    (85) cyInstruction -> instr . body
    (82) body -> . errorBody cyInstruction
    (83) body -> . empty
    (84) errorBody -> .
    (172) empty -> .

    ID              reduce using rule 84 (errorBody -> .)
    PRINT           reduce using rule 84 (errorBody -> .)
    READ            reduce using rule 84 (errorBody -> .)
    IF              reduce using rule 84 (errorBody -> .)
    FOR             reduce using rule 84 (errorBody -> .)
    WHILE           reduce using rule 84 (errorBody -> .)
    }               reduce using rule 172 (empty -> .)
    RETURN          reduce using rule 172 (empty -> .)

    body                           shift and go to state 121
    errorBody                      shift and go to state 87
    empty                          shift and go to state 88

state 100

    (32) read -> READ . PARINI ID saveVariable performRead cyRead PARFIN

    PARINI          shift and go to state 122


state 101

    (87) cycle -> whileCycle .

    ID              reduce using rule 87 (cycle -> whileCycle .)
    PRINT           reduce using rule 87 (cycle -> whileCycle .)
    READ            reduce using rule 87 (cycle -> whileCycle .)
    IF              reduce using rule 87 (cycle -> whileCycle .)
    FOR             reduce using rule 87 (cycle -> whileCycle .)
    WHILE           reduce using rule 87 (cycle -> whileCycle .)
    }               reduce using rule 87 (cycle -> whileCycle .)
    RETURN          reduce using rule 87 (cycle -> whileCycle .)


state 102

    (29) print -> PRINT . PARINI exp performPrint cyPrint PARFIN

    PARINI          shift and go to state 123


state 103

    (86) cycle -> forCycle .

    ID              reduce using rule 86 (cycle -> forCycle .)
    PRINT           reduce using rule 86 (cycle -> forCycle .)
    READ            reduce using rule 86 (cycle -> forCycle .)
    IF              reduce using rule 86 (cycle -> forCycle .)
    FOR             reduce using rule 86 (cycle -> forCycle .)
    WHILE           reduce using rule 86 (cycle -> forCycle .)
    }               reduce using rule 86 (cycle -> forCycle .)
    RETURN          reduce using rule 86 (cycle -> forCycle .)


state 104

    (88) whileCycle -> errorWhileCycle . WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile

    WHILE           shift and go to state 124


state 105

    (98) assign -> ID . saveVariable errorAssign assignOptions performAssign
    (106) funcCall -> ID . checkFunction PARINI opParamCall PARFIN checkNumParams
    (181) saveVariable -> .
    (108) checkFunction -> .

    [               reduce using rule 181 (saveVariable -> .)
    ASGN            reduce using rule 181 (saveVariable -> .)
    PARINI          reduce using rule 108 (checkFunction -> .)

    saveVariable                   shift and go to state 125
    checkFunction                  shift and go to state 126

state 106

    (27) basicStatements -> print .

    ;               reduce using rule 27 (basicStatements -> print .)


state 107

    (24) instr -> cycle .

    ID              reduce using rule 24 (instr -> cycle .)
    PRINT           reduce using rule 24 (instr -> cycle .)
    READ            reduce using rule 24 (instr -> cycle .)
    IF              reduce using rule 24 (instr -> cycle .)
    FOR             reduce using rule 24 (instr -> cycle .)
    WHILE           reduce using rule 24 (instr -> cycle .)
    }               reduce using rule 24 (instr -> cycle .)
    RETURN          reduce using rule 24 (instr -> cycle .)


state 108

    (28) basicStatements -> read .

    ;               reduce using rule 28 (basicStatements -> read .)


state 109

    (22) instr -> basicStatements . ;

    ;               shift and go to state 127


state 110

    (92) forCycle -> errorForCycle . FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign

    FOR             shift and go to state 128


state 111

    (82) body -> errorBody cyInstruction .

    RETURN          reduce using rule 82 (body -> errorBody cyInstruction .)
    }               reduce using rule 82 (body -> errorBody cyInstruction .)


state 112

    (23) instr -> condition .

    ID              reduce using rule 23 (instr -> condition .)
    PRINT           reduce using rule 23 (instr -> condition .)
    READ            reduce using rule 23 (instr -> condition .)
    IF              reduce using rule 23 (instr -> condition .)
    FOR             reduce using rule 23 (instr -> condition .)
    WHILE           reduce using rule 23 (instr -> condition .)
    }               reduce using rule 23 (instr -> condition .)
    RETURN          reduce using rule 23 (instr -> condition .)


state 113

    (26) basicStatements -> funcCall .

    ;               reduce using rule 26 (basicStatements -> funcCall .)


state 114

    (119) condition -> errorCondition . IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso

    IF              shift and go to state 129


state 115

    (25) basicStatements -> assign .

    ;               reduce using rule 25 (basicStatements -> assign .)


state 116

    (57) function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN . flagParameters opReturns } clearVarsTable
    (66) flagParameters -> .

    {               reduce using rule 66 (flagParameters -> .)
    RETURNS         reduce using rule 66 (flagParameters -> .)

    flagParameters                 shift and go to state 130

state 117

    (64) opParameters -> param saveParamToDirProc . errorOpParameters
    (68) errorOpParameters -> .

    PARFIN          reduce using rule 68 (errorOpParameters -> .)

    errorOpParameters              shift and go to state 131

state 118

    (49) param -> saveType type . errorParam ID cyTypeParam cyParam
    (50) errorParam -> .

    ID              reduce using rule 50 (errorParam -> .)

    errorParam                     shift and go to state 132

state 119

    (117) optionalMatrix -> [ CTED . ]

    ]               shift and go to state 133


state 120

    (18) main -> errorMain MAIN saveCurrentTemps saveMain { opVars generateInitialQuadruple body } clearVarsTable .

    }               reduce using rule 18 (main -> errorMain MAIN saveCurrentTemps saveMain { opVars generateInitialQuadruple body } clearVarsTable .)


state 121

    (85) cyInstruction -> instr body .

    }               reduce using rule 85 (cyInstruction -> instr body .)
    RETURN          reduce using rule 85 (cyInstruction -> instr body .)


state 122

    (32) read -> READ PARINI . ID saveVariable performRead cyRead PARFIN

    ID              shift and go to state 134


state 123

    (29) print -> PRINT PARINI . exp performPrint cyPrint PARFIN
    (140) exp -> . term performAddSub errorCyExp cyExp
    (145) term -> . fact performMulDiv cyTerm
    (150) fact -> . CTES saveConstantString
    (151) fact -> . cte
    (152) fact -> . funcCall
    (153) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (154) fact -> . ID saveVariable opAccess errorOpAccess
    (168) cte -> . CTED saveConstantInt
    (169) cte -> . CTEF saveConstantFloat
    (170) cte -> . TRUE saveConstantBool
    (171) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 145
    fact                           shift and go to state 146

state 124

    (88) whileCycle -> errorWhileCycle WHILE . saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile
    (90) saveReturn -> .

    PARINI          reduce using rule 90 (saveReturn -> .)

    saveReturn                     shift and go to state 147

state 125

    (98) assign -> ID saveVariable . errorAssign assignOptions performAssign
    (99) errorAssign -> .

    [               reduce using rule 99 (errorAssign -> .)
    ASGN            reduce using rule 99 (errorAssign -> .)

    errorAssign                    shift and go to state 148

state 126

    (106) funcCall -> ID checkFunction . PARINI opParamCall PARFIN checkNumParams

    PARINI          shift and go to state 149


state 127

    (22) instr -> basicStatements ; .

    ID              reduce using rule 22 (instr -> basicStatements ; .)
    PRINT           reduce using rule 22 (instr -> basicStatements ; .)
    READ            reduce using rule 22 (instr -> basicStatements ; .)
    IF              reduce using rule 22 (instr -> basicStatements ; .)
    FOR             reduce using rule 22 (instr -> basicStatements ; .)
    WHILE           reduce using rule 22 (instr -> basicStatements ; .)
    }               reduce using rule 22 (instr -> basicStatements ; .)
    RETURN          reduce using rule 22 (instr -> basicStatements ; .)


state 128

    (92) forCycle -> errorForCycle FOR . PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign

    PARINI          shift and go to state 150


state 129

    (119) condition -> errorCondition IF . PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso

    PARINI          shift and go to state 151


state 130

    (57) function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters . opReturns } clearVarsTable
    (69) opReturns -> . errorOpReturns RETURNS type saveReturnType { opVars saveQuadruple body return
    (70) opReturns -> . { opVars saveQuadruple body
    (73) errorOpReturns -> .

    {               shift and go to state 154
    RETURNS         reduce using rule 73 (errorOpReturns -> .)

    errorOpReturns                 shift and go to state 153
    opReturns                      shift and go to state 152

state 131

    (64) opParameters -> param saveParamToDirProc errorOpParameters .

    PARFIN          reduce using rule 64 (opParameters -> param saveParamToDirProc errorOpParameters .)


state 132

    (49) param -> saveType type errorParam . ID cyTypeParam cyParam

    ID              shift and go to state 155


state 133

    (117) optionalMatrix -> [ CTED ] .

    ;               reduce using rule 117 (optionalMatrix -> [ CTED ] .)


state 134

    (32) read -> READ PARINI ID . saveVariable performRead cyRead PARFIN
    (181) saveVariable -> .

    ,               reduce using rule 181 (saveVariable -> .)
    PARFIN          reduce using rule 181 (saveVariable -> .)

    saveVariable                   shift and go to state 156

state 135

    (170) cte -> TRUE . saveConstantBool
    (179) saveConstantBool -> .

    MULT            reduce using rule 179 (saveConstantBool -> .)
    DIV             reduce using rule 179 (saveConstantBool -> .)
    RES             reduce using rule 179 (saveConstantBool -> .)
    PLUS            reduce using rule 179 (saveConstantBool -> .)
    MINUS           reduce using rule 179 (saveConstantBool -> .)
    ,               reduce using rule 179 (saveConstantBool -> .)
    PARFIN          reduce using rule 179 (saveConstantBool -> .)
    EQ              reduce using rule 179 (saveConstantBool -> .)
    DIF             reduce using rule 179 (saveConstantBool -> .)
    LTOEQ           reduce using rule 179 (saveConstantBool -> .)
    GTOEQ           reduce using rule 179 (saveConstantBool -> .)
    GT              reduce using rule 179 (saveConstantBool -> .)
    LT              reduce using rule 179 (saveConstantBool -> .)
    AND             reduce using rule 179 (saveConstantBool -> .)
    OR              reduce using rule 179 (saveConstantBool -> .)
    ]               reduce using rule 179 (saveConstantBool -> .)
    :               reduce using rule 179 (saveConstantBool -> .)
    ;               reduce using rule 179 (saveConstantBool -> .)

    saveConstantBool               shift and go to state 157

state 136

    (153) fact -> PARINI . putFondo expresion PARFIN takeFondo
    (183) putFondo -> .

    CTES            reduce using rule 183 (putFondo -> .)
    PARINI          reduce using rule 183 (putFondo -> .)
    ID              reduce using rule 183 (putFondo -> .)
    CTED            reduce using rule 183 (putFondo -> .)
    CTEF            reduce using rule 183 (putFondo -> .)
    TRUE            reduce using rule 183 (putFondo -> .)
    FALSE           reduce using rule 183 (putFondo -> .)

    putFondo                       shift and go to state 158

state 137

    (168) cte -> CTED . saveConstantInt
    (177) saveConstantInt -> .

    MULT            reduce using rule 177 (saveConstantInt -> .)
    DIV             reduce using rule 177 (saveConstantInt -> .)
    RES             reduce using rule 177 (saveConstantInt -> .)
    PLUS            reduce using rule 177 (saveConstantInt -> .)
    MINUS           reduce using rule 177 (saveConstantInt -> .)
    ,               reduce using rule 177 (saveConstantInt -> .)
    PARFIN          reduce using rule 177 (saveConstantInt -> .)
    EQ              reduce using rule 177 (saveConstantInt -> .)
    DIF             reduce using rule 177 (saveConstantInt -> .)
    LTOEQ           reduce using rule 177 (saveConstantInt -> .)
    GTOEQ           reduce using rule 177 (saveConstantInt -> .)
    GT              reduce using rule 177 (saveConstantInt -> .)
    LT              reduce using rule 177 (saveConstantInt -> .)
    AND             reduce using rule 177 (saveConstantInt -> .)
    OR              reduce using rule 177 (saveConstantInt -> .)
    ]               reduce using rule 177 (saveConstantInt -> .)
    :               reduce using rule 177 (saveConstantInt -> .)
    ;               reduce using rule 177 (saveConstantInt -> .)

    saveConstantInt                shift and go to state 159

state 138

    (154) fact -> ID . saveVariable opAccess errorOpAccess
    (106) funcCall -> ID . checkFunction PARINI opParamCall PARFIN checkNumParams
    (181) saveVariable -> .
    (108) checkFunction -> .

    .               reduce using rule 181 (saveVariable -> .)
    [               reduce using rule 181 (saveVariable -> .)
    MULT            reduce using rule 181 (saveVariable -> .)
    DIV             reduce using rule 181 (saveVariable -> .)
    RES             reduce using rule 181 (saveVariable -> .)
    PLUS            reduce using rule 181 (saveVariable -> .)
    MINUS           reduce using rule 181 (saveVariable -> .)
    ,               reduce using rule 181 (saveVariable -> .)
    PARFIN          reduce using rule 181 (saveVariable -> .)
    EQ              reduce using rule 181 (saveVariable -> .)
    DIF             reduce using rule 181 (saveVariable -> .)
    LTOEQ           reduce using rule 181 (saveVariable -> .)
    GTOEQ           reduce using rule 181 (saveVariable -> .)
    GT              reduce using rule 181 (saveVariable -> .)
    LT              reduce using rule 181 (saveVariable -> .)
    AND             reduce using rule 181 (saveVariable -> .)
    OR              reduce using rule 181 (saveVariable -> .)
    ]               reduce using rule 181 (saveVariable -> .)
    ;               reduce using rule 181 (saveVariable -> .)
    PARINI          reduce using rule 108 (checkFunction -> .)

    saveVariable                   shift and go to state 160
    checkFunction                  shift and go to state 126

state 139

    (150) fact -> CTES . saveConstantString
    (180) saveConstantString -> .

    MULT            reduce using rule 180 (saveConstantString -> .)
    DIV             reduce using rule 180 (saveConstantString -> .)
    RES             reduce using rule 180 (saveConstantString -> .)
    PLUS            reduce using rule 180 (saveConstantString -> .)
    MINUS           reduce using rule 180 (saveConstantString -> .)
    ,               reduce using rule 180 (saveConstantString -> .)
    PARFIN          reduce using rule 180 (saveConstantString -> .)
    EQ              reduce using rule 180 (saveConstantString -> .)
    DIF             reduce using rule 180 (saveConstantString -> .)
    LTOEQ           reduce using rule 180 (saveConstantString -> .)
    GTOEQ           reduce using rule 180 (saveConstantString -> .)
    GT              reduce using rule 180 (saveConstantString -> .)
    LT              reduce using rule 180 (saveConstantString -> .)
    AND             reduce using rule 180 (saveConstantString -> .)
    OR              reduce using rule 180 (saveConstantString -> .)
    ]               reduce using rule 180 (saveConstantString -> .)
    ;               reduce using rule 180 (saveConstantString -> .)

    saveConstantString             shift and go to state 161

state 140

    (140) exp -> term . performAddSub errorCyExp cyExp
    (187) performAddSub -> .

    PLUS            reduce using rule 187 (performAddSub -> .)
    MINUS           reduce using rule 187 (performAddSub -> .)
    ,               reduce using rule 187 (performAddSub -> .)
    PARFIN          reduce using rule 187 (performAddSub -> .)
    EQ              reduce using rule 187 (performAddSub -> .)
    DIF             reduce using rule 187 (performAddSub -> .)
    LTOEQ           reduce using rule 187 (performAddSub -> .)
    GTOEQ           reduce using rule 187 (performAddSub -> .)
    GT              reduce using rule 187 (performAddSub -> .)
    LT              reduce using rule 187 (performAddSub -> .)
    AND             reduce using rule 187 (performAddSub -> .)
    OR              reduce using rule 187 (performAddSub -> .)
    ]               reduce using rule 187 (performAddSub -> .)
    ;               reduce using rule 187 (performAddSub -> .)

    performAddSub                  shift and go to state 162

state 141

    (171) cte -> FALSE . saveConstantBool
    (179) saveConstantBool -> .

    MULT            reduce using rule 179 (saveConstantBool -> .)
    DIV             reduce using rule 179 (saveConstantBool -> .)
    RES             reduce using rule 179 (saveConstantBool -> .)
    PLUS            reduce using rule 179 (saveConstantBool -> .)
    MINUS           reduce using rule 179 (saveConstantBool -> .)
    ,               reduce using rule 179 (saveConstantBool -> .)
    PARFIN          reduce using rule 179 (saveConstantBool -> .)
    EQ              reduce using rule 179 (saveConstantBool -> .)
    DIF             reduce using rule 179 (saveConstantBool -> .)
    LTOEQ           reduce using rule 179 (saveConstantBool -> .)
    GTOEQ           reduce using rule 179 (saveConstantBool -> .)
    GT              reduce using rule 179 (saveConstantBool -> .)
    LT              reduce using rule 179 (saveConstantBool -> .)
    AND             reduce using rule 179 (saveConstantBool -> .)
    OR              reduce using rule 179 (saveConstantBool -> .)
    ]               reduce using rule 179 (saveConstantBool -> .)
    :               reduce using rule 179 (saveConstantBool -> .)
    ;               reduce using rule 179 (saveConstantBool -> .)

    saveConstantBool               shift and go to state 163

state 142

    (152) fact -> funcCall .

    MULT            reduce using rule 152 (fact -> funcCall .)
    DIV             reduce using rule 152 (fact -> funcCall .)
    RES             reduce using rule 152 (fact -> funcCall .)
    PLUS            reduce using rule 152 (fact -> funcCall .)
    MINUS           reduce using rule 152 (fact -> funcCall .)
    EQ              reduce using rule 152 (fact -> funcCall .)
    DIF             reduce using rule 152 (fact -> funcCall .)
    LTOEQ           reduce using rule 152 (fact -> funcCall .)
    GTOEQ           reduce using rule 152 (fact -> funcCall .)
    GT              reduce using rule 152 (fact -> funcCall .)
    LT              reduce using rule 152 (fact -> funcCall .)
    AND             reduce using rule 152 (fact -> funcCall .)
    OR              reduce using rule 152 (fact -> funcCall .)
    PARFIN          reduce using rule 152 (fact -> funcCall .)
    ,               reduce using rule 152 (fact -> funcCall .)
    ]               reduce using rule 152 (fact -> funcCall .)
    ;               reduce using rule 152 (fact -> funcCall .)


state 143

    (151) fact -> cte .

    MULT            reduce using rule 151 (fact -> cte .)
    DIV             reduce using rule 151 (fact -> cte .)
    RES             reduce using rule 151 (fact -> cte .)
    PLUS            reduce using rule 151 (fact -> cte .)
    MINUS           reduce using rule 151 (fact -> cte .)
    EQ              reduce using rule 151 (fact -> cte .)
    DIF             reduce using rule 151 (fact -> cte .)
    LTOEQ           reduce using rule 151 (fact -> cte .)
    GTOEQ           reduce using rule 151 (fact -> cte .)
    GT              reduce using rule 151 (fact -> cte .)
    LT              reduce using rule 151 (fact -> cte .)
    AND             reduce using rule 151 (fact -> cte .)
    OR              reduce using rule 151 (fact -> cte .)
    PARFIN          reduce using rule 151 (fact -> cte .)
    ,               reduce using rule 151 (fact -> cte .)
    ]               reduce using rule 151 (fact -> cte .)
    ;               reduce using rule 151 (fact -> cte .)


state 144

    (169) cte -> CTEF . saveConstantFloat
    (178) saveConstantFloat -> .

    MULT            reduce using rule 178 (saveConstantFloat -> .)
    DIV             reduce using rule 178 (saveConstantFloat -> .)
    RES             reduce using rule 178 (saveConstantFloat -> .)
    PLUS            reduce using rule 178 (saveConstantFloat -> .)
    MINUS           reduce using rule 178 (saveConstantFloat -> .)
    ,               reduce using rule 178 (saveConstantFloat -> .)
    PARFIN          reduce using rule 178 (saveConstantFloat -> .)
    EQ              reduce using rule 178 (saveConstantFloat -> .)
    DIF             reduce using rule 178 (saveConstantFloat -> .)
    LTOEQ           reduce using rule 178 (saveConstantFloat -> .)
    GTOEQ           reduce using rule 178 (saveConstantFloat -> .)
    GT              reduce using rule 178 (saveConstantFloat -> .)
    LT              reduce using rule 178 (saveConstantFloat -> .)
    AND             reduce using rule 178 (saveConstantFloat -> .)
    OR              reduce using rule 178 (saveConstantFloat -> .)
    ]               reduce using rule 178 (saveConstantFloat -> .)
    :               reduce using rule 178 (saveConstantFloat -> .)
    ;               reduce using rule 178 (saveConstantFloat -> .)

    saveConstantFloat              shift and go to state 164

state 145

    (29) print -> PRINT PARINI exp . performPrint cyPrint PARFIN
    (190) performPrint -> .

    ,               reduce using rule 190 (performPrint -> .)
    PARFIN          reduce using rule 190 (performPrint -> .)

    performPrint                   shift and go to state 165

state 146

    (145) term -> fact . performMulDiv cyTerm
    (186) performMulDiv -> .

    MULT            reduce using rule 186 (performMulDiv -> .)
    DIV             reduce using rule 186 (performMulDiv -> .)
    RES             reduce using rule 186 (performMulDiv -> .)
    PLUS            reduce using rule 186 (performMulDiv -> .)
    MINUS           reduce using rule 186 (performMulDiv -> .)
    ,               reduce using rule 186 (performMulDiv -> .)
    PARFIN          reduce using rule 186 (performMulDiv -> .)
    EQ              reduce using rule 186 (performMulDiv -> .)
    DIF             reduce using rule 186 (performMulDiv -> .)
    LTOEQ           reduce using rule 186 (performMulDiv -> .)
    GTOEQ           reduce using rule 186 (performMulDiv -> .)
    GT              reduce using rule 186 (performMulDiv -> .)
    LT              reduce using rule 186 (performMulDiv -> .)
    AND             reduce using rule 186 (performMulDiv -> .)
    OR              reduce using rule 186 (performMulDiv -> .)
    ]               reduce using rule 186 (performMulDiv -> .)
    ;               reduce using rule 186 (performMulDiv -> .)

    performMulDiv                  shift and go to state 166

state 147

    (88) whileCycle -> errorWhileCycle WHILE saveReturn . PARINI expresion PARFIN saveFalso { body } repeatWhile

    PARINI          shift and go to state 167


state 148

    (98) assign -> ID saveVariable errorAssign . assignOptions performAssign
    (100) assignOptions -> . init
    (101) assignOptions -> . initDict
    (102) assignOptions -> . [ expresion ] assignMatrix init
    (39) init -> . ASGN saveOperator errorInit initWith
    (43) initDict -> . ASGN PARINI dictType : dictType PARFIN errorInitDict

    [               shift and go to state 172
    ASGN            shift and go to state 170

    initDict                       shift and go to state 168
    assignOptions                  shift and go to state 169
    init                           shift and go to state 171

state 149

    (106) funcCall -> ID checkFunction PARINI . opParamCall PARFIN checkNumParams
    (109) opParamCall -> . expresion checkParamType cyParamCall
    (110) opParamCall -> . empty
    (126) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (172) empty -> .
    (131) sExp -> . exp errorOpSExp opSExp performRelational
    (140) exp -> . term performAddSub errorCyExp cyExp
    (145) term -> . fact performMulDiv cyTerm
    (150) fact -> . CTES saveConstantString
    (151) fact -> . cte
    (152) fact -> . funcCall
    (153) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (154) fact -> . ID saveVariable opAccess errorOpAccess
    (168) cte -> . CTED saveConstantInt
    (169) cte -> . CTEF saveConstantFloat
    (170) cte -> . TRUE saveConstantBool
    (171) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    PARFIN          reduce using rule 172 (empty -> .)
    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    opParamCall                    shift and go to state 173
    sExp                           shift and go to state 174
    empty                          shift and go to state 175
    expresion                      shift and go to state 176
    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 177
    fact                           shift and go to state 146

state 150

    (92) forCycle -> errorForCycle FOR PARINI . assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign
    (98) assign -> . ID saveVariable errorAssign assignOptions performAssign

    ID              shift and go to state 178

    assign                         shift and go to state 179

state 151

    (119) condition -> errorCondition IF PARINI . expresion PARFIN saveFalso { body } optionalElse rellenaFalso
    (126) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (131) sExp -> . exp errorOpSExp opSExp performRelational
    (140) exp -> . term performAddSub errorCyExp cyExp
    (145) term -> . fact performMulDiv cyTerm
    (150) fact -> . CTES saveConstantString
    (151) fact -> . cte
    (152) fact -> . funcCall
    (153) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (154) fact -> . ID saveVariable opAccess errorOpAccess
    (168) cte -> . CTED saveConstantInt
    (169) cte -> . CTEF saveConstantFloat
    (170) cte -> . TRUE saveConstantBool
    (171) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    sExp                           shift and go to state 174
    expresion                      shift and go to state 180
    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 177
    fact                           shift and go to state 146

state 152

    (57) function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns . } clearVarsTable

    }               shift and go to state 181


state 153

    (69) opReturns -> errorOpReturns . RETURNS type saveReturnType { opVars saveQuadruple body return

    RETURNS         shift and go to state 182


state 154

    (70) opReturns -> { . opVars saveQuadruple body
    (6) opVars -> . vars
    (7) opVars -> . empty
    (10) vars -> . errorVars VARS declare
    (172) empty -> .
    (12) errorVars -> .

    ID              reduce using rule 172 (empty -> .)
    PRINT           reduce using rule 172 (empty -> .)
    READ            reduce using rule 172 (empty -> .)
    IF              reduce using rule 172 (empty -> .)
    FOR             reduce using rule 172 (empty -> .)
    WHILE           reduce using rule 172 (empty -> .)
    }               reduce using rule 172 (empty -> .)
    VARS            reduce using rule 12 (errorVars -> .)

    vars                           shift and go to state 8
    opVars                         shift and go to state 183
    errorVars                      shift and go to state 10
    empty                          shift and go to state 11

state 155

    (49) param -> saveType type errorParam ID . cyTypeParam cyParam
    (53) cyTypeParam -> . , saveTypeParam saveID ID cyTypeParam
    (54) cyTypeParam -> . empty
    (172) empty -> .

    ,               shift and go to state 58
    ;               reduce using rule 172 (empty -> .)
    PARFIN          reduce using rule 172 (empty -> .)

    empty                          shift and go to state 59
    cyTypeParam                    shift and go to state 184

state 156

    (32) read -> READ PARINI ID saveVariable . performRead cyRead PARFIN
    (191) performRead -> .

    ,               reduce using rule 191 (performRead -> .)
    PARFIN          reduce using rule 191 (performRead -> .)

    performRead                    shift and go to state 185

state 157

    (170) cte -> TRUE saveConstantBool .

    MULT            reduce using rule 170 (cte -> TRUE saveConstantBool .)
    DIV             reduce using rule 170 (cte -> TRUE saveConstantBool .)
    RES             reduce using rule 170 (cte -> TRUE saveConstantBool .)
    PLUS            reduce using rule 170 (cte -> TRUE saveConstantBool .)
    MINUS           reduce using rule 170 (cte -> TRUE saveConstantBool .)
    EQ              reduce using rule 170 (cte -> TRUE saveConstantBool .)
    DIF             reduce using rule 170 (cte -> TRUE saveConstantBool .)
    LTOEQ           reduce using rule 170 (cte -> TRUE saveConstantBool .)
    GTOEQ           reduce using rule 170 (cte -> TRUE saveConstantBool .)
    GT              reduce using rule 170 (cte -> TRUE saveConstantBool .)
    LT              reduce using rule 170 (cte -> TRUE saveConstantBool .)
    AND             reduce using rule 170 (cte -> TRUE saveConstantBool .)
    OR              reduce using rule 170 (cte -> TRUE saveConstantBool .)
    ,               reduce using rule 170 (cte -> TRUE saveConstantBool .)
    PARFIN          reduce using rule 170 (cte -> TRUE saveConstantBool .)
    ]               reduce using rule 170 (cte -> TRUE saveConstantBool .)
    ;               reduce using rule 170 (cte -> TRUE saveConstantBool .)
    :               reduce using rule 170 (cte -> TRUE saveConstantBool .)


state 158

    (153) fact -> PARINI putFondo . expresion PARFIN takeFondo
    (126) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (131) sExp -> . exp errorOpSExp opSExp performRelational
    (140) exp -> . term performAddSub errorCyExp cyExp
    (145) term -> . fact performMulDiv cyTerm
    (150) fact -> . CTES saveConstantString
    (151) fact -> . cte
    (152) fact -> . funcCall
    (153) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (154) fact -> . ID saveVariable opAccess errorOpAccess
    (168) cte -> . CTED saveConstantInt
    (169) cte -> . CTEF saveConstantFloat
    (170) cte -> . TRUE saveConstantBool
    (171) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    sExp                           shift and go to state 174
    expresion                      shift and go to state 186
    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 177
    fact                           shift and go to state 146

state 159

    (168) cte -> CTED saveConstantInt .

    MULT            reduce using rule 168 (cte -> CTED saveConstantInt .)
    DIV             reduce using rule 168 (cte -> CTED saveConstantInt .)
    RES             reduce using rule 168 (cte -> CTED saveConstantInt .)
    PLUS            reduce using rule 168 (cte -> CTED saveConstantInt .)
    MINUS           reduce using rule 168 (cte -> CTED saveConstantInt .)
    EQ              reduce using rule 168 (cte -> CTED saveConstantInt .)
    DIF             reduce using rule 168 (cte -> CTED saveConstantInt .)
    LTOEQ           reduce using rule 168 (cte -> CTED saveConstantInt .)
    GTOEQ           reduce using rule 168 (cte -> CTED saveConstantInt .)
    GT              reduce using rule 168 (cte -> CTED saveConstantInt .)
    LT              reduce using rule 168 (cte -> CTED saveConstantInt .)
    AND             reduce using rule 168 (cte -> CTED saveConstantInt .)
    OR              reduce using rule 168 (cte -> CTED saveConstantInt .)
    ,               reduce using rule 168 (cte -> CTED saveConstantInt .)
    PARFIN          reduce using rule 168 (cte -> CTED saveConstantInt .)
    ]               reduce using rule 168 (cte -> CTED saveConstantInt .)
    ;               reduce using rule 168 (cte -> CTED saveConstantInt .)
    :               reduce using rule 168 (cte -> CTED saveConstantInt .)


state 160

    (154) fact -> ID saveVariable . opAccess errorOpAccess
    (156) opAccess -> . opStruct
    (157) opAccess -> . opDictionary
    (158) opAccess -> . empty
    (160) opStruct -> . errorOpStruct [ expresion ] opMatrix
    (165) opDictionary -> . . dictIndex
    (172) empty -> .
    (161) errorOpStruct -> .

    .               shift and go to state 191
    MULT            reduce using rule 172 (empty -> .)
    DIV             reduce using rule 172 (empty -> .)
    RES             reduce using rule 172 (empty -> .)
    PLUS            reduce using rule 172 (empty -> .)
    MINUS           reduce using rule 172 (empty -> .)
    ,               reduce using rule 172 (empty -> .)
    PARFIN          reduce using rule 172 (empty -> .)
    EQ              reduce using rule 172 (empty -> .)
    DIF             reduce using rule 172 (empty -> .)
    LTOEQ           reduce using rule 172 (empty -> .)
    GTOEQ           reduce using rule 172 (empty -> .)
    GT              reduce using rule 172 (empty -> .)
    LT              reduce using rule 172 (empty -> .)
    AND             reduce using rule 172 (empty -> .)
    OR              reduce using rule 172 (empty -> .)
    ]               reduce using rule 172 (empty -> .)
    ;               reduce using rule 172 (empty -> .)
    [               reduce using rule 161 (errorOpStruct -> .)

    errorOpStruct                  shift and go to state 187
    opDictionary                   shift and go to state 188
    opStruct                       shift and go to state 189
    opAccess                       shift and go to state 190
    empty                          shift and go to state 192

state 161

    (150) fact -> CTES saveConstantString .

    MULT            reduce using rule 150 (fact -> CTES saveConstantString .)
    DIV             reduce using rule 150 (fact -> CTES saveConstantString .)
    RES             reduce using rule 150 (fact -> CTES saveConstantString .)
    PLUS            reduce using rule 150 (fact -> CTES saveConstantString .)
    MINUS           reduce using rule 150 (fact -> CTES saveConstantString .)
    EQ              reduce using rule 150 (fact -> CTES saveConstantString .)
    DIF             reduce using rule 150 (fact -> CTES saveConstantString .)
    LTOEQ           reduce using rule 150 (fact -> CTES saveConstantString .)
    GTOEQ           reduce using rule 150 (fact -> CTES saveConstantString .)
    GT              reduce using rule 150 (fact -> CTES saveConstantString .)
    LT              reduce using rule 150 (fact -> CTES saveConstantString .)
    AND             reduce using rule 150 (fact -> CTES saveConstantString .)
    OR              reduce using rule 150 (fact -> CTES saveConstantString .)
    PARFIN          reduce using rule 150 (fact -> CTES saveConstantString .)
    ,               reduce using rule 150 (fact -> CTES saveConstantString .)
    ]               reduce using rule 150 (fact -> CTES saveConstantString .)
    ;               reduce using rule 150 (fact -> CTES saveConstantString .)


state 162

    (140) exp -> term performAddSub . errorCyExp cyExp
    (144) errorCyExp -> .

    PLUS            reduce using rule 144 (errorCyExp -> .)
    MINUS           reduce using rule 144 (errorCyExp -> .)
    ,               reduce using rule 144 (errorCyExp -> .)
    PARFIN          reduce using rule 144 (errorCyExp -> .)
    EQ              reduce using rule 144 (errorCyExp -> .)
    DIF             reduce using rule 144 (errorCyExp -> .)
    LTOEQ           reduce using rule 144 (errorCyExp -> .)
    GTOEQ           reduce using rule 144 (errorCyExp -> .)
    GT              reduce using rule 144 (errorCyExp -> .)
    LT              reduce using rule 144 (errorCyExp -> .)
    AND             reduce using rule 144 (errorCyExp -> .)
    OR              reduce using rule 144 (errorCyExp -> .)
    ]               reduce using rule 144 (errorCyExp -> .)
    ;               reduce using rule 144 (errorCyExp -> .)

    errorCyExp                     shift and go to state 193

state 163

    (171) cte -> FALSE saveConstantBool .

    MULT            reduce using rule 171 (cte -> FALSE saveConstantBool .)
    DIV             reduce using rule 171 (cte -> FALSE saveConstantBool .)
    RES             reduce using rule 171 (cte -> FALSE saveConstantBool .)
    PLUS            reduce using rule 171 (cte -> FALSE saveConstantBool .)
    MINUS           reduce using rule 171 (cte -> FALSE saveConstantBool .)
    EQ              reduce using rule 171 (cte -> FALSE saveConstantBool .)
    DIF             reduce using rule 171 (cte -> FALSE saveConstantBool .)
    LTOEQ           reduce using rule 171 (cte -> FALSE saveConstantBool .)
    GTOEQ           reduce using rule 171 (cte -> FALSE saveConstantBool .)
    GT              reduce using rule 171 (cte -> FALSE saveConstantBool .)
    LT              reduce using rule 171 (cte -> FALSE saveConstantBool .)
    AND             reduce using rule 171 (cte -> FALSE saveConstantBool .)
    OR              reduce using rule 171 (cte -> FALSE saveConstantBool .)
    ,               reduce using rule 171 (cte -> FALSE saveConstantBool .)
    PARFIN          reduce using rule 171 (cte -> FALSE saveConstantBool .)
    ]               reduce using rule 171 (cte -> FALSE saveConstantBool .)
    ;               reduce using rule 171 (cte -> FALSE saveConstantBool .)
    :               reduce using rule 171 (cte -> FALSE saveConstantBool .)


state 164

    (169) cte -> CTEF saveConstantFloat .

    MULT            reduce using rule 169 (cte -> CTEF saveConstantFloat .)
    DIV             reduce using rule 169 (cte -> CTEF saveConstantFloat .)
    RES             reduce using rule 169 (cte -> CTEF saveConstantFloat .)
    PLUS            reduce using rule 169 (cte -> CTEF saveConstantFloat .)
    MINUS           reduce using rule 169 (cte -> CTEF saveConstantFloat .)
    EQ              reduce using rule 169 (cte -> CTEF saveConstantFloat .)
    DIF             reduce using rule 169 (cte -> CTEF saveConstantFloat .)
    LTOEQ           reduce using rule 169 (cte -> CTEF saveConstantFloat .)
    GTOEQ           reduce using rule 169 (cte -> CTEF saveConstantFloat .)
    GT              reduce using rule 169 (cte -> CTEF saveConstantFloat .)
    LT              reduce using rule 169 (cte -> CTEF saveConstantFloat .)
    AND             reduce using rule 169 (cte -> CTEF saveConstantFloat .)
    OR              reduce using rule 169 (cte -> CTEF saveConstantFloat .)
    ,               reduce using rule 169 (cte -> CTEF saveConstantFloat .)
    PARFIN          reduce using rule 169 (cte -> CTEF saveConstantFloat .)
    ]               reduce using rule 169 (cte -> CTEF saveConstantFloat .)
    ;               reduce using rule 169 (cte -> CTEF saveConstantFloat .)
    :               reduce using rule 169 (cte -> CTEF saveConstantFloat .)


state 165

    (29) print -> PRINT PARINI exp performPrint . cyPrint PARFIN
    (30) cyPrint -> . , fix exp performPrint cyPrint
    (31) cyPrint -> . empty
    (172) empty -> .

    ,               shift and go to state 195
    PARFIN          reduce using rule 172 (empty -> .)

    cyPrint                        shift and go to state 194
    empty                          shift and go to state 196

state 166

    (145) term -> fact performMulDiv . cyTerm
    (146) cyTerm -> . MULT saveOperator errorFact term
    (147) cyTerm -> . DIV saveOperator term
    (148) cyTerm -> . RES saveOperator term
    (149) cyTerm -> . empty
    (172) empty -> .

    MULT            shift and go to state 201
    DIV             shift and go to state 200
    RES             shift and go to state 197
    PLUS            reduce using rule 172 (empty -> .)
    MINUS           reduce using rule 172 (empty -> .)
    ,               reduce using rule 172 (empty -> .)
    PARFIN          reduce using rule 172 (empty -> .)
    EQ              reduce using rule 172 (empty -> .)
    DIF             reduce using rule 172 (empty -> .)
    LTOEQ           reduce using rule 172 (empty -> .)
    GTOEQ           reduce using rule 172 (empty -> .)
    GT              reduce using rule 172 (empty -> .)
    LT              reduce using rule 172 (empty -> .)
    AND             reduce using rule 172 (empty -> .)
    OR              reduce using rule 172 (empty -> .)
    ]               reduce using rule 172 (empty -> .)
    ;               reduce using rule 172 (empty -> .)

    cyTerm                         shift and go to state 198
    empty                          shift and go to state 199

state 167

    (88) whileCycle -> errorWhileCycle WHILE saveReturn PARINI . expresion PARFIN saveFalso { body } repeatWhile
    (126) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (131) sExp -> . exp errorOpSExp opSExp performRelational
    (140) exp -> . term performAddSub errorCyExp cyExp
    (145) term -> . fact performMulDiv cyTerm
    (150) fact -> . CTES saveConstantString
    (151) fact -> . cte
    (152) fact -> . funcCall
    (153) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (154) fact -> . ID saveVariable opAccess errorOpAccess
    (168) cte -> . CTED saveConstantInt
    (169) cte -> . CTEF saveConstantFloat
    (170) cte -> . TRUE saveConstantBool
    (171) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    sExp                           shift and go to state 174
    expresion                      shift and go to state 202
    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 177
    fact                           shift and go to state 146

state 168

    (101) assignOptions -> initDict .

    ;               reduce using rule 101 (assignOptions -> initDict .)
    PARFIN          reduce using rule 101 (assignOptions -> initDict .)


state 169

    (98) assign -> ID saveVariable errorAssign assignOptions . performAssign
    (185) performAssign -> .

    ;               reduce using rule 185 (performAssign -> .)
    PARFIN          reduce using rule 185 (performAssign -> .)

    performAssign                  shift and go to state 203

state 170

    (39) init -> ASGN . saveOperator errorInit initWith
    (43) initDict -> ASGN . PARINI dictType : dictType PARFIN errorInitDict
    (182) saveOperator -> .

  ! shift/reduce conflict for PARINI resolved as shift
    PARINI          shift and go to state 205
    ID              reduce using rule 182 (saveOperator -> .)
    CTES            reduce using rule 182 (saveOperator -> .)
    CTED            reduce using rule 182 (saveOperator -> .)
    CTEF            reduce using rule 182 (saveOperator -> .)
    TRUE            reduce using rule 182 (saveOperator -> .)
    FALSE           reduce using rule 182 (saveOperator -> .)

  ! PARINI          [ reduce using rule 182 (saveOperator -> .) ]

    saveOperator                   shift and go to state 204

state 171

    (100) assignOptions -> init .

    ;               reduce using rule 100 (assignOptions -> init .)
    PARFIN          reduce using rule 100 (assignOptions -> init .)


state 172

    (102) assignOptions -> [ . expresion ] assignMatrix init
    (126) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (131) sExp -> . exp errorOpSExp opSExp performRelational
    (140) exp -> . term performAddSub errorCyExp cyExp
    (145) term -> . fact performMulDiv cyTerm
    (150) fact -> . CTES saveConstantString
    (151) fact -> . cte
    (152) fact -> . funcCall
    (153) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (154) fact -> . ID saveVariable opAccess errorOpAccess
    (168) cte -> . CTED saveConstantInt
    (169) cte -> . CTEF saveConstantFloat
    (170) cte -> . TRUE saveConstantBool
    (171) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    sExp                           shift and go to state 174
    expresion                      shift and go to state 206
    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 177
    fact                           shift and go to state 146

state 173

    (106) funcCall -> ID checkFunction PARINI opParamCall . PARFIN checkNumParams

    PARFIN          shift and go to state 207


state 174

    (126) expresion -> sExp . performAndOr cyExpresion errorExpresion
    (189) performAndOr -> .

    AND             reduce using rule 189 (performAndOr -> .)
    OR              reduce using rule 189 (performAndOr -> .)
    ,               reduce using rule 189 (performAndOr -> .)
    PARFIN          reduce using rule 189 (performAndOr -> .)
    ]               reduce using rule 189 (performAndOr -> .)
    ;               reduce using rule 189 (performAndOr -> .)

    performAndOr                   shift and go to state 208

state 175

    (110) opParamCall -> empty .

    PARFIN          reduce using rule 110 (opParamCall -> empty .)


state 176

    (109) opParamCall -> expresion . checkParamType cyParamCall
    (113) checkParamType -> .

    ,               reduce using rule 113 (checkParamType -> .)
    PARFIN          reduce using rule 113 (checkParamType -> .)

    checkParamType                 shift and go to state 209

state 177

    (131) sExp -> exp . errorOpSExp opSExp performRelational
    (139) errorOpSExp -> .

    EQ              reduce using rule 139 (errorOpSExp -> .)
    DIF             reduce using rule 139 (errorOpSExp -> .)
    LTOEQ           reduce using rule 139 (errorOpSExp -> .)
    GTOEQ           reduce using rule 139 (errorOpSExp -> .)
    GT              reduce using rule 139 (errorOpSExp -> .)
    LT              reduce using rule 139 (errorOpSExp -> .)
    AND             reduce using rule 139 (errorOpSExp -> .)
    OR              reduce using rule 139 (errorOpSExp -> .)
    ,               reduce using rule 139 (errorOpSExp -> .)
    PARFIN          reduce using rule 139 (errorOpSExp -> .)
    ]               reduce using rule 139 (errorOpSExp -> .)
    ;               reduce using rule 139 (errorOpSExp -> .)

    errorOpSExp                    shift and go to state 210

state 178

    (98) assign -> ID . saveVariable errorAssign assignOptions performAssign
    (181) saveVariable -> .

    [               reduce using rule 181 (saveVariable -> .)
    ASGN            reduce using rule 181 (saveVariable -> .)

    saveVariable                   shift and go to state 125

state 179

    (92) forCycle -> errorForCycle FOR PARINI assign . ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign

    ;               shift and go to state 211


state 180

    (119) condition -> errorCondition IF PARINI expresion . PARFIN saveFalso { body } optionalElse rellenaFalso

    PARFIN          shift and go to state 212


state 181

    (57) function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } . clearVarsTable
    (60) clearVarsTable -> .

    FUNC            reduce using rule 60 (clearVarsTable -> .)
    MAIN            reduce using rule 60 (clearVarsTable -> .)

    clearVarsTable                 shift and go to state 213

state 182

    (69) opReturns -> errorOpReturns RETURNS . type saveReturnType { opVars saveQuadruple body return
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    errorType                      shift and go to state 31
    type                           shift and go to state 214

state 183

    (70) opReturns -> { opVars . saveQuadruple body
    (71) saveQuadruple -> .

    ID              reduce using rule 71 (saveQuadruple -> .)
    PRINT           reduce using rule 71 (saveQuadruple -> .)
    READ            reduce using rule 71 (saveQuadruple -> .)
    IF              reduce using rule 71 (saveQuadruple -> .)
    FOR             reduce using rule 71 (saveQuadruple -> .)
    WHILE           reduce using rule 71 (saveQuadruple -> .)
    }               reduce using rule 71 (saveQuadruple -> .)

    saveQuadruple                  shift and go to state 215

state 184

    (49) param -> saveType type errorParam ID cyTypeParam . cyParam
    (51) cyParam -> . errorCyParam saveTypeParam saveID ; param
    (52) cyParam -> . empty saveTypeParam saveID
    (56) errorCyParam -> .
    (172) empty -> .

    ;               reduce using rule 56 (errorCyParam -> .)
    PARFIN          reduce using rule 172 (empty -> .)

    empty                          shift and go to state 216
    cyParam                        shift and go to state 218
    errorCyParam                   shift and go to state 217

state 185

    (32) read -> READ PARINI ID saveVariable performRead . cyRead PARFIN
    (33) cyRead -> . , fix ID saveVariable performRead cyRead
    (34) cyRead -> . empty
    (172) empty -> .

    ,               shift and go to state 219
    PARFIN          reduce using rule 172 (empty -> .)

    cyRead                         shift and go to state 220
    empty                          shift and go to state 221

state 186

    (153) fact -> PARINI putFondo expresion . PARFIN takeFondo

    PARFIN          shift and go to state 222


state 187

    (160) opStruct -> errorOpStruct . [ expresion ] opMatrix

    [               shift and go to state 223


state 188

    (157) opAccess -> opDictionary .

    MULT            reduce using rule 157 (opAccess -> opDictionary .)
    DIV             reduce using rule 157 (opAccess -> opDictionary .)
    RES             reduce using rule 157 (opAccess -> opDictionary .)
    PLUS            reduce using rule 157 (opAccess -> opDictionary .)
    MINUS           reduce using rule 157 (opAccess -> opDictionary .)
    ,               reduce using rule 157 (opAccess -> opDictionary .)
    PARFIN          reduce using rule 157 (opAccess -> opDictionary .)
    EQ              reduce using rule 157 (opAccess -> opDictionary .)
    DIF             reduce using rule 157 (opAccess -> opDictionary .)
    LTOEQ           reduce using rule 157 (opAccess -> opDictionary .)
    GTOEQ           reduce using rule 157 (opAccess -> opDictionary .)
    GT              reduce using rule 157 (opAccess -> opDictionary .)
    LT              reduce using rule 157 (opAccess -> opDictionary .)
    AND             reduce using rule 157 (opAccess -> opDictionary .)
    OR              reduce using rule 157 (opAccess -> opDictionary .)
    ]               reduce using rule 157 (opAccess -> opDictionary .)
    ;               reduce using rule 157 (opAccess -> opDictionary .)


state 189

    (156) opAccess -> opStruct .

    MULT            reduce using rule 156 (opAccess -> opStruct .)
    DIV             reduce using rule 156 (opAccess -> opStruct .)
    RES             reduce using rule 156 (opAccess -> opStruct .)
    PLUS            reduce using rule 156 (opAccess -> opStruct .)
    MINUS           reduce using rule 156 (opAccess -> opStruct .)
    ,               reduce using rule 156 (opAccess -> opStruct .)
    PARFIN          reduce using rule 156 (opAccess -> opStruct .)
    EQ              reduce using rule 156 (opAccess -> opStruct .)
    DIF             reduce using rule 156 (opAccess -> opStruct .)
    LTOEQ           reduce using rule 156 (opAccess -> opStruct .)
    GTOEQ           reduce using rule 156 (opAccess -> opStruct .)
    GT              reduce using rule 156 (opAccess -> opStruct .)
    LT              reduce using rule 156 (opAccess -> opStruct .)
    AND             reduce using rule 156 (opAccess -> opStruct .)
    OR              reduce using rule 156 (opAccess -> opStruct .)
    ]               reduce using rule 156 (opAccess -> opStruct .)
    ;               reduce using rule 156 (opAccess -> opStruct .)


state 190

    (154) fact -> ID saveVariable opAccess . errorOpAccess
    (159) errorOpAccess -> .

    MULT            reduce using rule 159 (errorOpAccess -> .)
    DIV             reduce using rule 159 (errorOpAccess -> .)
    RES             reduce using rule 159 (errorOpAccess -> .)
    PLUS            reduce using rule 159 (errorOpAccess -> .)
    MINUS           reduce using rule 159 (errorOpAccess -> .)
    ,               reduce using rule 159 (errorOpAccess -> .)
    PARFIN          reduce using rule 159 (errorOpAccess -> .)
    EQ              reduce using rule 159 (errorOpAccess -> .)
    DIF             reduce using rule 159 (errorOpAccess -> .)
    LTOEQ           reduce using rule 159 (errorOpAccess -> .)
    GTOEQ           reduce using rule 159 (errorOpAccess -> .)
    GT              reduce using rule 159 (errorOpAccess -> .)
    LT              reduce using rule 159 (errorOpAccess -> .)
    AND             reduce using rule 159 (errorOpAccess -> .)
    OR              reduce using rule 159 (errorOpAccess -> .)
    ]               reduce using rule 159 (errorOpAccess -> .)
    ;               reduce using rule 159 (errorOpAccess -> .)

    errorOpAccess                  shift and go to state 224

state 191

    (165) opDictionary -> . . dictIndex
    (166) dictIndex -> . FIRST
    (167) dictIndex -> . LAST

    FIRST           shift and go to state 225
    LAST            shift and go to state 226

    dictIndex                      shift and go to state 227

state 192

    (158) opAccess -> empty .

    MULT            reduce using rule 158 (opAccess -> empty .)
    DIV             reduce using rule 158 (opAccess -> empty .)
    RES             reduce using rule 158 (opAccess -> empty .)
    PLUS            reduce using rule 158 (opAccess -> empty .)
    MINUS           reduce using rule 158 (opAccess -> empty .)
    ,               reduce using rule 158 (opAccess -> empty .)
    PARFIN          reduce using rule 158 (opAccess -> empty .)
    EQ              reduce using rule 158 (opAccess -> empty .)
    DIF             reduce using rule 158 (opAccess -> empty .)
    LTOEQ           reduce using rule 158 (opAccess -> empty .)
    GTOEQ           reduce using rule 158 (opAccess -> empty .)
    GT              reduce using rule 158 (opAccess -> empty .)
    LT              reduce using rule 158 (opAccess -> empty .)
    AND             reduce using rule 158 (opAccess -> empty .)
    OR              reduce using rule 158 (opAccess -> empty .)
    ]               reduce using rule 158 (opAccess -> empty .)
    ;               reduce using rule 158 (opAccess -> empty .)


state 193

    (140) exp -> term performAddSub errorCyExp . cyExp
    (141) cyExp -> . PLUS saveOperator exp
    (142) cyExp -> . MINUS saveOperator exp
    (143) cyExp -> . empty
    (172) empty -> .

    PLUS            shift and go to state 229
    MINUS           shift and go to state 230
    ,               reduce using rule 172 (empty -> .)
    PARFIN          reduce using rule 172 (empty -> .)
    EQ              reduce using rule 172 (empty -> .)
    DIF             reduce using rule 172 (empty -> .)
    LTOEQ           reduce using rule 172 (empty -> .)
    GTOEQ           reduce using rule 172 (empty -> .)
    GT              reduce using rule 172 (empty -> .)
    LT              reduce using rule 172 (empty -> .)
    AND             reduce using rule 172 (empty -> .)
    OR              reduce using rule 172 (empty -> .)
    ]               reduce using rule 172 (empty -> .)
    ;               reduce using rule 172 (empty -> .)

    cyExp                          shift and go to state 228
    empty                          shift and go to state 231

state 194

    (29) print -> PRINT PARINI exp performPrint cyPrint . PARFIN

    PARFIN          shift and go to state 232


state 195

    (30) cyPrint -> , . fix exp performPrint cyPrint
    (35) fix -> .

    CTES            reduce using rule 35 (fix -> .)
    PARINI          reduce using rule 35 (fix -> .)
    ID              reduce using rule 35 (fix -> .)
    CTED            reduce using rule 35 (fix -> .)
    CTEF            reduce using rule 35 (fix -> .)
    TRUE            reduce using rule 35 (fix -> .)
    FALSE           reduce using rule 35 (fix -> .)

    fix                            shift and go to state 233

state 196

    (31) cyPrint -> empty .

    PARFIN          reduce using rule 31 (cyPrint -> empty .)


state 197

    (148) cyTerm -> RES . saveOperator term
    (182) saveOperator -> .

    CTES            reduce using rule 182 (saveOperator -> .)
    PARINI          reduce using rule 182 (saveOperator -> .)
    ID              reduce using rule 182 (saveOperator -> .)
    CTED            reduce using rule 182 (saveOperator -> .)
    CTEF            reduce using rule 182 (saveOperator -> .)
    TRUE            reduce using rule 182 (saveOperator -> .)
    FALSE           reduce using rule 182 (saveOperator -> .)

    saveOperator                   shift and go to state 234

state 198

    (145) term -> fact performMulDiv cyTerm .

    PLUS            reduce using rule 145 (term -> fact performMulDiv cyTerm .)
    MINUS           reduce using rule 145 (term -> fact performMulDiv cyTerm .)
    AND             reduce using rule 145 (term -> fact performMulDiv cyTerm .)
    OR              reduce using rule 145 (term -> fact performMulDiv cyTerm .)
    ,               reduce using rule 145 (term -> fact performMulDiv cyTerm .)
    PARFIN          reduce using rule 145 (term -> fact performMulDiv cyTerm .)
    ]               reduce using rule 145 (term -> fact performMulDiv cyTerm .)
    ;               reduce using rule 145 (term -> fact performMulDiv cyTerm .)
    EQ              reduce using rule 145 (term -> fact performMulDiv cyTerm .)
    DIF             reduce using rule 145 (term -> fact performMulDiv cyTerm .)
    LTOEQ           reduce using rule 145 (term -> fact performMulDiv cyTerm .)
    GTOEQ           reduce using rule 145 (term -> fact performMulDiv cyTerm .)
    GT              reduce using rule 145 (term -> fact performMulDiv cyTerm .)
    LT              reduce using rule 145 (term -> fact performMulDiv cyTerm .)


state 199

    (149) cyTerm -> empty .

    PLUS            reduce using rule 149 (cyTerm -> empty .)
    MINUS           reduce using rule 149 (cyTerm -> empty .)
    ,               reduce using rule 149 (cyTerm -> empty .)
    PARFIN          reduce using rule 149 (cyTerm -> empty .)
    EQ              reduce using rule 149 (cyTerm -> empty .)
    DIF             reduce using rule 149 (cyTerm -> empty .)
    LTOEQ           reduce using rule 149 (cyTerm -> empty .)
    GTOEQ           reduce using rule 149 (cyTerm -> empty .)
    GT              reduce using rule 149 (cyTerm -> empty .)
    LT              reduce using rule 149 (cyTerm -> empty .)
    AND             reduce using rule 149 (cyTerm -> empty .)
    OR              reduce using rule 149 (cyTerm -> empty .)
    ]               reduce using rule 149 (cyTerm -> empty .)
    ;               reduce using rule 149 (cyTerm -> empty .)


state 200

    (147) cyTerm -> DIV . saveOperator term
    (182) saveOperator -> .

    CTES            reduce using rule 182 (saveOperator -> .)
    PARINI          reduce using rule 182 (saveOperator -> .)
    ID              reduce using rule 182 (saveOperator -> .)
    CTED            reduce using rule 182 (saveOperator -> .)
    CTEF            reduce using rule 182 (saveOperator -> .)
    TRUE            reduce using rule 182 (saveOperator -> .)
    FALSE           reduce using rule 182 (saveOperator -> .)

    saveOperator                   shift and go to state 235

state 201

    (146) cyTerm -> MULT . saveOperator errorFact term
    (182) saveOperator -> .

    CTES            reduce using rule 182 (saveOperator -> .)
    PARINI          reduce using rule 182 (saveOperator -> .)
    ID              reduce using rule 182 (saveOperator -> .)
    CTED            reduce using rule 182 (saveOperator -> .)
    CTEF            reduce using rule 182 (saveOperator -> .)
    TRUE            reduce using rule 182 (saveOperator -> .)
    FALSE           reduce using rule 182 (saveOperator -> .)

    saveOperator                   shift and go to state 236

state 202

    (88) whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion . PARFIN saveFalso { body } repeatWhile

    PARFIN          shift and go to state 237


state 203

    (98) assign -> ID saveVariable errorAssign assignOptions performAssign .

    PARFIN          reduce using rule 98 (assign -> ID saveVariable errorAssign assignOptions performAssign .)
    ;               reduce using rule 98 (assign -> ID saveVariable errorAssign assignOptions performAssign .)


state 204

    (39) init -> ASGN saveOperator . errorInit initWith
    (40) errorInit -> .

    ID              reduce using rule 40 (errorInit -> .)
    CTES            reduce using rule 40 (errorInit -> .)
    PARINI          reduce using rule 40 (errorInit -> .)
    CTED            reduce using rule 40 (errorInit -> .)
    CTEF            reduce using rule 40 (errorInit -> .)
    TRUE            reduce using rule 40 (errorInit -> .)
    FALSE           reduce using rule 40 (errorInit -> .)

    errorInit                      shift and go to state 238

state 205

    (43) initDict -> ASGN PARINI . dictType : dictType PARFIN errorInitDict
    (45) dictType -> . errorDictType CTES
    (46) dictType -> . cte
    (47) dictType -> . ID
    (48) errorDictType -> .
    (168) cte -> . CTED saveConstantInt
    (169) cte -> . CTEF saveConstantFloat
    (170) cte -> . TRUE saveConstantBool
    (171) cte -> . FALSE saveConstantBool

    ID              shift and go to state 242
    CTES            reduce using rule 48 (errorDictType -> .)
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    dictType                       shift and go to state 239
    errorDictType                  shift and go to state 240
    cte                            shift and go to state 241

state 206

    (102) assignOptions -> [ expresion . ] assignMatrix init

    ]               shift and go to state 243


state 207

    (106) funcCall -> ID checkFunction PARINI opParamCall PARFIN . checkNumParams
    (107) checkNumParams -> .

    ;               reduce using rule 107 (checkNumParams -> .)
    MULT            reduce using rule 107 (checkNumParams -> .)
    DIV             reduce using rule 107 (checkNumParams -> .)
    RES             reduce using rule 107 (checkNumParams -> .)
    PLUS            reduce using rule 107 (checkNumParams -> .)
    MINUS           reduce using rule 107 (checkNumParams -> .)
    ,               reduce using rule 107 (checkNumParams -> .)
    PARFIN          reduce using rule 107 (checkNumParams -> .)
    EQ              reduce using rule 107 (checkNumParams -> .)
    DIF             reduce using rule 107 (checkNumParams -> .)
    LTOEQ           reduce using rule 107 (checkNumParams -> .)
    GTOEQ           reduce using rule 107 (checkNumParams -> .)
    GT              reduce using rule 107 (checkNumParams -> .)
    LT              reduce using rule 107 (checkNumParams -> .)
    AND             reduce using rule 107 (checkNumParams -> .)
    OR              reduce using rule 107 (checkNumParams -> .)
    ]               reduce using rule 107 (checkNumParams -> .)

    checkNumParams                 shift and go to state 244

state 208

    (126) expresion -> sExp performAndOr . cyExpresion errorExpresion
    (128) cyExpresion -> . AND saveOperator expresion
    (129) cyExpresion -> . OR saveOperator expresion
    (130) cyExpresion -> . empty
    (172) empty -> .

    AND             shift and go to state 245
    OR              shift and go to state 246
    ,               reduce using rule 172 (empty -> .)
    PARFIN          reduce using rule 172 (empty -> .)
    ]               reduce using rule 172 (empty -> .)
    ;               reduce using rule 172 (empty -> .)

    cyExpresion                    shift and go to state 247
    empty                          shift and go to state 248

state 209

    (109) opParamCall -> expresion checkParamType . cyParamCall
    (111) cyParamCall -> . , expresion checkParamType cyParamCall
    (112) cyParamCall -> . empty
    (172) empty -> .

    ,               shift and go to state 251
    PARFIN          reduce using rule 172 (empty -> .)

    cyParamCall                    shift and go to state 249
    empty                          shift and go to state 250

state 210

    (131) sExp -> exp errorOpSExp . opSExp performRelational
    (132) opSExp -> . EQ saveOperator exp
    (133) opSExp -> . DIF saveOperator exp
    (134) opSExp -> . LTOEQ saveOperator exp
    (135) opSExp -> . GTOEQ saveOperator exp
    (136) opSExp -> . GT saveOperator exp
    (137) opSExp -> . LT saveOperator exp
    (138) opSExp -> . empty
    (172) empty -> .

    EQ              shift and go to state 257
    DIF             shift and go to state 254
    LTOEQ           shift and go to state 253
    GTOEQ           shift and go to state 256
    GT              shift and go to state 252
    LT              shift and go to state 255
    AND             reduce using rule 172 (empty -> .)
    OR              reduce using rule 172 (empty -> .)
    ,               reduce using rule 172 (empty -> .)
    PARFIN          reduce using rule 172 (empty -> .)
    ]               reduce using rule 172 (empty -> .)
    ;               reduce using rule 172 (empty -> .)

    empty                          shift and go to state 258
    opSExp                         shift and go to state 259

state 211

    (92) forCycle -> errorForCycle FOR PARINI assign ; . saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign
    (90) saveReturn -> .

    CTES            reduce using rule 90 (saveReturn -> .)
    PARINI          reduce using rule 90 (saveReturn -> .)
    ID              reduce using rule 90 (saveReturn -> .)
    CTED            reduce using rule 90 (saveReturn -> .)
    CTEF            reduce using rule 90 (saveReturn -> .)
    TRUE            reduce using rule 90 (saveReturn -> .)
    FALSE           reduce using rule 90 (saveReturn -> .)

    saveReturn                     shift and go to state 260

state 212

    (119) condition -> errorCondition IF PARINI expresion PARFIN . saveFalso { body } optionalElse rellenaFalso
    (175) saveFalso -> .

    {               reduce using rule 175 (saveFalso -> .)

    saveFalso                      shift and go to state 261

state 213

    (57) function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable .

    FUNC            reduce using rule 57 (function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable .)
    MAIN            reduce using rule 57 (function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable .)


state 214

    (69) opReturns -> errorOpReturns RETURNS type . saveReturnType { opVars saveQuadruple body return
    (72) saveReturnType -> .

    {               reduce using rule 72 (saveReturnType -> .)

    saveReturnType                 shift and go to state 262

state 215

    (70) opReturns -> { opVars saveQuadruple . body
    (82) body -> . errorBody cyInstruction
    (83) body -> . empty
    (84) errorBody -> .
    (172) empty -> .

    ID              reduce using rule 84 (errorBody -> .)
    PRINT           reduce using rule 84 (errorBody -> .)
    READ            reduce using rule 84 (errorBody -> .)
    IF              reduce using rule 84 (errorBody -> .)
    FOR             reduce using rule 84 (errorBody -> .)
    WHILE           reduce using rule 84 (errorBody -> .)
    }               reduce using rule 172 (empty -> .)

    body                           shift and go to state 263
    errorBody                      shift and go to state 87
    empty                          shift and go to state 88

state 216

    (52) cyParam -> empty . saveTypeParam saveID
    (55) saveTypeParam -> .

    PARFIN          reduce using rule 55 (saveTypeParam -> .)

    saveTypeParam                  shift and go to state 264

state 217

    (51) cyParam -> errorCyParam . saveTypeParam saveID ; param
    (55) saveTypeParam -> .

    ;               reduce using rule 55 (saveTypeParam -> .)

    saveTypeParam                  shift and go to state 265

state 218

    (49) param -> saveType type errorParam ID cyTypeParam cyParam .

    PARFIN          reduce using rule 49 (param -> saveType type errorParam ID cyTypeParam cyParam .)


state 219

    (33) cyRead -> , . fix ID saveVariable performRead cyRead
    (35) fix -> .

    ID              reduce using rule 35 (fix -> .)

    fix                            shift and go to state 266

state 220

    (32) read -> READ PARINI ID saveVariable performRead cyRead . PARFIN

    PARFIN          shift and go to state 267


state 221

    (34) cyRead -> empty .

    PARFIN          reduce using rule 34 (cyRead -> empty .)


state 222

    (153) fact -> PARINI putFondo expresion PARFIN . takeFondo
    (184) takeFondo -> .

    MULT            reduce using rule 184 (takeFondo -> .)
    DIV             reduce using rule 184 (takeFondo -> .)
    RES             reduce using rule 184 (takeFondo -> .)
    PLUS            reduce using rule 184 (takeFondo -> .)
    MINUS           reduce using rule 184 (takeFondo -> .)
    ,               reduce using rule 184 (takeFondo -> .)
    PARFIN          reduce using rule 184 (takeFondo -> .)
    EQ              reduce using rule 184 (takeFondo -> .)
    DIF             reduce using rule 184 (takeFondo -> .)
    LTOEQ           reduce using rule 184 (takeFondo -> .)
    GTOEQ           reduce using rule 184 (takeFondo -> .)
    GT              reduce using rule 184 (takeFondo -> .)
    LT              reduce using rule 184 (takeFondo -> .)
    AND             reduce using rule 184 (takeFondo -> .)
    OR              reduce using rule 184 (takeFondo -> .)
    ]               reduce using rule 184 (takeFondo -> .)
    ;               reduce using rule 184 (takeFondo -> .)

    takeFondo                      shift and go to state 268

state 223

    (160) opStruct -> errorOpStruct [ . expresion ] opMatrix
    (126) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (131) sExp -> . exp errorOpSExp opSExp performRelational
    (140) exp -> . term performAddSub errorCyExp cyExp
    (145) term -> . fact performMulDiv cyTerm
    (150) fact -> . CTES saveConstantString
    (151) fact -> . cte
    (152) fact -> . funcCall
    (153) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (154) fact -> . ID saveVariable opAccess errorOpAccess
    (168) cte -> . CTED saveConstantInt
    (169) cte -> . CTEF saveConstantFloat
    (170) cte -> . TRUE saveConstantBool
    (171) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    sExp                           shift and go to state 174
    expresion                      shift and go to state 269
    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 177
    fact                           shift and go to state 146

state 224

    (154) fact -> ID saveVariable opAccess errorOpAccess .

    MULT            reduce using rule 154 (fact -> ID saveVariable opAccess errorOpAccess .)
    DIV             reduce using rule 154 (fact -> ID saveVariable opAccess errorOpAccess .)
    RES             reduce using rule 154 (fact -> ID saveVariable opAccess errorOpAccess .)
    PLUS            reduce using rule 154 (fact -> ID saveVariable opAccess errorOpAccess .)
    MINUS           reduce using rule 154 (fact -> ID saveVariable opAccess errorOpAccess .)
    EQ              reduce using rule 154 (fact -> ID saveVariable opAccess errorOpAccess .)
    DIF             reduce using rule 154 (fact -> ID saveVariable opAccess errorOpAccess .)
    LTOEQ           reduce using rule 154 (fact -> ID saveVariable opAccess errorOpAccess .)
    GTOEQ           reduce using rule 154 (fact -> ID saveVariable opAccess errorOpAccess .)
    GT              reduce using rule 154 (fact -> ID saveVariable opAccess errorOpAccess .)
    LT              reduce using rule 154 (fact -> ID saveVariable opAccess errorOpAccess .)
    AND             reduce using rule 154 (fact -> ID saveVariable opAccess errorOpAccess .)
    OR              reduce using rule 154 (fact -> ID saveVariable opAccess errorOpAccess .)
    PARFIN          reduce using rule 154 (fact -> ID saveVariable opAccess errorOpAccess .)
    ,               reduce using rule 154 (fact -> ID saveVariable opAccess errorOpAccess .)
    ]               reduce using rule 154 (fact -> ID saveVariable opAccess errorOpAccess .)
    ;               reduce using rule 154 (fact -> ID saveVariable opAccess errorOpAccess .)


state 225

    (166) dictIndex -> FIRST .

    MULT            reduce using rule 166 (dictIndex -> FIRST .)
    DIV             reduce using rule 166 (dictIndex -> FIRST .)
    RES             reduce using rule 166 (dictIndex -> FIRST .)
    PLUS            reduce using rule 166 (dictIndex -> FIRST .)
    MINUS           reduce using rule 166 (dictIndex -> FIRST .)
    ,               reduce using rule 166 (dictIndex -> FIRST .)
    PARFIN          reduce using rule 166 (dictIndex -> FIRST .)
    EQ              reduce using rule 166 (dictIndex -> FIRST .)
    DIF             reduce using rule 166 (dictIndex -> FIRST .)
    LTOEQ           reduce using rule 166 (dictIndex -> FIRST .)
    GTOEQ           reduce using rule 166 (dictIndex -> FIRST .)
    GT              reduce using rule 166 (dictIndex -> FIRST .)
    LT              reduce using rule 166 (dictIndex -> FIRST .)
    AND             reduce using rule 166 (dictIndex -> FIRST .)
    OR              reduce using rule 166 (dictIndex -> FIRST .)
    ]               reduce using rule 166 (dictIndex -> FIRST .)
    ;               reduce using rule 166 (dictIndex -> FIRST .)


state 226

    (167) dictIndex -> LAST .

    MULT            reduce using rule 167 (dictIndex -> LAST .)
    DIV             reduce using rule 167 (dictIndex -> LAST .)
    RES             reduce using rule 167 (dictIndex -> LAST .)
    PLUS            reduce using rule 167 (dictIndex -> LAST .)
    MINUS           reduce using rule 167 (dictIndex -> LAST .)
    ,               reduce using rule 167 (dictIndex -> LAST .)
    PARFIN          reduce using rule 167 (dictIndex -> LAST .)
    EQ              reduce using rule 167 (dictIndex -> LAST .)
    DIF             reduce using rule 167 (dictIndex -> LAST .)
    LTOEQ           reduce using rule 167 (dictIndex -> LAST .)
    GTOEQ           reduce using rule 167 (dictIndex -> LAST .)
    GT              reduce using rule 167 (dictIndex -> LAST .)
    LT              reduce using rule 167 (dictIndex -> LAST .)
    AND             reduce using rule 167 (dictIndex -> LAST .)
    OR              reduce using rule 167 (dictIndex -> LAST .)
    ]               reduce using rule 167 (dictIndex -> LAST .)
    ;               reduce using rule 167 (dictIndex -> LAST .)


state 227

    (165) opDictionary -> . dictIndex .

    MULT            reduce using rule 165 (opDictionary -> . dictIndex .)
    DIV             reduce using rule 165 (opDictionary -> . dictIndex .)
    RES             reduce using rule 165 (opDictionary -> . dictIndex .)
    PLUS            reduce using rule 165 (opDictionary -> . dictIndex .)
    MINUS           reduce using rule 165 (opDictionary -> . dictIndex .)
    ,               reduce using rule 165 (opDictionary -> . dictIndex .)
    PARFIN          reduce using rule 165 (opDictionary -> . dictIndex .)
    EQ              reduce using rule 165 (opDictionary -> . dictIndex .)
    DIF             reduce using rule 165 (opDictionary -> . dictIndex .)
    LTOEQ           reduce using rule 165 (opDictionary -> . dictIndex .)
    GTOEQ           reduce using rule 165 (opDictionary -> . dictIndex .)
    GT              reduce using rule 165 (opDictionary -> . dictIndex .)
    LT              reduce using rule 165 (opDictionary -> . dictIndex .)
    AND             reduce using rule 165 (opDictionary -> . dictIndex .)
    OR              reduce using rule 165 (opDictionary -> . dictIndex .)
    ]               reduce using rule 165 (opDictionary -> . dictIndex .)
    ;               reduce using rule 165 (opDictionary -> . dictIndex .)


state 228

    (140) exp -> term performAddSub errorCyExp cyExp .

    EQ              reduce using rule 140 (exp -> term performAddSub errorCyExp cyExp .)
    DIF             reduce using rule 140 (exp -> term performAddSub errorCyExp cyExp .)
    LTOEQ           reduce using rule 140 (exp -> term performAddSub errorCyExp cyExp .)
    GTOEQ           reduce using rule 140 (exp -> term performAddSub errorCyExp cyExp .)
    GT              reduce using rule 140 (exp -> term performAddSub errorCyExp cyExp .)
    LT              reduce using rule 140 (exp -> term performAddSub errorCyExp cyExp .)
    AND             reduce using rule 140 (exp -> term performAddSub errorCyExp cyExp .)
    OR              reduce using rule 140 (exp -> term performAddSub errorCyExp cyExp .)
    ,               reduce using rule 140 (exp -> term performAddSub errorCyExp cyExp .)
    PARFIN          reduce using rule 140 (exp -> term performAddSub errorCyExp cyExp .)
    ]               reduce using rule 140 (exp -> term performAddSub errorCyExp cyExp .)
    ;               reduce using rule 140 (exp -> term performAddSub errorCyExp cyExp .)


state 229

    (141) cyExp -> PLUS . saveOperator exp
    (182) saveOperator -> .

    CTES            reduce using rule 182 (saveOperator -> .)
    PARINI          reduce using rule 182 (saveOperator -> .)
    ID              reduce using rule 182 (saveOperator -> .)
    CTED            reduce using rule 182 (saveOperator -> .)
    CTEF            reduce using rule 182 (saveOperator -> .)
    TRUE            reduce using rule 182 (saveOperator -> .)
    FALSE           reduce using rule 182 (saveOperator -> .)

    saveOperator                   shift and go to state 270

state 230

    (142) cyExp -> MINUS . saveOperator exp
    (182) saveOperator -> .

    CTES            reduce using rule 182 (saveOperator -> .)
    PARINI          reduce using rule 182 (saveOperator -> .)
    ID              reduce using rule 182 (saveOperator -> .)
    CTED            reduce using rule 182 (saveOperator -> .)
    CTEF            reduce using rule 182 (saveOperator -> .)
    TRUE            reduce using rule 182 (saveOperator -> .)
    FALSE           reduce using rule 182 (saveOperator -> .)

    saveOperator                   shift and go to state 271

state 231

    (143) cyExp -> empty .

    ,               reduce using rule 143 (cyExp -> empty .)
    PARFIN          reduce using rule 143 (cyExp -> empty .)
    EQ              reduce using rule 143 (cyExp -> empty .)
    DIF             reduce using rule 143 (cyExp -> empty .)
    LTOEQ           reduce using rule 143 (cyExp -> empty .)
    GTOEQ           reduce using rule 143 (cyExp -> empty .)
    GT              reduce using rule 143 (cyExp -> empty .)
    LT              reduce using rule 143 (cyExp -> empty .)
    AND             reduce using rule 143 (cyExp -> empty .)
    OR              reduce using rule 143 (cyExp -> empty .)
    ]               reduce using rule 143 (cyExp -> empty .)
    ;               reduce using rule 143 (cyExp -> empty .)


state 232

    (29) print -> PRINT PARINI exp performPrint cyPrint PARFIN .

    ;               reduce using rule 29 (print -> PRINT PARINI exp performPrint cyPrint PARFIN .)


state 233

    (30) cyPrint -> , fix . exp performPrint cyPrint
    (140) exp -> . term performAddSub errorCyExp cyExp
    (145) term -> . fact performMulDiv cyTerm
    (150) fact -> . CTES saveConstantString
    (151) fact -> . cte
    (152) fact -> . funcCall
    (153) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (154) fact -> . ID saveVariable opAccess errorOpAccess
    (168) cte -> . CTED saveConstantInt
    (169) cte -> . CTEF saveConstantFloat
    (170) cte -> . TRUE saveConstantBool
    (171) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 272
    fact                           shift and go to state 146

state 234

    (148) cyTerm -> RES saveOperator . term
    (145) term -> . fact performMulDiv cyTerm
    (150) fact -> . CTES saveConstantString
    (151) fact -> . cte
    (152) fact -> . funcCall
    (153) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (154) fact -> . ID saveVariable opAccess errorOpAccess
    (168) cte -> . CTED saveConstantInt
    (169) cte -> . CTEF saveConstantFloat
    (170) cte -> . TRUE saveConstantBool
    (171) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    term                           shift and go to state 273
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    fact                           shift and go to state 146

state 235

    (147) cyTerm -> DIV saveOperator . term
    (145) term -> . fact performMulDiv cyTerm
    (150) fact -> . CTES saveConstantString
    (151) fact -> . cte
    (152) fact -> . funcCall
    (153) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (154) fact -> . ID saveVariable opAccess errorOpAccess
    (168) cte -> . CTED saveConstantInt
    (169) cte -> . CTEF saveConstantFloat
    (170) cte -> . TRUE saveConstantBool
    (171) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    term                           shift and go to state 274
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    fact                           shift and go to state 146

state 236

    (146) cyTerm -> MULT saveOperator . errorFact term
    (155) errorFact -> .

    CTES            reduce using rule 155 (errorFact -> .)
    PARINI          reduce using rule 155 (errorFact -> .)
    ID              reduce using rule 155 (errorFact -> .)
    CTED            reduce using rule 155 (errorFact -> .)
    CTEF            reduce using rule 155 (errorFact -> .)
    TRUE            reduce using rule 155 (errorFact -> .)
    FALSE           reduce using rule 155 (errorFact -> .)

    errorFact                      shift and go to state 275

state 237

    (88) whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN . saveFalso { body } repeatWhile
    (175) saveFalso -> .

    {               reduce using rule 175 (saveFalso -> .)

    saveFalso                      shift and go to state 276

state 238

    (39) init -> ASGN saveOperator errorInit . initWith
    (41) initWith -> . expresion
    (42) initWith -> . funcCall
    (126) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams
    (131) sExp -> . exp errorOpSExp opSExp performRelational
    (140) exp -> . term performAddSub errorCyExp cyExp
    (145) term -> . fact performMulDiv cyTerm
    (150) fact -> . CTES saveConstantString
    (151) fact -> . cte
    (152) fact -> . funcCall
    (153) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (154) fact -> . ID saveVariable opAccess errorOpAccess
    (168) cte -> . CTED saveConstantInt
    (169) cte -> . CTEF saveConstantFloat
    (170) cte -> . TRUE saveConstantBool
    (171) cte -> . FALSE saveConstantBool

    ID              shift and go to state 278
    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    initWith                       shift and go to state 277
    sExp                           shift and go to state 174
    expresion                      shift and go to state 279
    term                           shift and go to state 140
    funcCall                       shift and go to state 280
    cte                            shift and go to state 143
    exp                            shift and go to state 177
    fact                           shift and go to state 146

state 239

    (43) initDict -> ASGN PARINI dictType . : dictType PARFIN errorInitDict

    :               shift and go to state 281


state 240

    (45) dictType -> errorDictType . CTES

    CTES            shift and go to state 282


state 241

    (46) dictType -> cte .

    :               reduce using rule 46 (dictType -> cte .)
    PARFIN          reduce using rule 46 (dictType -> cte .)


state 242

    (47) dictType -> ID .

    :               reduce using rule 47 (dictType -> ID .)
    PARFIN          reduce using rule 47 (dictType -> ID .)


state 243

    (102) assignOptions -> [ expresion ] . assignMatrix init
    (103) assignMatrix -> . [ expresion ] errorAssignMatrix
    (104) assignMatrix -> . empty
    (172) empty -> .

    [               shift and go to state 284
    ASGN            reduce using rule 172 (empty -> .)

    assignMatrix                   shift and go to state 283
    empty                          shift and go to state 285

state 244

    (106) funcCall -> ID checkFunction PARINI opParamCall PARFIN checkNumParams .

    MULT            reduce using rule 106 (funcCall -> ID checkFunction PARINI opParamCall PARFIN checkNumParams .)
    DIV             reduce using rule 106 (funcCall -> ID checkFunction PARINI opParamCall PARFIN checkNumParams .)
    RES             reduce using rule 106 (funcCall -> ID checkFunction PARINI opParamCall PARFIN checkNumParams .)
    PLUS            reduce using rule 106 (funcCall -> ID checkFunction PARINI opParamCall PARFIN checkNumParams .)
    MINUS           reduce using rule 106 (funcCall -> ID checkFunction PARINI opParamCall PARFIN checkNumParams .)
    AND             reduce using rule 106 (funcCall -> ID checkFunction PARINI opParamCall PARFIN checkNumParams .)
    OR              reduce using rule 106 (funcCall -> ID checkFunction PARINI opParamCall PARFIN checkNumParams .)
    ,               reduce using rule 106 (funcCall -> ID checkFunction PARINI opParamCall PARFIN checkNumParams .)
    PARFIN          reduce using rule 106 (funcCall -> ID checkFunction PARINI opParamCall PARFIN checkNumParams .)
    ]               reduce using rule 106 (funcCall -> ID checkFunction PARINI opParamCall PARFIN checkNumParams .)
    ;               reduce using rule 106 (funcCall -> ID checkFunction PARINI opParamCall PARFIN checkNumParams .)
    EQ              reduce using rule 106 (funcCall -> ID checkFunction PARINI opParamCall PARFIN checkNumParams .)
    DIF             reduce using rule 106 (funcCall -> ID checkFunction PARINI opParamCall PARFIN checkNumParams .)
    LTOEQ           reduce using rule 106 (funcCall -> ID checkFunction PARINI opParamCall PARFIN checkNumParams .)
    GTOEQ           reduce using rule 106 (funcCall -> ID checkFunction PARINI opParamCall PARFIN checkNumParams .)
    GT              reduce using rule 106 (funcCall -> ID checkFunction PARINI opParamCall PARFIN checkNumParams .)
    LT              reduce using rule 106 (funcCall -> ID checkFunction PARINI opParamCall PARFIN checkNumParams .)


state 245

    (128) cyExpresion -> AND . saveOperator expresion
    (182) saveOperator -> .

    CTES            reduce using rule 182 (saveOperator -> .)
    PARINI          reduce using rule 182 (saveOperator -> .)
    ID              reduce using rule 182 (saveOperator -> .)
    CTED            reduce using rule 182 (saveOperator -> .)
    CTEF            reduce using rule 182 (saveOperator -> .)
    TRUE            reduce using rule 182 (saveOperator -> .)
    FALSE           reduce using rule 182 (saveOperator -> .)

    saveOperator                   shift and go to state 286

state 246

    (129) cyExpresion -> OR . saveOperator expresion
    (182) saveOperator -> .

    CTES            reduce using rule 182 (saveOperator -> .)
    PARINI          reduce using rule 182 (saveOperator -> .)
    ID              reduce using rule 182 (saveOperator -> .)
    CTED            reduce using rule 182 (saveOperator -> .)
    CTEF            reduce using rule 182 (saveOperator -> .)
    TRUE            reduce using rule 182 (saveOperator -> .)
    FALSE           reduce using rule 182 (saveOperator -> .)

    saveOperator                   shift and go to state 287

state 247

    (126) expresion -> sExp performAndOr cyExpresion . errorExpresion
    (127) errorExpresion -> .

    ,               reduce using rule 127 (errorExpresion -> .)
    PARFIN          reduce using rule 127 (errorExpresion -> .)
    ]               reduce using rule 127 (errorExpresion -> .)
    ;               reduce using rule 127 (errorExpresion -> .)

    errorExpresion                 shift and go to state 288

state 248

    (130) cyExpresion -> empty .

    ,               reduce using rule 130 (cyExpresion -> empty .)
    PARFIN          reduce using rule 130 (cyExpresion -> empty .)
    ]               reduce using rule 130 (cyExpresion -> empty .)
    ;               reduce using rule 130 (cyExpresion -> empty .)


state 249

    (109) opParamCall -> expresion checkParamType cyParamCall .

    PARFIN          reduce using rule 109 (opParamCall -> expresion checkParamType cyParamCall .)


state 250

    (112) cyParamCall -> empty .

    PARFIN          reduce using rule 112 (cyParamCall -> empty .)


state 251

    (111) cyParamCall -> , . expresion checkParamType cyParamCall
    (126) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (131) sExp -> . exp errorOpSExp opSExp performRelational
    (140) exp -> . term performAddSub errorCyExp cyExp
    (145) term -> . fact performMulDiv cyTerm
    (150) fact -> . CTES saveConstantString
    (151) fact -> . cte
    (152) fact -> . funcCall
    (153) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (154) fact -> . ID saveVariable opAccess errorOpAccess
    (168) cte -> . CTED saveConstantInt
    (169) cte -> . CTEF saveConstantFloat
    (170) cte -> . TRUE saveConstantBool
    (171) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    sExp                           shift and go to state 174
    expresion                      shift and go to state 289
    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 177
    fact                           shift and go to state 146

state 252

    (136) opSExp -> GT . saveOperator exp
    (182) saveOperator -> .

    CTES            reduce using rule 182 (saveOperator -> .)
    PARINI          reduce using rule 182 (saveOperator -> .)
    ID              reduce using rule 182 (saveOperator -> .)
    CTED            reduce using rule 182 (saveOperator -> .)
    CTEF            reduce using rule 182 (saveOperator -> .)
    TRUE            reduce using rule 182 (saveOperator -> .)
    FALSE           reduce using rule 182 (saveOperator -> .)

    saveOperator                   shift and go to state 290

state 253

    (134) opSExp -> LTOEQ . saveOperator exp
    (182) saveOperator -> .

    CTES            reduce using rule 182 (saveOperator -> .)
    PARINI          reduce using rule 182 (saveOperator -> .)
    ID              reduce using rule 182 (saveOperator -> .)
    CTED            reduce using rule 182 (saveOperator -> .)
    CTEF            reduce using rule 182 (saveOperator -> .)
    TRUE            reduce using rule 182 (saveOperator -> .)
    FALSE           reduce using rule 182 (saveOperator -> .)

    saveOperator                   shift and go to state 291

state 254

    (133) opSExp -> DIF . saveOperator exp
    (182) saveOperator -> .

    CTES            reduce using rule 182 (saveOperator -> .)
    PARINI          reduce using rule 182 (saveOperator -> .)
    ID              reduce using rule 182 (saveOperator -> .)
    CTED            reduce using rule 182 (saveOperator -> .)
    CTEF            reduce using rule 182 (saveOperator -> .)
    TRUE            reduce using rule 182 (saveOperator -> .)
    FALSE           reduce using rule 182 (saveOperator -> .)

    saveOperator                   shift and go to state 292

state 255

    (137) opSExp -> LT . saveOperator exp
    (182) saveOperator -> .

    CTES            reduce using rule 182 (saveOperator -> .)
    PARINI          reduce using rule 182 (saveOperator -> .)
    ID              reduce using rule 182 (saveOperator -> .)
    CTED            reduce using rule 182 (saveOperator -> .)
    CTEF            reduce using rule 182 (saveOperator -> .)
    TRUE            reduce using rule 182 (saveOperator -> .)
    FALSE           reduce using rule 182 (saveOperator -> .)

    saveOperator                   shift and go to state 293

state 256

    (135) opSExp -> GTOEQ . saveOperator exp
    (182) saveOperator -> .

    CTES            reduce using rule 182 (saveOperator -> .)
    PARINI          reduce using rule 182 (saveOperator -> .)
    ID              reduce using rule 182 (saveOperator -> .)
    CTED            reduce using rule 182 (saveOperator -> .)
    CTEF            reduce using rule 182 (saveOperator -> .)
    TRUE            reduce using rule 182 (saveOperator -> .)
    FALSE           reduce using rule 182 (saveOperator -> .)

    saveOperator                   shift and go to state 294

state 257

    (132) opSExp -> EQ . saveOperator exp
    (182) saveOperator -> .

    CTES            reduce using rule 182 (saveOperator -> .)
    PARINI          reduce using rule 182 (saveOperator -> .)
    ID              reduce using rule 182 (saveOperator -> .)
    CTED            reduce using rule 182 (saveOperator -> .)
    CTEF            reduce using rule 182 (saveOperator -> .)
    TRUE            reduce using rule 182 (saveOperator -> .)
    FALSE           reduce using rule 182 (saveOperator -> .)

    saveOperator                   shift and go to state 295

state 258

    (138) opSExp -> empty .

    AND             reduce using rule 138 (opSExp -> empty .)
    OR              reduce using rule 138 (opSExp -> empty .)
    ,               reduce using rule 138 (opSExp -> empty .)
    PARFIN          reduce using rule 138 (opSExp -> empty .)
    ]               reduce using rule 138 (opSExp -> empty .)
    ;               reduce using rule 138 (opSExp -> empty .)


state 259

    (131) sExp -> exp errorOpSExp opSExp . performRelational
    (188) performRelational -> .

    AND             reduce using rule 188 (performRelational -> .)
    OR              reduce using rule 188 (performRelational -> .)
    ,               reduce using rule 188 (performRelational -> .)
    PARFIN          reduce using rule 188 (performRelational -> .)
    ]               reduce using rule 188 (performRelational -> .)
    ;               reduce using rule 188 (performRelational -> .)

    performRelational              shift and go to state 296

state 260

    (92) forCycle -> errorForCycle FOR PARINI assign ; saveReturn . expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign
    (126) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (131) sExp -> . exp errorOpSExp opSExp performRelational
    (140) exp -> . term performAddSub errorCyExp cyExp
    (145) term -> . fact performMulDiv cyTerm
    (150) fact -> . CTES saveConstantString
    (151) fact -> . cte
    (152) fact -> . funcCall
    (153) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (154) fact -> . ID saveVariable opAccess errorOpAccess
    (168) cte -> . CTED saveConstantInt
    (169) cte -> . CTEF saveConstantFloat
    (170) cte -> . TRUE saveConstantBool
    (171) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    sExp                           shift and go to state 174
    expresion                      shift and go to state 297
    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    fact                           shift and go to state 146
    exp                            shift and go to state 177

state 261

    (119) condition -> errorCondition IF PARINI expresion PARFIN saveFalso . { body } optionalElse rellenaFalso

    {               shift and go to state 298


state 262

    (69) opReturns -> errorOpReturns RETURNS type saveReturnType . { opVars saveQuadruple body return

    {               shift and go to state 299


state 263

    (70) opReturns -> { opVars saveQuadruple body .

    }               reduce using rule 70 (opReturns -> { opVars saveQuadruple body .)


state 264

    (52) cyParam -> empty saveTypeParam . saveID
    (11) saveID -> .

    PARFIN          reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 300

state 265

    (51) cyParam -> errorCyParam saveTypeParam . saveID ; param
    (11) saveID -> .

    ;               reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 301

state 266

    (33) cyRead -> , fix . ID saveVariable performRead cyRead

    ID              shift and go to state 302


state 267

    (32) read -> READ PARINI ID saveVariable performRead cyRead PARFIN .

    ;               reduce using rule 32 (read -> READ PARINI ID saveVariable performRead cyRead PARFIN .)


state 268

    (153) fact -> PARINI putFondo expresion PARFIN takeFondo .

    MULT            reduce using rule 153 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    DIV             reduce using rule 153 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    RES             reduce using rule 153 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    PLUS            reduce using rule 153 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    MINUS           reduce using rule 153 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    EQ              reduce using rule 153 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    DIF             reduce using rule 153 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    LTOEQ           reduce using rule 153 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    GTOEQ           reduce using rule 153 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    GT              reduce using rule 153 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    LT              reduce using rule 153 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    AND             reduce using rule 153 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    OR              reduce using rule 153 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    PARFIN          reduce using rule 153 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    ,               reduce using rule 153 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    ]               reduce using rule 153 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    ;               reduce using rule 153 (fact -> PARINI putFondo expresion PARFIN takeFondo .)


state 269

    (160) opStruct -> errorOpStruct [ expresion . ] opMatrix

    ]               shift and go to state 303


state 270

    (141) cyExp -> PLUS saveOperator . exp
    (140) exp -> . term performAddSub errorCyExp cyExp
    (145) term -> . fact performMulDiv cyTerm
    (150) fact -> . CTES saveConstantString
    (151) fact -> . cte
    (152) fact -> . funcCall
    (153) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (154) fact -> . ID saveVariable opAccess errorOpAccess
    (168) cte -> . CTED saveConstantInt
    (169) cte -> . CTEF saveConstantFloat
    (170) cte -> . TRUE saveConstantBool
    (171) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 304
    fact                           shift and go to state 146

state 271

    (142) cyExp -> MINUS saveOperator . exp
    (140) exp -> . term performAddSub errorCyExp cyExp
    (145) term -> . fact performMulDiv cyTerm
    (150) fact -> . CTES saveConstantString
    (151) fact -> . cte
    (152) fact -> . funcCall
    (153) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (154) fact -> . ID saveVariable opAccess errorOpAccess
    (168) cte -> . CTED saveConstantInt
    (169) cte -> . CTEF saveConstantFloat
    (170) cte -> . TRUE saveConstantBool
    (171) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 305
    fact                           shift and go to state 146

state 272

    (30) cyPrint -> , fix exp . performPrint cyPrint
    (190) performPrint -> .

    ,               reduce using rule 190 (performPrint -> .)
    PARFIN          reduce using rule 190 (performPrint -> .)

    performPrint                   shift and go to state 306

state 273

    (148) cyTerm -> RES saveOperator term .

    PLUS            reduce using rule 148 (cyTerm -> RES saveOperator term .)
    MINUS           reduce using rule 148 (cyTerm -> RES saveOperator term .)
    ,               reduce using rule 148 (cyTerm -> RES saveOperator term .)
    PARFIN          reduce using rule 148 (cyTerm -> RES saveOperator term .)
    EQ              reduce using rule 148 (cyTerm -> RES saveOperator term .)
    DIF             reduce using rule 148 (cyTerm -> RES saveOperator term .)
    LTOEQ           reduce using rule 148 (cyTerm -> RES saveOperator term .)
    GTOEQ           reduce using rule 148 (cyTerm -> RES saveOperator term .)
    GT              reduce using rule 148 (cyTerm -> RES saveOperator term .)
    LT              reduce using rule 148 (cyTerm -> RES saveOperator term .)
    AND             reduce using rule 148 (cyTerm -> RES saveOperator term .)
    OR              reduce using rule 148 (cyTerm -> RES saveOperator term .)
    ]               reduce using rule 148 (cyTerm -> RES saveOperator term .)
    ;               reduce using rule 148 (cyTerm -> RES saveOperator term .)


state 274

    (147) cyTerm -> DIV saveOperator term .

    PLUS            reduce using rule 147 (cyTerm -> DIV saveOperator term .)
    MINUS           reduce using rule 147 (cyTerm -> DIV saveOperator term .)
    ,               reduce using rule 147 (cyTerm -> DIV saveOperator term .)
    PARFIN          reduce using rule 147 (cyTerm -> DIV saveOperator term .)
    EQ              reduce using rule 147 (cyTerm -> DIV saveOperator term .)
    DIF             reduce using rule 147 (cyTerm -> DIV saveOperator term .)
    LTOEQ           reduce using rule 147 (cyTerm -> DIV saveOperator term .)
    GTOEQ           reduce using rule 147 (cyTerm -> DIV saveOperator term .)
    GT              reduce using rule 147 (cyTerm -> DIV saveOperator term .)
    LT              reduce using rule 147 (cyTerm -> DIV saveOperator term .)
    AND             reduce using rule 147 (cyTerm -> DIV saveOperator term .)
    OR              reduce using rule 147 (cyTerm -> DIV saveOperator term .)
    ]               reduce using rule 147 (cyTerm -> DIV saveOperator term .)
    ;               reduce using rule 147 (cyTerm -> DIV saveOperator term .)


state 275

    (146) cyTerm -> MULT saveOperator errorFact . term
    (145) term -> . fact performMulDiv cyTerm
    (150) fact -> . CTES saveConstantString
    (151) fact -> . cte
    (152) fact -> . funcCall
    (153) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (154) fact -> . ID saveVariable opAccess errorOpAccess
    (168) cte -> . CTED saveConstantInt
    (169) cte -> . CTEF saveConstantFloat
    (170) cte -> . TRUE saveConstantBool
    (171) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    term                           shift and go to state 307
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    fact                           shift and go to state 146

state 276

    (88) whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso . { body } repeatWhile

    {               shift and go to state 308


state 277

    (39) init -> ASGN saveOperator errorInit initWith .

    ;               reduce using rule 39 (init -> ASGN saveOperator errorInit initWith .)
    PARFIN          reduce using rule 39 (init -> ASGN saveOperator errorInit initWith .)


state 278

    (106) funcCall -> ID . checkFunction PARINI opParamCall PARFIN checkNumParams
    (154) fact -> ID . saveVariable opAccess errorOpAccess
    (108) checkFunction -> .
    (181) saveVariable -> .

    PARINI          reduce using rule 108 (checkFunction -> .)
    .               reduce using rule 181 (saveVariable -> .)
    [               reduce using rule 181 (saveVariable -> .)
    MULT            reduce using rule 181 (saveVariable -> .)
    DIV             reduce using rule 181 (saveVariable -> .)
    RES             reduce using rule 181 (saveVariable -> .)
    PLUS            reduce using rule 181 (saveVariable -> .)
    MINUS           reduce using rule 181 (saveVariable -> .)
    EQ              reduce using rule 181 (saveVariable -> .)
    DIF             reduce using rule 181 (saveVariable -> .)
    LTOEQ           reduce using rule 181 (saveVariable -> .)
    GTOEQ           reduce using rule 181 (saveVariable -> .)
    GT              reduce using rule 181 (saveVariable -> .)
    LT              reduce using rule 181 (saveVariable -> .)
    AND             reduce using rule 181 (saveVariable -> .)
    OR              reduce using rule 181 (saveVariable -> .)
    ;               reduce using rule 181 (saveVariable -> .)
    PARFIN          reduce using rule 181 (saveVariable -> .)

    saveVariable                   shift and go to state 160
    checkFunction                  shift and go to state 126

state 279

    (41) initWith -> expresion .

    ;               reduce using rule 41 (initWith -> expresion .)
    PARFIN          reduce using rule 41 (initWith -> expresion .)


state 280

    (42) initWith -> funcCall .
    (152) fact -> funcCall .

  ! reduce/reduce conflict for ; resolved using rule 42 (initWith -> funcCall .)
  ! reduce/reduce conflict for PARFIN resolved using rule 42 (initWith -> funcCall .)
    ;               reduce using rule 42 (initWith -> funcCall .)
    PARFIN          reduce using rule 42 (initWith -> funcCall .)
    MULT            reduce using rule 152 (fact -> funcCall .)
    DIV             reduce using rule 152 (fact -> funcCall .)
    RES             reduce using rule 152 (fact -> funcCall .)
    PLUS            reduce using rule 152 (fact -> funcCall .)
    MINUS           reduce using rule 152 (fact -> funcCall .)
    EQ              reduce using rule 152 (fact -> funcCall .)
    DIF             reduce using rule 152 (fact -> funcCall .)
    LTOEQ           reduce using rule 152 (fact -> funcCall .)
    GTOEQ           reduce using rule 152 (fact -> funcCall .)
    GT              reduce using rule 152 (fact -> funcCall .)
    LT              reduce using rule 152 (fact -> funcCall .)
    AND             reduce using rule 152 (fact -> funcCall .)
    OR              reduce using rule 152 (fact -> funcCall .)

  ! ;               [ reduce using rule 152 (fact -> funcCall .) ]
  ! PARFIN          [ reduce using rule 152 (fact -> funcCall .) ]


state 281

    (43) initDict -> ASGN PARINI dictType : . dictType PARFIN errorInitDict
    (45) dictType -> . errorDictType CTES
    (46) dictType -> . cte
    (47) dictType -> . ID
    (48) errorDictType -> .
    (168) cte -> . CTED saveConstantInt
    (169) cte -> . CTEF saveConstantFloat
    (170) cte -> . TRUE saveConstantBool
    (171) cte -> . FALSE saveConstantBool

    ID              shift and go to state 242
    CTES            reduce using rule 48 (errorDictType -> .)
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    dictType                       shift and go to state 309
    errorDictType                  shift and go to state 240
    cte                            shift and go to state 241

state 282

    (45) dictType -> errorDictType CTES .

    :               reduce using rule 45 (dictType -> errorDictType CTES .)
    PARFIN          reduce using rule 45 (dictType -> errorDictType CTES .)


state 283

    (102) assignOptions -> [ expresion ] assignMatrix . init
    (39) init -> . ASGN saveOperator errorInit initWith

    ASGN            shift and go to state 310

    init                           shift and go to state 311

state 284

    (103) assignMatrix -> [ . expresion ] errorAssignMatrix
    (126) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (131) sExp -> . exp errorOpSExp opSExp performRelational
    (140) exp -> . term performAddSub errorCyExp cyExp
    (145) term -> . fact performMulDiv cyTerm
    (150) fact -> . CTES saveConstantString
    (151) fact -> . cte
    (152) fact -> . funcCall
    (153) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (154) fact -> . ID saveVariable opAccess errorOpAccess
    (168) cte -> . CTED saveConstantInt
    (169) cte -> . CTEF saveConstantFloat
    (170) cte -> . TRUE saveConstantBool
    (171) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    sExp                           shift and go to state 174
    expresion                      shift and go to state 312
    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 177
    fact                           shift and go to state 146

state 285

    (104) assignMatrix -> empty .

    ASGN            reduce using rule 104 (assignMatrix -> empty .)


state 286

    (128) cyExpresion -> AND saveOperator . expresion
    (126) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (131) sExp -> . exp errorOpSExp opSExp performRelational
    (140) exp -> . term performAddSub errorCyExp cyExp
    (145) term -> . fact performMulDiv cyTerm
    (150) fact -> . CTES saveConstantString
    (151) fact -> . cte
    (152) fact -> . funcCall
    (153) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (154) fact -> . ID saveVariable opAccess errorOpAccess
    (168) cte -> . CTED saveConstantInt
    (169) cte -> . CTEF saveConstantFloat
    (170) cte -> . TRUE saveConstantBool
    (171) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    sExp                           shift and go to state 174
    expresion                      shift and go to state 313
    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 177
    fact                           shift and go to state 146

state 287

    (129) cyExpresion -> OR saveOperator . expresion
    (126) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (131) sExp -> . exp errorOpSExp opSExp performRelational
    (140) exp -> . term performAddSub errorCyExp cyExp
    (145) term -> . fact performMulDiv cyTerm
    (150) fact -> . CTES saveConstantString
    (151) fact -> . cte
    (152) fact -> . funcCall
    (153) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (154) fact -> . ID saveVariable opAccess errorOpAccess
    (168) cte -> . CTED saveConstantInt
    (169) cte -> . CTEF saveConstantFloat
    (170) cte -> . TRUE saveConstantBool
    (171) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    sExp                           shift and go to state 174
    expresion                      shift and go to state 314
    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 177
    fact                           shift and go to state 146

state 288

    (126) expresion -> sExp performAndOr cyExpresion errorExpresion .

    ,               reduce using rule 126 (expresion -> sExp performAndOr cyExpresion errorExpresion .)
    PARFIN          reduce using rule 126 (expresion -> sExp performAndOr cyExpresion errorExpresion .)
    ]               reduce using rule 126 (expresion -> sExp performAndOr cyExpresion errorExpresion .)
    ;               reduce using rule 126 (expresion -> sExp performAndOr cyExpresion errorExpresion .)


state 289

    (111) cyParamCall -> , expresion . checkParamType cyParamCall
    (113) checkParamType -> .

    ,               reduce using rule 113 (checkParamType -> .)
    PARFIN          reduce using rule 113 (checkParamType -> .)

    checkParamType                 shift and go to state 315

state 290

    (136) opSExp -> GT saveOperator . exp
    (140) exp -> . term performAddSub errorCyExp cyExp
    (145) term -> . fact performMulDiv cyTerm
    (150) fact -> . CTES saveConstantString
    (151) fact -> . cte
    (152) fact -> . funcCall
    (153) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (154) fact -> . ID saveVariable opAccess errorOpAccess
    (168) cte -> . CTED saveConstantInt
    (169) cte -> . CTEF saveConstantFloat
    (170) cte -> . TRUE saveConstantBool
    (171) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 316
    fact                           shift and go to state 146

state 291

    (134) opSExp -> LTOEQ saveOperator . exp
    (140) exp -> . term performAddSub errorCyExp cyExp
    (145) term -> . fact performMulDiv cyTerm
    (150) fact -> . CTES saveConstantString
    (151) fact -> . cte
    (152) fact -> . funcCall
    (153) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (154) fact -> . ID saveVariable opAccess errorOpAccess
    (168) cte -> . CTED saveConstantInt
    (169) cte -> . CTEF saveConstantFloat
    (170) cte -> . TRUE saveConstantBool
    (171) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 317
    fact                           shift and go to state 146

state 292

    (133) opSExp -> DIF saveOperator . exp
    (140) exp -> . term performAddSub errorCyExp cyExp
    (145) term -> . fact performMulDiv cyTerm
    (150) fact -> . CTES saveConstantString
    (151) fact -> . cte
    (152) fact -> . funcCall
    (153) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (154) fact -> . ID saveVariable opAccess errorOpAccess
    (168) cte -> . CTED saveConstantInt
    (169) cte -> . CTEF saveConstantFloat
    (170) cte -> . TRUE saveConstantBool
    (171) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 318
    fact                           shift and go to state 146

state 293

    (137) opSExp -> LT saveOperator . exp
    (140) exp -> . term performAddSub errorCyExp cyExp
    (145) term -> . fact performMulDiv cyTerm
    (150) fact -> . CTES saveConstantString
    (151) fact -> . cte
    (152) fact -> . funcCall
    (153) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (154) fact -> . ID saveVariable opAccess errorOpAccess
    (168) cte -> . CTED saveConstantInt
    (169) cte -> . CTEF saveConstantFloat
    (170) cte -> . TRUE saveConstantBool
    (171) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 319
    fact                           shift and go to state 146

state 294

    (135) opSExp -> GTOEQ saveOperator . exp
    (140) exp -> . term performAddSub errorCyExp cyExp
    (145) term -> . fact performMulDiv cyTerm
    (150) fact -> . CTES saveConstantString
    (151) fact -> . cte
    (152) fact -> . funcCall
    (153) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (154) fact -> . ID saveVariable opAccess errorOpAccess
    (168) cte -> . CTED saveConstantInt
    (169) cte -> . CTEF saveConstantFloat
    (170) cte -> . TRUE saveConstantBool
    (171) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 320
    fact                           shift and go to state 146

state 295

    (132) opSExp -> EQ saveOperator . exp
    (140) exp -> . term performAddSub errorCyExp cyExp
    (145) term -> . fact performMulDiv cyTerm
    (150) fact -> . CTES saveConstantString
    (151) fact -> . cte
    (152) fact -> . funcCall
    (153) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (154) fact -> . ID saveVariable opAccess errorOpAccess
    (168) cte -> . CTED saveConstantInt
    (169) cte -> . CTEF saveConstantFloat
    (170) cte -> . TRUE saveConstantBool
    (171) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 321
    fact                           shift and go to state 146

state 296

    (131) sExp -> exp errorOpSExp opSExp performRelational .

    AND             reduce using rule 131 (sExp -> exp errorOpSExp opSExp performRelational .)
    OR              reduce using rule 131 (sExp -> exp errorOpSExp opSExp performRelational .)
    ,               reduce using rule 131 (sExp -> exp errorOpSExp opSExp performRelational .)
    PARFIN          reduce using rule 131 (sExp -> exp errorOpSExp opSExp performRelational .)
    ;               reduce using rule 131 (sExp -> exp errorOpSExp opSExp performRelational .)
    ]               reduce using rule 131 (sExp -> exp errorOpSExp opSExp performRelational .)


state 297

    (92) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion . saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign
    (175) saveFalso -> .

    ;               reduce using rule 175 (saveFalso -> .)

    saveFalso                      shift and go to state 322

state 298

    (119) condition -> errorCondition IF PARINI expresion PARFIN saveFalso { . body } optionalElse rellenaFalso
    (82) body -> . errorBody cyInstruction
    (83) body -> . empty
    (84) errorBody -> .
    (172) empty -> .

    ID              reduce using rule 84 (errorBody -> .)
    PRINT           reduce using rule 84 (errorBody -> .)
    READ            reduce using rule 84 (errorBody -> .)
    IF              reduce using rule 84 (errorBody -> .)
    FOR             reduce using rule 84 (errorBody -> .)
    WHILE           reduce using rule 84 (errorBody -> .)
    }               reduce using rule 172 (empty -> .)

    body                           shift and go to state 323
    errorBody                      shift and go to state 87
    empty                          shift and go to state 88

state 299

    (69) opReturns -> errorOpReturns RETURNS type saveReturnType { . opVars saveQuadruple body return
    (6) opVars -> . vars
    (7) opVars -> . empty
    (10) vars -> . errorVars VARS declare
    (172) empty -> .
    (12) errorVars -> .

    RETURN          reduce using rule 172 (empty -> .)
    ID              reduce using rule 172 (empty -> .)
    PRINT           reduce using rule 172 (empty -> .)
    READ            reduce using rule 172 (empty -> .)
    IF              reduce using rule 172 (empty -> .)
    FOR             reduce using rule 172 (empty -> .)
    WHILE           reduce using rule 172 (empty -> .)
    VARS            reduce using rule 12 (errorVars -> .)

    vars                           shift and go to state 8
    opVars                         shift and go to state 324
    errorVars                      shift and go to state 10
    empty                          shift and go to state 11

state 300

    (52) cyParam -> empty saveTypeParam saveID .

    PARFIN          reduce using rule 52 (cyParam -> empty saveTypeParam saveID .)


state 301

    (51) cyParam -> errorCyParam saveTypeParam saveID . ; param

    ;               shift and go to state 325


state 302

    (33) cyRead -> , fix ID . saveVariable performRead cyRead
    (181) saveVariable -> .

    ,               reduce using rule 181 (saveVariable -> .)
    PARFIN          reduce using rule 181 (saveVariable -> .)

    saveVariable                   shift and go to state 326

state 303

    (160) opStruct -> errorOpStruct [ expresion ] . opMatrix
    (162) opMatrix -> . errorOpMatrix [ expresion ]
    (163) opMatrix -> . empty
    (164) errorOpMatrix -> .
    (172) empty -> .

    [               reduce using rule 164 (errorOpMatrix -> .)
    MULT            reduce using rule 172 (empty -> .)
    DIV             reduce using rule 172 (empty -> .)
    RES             reduce using rule 172 (empty -> .)
    PLUS            reduce using rule 172 (empty -> .)
    MINUS           reduce using rule 172 (empty -> .)
    ,               reduce using rule 172 (empty -> .)
    PARFIN          reduce using rule 172 (empty -> .)
    EQ              reduce using rule 172 (empty -> .)
    DIF             reduce using rule 172 (empty -> .)
    LTOEQ           reduce using rule 172 (empty -> .)
    GTOEQ           reduce using rule 172 (empty -> .)
    GT              reduce using rule 172 (empty -> .)
    LT              reduce using rule 172 (empty -> .)
    AND             reduce using rule 172 (empty -> .)
    OR              reduce using rule 172 (empty -> .)
    ]               reduce using rule 172 (empty -> .)
    ;               reduce using rule 172 (empty -> .)

    empty                          shift and go to state 329
    errorOpMatrix                  shift and go to state 327
    opMatrix                       shift and go to state 328

state 304

    (141) cyExp -> PLUS saveOperator exp .

    ,               reduce using rule 141 (cyExp -> PLUS saveOperator exp .)
    PARFIN          reduce using rule 141 (cyExp -> PLUS saveOperator exp .)
    EQ              reduce using rule 141 (cyExp -> PLUS saveOperator exp .)
    DIF             reduce using rule 141 (cyExp -> PLUS saveOperator exp .)
    LTOEQ           reduce using rule 141 (cyExp -> PLUS saveOperator exp .)
    GTOEQ           reduce using rule 141 (cyExp -> PLUS saveOperator exp .)
    GT              reduce using rule 141 (cyExp -> PLUS saveOperator exp .)
    LT              reduce using rule 141 (cyExp -> PLUS saveOperator exp .)
    AND             reduce using rule 141 (cyExp -> PLUS saveOperator exp .)
    OR              reduce using rule 141 (cyExp -> PLUS saveOperator exp .)
    ]               reduce using rule 141 (cyExp -> PLUS saveOperator exp .)
    ;               reduce using rule 141 (cyExp -> PLUS saveOperator exp .)


state 305

    (142) cyExp -> MINUS saveOperator exp .

    ,               reduce using rule 142 (cyExp -> MINUS saveOperator exp .)
    PARFIN          reduce using rule 142 (cyExp -> MINUS saveOperator exp .)
    EQ              reduce using rule 142 (cyExp -> MINUS saveOperator exp .)
    DIF             reduce using rule 142 (cyExp -> MINUS saveOperator exp .)
    LTOEQ           reduce using rule 142 (cyExp -> MINUS saveOperator exp .)
    GTOEQ           reduce using rule 142 (cyExp -> MINUS saveOperator exp .)
    GT              reduce using rule 142 (cyExp -> MINUS saveOperator exp .)
    LT              reduce using rule 142 (cyExp -> MINUS saveOperator exp .)
    AND             reduce using rule 142 (cyExp -> MINUS saveOperator exp .)
    OR              reduce using rule 142 (cyExp -> MINUS saveOperator exp .)
    ]               reduce using rule 142 (cyExp -> MINUS saveOperator exp .)
    ;               reduce using rule 142 (cyExp -> MINUS saveOperator exp .)


state 306

    (30) cyPrint -> , fix exp performPrint . cyPrint
    (30) cyPrint -> . , fix exp performPrint cyPrint
    (31) cyPrint -> . empty
    (172) empty -> .

    ,               shift and go to state 195
    PARFIN          reduce using rule 172 (empty -> .)

    empty                          shift and go to state 196
    cyPrint                        shift and go to state 330

state 307

    (146) cyTerm -> MULT saveOperator errorFact term .

    PLUS            reduce using rule 146 (cyTerm -> MULT saveOperator errorFact term .)
    MINUS           reduce using rule 146 (cyTerm -> MULT saveOperator errorFact term .)
    ,               reduce using rule 146 (cyTerm -> MULT saveOperator errorFact term .)
    PARFIN          reduce using rule 146 (cyTerm -> MULT saveOperator errorFact term .)
    EQ              reduce using rule 146 (cyTerm -> MULT saveOperator errorFact term .)
    DIF             reduce using rule 146 (cyTerm -> MULT saveOperator errorFact term .)
    LTOEQ           reduce using rule 146 (cyTerm -> MULT saveOperator errorFact term .)
    GTOEQ           reduce using rule 146 (cyTerm -> MULT saveOperator errorFact term .)
    GT              reduce using rule 146 (cyTerm -> MULT saveOperator errorFact term .)
    LT              reduce using rule 146 (cyTerm -> MULT saveOperator errorFact term .)
    AND             reduce using rule 146 (cyTerm -> MULT saveOperator errorFact term .)
    OR              reduce using rule 146 (cyTerm -> MULT saveOperator errorFact term .)
    ]               reduce using rule 146 (cyTerm -> MULT saveOperator errorFact term .)
    ;               reduce using rule 146 (cyTerm -> MULT saveOperator errorFact term .)


state 308

    (88) whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { . body } repeatWhile
    (82) body -> . errorBody cyInstruction
    (83) body -> . empty
    (84) errorBody -> .
    (172) empty -> .

    ID              reduce using rule 84 (errorBody -> .)
    PRINT           reduce using rule 84 (errorBody -> .)
    READ            reduce using rule 84 (errorBody -> .)
    IF              reduce using rule 84 (errorBody -> .)
    FOR             reduce using rule 84 (errorBody -> .)
    WHILE           reduce using rule 84 (errorBody -> .)
    }               reduce using rule 172 (empty -> .)

    body                           shift and go to state 331
    errorBody                      shift and go to state 87
    empty                          shift and go to state 88

state 309

    (43) initDict -> ASGN PARINI dictType : dictType . PARFIN errorInitDict

    PARFIN          shift and go to state 332


state 310

    (39) init -> ASGN . saveOperator errorInit initWith
    (182) saveOperator -> .

    ID              reduce using rule 182 (saveOperator -> .)
    CTES            reduce using rule 182 (saveOperator -> .)
    PARINI          reduce using rule 182 (saveOperator -> .)
    CTED            reduce using rule 182 (saveOperator -> .)
    CTEF            reduce using rule 182 (saveOperator -> .)
    TRUE            reduce using rule 182 (saveOperator -> .)
    FALSE           reduce using rule 182 (saveOperator -> .)

    saveOperator                   shift and go to state 204

state 311

    (102) assignOptions -> [ expresion ] assignMatrix init .

    ;               reduce using rule 102 (assignOptions -> [ expresion ] assignMatrix init .)
    PARFIN          reduce using rule 102 (assignOptions -> [ expresion ] assignMatrix init .)


state 312

    (103) assignMatrix -> [ expresion . ] errorAssignMatrix

    ]               shift and go to state 333


state 313

    (128) cyExpresion -> AND saveOperator expresion .

    ,               reduce using rule 128 (cyExpresion -> AND saveOperator expresion .)
    PARFIN          reduce using rule 128 (cyExpresion -> AND saveOperator expresion .)
    ]               reduce using rule 128 (cyExpresion -> AND saveOperator expresion .)
    ;               reduce using rule 128 (cyExpresion -> AND saveOperator expresion .)


state 314

    (129) cyExpresion -> OR saveOperator expresion .

    ,               reduce using rule 129 (cyExpresion -> OR saveOperator expresion .)
    PARFIN          reduce using rule 129 (cyExpresion -> OR saveOperator expresion .)
    ]               reduce using rule 129 (cyExpresion -> OR saveOperator expresion .)
    ;               reduce using rule 129 (cyExpresion -> OR saveOperator expresion .)


state 315

    (111) cyParamCall -> , expresion checkParamType . cyParamCall
    (111) cyParamCall -> . , expresion checkParamType cyParamCall
    (112) cyParamCall -> . empty
    (172) empty -> .

    ,               shift and go to state 251
    PARFIN          reduce using rule 172 (empty -> .)

    cyParamCall                    shift and go to state 334
    empty                          shift and go to state 250

state 316

    (136) opSExp -> GT saveOperator exp .

    AND             reduce using rule 136 (opSExp -> GT saveOperator exp .)
    OR              reduce using rule 136 (opSExp -> GT saveOperator exp .)
    ,               reduce using rule 136 (opSExp -> GT saveOperator exp .)
    PARFIN          reduce using rule 136 (opSExp -> GT saveOperator exp .)
    ]               reduce using rule 136 (opSExp -> GT saveOperator exp .)
    ;               reduce using rule 136 (opSExp -> GT saveOperator exp .)


state 317

    (134) opSExp -> LTOEQ saveOperator exp .

    AND             reduce using rule 134 (opSExp -> LTOEQ saveOperator exp .)
    OR              reduce using rule 134 (opSExp -> LTOEQ saveOperator exp .)
    ,               reduce using rule 134 (opSExp -> LTOEQ saveOperator exp .)
    PARFIN          reduce using rule 134 (opSExp -> LTOEQ saveOperator exp .)
    ]               reduce using rule 134 (opSExp -> LTOEQ saveOperator exp .)
    ;               reduce using rule 134 (opSExp -> LTOEQ saveOperator exp .)


state 318

    (133) opSExp -> DIF saveOperator exp .

    AND             reduce using rule 133 (opSExp -> DIF saveOperator exp .)
    OR              reduce using rule 133 (opSExp -> DIF saveOperator exp .)
    ,               reduce using rule 133 (opSExp -> DIF saveOperator exp .)
    PARFIN          reduce using rule 133 (opSExp -> DIF saveOperator exp .)
    ]               reduce using rule 133 (opSExp -> DIF saveOperator exp .)
    ;               reduce using rule 133 (opSExp -> DIF saveOperator exp .)


state 319

    (137) opSExp -> LT saveOperator exp .

    AND             reduce using rule 137 (opSExp -> LT saveOperator exp .)
    OR              reduce using rule 137 (opSExp -> LT saveOperator exp .)
    ,               reduce using rule 137 (opSExp -> LT saveOperator exp .)
    PARFIN          reduce using rule 137 (opSExp -> LT saveOperator exp .)
    ]               reduce using rule 137 (opSExp -> LT saveOperator exp .)
    ;               reduce using rule 137 (opSExp -> LT saveOperator exp .)


state 320

    (135) opSExp -> GTOEQ saveOperator exp .

    AND             reduce using rule 135 (opSExp -> GTOEQ saveOperator exp .)
    OR              reduce using rule 135 (opSExp -> GTOEQ saveOperator exp .)
    ,               reduce using rule 135 (opSExp -> GTOEQ saveOperator exp .)
    PARFIN          reduce using rule 135 (opSExp -> GTOEQ saveOperator exp .)
    ]               reduce using rule 135 (opSExp -> GTOEQ saveOperator exp .)
    ;               reduce using rule 135 (opSExp -> GTOEQ saveOperator exp .)


state 321

    (132) opSExp -> EQ saveOperator exp .

    AND             reduce using rule 132 (opSExp -> EQ saveOperator exp .)
    OR              reduce using rule 132 (opSExp -> EQ saveOperator exp .)
    ,               reduce using rule 132 (opSExp -> EQ saveOperator exp .)
    PARFIN          reduce using rule 132 (opSExp -> EQ saveOperator exp .)
    ]               reduce using rule 132 (opSExp -> EQ saveOperator exp .)
    ;               reduce using rule 132 (opSExp -> EQ saveOperator exp .)


state 322

    (92) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso . ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign

    ;               shift and go to state 335


state 323

    (119) condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body . } optionalElse rellenaFalso

    }               shift and go to state 336


state 324

    (69) opReturns -> errorOpReturns RETURNS type saveReturnType { opVars . saveQuadruple body return
    (71) saveQuadruple -> .

    RETURN          reduce using rule 71 (saveQuadruple -> .)
    ID              reduce using rule 71 (saveQuadruple -> .)
    PRINT           reduce using rule 71 (saveQuadruple -> .)
    READ            reduce using rule 71 (saveQuadruple -> .)
    IF              reduce using rule 71 (saveQuadruple -> .)
    FOR             reduce using rule 71 (saveQuadruple -> .)
    WHILE           reduce using rule 71 (saveQuadruple -> .)

    saveQuadruple                  shift and go to state 337

state 325

    (51) cyParam -> errorCyParam saveTypeParam saveID ; . param
    (49) param -> . saveType type errorParam ID cyTypeParam cyParam
    (3) saveType -> .

    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)

    param                          shift and go to state 338
    saveType                       shift and go to state 91

state 326

    (33) cyRead -> , fix ID saveVariable . performRead cyRead
    (191) performRead -> .

    ,               reduce using rule 191 (performRead -> .)
    PARFIN          reduce using rule 191 (performRead -> .)

    performRead                    shift and go to state 339

state 327

    (162) opMatrix -> errorOpMatrix . [ expresion ]

    [               shift and go to state 340


state 328

    (160) opStruct -> errorOpStruct [ expresion ] opMatrix .

    MULT            reduce using rule 160 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    DIV             reduce using rule 160 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    RES             reduce using rule 160 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    PLUS            reduce using rule 160 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    MINUS           reduce using rule 160 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    ,               reduce using rule 160 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    PARFIN          reduce using rule 160 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    EQ              reduce using rule 160 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    DIF             reduce using rule 160 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    LTOEQ           reduce using rule 160 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    GTOEQ           reduce using rule 160 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    GT              reduce using rule 160 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    LT              reduce using rule 160 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    AND             reduce using rule 160 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    OR              reduce using rule 160 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    ]               reduce using rule 160 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    ;               reduce using rule 160 (opStruct -> errorOpStruct [ expresion ] opMatrix .)


state 329

    (163) opMatrix -> empty .

    MULT            reduce using rule 163 (opMatrix -> empty .)
    DIV             reduce using rule 163 (opMatrix -> empty .)
    RES             reduce using rule 163 (opMatrix -> empty .)
    PLUS            reduce using rule 163 (opMatrix -> empty .)
    MINUS           reduce using rule 163 (opMatrix -> empty .)
    ,               reduce using rule 163 (opMatrix -> empty .)
    PARFIN          reduce using rule 163 (opMatrix -> empty .)
    EQ              reduce using rule 163 (opMatrix -> empty .)
    DIF             reduce using rule 163 (opMatrix -> empty .)
    LTOEQ           reduce using rule 163 (opMatrix -> empty .)
    GTOEQ           reduce using rule 163 (opMatrix -> empty .)
    GT              reduce using rule 163 (opMatrix -> empty .)
    LT              reduce using rule 163 (opMatrix -> empty .)
    AND             reduce using rule 163 (opMatrix -> empty .)
    OR              reduce using rule 163 (opMatrix -> empty .)
    ]               reduce using rule 163 (opMatrix -> empty .)
    ;               reduce using rule 163 (opMatrix -> empty .)


state 330

    (30) cyPrint -> , fix exp performPrint cyPrint .

    PARFIN          reduce using rule 30 (cyPrint -> , fix exp performPrint cyPrint .)


state 331

    (88) whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body . } repeatWhile

    }               shift and go to state 341


state 332

    (43) initDict -> ASGN PARINI dictType : dictType PARFIN . errorInitDict
    (44) errorInitDict -> .

    ;               reduce using rule 44 (errorInitDict -> .)
    PARFIN          reduce using rule 44 (errorInitDict -> .)

    errorInitDict                  shift and go to state 342

state 333

    (103) assignMatrix -> [ expresion ] . errorAssignMatrix
    (105) errorAssignMatrix -> .

    ASGN            reduce using rule 105 (errorAssignMatrix -> .)

    errorAssignMatrix              shift and go to state 343

state 334

    (111) cyParamCall -> , expresion checkParamType cyParamCall .

    PARFIN          reduce using rule 111 (cyParamCall -> , expresion checkParamType cyParamCall .)


state 335

    (92) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; . saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign
    (93) saltoBody -> .

    ID              reduce using rule 93 (saltoBody -> .)

    saltoBody                      shift and go to state 344

state 336

    (119) condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } . optionalElse rellenaFalso
    (121) optionalElse -> . errorElse ELSE saveVerdadero { body }
    (122) optionalElse -> . empty
    (123) errorElse -> .
    (172) empty -> .

    ELSE            reduce using rule 123 (errorElse -> .)
    ID              reduce using rule 172 (empty -> .)
    PRINT           reduce using rule 172 (empty -> .)
    READ            reduce using rule 172 (empty -> .)
    IF              reduce using rule 172 (empty -> .)
    FOR             reduce using rule 172 (empty -> .)
    WHILE           reduce using rule 172 (empty -> .)
    }               reduce using rule 172 (empty -> .)
    RETURN          reduce using rule 172 (empty -> .)

    errorElse                      shift and go to state 346
    optionalElse                   shift and go to state 345
    empty                          shift and go to state 347

state 337

    (69) opReturns -> errorOpReturns RETURNS type saveReturnType { opVars saveQuadruple . body return
    (82) body -> . errorBody cyInstruction
    (83) body -> . empty
    (84) errorBody -> .
    (172) empty -> .

    ID              reduce using rule 84 (errorBody -> .)
    PRINT           reduce using rule 84 (errorBody -> .)
    READ            reduce using rule 84 (errorBody -> .)
    IF              reduce using rule 84 (errorBody -> .)
    FOR             reduce using rule 84 (errorBody -> .)
    WHILE           reduce using rule 84 (errorBody -> .)
    RETURN          reduce using rule 172 (empty -> .)

    body                           shift and go to state 348
    errorBody                      shift and go to state 87
    empty                          shift and go to state 88

state 338

    (51) cyParam -> errorCyParam saveTypeParam saveID ; param .

    PARFIN          reduce using rule 51 (cyParam -> errorCyParam saveTypeParam saveID ; param .)


state 339

    (33) cyRead -> , fix ID saveVariable performRead . cyRead
    (33) cyRead -> . , fix ID saveVariable performRead cyRead
    (34) cyRead -> . empty
    (172) empty -> .

    ,               shift and go to state 219
    PARFIN          reduce using rule 172 (empty -> .)

    cyRead                         shift and go to state 349
    empty                          shift and go to state 221

state 340

    (162) opMatrix -> errorOpMatrix [ . expresion ]
    (126) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (131) sExp -> . exp errorOpSExp opSExp performRelational
    (140) exp -> . term performAddSub errorCyExp cyExp
    (145) term -> . fact performMulDiv cyTerm
    (150) fact -> . CTES saveConstantString
    (151) fact -> . cte
    (152) fact -> . funcCall
    (153) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (154) fact -> . ID saveVariable opAccess errorOpAccess
    (168) cte -> . CTED saveConstantInt
    (169) cte -> . CTEF saveConstantFloat
    (170) cte -> . TRUE saveConstantBool
    (171) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    sExp                           shift and go to state 174
    expresion                      shift and go to state 350
    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 177
    fact                           shift and go to state 146

state 341

    (88) whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } . repeatWhile
    (89) repeatWhile -> .

    ID              reduce using rule 89 (repeatWhile -> .)
    PRINT           reduce using rule 89 (repeatWhile -> .)
    READ            reduce using rule 89 (repeatWhile -> .)
    IF              reduce using rule 89 (repeatWhile -> .)
    FOR             reduce using rule 89 (repeatWhile -> .)
    WHILE           reduce using rule 89 (repeatWhile -> .)
    }               reduce using rule 89 (repeatWhile -> .)
    RETURN          reduce using rule 89 (repeatWhile -> .)

    repeatWhile                    shift and go to state 351

state 342

    (43) initDict -> ASGN PARINI dictType : dictType PARFIN errorInitDict .

    ;               reduce using rule 43 (initDict -> ASGN PARINI dictType : dictType PARFIN errorInitDict .)
    PARFIN          reduce using rule 43 (initDict -> ASGN PARINI dictType : dictType PARFIN errorInitDict .)


state 343

    (103) assignMatrix -> [ expresion ] errorAssignMatrix .

    ASGN            reduce using rule 103 (assignMatrix -> [ expresion ] errorAssignMatrix .)


state 344

    (92) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody . assign returnFor PARFIN { rellenaBody body } returnAssign
    (98) assign -> . ID saveVariable errorAssign assignOptions performAssign

    ID              shift and go to state 178

    assign                         shift and go to state 352

state 345

    (119) condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse . rellenaFalso
    (174) rellenaFalso -> .

    ID              reduce using rule 174 (rellenaFalso -> .)
    PRINT           reduce using rule 174 (rellenaFalso -> .)
    READ            reduce using rule 174 (rellenaFalso -> .)
    IF              reduce using rule 174 (rellenaFalso -> .)
    FOR             reduce using rule 174 (rellenaFalso -> .)
    WHILE           reduce using rule 174 (rellenaFalso -> .)
    }               reduce using rule 174 (rellenaFalso -> .)
    RETURN          reduce using rule 174 (rellenaFalso -> .)

    rellenaFalso                   shift and go to state 353

state 346

    (121) optionalElse -> errorElse . ELSE saveVerdadero { body }

    ELSE            shift and go to state 354


state 347

    (122) optionalElse -> empty .

    ID              reduce using rule 122 (optionalElse -> empty .)
    PRINT           reduce using rule 122 (optionalElse -> empty .)
    READ            reduce using rule 122 (optionalElse -> empty .)
    IF              reduce using rule 122 (optionalElse -> empty .)
    FOR             reduce using rule 122 (optionalElse -> empty .)
    WHILE           reduce using rule 122 (optionalElse -> empty .)
    }               reduce using rule 122 (optionalElse -> empty .)
    RETURN          reduce using rule 122 (optionalElse -> empty .)


state 348

    (69) opReturns -> errorOpReturns RETURNS type saveReturnType { opVars saveQuadruple body . return
    (61) return -> . errorReturn RETURN expresion saveReturnValue ;
    (63) errorReturn -> .

    RETURN          reduce using rule 63 (errorReturn -> .)

    return                         shift and go to state 355
    errorReturn                    shift and go to state 356

state 349

    (33) cyRead -> , fix ID saveVariable performRead cyRead .

    PARFIN          reduce using rule 33 (cyRead -> , fix ID saveVariable performRead cyRead .)


state 350

    (162) opMatrix -> errorOpMatrix [ expresion . ]

    ]               shift and go to state 357


state 351

    (88) whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile .

    ID              reduce using rule 88 (whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile .)
    PRINT           reduce using rule 88 (whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile .)
    READ            reduce using rule 88 (whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile .)
    IF              reduce using rule 88 (whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile .)
    FOR             reduce using rule 88 (whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile .)
    WHILE           reduce using rule 88 (whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile .)
    }               reduce using rule 88 (whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile .)
    RETURN          reduce using rule 88 (whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile .)


state 352

    (92) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign . returnFor PARFIN { rellenaBody body } returnAssign
    (94) returnFor -> .

    PARFIN          reduce using rule 94 (returnFor -> .)

    returnFor                      shift and go to state 358

state 353

    (119) condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso .

    ID              reduce using rule 119 (condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso .)
    PRINT           reduce using rule 119 (condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso .)
    READ            reduce using rule 119 (condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso .)
    IF              reduce using rule 119 (condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso .)
    FOR             reduce using rule 119 (condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso .)
    WHILE           reduce using rule 119 (condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso .)
    }               reduce using rule 119 (condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso .)
    RETURN          reduce using rule 119 (condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso .)


state 354

    (121) optionalElse -> errorElse ELSE . saveVerdadero { body }
    (176) saveVerdadero -> .

    {               reduce using rule 176 (saveVerdadero -> .)

    saveVerdadero                  shift and go to state 359

state 355

    (69) opReturns -> errorOpReturns RETURNS type saveReturnType { opVars saveQuadruple body return .

    }               reduce using rule 69 (opReturns -> errorOpReturns RETURNS type saveReturnType { opVars saveQuadruple body return .)


state 356

    (61) return -> errorReturn . RETURN expresion saveReturnValue ;

    RETURN          shift and go to state 360


state 357

    (162) opMatrix -> errorOpMatrix [ expresion ] .

    MULT            reduce using rule 162 (opMatrix -> errorOpMatrix [ expresion ] .)
    DIV             reduce using rule 162 (opMatrix -> errorOpMatrix [ expresion ] .)
    RES             reduce using rule 162 (opMatrix -> errorOpMatrix [ expresion ] .)
    PLUS            reduce using rule 162 (opMatrix -> errorOpMatrix [ expresion ] .)
    MINUS           reduce using rule 162 (opMatrix -> errorOpMatrix [ expresion ] .)
    ,               reduce using rule 162 (opMatrix -> errorOpMatrix [ expresion ] .)
    PARFIN          reduce using rule 162 (opMatrix -> errorOpMatrix [ expresion ] .)
    EQ              reduce using rule 162 (opMatrix -> errorOpMatrix [ expresion ] .)
    DIF             reduce using rule 162 (opMatrix -> errorOpMatrix [ expresion ] .)
    LTOEQ           reduce using rule 162 (opMatrix -> errorOpMatrix [ expresion ] .)
    GTOEQ           reduce using rule 162 (opMatrix -> errorOpMatrix [ expresion ] .)
    GT              reduce using rule 162 (opMatrix -> errorOpMatrix [ expresion ] .)
    LT              reduce using rule 162 (opMatrix -> errorOpMatrix [ expresion ] .)
    AND             reduce using rule 162 (opMatrix -> errorOpMatrix [ expresion ] .)
    OR              reduce using rule 162 (opMatrix -> errorOpMatrix [ expresion ] .)
    ]               reduce using rule 162 (opMatrix -> errorOpMatrix [ expresion ] .)
    ;               reduce using rule 162 (opMatrix -> errorOpMatrix [ expresion ] .)


state 358

    (92) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor . PARFIN { rellenaBody body } returnAssign

    PARFIN          shift and go to state 361


state 359

    (121) optionalElse -> errorElse ELSE saveVerdadero . { body }

    {               shift and go to state 362


state 360

    (61) return -> errorReturn RETURN . expresion saveReturnValue ;
    (126) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (131) sExp -> . exp errorOpSExp opSExp performRelational
    (140) exp -> . term performAddSub errorCyExp cyExp
    (145) term -> . fact performMulDiv cyTerm
    (150) fact -> . CTES saveConstantString
    (151) fact -> . cte
    (152) fact -> . funcCall
    (153) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (154) fact -> . ID saveVariable opAccess errorOpAccess
    (168) cte -> . CTED saveConstantInt
    (169) cte -> . CTEF saveConstantFloat
    (170) cte -> . TRUE saveConstantBool
    (171) cte -> . FALSE saveConstantBool
    (106) funcCall -> . ID checkFunction PARINI opParamCall PARFIN checkNumParams

    CTES            shift and go to state 139
    PARINI          shift and go to state 136
    ID              shift and go to state 138
    CTED            shift and go to state 137
    CTEF            shift and go to state 144
    TRUE            shift and go to state 135
    FALSE           shift and go to state 141

    sExp                           shift and go to state 174
    expresion                      shift and go to state 363
    term                           shift and go to state 140
    funcCall                       shift and go to state 142
    cte                            shift and go to state 143
    exp                            shift and go to state 177
    fact                           shift and go to state 146

state 361

    (92) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN . { rellenaBody body } returnAssign

    {               shift and go to state 364


state 362

    (121) optionalElse -> errorElse ELSE saveVerdadero { . body }
    (82) body -> . errorBody cyInstruction
    (83) body -> . empty
    (84) errorBody -> .
    (172) empty -> .

    ID              reduce using rule 84 (errorBody -> .)
    PRINT           reduce using rule 84 (errorBody -> .)
    READ            reduce using rule 84 (errorBody -> .)
    IF              reduce using rule 84 (errorBody -> .)
    FOR             reduce using rule 84 (errorBody -> .)
    WHILE           reduce using rule 84 (errorBody -> .)
    }               reduce using rule 172 (empty -> .)

    body                           shift and go to state 365
    errorBody                      shift and go to state 87
    empty                          shift and go to state 88

state 363

    (61) return -> errorReturn RETURN expresion . saveReturnValue ;
    (62) saveReturnValue -> .

    ;               reduce using rule 62 (saveReturnValue -> .)

    saveReturnValue                shift and go to state 366

state 364

    (92) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { . rellenaBody body } returnAssign
    (95) rellenaBody -> .

    }               reduce using rule 95 (rellenaBody -> .)
    ID              reduce using rule 95 (rellenaBody -> .)
    PRINT           reduce using rule 95 (rellenaBody -> .)
    READ            reduce using rule 95 (rellenaBody -> .)
    IF              reduce using rule 95 (rellenaBody -> .)
    FOR             reduce using rule 95 (rellenaBody -> .)
    WHILE           reduce using rule 95 (rellenaBody -> .)

    rellenaBody                    shift and go to state 367

state 365

    (121) optionalElse -> errorElse ELSE saveVerdadero { body . }

    }               shift and go to state 368


state 366

    (61) return -> errorReturn RETURN expresion saveReturnValue . ;

    ;               shift and go to state 369


state 367

    (92) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody . body } returnAssign
    (82) body -> . errorBody cyInstruction
    (83) body -> . empty
    (84) errorBody -> .
    (172) empty -> .

    ID              reduce using rule 84 (errorBody -> .)
    PRINT           reduce using rule 84 (errorBody -> .)
    READ            reduce using rule 84 (errorBody -> .)
    IF              reduce using rule 84 (errorBody -> .)
    FOR             reduce using rule 84 (errorBody -> .)
    WHILE           reduce using rule 84 (errorBody -> .)
    }               reduce using rule 172 (empty -> .)

    body                           shift and go to state 370
    errorBody                      shift and go to state 87
    empty                          shift and go to state 88

state 368

    (121) optionalElse -> errorElse ELSE saveVerdadero { body } .

    ID              reduce using rule 121 (optionalElse -> errorElse ELSE saveVerdadero { body } .)
    PRINT           reduce using rule 121 (optionalElse -> errorElse ELSE saveVerdadero { body } .)
    READ            reduce using rule 121 (optionalElse -> errorElse ELSE saveVerdadero { body } .)
    IF              reduce using rule 121 (optionalElse -> errorElse ELSE saveVerdadero { body } .)
    FOR             reduce using rule 121 (optionalElse -> errorElse ELSE saveVerdadero { body } .)
    WHILE           reduce using rule 121 (optionalElse -> errorElse ELSE saveVerdadero { body } .)
    }               reduce using rule 121 (optionalElse -> errorElse ELSE saveVerdadero { body } .)
    RETURN          reduce using rule 121 (optionalElse -> errorElse ELSE saveVerdadero { body } .)


state 369

    (61) return -> errorReturn RETURN expresion saveReturnValue ; .

    }               reduce using rule 61 (return -> errorReturn RETURN expresion saveReturnValue ; .)


state 370

    (92) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body . } returnAssign

    }               shift and go to state 371


state 371

    (92) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } . returnAssign
    (96) returnAssign -> .

    ID              reduce using rule 96 (returnAssign -> .)
    PRINT           reduce using rule 96 (returnAssign -> .)
    READ            reduce using rule 96 (returnAssign -> .)
    IF              reduce using rule 96 (returnAssign -> .)
    FOR             reduce using rule 96 (returnAssign -> .)
    WHILE           reduce using rule 96 (returnAssign -> .)
    }               reduce using rule 96 (returnAssign -> .)
    RETURN          reduce using rule 96 (returnAssign -> .)

    returnAssign                   shift and go to state 372

state 372

    (92) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign .

    ID              reduce using rule 92 (forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign .)
    PRINT           reduce using rule 92 (forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign .)
    READ            reduce using rule 92 (forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign .)
    IF              reduce using rule 92 (forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign .)
    FOR             reduce using rule 92 (forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign .)
    WHILE           reduce using rule 92 (forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign .)
    }               reduce using rule 92 (forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign .)
    RETURN          reduce using rule 92 (forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PARINI in state 170 resolved as shift
WARNING: reduce/reduce conflict in state 280 resolved using rule (initWith -> funcCall)
WARNING: rejected rule (fact -> funcCall) in state 280
