Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main }
Rule 2     changeCurrentScope -> <empty>
Rule 3     saveType -> <empty>
Rule 4     saveProc -> <empty>
Rule 5     errorProgram -> <empty>
Rule 6     opVars -> vars
Rule 7     opVars -> empty
Rule 8     opFunctions -> function opFunctions
Rule 9     opFunctions -> empty
Rule 10    vars -> errorVars VARS declare
Rule 11    saveID -> <empty>
Rule 12    errorVars -> <empty>
Rule 13    type -> errorType INT
Rule 14    type -> FLOAT
Rule 15    type -> STRING
Rule 16    type -> OBJECT
Rule 17    type -> BOOL
Rule 18    errorType -> <empty>
Rule 19    main -> errorMain MAIN saveMain { opVars body }
Rule 20    saveMain -> <empty>
Rule 21    errorMain -> <empty>
Rule 22    instr -> basicStatements ;
Rule 23    instr -> condition
Rule 24    instr -> cycle
Rule 25    basicStatements -> assign
Rule 26    basicStatements -> funcCall
Rule 27    declare -> basicDeclare
Rule 28    declare -> structDeclare
Rule 29    declare -> dictDeclare
Rule 30    init -> = initWith errorInit
Rule 31    errorInit -> <empty>
Rule 32    initWith -> expresion
Rule 33    initWith -> funcCall
Rule 34    initDict -> = ( dictType : dictType ) errorInitDict
Rule 35    errorInitDict -> <empty>
Rule 36    dictType -> errorDictType CTES
Rule 37    dictType -> cte
Rule 38    dictType -> ID
Rule 39    errorDictType -> <empty>
Rule 40    param -> saveType type errorParam ID cyTypeParam cyParam
Rule 41    errorParam -> <empty>
Rule 42    cyParam -> errorCyParam saveID saveTypeParam ; param
Rule 43    cyParam -> empty saveID saveTypeParam
Rule 44    cyTypeParam -> , saveID saveTypeParam ID cyTypeParam
Rule 45    cyTypeParam -> empty
Rule 46    saveTypeParam -> <empty>
Rule 47    errorCyParam -> <empty>
Rule 48    function -> errorFunction FUNC saveType ID saveProc flagParameters ( opParameters ) flagParameters opReturns } clearVarsTable
Rule 49    errorFunction -> <empty>
Rule 50    clearVarsTable -> <empty>
Rule 51    return -> errorReturn RETURN expresion ;
Rule 52    errorReturn -> <empty>
Rule 53    opParameters -> param saveParamToDirProc errorOpParameters
Rule 54    opParameters -> empty
Rule 55    flagParameters -> <empty>
Rule 56    saveParamToDirProc -> <empty>
Rule 57    errorOpParameters -> <empty>
Rule 58    opReturns -> errorOpReturns RETURNS type saveReturnType { opVars body return
Rule 59    opReturns -> { opVars body
Rule 60    saveReturnType -> <empty>
Rule 61    errorOpReturns -> <empty>
Rule 62    basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
Rule 63    errorBasicDeclare -> <empty>
Rule 64    structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare
Rule 65    errorStructDeclare -> <empty>
Rule 66    dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare
Rule 67    errorDictDeclare -> <empty>
Rule 68    cyDeclare -> declare
Rule 69    cyDeclare -> empty
Rule 70    body -> errorBody cyInstruction
Rule 71    body -> empty
Rule 72    errorBody -> <empty>
Rule 73    cyInstruction -> instr body
Rule 74    cycle -> forCycle
Rule 75    cycle -> whileCycle
Rule 76    whileCycle -> errorWhileCycle WHILE ( expresion ) { body }
Rule 77    errorWhileCycle -> <empty>
Rule 78    forCycle -> errorForCycle FOR ( assign ; expresion ; assign ) { body }
Rule 79    errorForCycle -> <empty>
Rule 80    assign -> ID errorAssign assignOptions
Rule 81    errorAssign -> <empty>
Rule 82    assignOptions -> init
Rule 83    assignOptions -> initDict
Rule 84    assignOptions -> [ expresion ] assignMatrix init
Rule 85    assignMatrix -> [ expresion ] errorAssignMatrix
Rule 86    assignMatrix -> empty
Rule 87    errorAssignMatrix -> <empty>
Rule 88    funcCall -> ID ( opParamCall )
Rule 89    opParamCall -> expresion cyParamCall
Rule 90    opParamCall -> empty
Rule 91    cyParamCall -> , expresion cyParamCall
Rule 92    cyParamCall -> empty
Rule 93    struct -> structType [ CTED ] optionalMatrix
Rule 94    structType -> type
Rule 95    structType -> DICT dict
Rule 96    optionalMatrix -> [ CTED ]
Rule 97    optionalMatrix -> empty
Rule 98    condition -> errorCondition IF ( expresion ) { body } optionalElse
Rule 99    errorCondition -> <empty>
Rule 100   optionalElse -> errorElse ELSE { body }
Rule 101   optionalElse -> empty
Rule 102   errorElse -> <empty>
Rule 103   dict -> errorDict ( type : type )
Rule 104   errorDict -> <empty>
Rule 105   expresion -> sExp cyExpresion errorExpresion
Rule 106   errorExpresion -> <empty>
Rule 107   cyExpresion -> AND expresion
Rule 108   cyExpresion -> OR expresion
Rule 109   cyExpresion -> empty
Rule 110   sExp -> exp errorOpSExp opSExp
Rule 111   opSExp -> EQ exp
Rule 112   opSExp -> DIF exp
Rule 113   opSExp -> LTOEQ exp
Rule 114   opSExp -> GTOEQ exp
Rule 115   opSExp -> > exp
Rule 116   opSExp -> < exp
Rule 117   opSExp -> empty
Rule 118   errorOpSExp -> <empty>
Rule 119   exp -> term errorCyExp cyExp
Rule 120   cyExp -> + term
Rule 121   cyExp -> - term
Rule 122   cyExp -> empty
Rule 123   errorCyExp -> <empty>
Rule 124   term -> fact cyTerm
Rule 125   cyTerm -> * errorFact fact
Rule 126   cyTerm -> / fact
Rule 127   cyTerm -> empty
Rule 128   fact -> CTES
Rule 129   fact -> cte
Rule 130   fact -> funcCall
Rule 131   fact -> ( expresion )
Rule 132   fact -> ID opAccess errorOpAccess
Rule 133   errorFact -> <empty>
Rule 134   opAccess -> opStruct
Rule 135   opAccess -> opDictionary
Rule 136   opAccess -> empty
Rule 137   errorOpAccess -> <empty>
Rule 138   opStruct -> errorOpStruct [ expresion ] opMatrix
Rule 139   errorOpStruct -> <empty>
Rule 140   opMatrix -> errorOpMatrix [ expresion ]
Rule 141   opMatrix -> empty
Rule 142   errorOpMatrix -> <empty>
Rule 143   opDictionary -> . dictIndex
Rule 144   dictIndex -> FIRST
Rule 145   dictIndex -> LAST
Rule 146   cte -> CTED
Rule 147   cte -> CTEF
Rule 148   cte -> TRUE
Rule 149   cte -> FALSE
Rule 150   empty -> <empty>

Terminals, with rules where they appear

(                    : 34 48 76 78 88 98 103 131
)                    : 34 48 76 78 88 98 103 131
*                    : 125
+                    : 120
,                    : 44 91
-                    : 121
.                    : 143
/                    : 126
:                    : 34 103
;                    : 22 42 51 62 64 66 78 78
<                    : 116
=                    : 30 34
>                    : 115
AND                  : 107
BOOL                 : 17
CTED                 : 93 96 146
CTEF                 : 147
CTES                 : 36 128
DICT                 : 66 95
DIF                  : 112
ELSE                 : 100
EQ                   : 111
FALSE                : 149
FIRST                : 144
FLOAT                : 14
FOR                  : 78
FUNC                 : 48
GTOEQ                : 114
ID                   : 1 38 40 44 48 62 64 66 80 88 132
IF                   : 98
INT                  : 13
LAST                 : 145
LTOEQ                : 113
MAIN                 : 19
OBJECT               : 16
OR                   : 108
PROGRAM              : 1
RETURN               : 51
RETURNS              : 58
STRING               : 15
STRUCT               : 64
TRUE                 : 148
VARS                 : 10
WHILE                : 76
[                    : 84 85 93 96 138 140
]                    : 84 85 93 96 138 140
error                : 
{                    : 1 19 58 59 76 78 98 100
}                    : 1 19 48 76 78 98 100

Nonterminals, with rules where they appear

assign               : 25 78 78
assignMatrix         : 84
assignOptions        : 80
basicDeclare         : 27
basicStatements      : 22
body                 : 19 58 59 73 76 78 98 100
changeCurrentScope   : 1
clearVarsTable       : 48
condition            : 23
cte                  : 37 129
cyDeclare            : 62 64 66
cyExp                : 119
cyExpresion          : 105
cyInstruction        : 70
cyParam              : 40
cyParamCall          : 89 91
cyTerm               : 124
cyTypeParam          : 40 44 62
cycle                : 24
declare              : 10 68
dict                 : 66 95
dictDeclare          : 29
dictIndex            : 143
dictType             : 34 34
empty                : 7 9 43 45 54 69 71 86 90 92 97 101 109 117 122 127 136 141
errorAssign          : 80
errorAssignMatrix    : 85
errorBasicDeclare    : 62
errorBody            : 70
errorCondition       : 98
errorCyExp           : 119
errorCyParam         : 42
errorDict            : 103
errorDictDeclare     : 66
errorDictType        : 36
errorElse            : 100
errorExpresion       : 105
errorFact            : 125
errorForCycle        : 78
errorFunction        : 48
errorInit            : 30
errorInitDict        : 34
errorMain            : 19
errorOpAccess        : 132
errorOpMatrix        : 140
errorOpParameters    : 53
errorOpReturns       : 58
errorOpSExp          : 110
errorOpStruct        : 138
errorParam           : 40
errorProgram         : 1
errorReturn          : 51
errorStructDeclare   : 64
errorType            : 13
errorVars            : 10
errorWhileCycle      : 76
exp                  : 110 111 112 113 114 115 116
expresion            : 32 51 76 78 84 85 89 91 98 107 108 131 138 140
fact                 : 124 125 126
flagParameters       : 48 48
forCycle             : 74
funcCall             : 26 33 130
function             : 8
init                 : 82 84
initDict             : 83
initWith             : 30
instr                : 73
main                 : 1
opAccess             : 132
opDictionary         : 135
opFunctions          : 1 8
opMatrix             : 138
opParamCall          : 88
opParameters         : 48
opReturns            : 48
opSExp               : 110
opStruct             : 134
opVars               : 1 19 58 59
optionalElse         : 98
optionalMatrix       : 93
param                : 42 53
program              : 0
return               : 58
sExp                 : 105
saveID               : 42 43 44 62
saveMain             : 19
saveParamToDirProc   : 53
saveProc             : 1 48
saveReturnType       : 58
saveType             : 1 40 48 62
saveTypeParam        : 42 43 44
struct               : 64
structDeclare        : 28
structType           : 93
term                 : 119 120 121
type                 : 40 58 62 94 103 103
vars                 : 6
whileCycle           : 75

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main }
    (5) errorProgram -> .

    PROGRAM         reduce using rule 5 (errorProgram -> .)

    errorProgram                   shift and go to state 2
    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> errorProgram . PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main }

    PROGRAM         shift and go to state 3


state 3

    (1) program -> errorProgram PROGRAM . saveType ID saveProc { opVars changeCurrentScope opFunctions main }
    (3) saveType -> .

    ID              reduce using rule 3 (saveType -> .)

    saveType                       shift and go to state 4

state 4

    (1) program -> errorProgram PROGRAM saveType . ID saveProc { opVars changeCurrentScope opFunctions main }

    ID              shift and go to state 5


state 5

    (1) program -> errorProgram PROGRAM saveType ID . saveProc { opVars changeCurrentScope opFunctions main }
    (4) saveProc -> .

    {               reduce using rule 4 (saveProc -> .)

    saveProc                       shift and go to state 6

state 6

    (1) program -> errorProgram PROGRAM saveType ID saveProc . { opVars changeCurrentScope opFunctions main }

    {               shift and go to state 7


state 7

    (1) program -> errorProgram PROGRAM saveType ID saveProc { . opVars changeCurrentScope opFunctions main }
    (6) opVars -> . vars
    (7) opVars -> . empty
    (10) vars -> . errorVars VARS declare
    (150) empty -> .
    (12) errorVars -> .

    MAIN            reduce using rule 150 (empty -> .)
    FUNC            reduce using rule 150 (empty -> .)
    VARS            reduce using rule 12 (errorVars -> .)

    vars                           shift and go to state 8
    opVars                         shift and go to state 9
    errorVars                      shift and go to state 10
    empty                          shift and go to state 11

state 8

    (6) opVars -> vars .

    RETURN          reduce using rule 6 (opVars -> vars .)
    ID              reduce using rule 6 (opVars -> vars .)
    IF              reduce using rule 6 (opVars -> vars .)
    FOR             reduce using rule 6 (opVars -> vars .)
    WHILE           reduce using rule 6 (opVars -> vars .)
    MAIN            reduce using rule 6 (opVars -> vars .)
    FUNC            reduce using rule 6 (opVars -> vars .)
    }               reduce using rule 6 (opVars -> vars .)


state 9

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars . changeCurrentScope opFunctions main }
    (2) changeCurrentScope -> .

    MAIN            reduce using rule 2 (changeCurrentScope -> .)
    FUNC            reduce using rule 2 (changeCurrentScope -> .)

    changeCurrentScope             shift and go to state 12

state 10

    (10) vars -> errorVars . VARS declare

    VARS            shift and go to state 13


state 11

    (7) opVars -> empty .

    RETURN          reduce using rule 7 (opVars -> empty .)
    ID              reduce using rule 7 (opVars -> empty .)
    IF              reduce using rule 7 (opVars -> empty .)
    FOR             reduce using rule 7 (opVars -> empty .)
    WHILE           reduce using rule 7 (opVars -> empty .)
    MAIN            reduce using rule 7 (opVars -> empty .)
    FUNC            reduce using rule 7 (opVars -> empty .)
    }               reduce using rule 7 (opVars -> empty .)


state 12

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope . opFunctions main }
    (8) opFunctions -> . function opFunctions
    (9) opFunctions -> . empty
    (48) function -> . errorFunction FUNC saveType ID saveProc flagParameters ( opParameters ) flagParameters opReturns } clearVarsTable
    (150) empty -> .
    (49) errorFunction -> .

    MAIN            reduce using rule 150 (empty -> .)
    FUNC            reduce using rule 49 (errorFunction -> .)

    function                       shift and go to state 14
    errorFunction                  shift and go to state 15
    empty                          shift and go to state 16
    opFunctions                    shift and go to state 17

state 13

    (10) vars -> errorVars VARS . declare
    (27) declare -> . basicDeclare
    (28) declare -> . structDeclare
    (29) declare -> . dictDeclare
    (62) basicDeclare -> . saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (64) structDeclare -> . errorStructDeclare STRUCT ID struct ; cyDeclare
    (66) dictDeclare -> . errorDictDeclare DICT ID dict ; cyDeclare
    (3) saveType -> .
    (65) errorStructDeclare -> .
    (67) errorDictDeclare -> .

    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    OBJECT          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)
    STRUCT          reduce using rule 65 (errorStructDeclare -> .)
    DICT            reduce using rule 67 (errorDictDeclare -> .)

    dictDeclare                    shift and go to state 18
    saveType                       shift and go to state 19
    errorDictDeclare               shift and go to state 20
    structDeclare                  shift and go to state 21
    errorStructDeclare             shift and go to state 22
    basicDeclare                   shift and go to state 23
    declare                        shift and go to state 24

state 14

    (8) opFunctions -> function . opFunctions
    (8) opFunctions -> . function opFunctions
    (9) opFunctions -> . empty
    (48) function -> . errorFunction FUNC saveType ID saveProc flagParameters ( opParameters ) flagParameters opReturns } clearVarsTable
    (150) empty -> .
    (49) errorFunction -> .

    MAIN            reduce using rule 150 (empty -> .)
    FUNC            reduce using rule 49 (errorFunction -> .)

    function                       shift and go to state 14
    errorFunction                  shift and go to state 15
    empty                          shift and go to state 16
    opFunctions                    shift and go to state 25

state 15

    (48) function -> errorFunction . FUNC saveType ID saveProc flagParameters ( opParameters ) flagParameters opReturns } clearVarsTable

    FUNC            shift and go to state 26


state 16

    (9) opFunctions -> empty .

    MAIN            reduce using rule 9 (opFunctions -> empty .)


state 17

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions . main }
    (19) main -> . errorMain MAIN saveMain { opVars body }
    (21) errorMain -> .

    MAIN            reduce using rule 21 (errorMain -> .)

    main                           shift and go to state 27
    errorMain                      shift and go to state 28

state 18

    (29) declare -> dictDeclare .

    MAIN            reduce using rule 29 (declare -> dictDeclare .)
    FUNC            reduce using rule 29 (declare -> dictDeclare .)
    }               reduce using rule 29 (declare -> dictDeclare .)
    ID              reduce using rule 29 (declare -> dictDeclare .)
    IF              reduce using rule 29 (declare -> dictDeclare .)
    FOR             reduce using rule 29 (declare -> dictDeclare .)
    WHILE           reduce using rule 29 (declare -> dictDeclare .)
    RETURN          reduce using rule 29 (declare -> dictDeclare .)


state 19

    (62) basicDeclare -> saveType . type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . OBJECT
    (17) type -> . BOOL
    (18) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    OBJECT          shift and go to state 32
    BOOL            shift and go to state 33
    INT             reduce using rule 18 (errorType -> .)

    errorType                      shift and go to state 31
    type                           shift and go to state 34

state 20

    (66) dictDeclare -> errorDictDeclare . DICT ID dict ; cyDeclare

    DICT            shift and go to state 35


state 21

    (28) declare -> structDeclare .

    MAIN            reduce using rule 28 (declare -> structDeclare .)
    FUNC            reduce using rule 28 (declare -> structDeclare .)
    }               reduce using rule 28 (declare -> structDeclare .)
    ID              reduce using rule 28 (declare -> structDeclare .)
    IF              reduce using rule 28 (declare -> structDeclare .)
    FOR             reduce using rule 28 (declare -> structDeclare .)
    WHILE           reduce using rule 28 (declare -> structDeclare .)
    RETURN          reduce using rule 28 (declare -> structDeclare .)


state 22

    (64) structDeclare -> errorStructDeclare . STRUCT ID struct ; cyDeclare

    STRUCT          shift and go to state 36


state 23

    (27) declare -> basicDeclare .

    MAIN            reduce using rule 27 (declare -> basicDeclare .)
    FUNC            reduce using rule 27 (declare -> basicDeclare .)
    }               reduce using rule 27 (declare -> basicDeclare .)
    ID              reduce using rule 27 (declare -> basicDeclare .)
    IF              reduce using rule 27 (declare -> basicDeclare .)
    FOR             reduce using rule 27 (declare -> basicDeclare .)
    WHILE           reduce using rule 27 (declare -> basicDeclare .)
    RETURN          reduce using rule 27 (declare -> basicDeclare .)


state 24

    (10) vars -> errorVars VARS declare .

    }               reduce using rule 10 (vars -> errorVars VARS declare .)
    ID              reduce using rule 10 (vars -> errorVars VARS declare .)
    IF              reduce using rule 10 (vars -> errorVars VARS declare .)
    FOR             reduce using rule 10 (vars -> errorVars VARS declare .)
    WHILE           reduce using rule 10 (vars -> errorVars VARS declare .)
    MAIN            reduce using rule 10 (vars -> errorVars VARS declare .)
    FUNC            reduce using rule 10 (vars -> errorVars VARS declare .)
    RETURN          reduce using rule 10 (vars -> errorVars VARS declare .)


state 25

    (8) opFunctions -> function opFunctions .

    MAIN            reduce using rule 8 (opFunctions -> function opFunctions .)


state 26

    (48) function -> errorFunction FUNC . saveType ID saveProc flagParameters ( opParameters ) flagParameters opReturns } clearVarsTable
    (3) saveType -> .

    ID              reduce using rule 3 (saveType -> .)

    saveType                       shift and go to state 37

state 27

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main . }

    }               shift and go to state 38


state 28

    (19) main -> errorMain . MAIN saveMain { opVars body }

    MAIN            shift and go to state 39


state 29

    (14) type -> FLOAT .

    ID              reduce using rule 14 (type -> FLOAT .)
    {               reduce using rule 14 (type -> FLOAT .)
    )               reduce using rule 14 (type -> FLOAT .)
    :               reduce using rule 14 (type -> FLOAT .)
    [               reduce using rule 14 (type -> FLOAT .)


state 30

    (15) type -> STRING .

    ID              reduce using rule 15 (type -> STRING .)
    {               reduce using rule 15 (type -> STRING .)
    )               reduce using rule 15 (type -> STRING .)
    :               reduce using rule 15 (type -> STRING .)
    [               reduce using rule 15 (type -> STRING .)


state 31

    (13) type -> errorType . INT

    INT             shift and go to state 40


state 32

    (16) type -> OBJECT .

    ID              reduce using rule 16 (type -> OBJECT .)
    {               reduce using rule 16 (type -> OBJECT .)
    )               reduce using rule 16 (type -> OBJECT .)
    :               reduce using rule 16 (type -> OBJECT .)
    [               reduce using rule 16 (type -> OBJECT .)


state 33

    (17) type -> BOOL .

    ID              reduce using rule 17 (type -> BOOL .)
    {               reduce using rule 17 (type -> BOOL .)
    )               reduce using rule 17 (type -> BOOL .)
    :               reduce using rule 17 (type -> BOOL .)
    [               reduce using rule 17 (type -> BOOL .)


state 34

    (62) basicDeclare -> saveType type . errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (63) errorBasicDeclare -> .

    ID              reduce using rule 63 (errorBasicDeclare -> .)

    errorBasicDeclare              shift and go to state 41

state 35

    (66) dictDeclare -> errorDictDeclare DICT . ID dict ; cyDeclare

    ID              shift and go to state 42


state 36

    (64) structDeclare -> errorStructDeclare STRUCT . ID struct ; cyDeclare

    ID              shift and go to state 43


state 37

    (48) function -> errorFunction FUNC saveType . ID saveProc flagParameters ( opParameters ) flagParameters opReturns } clearVarsTable

    ID              shift and go to state 44


state 38

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } .

    $end            reduce using rule 1 (program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } .)


state 39

    (19) main -> errorMain MAIN . saveMain { opVars body }
    (20) saveMain -> .

    {               reduce using rule 20 (saveMain -> .)

    saveMain                       shift and go to state 45

state 40

    (13) type -> errorType INT .

    ID              reduce using rule 13 (type -> errorType INT .)
    {               reduce using rule 13 (type -> errorType INT .)
    )               reduce using rule 13 (type -> errorType INT .)
    :               reduce using rule 13 (type -> errorType INT .)
    [               reduce using rule 13 (type -> errorType INT .)


state 41

    (62) basicDeclare -> saveType type errorBasicDeclare . ID cyTypeParam saveID ; cyDeclare

    ID              shift and go to state 46


state 42

    (66) dictDeclare -> errorDictDeclare DICT ID . dict ; cyDeclare
    (103) dict -> . errorDict ( type : type )
    (104) errorDict -> .

    (               reduce using rule 104 (errorDict -> .)

    dict                           shift and go to state 48
    errorDict                      shift and go to state 47

state 43

    (64) structDeclare -> errorStructDeclare STRUCT ID . struct ; cyDeclare
    (93) struct -> . structType [ CTED ] optionalMatrix
    (94) structType -> . type
    (95) structType -> . DICT dict
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . OBJECT
    (17) type -> . BOOL
    (18) errorType -> .

    DICT            shift and go to state 51
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    OBJECT          shift and go to state 32
    BOOL            shift and go to state 33
    INT             reduce using rule 18 (errorType -> .)

    structType                     shift and go to state 49
    struct                         shift and go to state 50
    errorType                      shift and go to state 31
    type                           shift and go to state 52

state 44

    (48) function -> errorFunction FUNC saveType ID . saveProc flagParameters ( opParameters ) flagParameters opReturns } clearVarsTable
    (4) saveProc -> .

    (               reduce using rule 4 (saveProc -> .)

    saveProc                       shift and go to state 53

state 45

    (19) main -> errorMain MAIN saveMain . { opVars body }

    {               shift and go to state 54


state 46

    (62) basicDeclare -> saveType type errorBasicDeclare ID . cyTypeParam saveID ; cyDeclare
    (44) cyTypeParam -> . , saveID saveTypeParam ID cyTypeParam
    (45) cyTypeParam -> . empty
    (150) empty -> .

    ,               shift and go to state 55
    ;               reduce using rule 150 (empty -> .)

    empty                          shift and go to state 56
    cyTypeParam                    shift and go to state 57

state 47

    (103) dict -> errorDict . ( type : type )

    (               shift and go to state 58


state 48

    (66) dictDeclare -> errorDictDeclare DICT ID dict . ; cyDeclare

    ;               shift and go to state 59


state 49

    (93) struct -> structType . [ CTED ] optionalMatrix

    [               shift and go to state 60


state 50

    (64) structDeclare -> errorStructDeclare STRUCT ID struct . ; cyDeclare

    ;               shift and go to state 61


state 51

    (95) structType -> DICT . dict
    (103) dict -> . errorDict ( type : type )
    (104) errorDict -> .

    (               reduce using rule 104 (errorDict -> .)

    dict                           shift and go to state 62
    errorDict                      shift and go to state 47

state 52

    (94) structType -> type .

    [               reduce using rule 94 (structType -> type .)


state 53

    (48) function -> errorFunction FUNC saveType ID saveProc . flagParameters ( opParameters ) flagParameters opReturns } clearVarsTable
    (55) flagParameters -> .

    (               reduce using rule 55 (flagParameters -> .)

    flagParameters                 shift and go to state 63

state 54

    (19) main -> errorMain MAIN saveMain { . opVars body }
    (6) opVars -> . vars
    (7) opVars -> . empty
    (10) vars -> . errorVars VARS declare
    (150) empty -> .
    (12) errorVars -> .

    }               reduce using rule 150 (empty -> .)
    ID              reduce using rule 150 (empty -> .)
    IF              reduce using rule 150 (empty -> .)
    FOR             reduce using rule 150 (empty -> .)
    WHILE           reduce using rule 150 (empty -> .)
    VARS            reduce using rule 12 (errorVars -> .)

    vars                           shift and go to state 8
    opVars                         shift and go to state 64
    errorVars                      shift and go to state 10
    empty                          shift and go to state 11

state 55

    (44) cyTypeParam -> , . saveID saveTypeParam ID cyTypeParam
    (11) saveID -> .

    ID              reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 65

state 56

    (45) cyTypeParam -> empty .

    ;               reduce using rule 45 (cyTypeParam -> empty .)
    )               reduce using rule 45 (cyTypeParam -> empty .)


state 57

    (62) basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam . saveID ; cyDeclare
    (11) saveID -> .

    ;               reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 66

state 58

    (103) dict -> errorDict ( . type : type )
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . OBJECT
    (17) type -> . BOOL
    (18) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    OBJECT          shift and go to state 32
    BOOL            shift and go to state 33
    INT             reduce using rule 18 (errorType -> .)

    errorType                      shift and go to state 31
    type                           shift and go to state 67

state 59

    (66) dictDeclare -> errorDictDeclare DICT ID dict ; . cyDeclare
    (68) cyDeclare -> . declare
    (69) cyDeclare -> . empty
    (27) declare -> . basicDeclare
    (28) declare -> . structDeclare
    (29) declare -> . dictDeclare
    (150) empty -> .
    (62) basicDeclare -> . saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (64) structDeclare -> . errorStructDeclare STRUCT ID struct ; cyDeclare
    (66) dictDeclare -> . errorDictDeclare DICT ID dict ; cyDeclare
    (3) saveType -> .
    (65) errorStructDeclare -> .
    (67) errorDictDeclare -> .

    MAIN            reduce using rule 150 (empty -> .)
    FUNC            reduce using rule 150 (empty -> .)
    }               reduce using rule 150 (empty -> .)
    ID              reduce using rule 150 (empty -> .)
    IF              reduce using rule 150 (empty -> .)
    FOR             reduce using rule 150 (empty -> .)
    WHILE           reduce using rule 150 (empty -> .)
    RETURN          reduce using rule 150 (empty -> .)
    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    OBJECT          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)
    STRUCT          reduce using rule 65 (errorStructDeclare -> .)
    DICT            reduce using rule 67 (errorDictDeclare -> .)

    dictDeclare                    shift and go to state 18
    cyDeclare                      shift and go to state 68
    saveType                       shift and go to state 19
    structDeclare                  shift and go to state 21
    errorDictDeclare               shift and go to state 20
    errorStructDeclare             shift and go to state 22
    basicDeclare                   shift and go to state 23
    declare                        shift and go to state 69
    empty                          shift and go to state 70

state 60

    (93) struct -> structType [ . CTED ] optionalMatrix

    CTED            shift and go to state 71


state 61

    (64) structDeclare -> errorStructDeclare STRUCT ID struct ; . cyDeclare
    (68) cyDeclare -> . declare
    (69) cyDeclare -> . empty
    (27) declare -> . basicDeclare
    (28) declare -> . structDeclare
    (29) declare -> . dictDeclare
    (150) empty -> .
    (62) basicDeclare -> . saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (64) structDeclare -> . errorStructDeclare STRUCT ID struct ; cyDeclare
    (66) dictDeclare -> . errorDictDeclare DICT ID dict ; cyDeclare
    (3) saveType -> .
    (65) errorStructDeclare -> .
    (67) errorDictDeclare -> .

    MAIN            reduce using rule 150 (empty -> .)
    FUNC            reduce using rule 150 (empty -> .)
    }               reduce using rule 150 (empty -> .)
    ID              reduce using rule 150 (empty -> .)
    IF              reduce using rule 150 (empty -> .)
    FOR             reduce using rule 150 (empty -> .)
    WHILE           reduce using rule 150 (empty -> .)
    RETURN          reduce using rule 150 (empty -> .)
    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    OBJECT          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)
    STRUCT          reduce using rule 65 (errorStructDeclare -> .)
    DICT            reduce using rule 67 (errorDictDeclare -> .)

    dictDeclare                    shift and go to state 18
    cyDeclare                      shift and go to state 72
    saveType                       shift and go to state 19
    errorDictDeclare               shift and go to state 20
    structDeclare                  shift and go to state 21
    basicDeclare                   shift and go to state 23
    declare                        shift and go to state 69
    empty                          shift and go to state 70
    errorStructDeclare             shift and go to state 22

state 62

    (95) structType -> DICT dict .

    [               reduce using rule 95 (structType -> DICT dict .)


state 63

    (48) function -> errorFunction FUNC saveType ID saveProc flagParameters . ( opParameters ) flagParameters opReturns } clearVarsTable

    (               shift and go to state 73


state 64

    (19) main -> errorMain MAIN saveMain { opVars . body }
    (70) body -> . errorBody cyInstruction
    (71) body -> . empty
    (72) errorBody -> .
    (150) empty -> .

    ID              reduce using rule 72 (errorBody -> .)
    IF              reduce using rule 72 (errorBody -> .)
    FOR             reduce using rule 72 (errorBody -> .)
    WHILE           reduce using rule 72 (errorBody -> .)
    }               reduce using rule 150 (empty -> .)

    body                           shift and go to state 74
    errorBody                      shift and go to state 75
    empty                          shift and go to state 76

state 65

    (44) cyTypeParam -> , saveID . saveTypeParam ID cyTypeParam
    (46) saveTypeParam -> .

    ID              reduce using rule 46 (saveTypeParam -> .)

    saveTypeParam                  shift and go to state 77

state 66

    (62) basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID . ; cyDeclare

    ;               shift and go to state 78


state 67

    (103) dict -> errorDict ( type . : type )

    :               shift and go to state 79


state 68

    (66) dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .

    MAIN            reduce using rule 66 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    FUNC            reduce using rule 66 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    }               reduce using rule 66 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    ID              reduce using rule 66 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    IF              reduce using rule 66 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    FOR             reduce using rule 66 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    WHILE           reduce using rule 66 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    RETURN          reduce using rule 66 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)


state 69

    (68) cyDeclare -> declare .

    MAIN            reduce using rule 68 (cyDeclare -> declare .)
    FUNC            reduce using rule 68 (cyDeclare -> declare .)
    }               reduce using rule 68 (cyDeclare -> declare .)
    ID              reduce using rule 68 (cyDeclare -> declare .)
    IF              reduce using rule 68 (cyDeclare -> declare .)
    FOR             reduce using rule 68 (cyDeclare -> declare .)
    WHILE           reduce using rule 68 (cyDeclare -> declare .)
    RETURN          reduce using rule 68 (cyDeclare -> declare .)


state 70

    (69) cyDeclare -> empty .

    MAIN            reduce using rule 69 (cyDeclare -> empty .)
    FUNC            reduce using rule 69 (cyDeclare -> empty .)
    }               reduce using rule 69 (cyDeclare -> empty .)
    ID              reduce using rule 69 (cyDeclare -> empty .)
    IF              reduce using rule 69 (cyDeclare -> empty .)
    FOR             reduce using rule 69 (cyDeclare -> empty .)
    WHILE           reduce using rule 69 (cyDeclare -> empty .)
    RETURN          reduce using rule 69 (cyDeclare -> empty .)


state 71

    (93) struct -> structType [ CTED . ] optionalMatrix

    ]               shift and go to state 80


state 72

    (64) structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .

    MAIN            reduce using rule 64 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    FUNC            reduce using rule 64 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    }               reduce using rule 64 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    ID              reduce using rule 64 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    IF              reduce using rule 64 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    FOR             reduce using rule 64 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    WHILE           reduce using rule 64 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    RETURN          reduce using rule 64 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)


state 73

    (48) function -> errorFunction FUNC saveType ID saveProc flagParameters ( . opParameters ) flagParameters opReturns } clearVarsTable
    (53) opParameters -> . param saveParamToDirProc errorOpParameters
    (54) opParameters -> . empty
    (40) param -> . saveType type errorParam ID cyTypeParam cyParam
    (150) empty -> .
    (3) saveType -> .

    )               reduce using rule 150 (empty -> .)
    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    OBJECT          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)

    opParameters                   shift and go to state 83
    param                          shift and go to state 81
    saveType                       shift and go to state 82
    empty                          shift and go to state 84

state 74

    (19) main -> errorMain MAIN saveMain { opVars body . }

    }               shift and go to state 85


state 75

    (70) body -> errorBody . cyInstruction
    (73) cyInstruction -> . instr body
    (22) instr -> . basicStatements ;
    (23) instr -> . condition
    (24) instr -> . cycle
    (25) basicStatements -> . assign
    (26) basicStatements -> . funcCall
    (98) condition -> . errorCondition IF ( expresion ) { body } optionalElse
    (74) cycle -> . forCycle
    (75) cycle -> . whileCycle
    (80) assign -> . ID errorAssign assignOptions
    (88) funcCall -> . ID ( opParamCall )
    (99) errorCondition -> .
    (78) forCycle -> . errorForCycle FOR ( assign ; expresion ; assign ) { body }
    (76) whileCycle -> . errorWhileCycle WHILE ( expresion ) { body }
    (79) errorForCycle -> .
    (77) errorWhileCycle -> .

    ID              shift and go to state 95
    IF              reduce using rule 99 (errorCondition -> .)
    FOR             reduce using rule 79 (errorForCycle -> .)
    WHILE           reduce using rule 77 (errorWhileCycle -> .)

    errorWhileCycle                shift and go to state 89
    funcCall                       shift and go to state 96
    instr                          shift and go to state 86
    forCycle                       shift and go to state 88
    assign                         shift and go to state 98
    whileCycle                     shift and go to state 87
    basicStatements                shift and go to state 93
    errorForCycle                  shift and go to state 94
    errorCondition                 shift and go to state 97
    cyInstruction                  shift and go to state 90
    condition                      shift and go to state 91
    cycle                          shift and go to state 92

state 76

    (71) body -> empty .

    }               reduce using rule 71 (body -> empty .)
    RETURN          reduce using rule 71 (body -> empty .)


state 77

    (44) cyTypeParam -> , saveID saveTypeParam . ID cyTypeParam

    ID              shift and go to state 99


state 78

    (62) basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; . cyDeclare
    (68) cyDeclare -> . declare
    (69) cyDeclare -> . empty
    (27) declare -> . basicDeclare
    (28) declare -> . structDeclare
    (29) declare -> . dictDeclare
    (150) empty -> .
    (62) basicDeclare -> . saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (64) structDeclare -> . errorStructDeclare STRUCT ID struct ; cyDeclare
    (66) dictDeclare -> . errorDictDeclare DICT ID dict ; cyDeclare
    (3) saveType -> .
    (65) errorStructDeclare -> .
    (67) errorDictDeclare -> .

    MAIN            reduce using rule 150 (empty -> .)
    FUNC            reduce using rule 150 (empty -> .)
    }               reduce using rule 150 (empty -> .)
    ID              reduce using rule 150 (empty -> .)
    IF              reduce using rule 150 (empty -> .)
    FOR             reduce using rule 150 (empty -> .)
    WHILE           reduce using rule 150 (empty -> .)
    RETURN          reduce using rule 150 (empty -> .)
    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    OBJECT          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)
    STRUCT          reduce using rule 65 (errorStructDeclare -> .)
    DICT            reduce using rule 67 (errorDictDeclare -> .)

    dictDeclare                    shift and go to state 18
    cyDeclare                      shift and go to state 100
    basicDeclare                   shift and go to state 23
    saveType                       shift and go to state 19
    errorDictDeclare               shift and go to state 20
    empty                          shift and go to state 70
    structDeclare                  shift and go to state 21
    errorStructDeclare             shift and go to state 22
    declare                        shift and go to state 69

state 79

    (103) dict -> errorDict ( type : . type )
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . OBJECT
    (17) type -> . BOOL
    (18) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    OBJECT          shift and go to state 32
    BOOL            shift and go to state 33
    INT             reduce using rule 18 (errorType -> .)

    errorType                      shift and go to state 31
    type                           shift and go to state 101

state 80

    (93) struct -> structType [ CTED ] . optionalMatrix
    (96) optionalMatrix -> . [ CTED ]
    (97) optionalMatrix -> . empty
    (150) empty -> .

    [               shift and go to state 103
    ;               reduce using rule 150 (empty -> .)

    empty                          shift and go to state 104
    optionalMatrix                 shift and go to state 102

state 81

    (53) opParameters -> param . saveParamToDirProc errorOpParameters
    (56) saveParamToDirProc -> .

    )               reduce using rule 56 (saveParamToDirProc -> .)

    saveParamToDirProc             shift and go to state 105

state 82

    (40) param -> saveType . type errorParam ID cyTypeParam cyParam
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . OBJECT
    (17) type -> . BOOL
    (18) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    OBJECT          shift and go to state 32
    BOOL            shift and go to state 33
    INT             reduce using rule 18 (errorType -> .)

    type                           shift and go to state 106
    errorType                      shift and go to state 31

state 83

    (48) function -> errorFunction FUNC saveType ID saveProc flagParameters ( opParameters . ) flagParameters opReturns } clearVarsTable

    )               shift and go to state 107


state 84

    (54) opParameters -> empty .

    )               reduce using rule 54 (opParameters -> empty .)


state 85

    (19) main -> errorMain MAIN saveMain { opVars body } .

    }               reduce using rule 19 (main -> errorMain MAIN saveMain { opVars body } .)


state 86

    (73) cyInstruction -> instr . body
    (70) body -> . errorBody cyInstruction
    (71) body -> . empty
    (72) errorBody -> .
    (150) empty -> .

    ID              reduce using rule 72 (errorBody -> .)
    IF              reduce using rule 72 (errorBody -> .)
    FOR             reduce using rule 72 (errorBody -> .)
    WHILE           reduce using rule 72 (errorBody -> .)
    }               reduce using rule 150 (empty -> .)
    RETURN          reduce using rule 150 (empty -> .)

    body                           shift and go to state 108
    errorBody                      shift and go to state 75
    empty                          shift and go to state 76

state 87

    (75) cycle -> whileCycle .

    ID              reduce using rule 75 (cycle -> whileCycle .)
    IF              reduce using rule 75 (cycle -> whileCycle .)
    FOR             reduce using rule 75 (cycle -> whileCycle .)
    WHILE           reduce using rule 75 (cycle -> whileCycle .)
    }               reduce using rule 75 (cycle -> whileCycle .)
    RETURN          reduce using rule 75 (cycle -> whileCycle .)


state 88

    (74) cycle -> forCycle .

    ID              reduce using rule 74 (cycle -> forCycle .)
    IF              reduce using rule 74 (cycle -> forCycle .)
    FOR             reduce using rule 74 (cycle -> forCycle .)
    WHILE           reduce using rule 74 (cycle -> forCycle .)
    }               reduce using rule 74 (cycle -> forCycle .)
    RETURN          reduce using rule 74 (cycle -> forCycle .)


state 89

    (76) whileCycle -> errorWhileCycle . WHILE ( expresion ) { body }

    WHILE           shift and go to state 109


state 90

    (70) body -> errorBody cyInstruction .

    }               reduce using rule 70 (body -> errorBody cyInstruction .)
    RETURN          reduce using rule 70 (body -> errorBody cyInstruction .)


state 91

    (23) instr -> condition .

    ID              reduce using rule 23 (instr -> condition .)
    IF              reduce using rule 23 (instr -> condition .)
    FOR             reduce using rule 23 (instr -> condition .)
    WHILE           reduce using rule 23 (instr -> condition .)
    }               reduce using rule 23 (instr -> condition .)
    RETURN          reduce using rule 23 (instr -> condition .)


state 92

    (24) instr -> cycle .

    ID              reduce using rule 24 (instr -> cycle .)
    IF              reduce using rule 24 (instr -> cycle .)
    FOR             reduce using rule 24 (instr -> cycle .)
    WHILE           reduce using rule 24 (instr -> cycle .)
    }               reduce using rule 24 (instr -> cycle .)
    RETURN          reduce using rule 24 (instr -> cycle .)


state 93

    (22) instr -> basicStatements . ;

    ;               shift and go to state 110


state 94

    (78) forCycle -> errorForCycle . FOR ( assign ; expresion ; assign ) { body }

    FOR             shift and go to state 111


state 95

    (80) assign -> ID . errorAssign assignOptions
    (88) funcCall -> ID . ( opParamCall )
    (81) errorAssign -> .

    (               shift and go to state 112
    [               reduce using rule 81 (errorAssign -> .)
    =               reduce using rule 81 (errorAssign -> .)

    errorAssign                    shift and go to state 113

state 96

    (26) basicStatements -> funcCall .

    ;               reduce using rule 26 (basicStatements -> funcCall .)


state 97

    (98) condition -> errorCondition . IF ( expresion ) { body } optionalElse

    IF              shift and go to state 114


state 98

    (25) basicStatements -> assign .

    ;               reduce using rule 25 (basicStatements -> assign .)


state 99

    (44) cyTypeParam -> , saveID saveTypeParam ID . cyTypeParam
    (44) cyTypeParam -> . , saveID saveTypeParam ID cyTypeParam
    (45) cyTypeParam -> . empty
    (150) empty -> .

    ,               shift and go to state 55
    ;               reduce using rule 150 (empty -> .)
    )               reduce using rule 150 (empty -> .)

    cyTypeParam                    shift and go to state 115
    empty                          shift and go to state 56

state 100

    (62) basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .

    MAIN            reduce using rule 62 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    FUNC            reduce using rule 62 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    }               reduce using rule 62 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    ID              reduce using rule 62 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    IF              reduce using rule 62 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    FOR             reduce using rule 62 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    WHILE           reduce using rule 62 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    RETURN          reduce using rule 62 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)


state 101

    (103) dict -> errorDict ( type : type . )

    )               shift and go to state 116


state 102

    (93) struct -> structType [ CTED ] optionalMatrix .

    ;               reduce using rule 93 (struct -> structType [ CTED ] optionalMatrix .)


state 103

    (96) optionalMatrix -> [ . CTED ]

    CTED            shift and go to state 117


state 104

    (97) optionalMatrix -> empty .

    ;               reduce using rule 97 (optionalMatrix -> empty .)


state 105

    (53) opParameters -> param saveParamToDirProc . errorOpParameters
    (57) errorOpParameters -> .

    )               reduce using rule 57 (errorOpParameters -> .)

    errorOpParameters              shift and go to state 118

state 106

    (40) param -> saveType type . errorParam ID cyTypeParam cyParam
    (41) errorParam -> .

    ID              reduce using rule 41 (errorParam -> .)

    errorParam                     shift and go to state 119

state 107

    (48) function -> errorFunction FUNC saveType ID saveProc flagParameters ( opParameters ) . flagParameters opReturns } clearVarsTable
    (55) flagParameters -> .

    {               reduce using rule 55 (flagParameters -> .)
    RETURNS         reduce using rule 55 (flagParameters -> .)

    flagParameters                 shift and go to state 120

state 108

    (73) cyInstruction -> instr body .

    }               reduce using rule 73 (cyInstruction -> instr body .)
    RETURN          reduce using rule 73 (cyInstruction -> instr body .)


state 109

    (76) whileCycle -> errorWhileCycle WHILE . ( expresion ) { body }

    (               shift and go to state 121


state 110

    (22) instr -> basicStatements ; .

    ID              reduce using rule 22 (instr -> basicStatements ; .)
    IF              reduce using rule 22 (instr -> basicStatements ; .)
    FOR             reduce using rule 22 (instr -> basicStatements ; .)
    WHILE           reduce using rule 22 (instr -> basicStatements ; .)
    }               reduce using rule 22 (instr -> basicStatements ; .)
    RETURN          reduce using rule 22 (instr -> basicStatements ; .)


state 111

    (78) forCycle -> errorForCycle FOR . ( assign ; expresion ; assign ) { body }

    (               shift and go to state 122


state 112

    (88) funcCall -> ID ( . opParamCall )
    (89) opParamCall -> . expresion cyParamCall
    (90) opParamCall -> . empty
    (105) expresion -> . sExp cyExpresion errorExpresion
    (150) empty -> .
    (110) sExp -> . exp errorOpSExp opSExp
    (119) exp -> . term errorCyExp cyExp
    (124) term -> . fact cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . ( expresion )
    (132) fact -> . ID opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID ( opParamCall )

    )               reduce using rule 150 (empty -> .)
    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    expresion                      shift and go to state 130
    term                           shift and go to state 132
    funcCall                       shift and go to state 134
    sExp                           shift and go to state 126
    cte                            shift and go to state 135
    fact                           shift and go to state 138
    exp                            shift and go to state 137
    opParamCall                    shift and go to state 123
    empty                          shift and go to state 127

state 113

    (80) assign -> ID errorAssign . assignOptions
    (82) assignOptions -> . init
    (83) assignOptions -> . initDict
    (84) assignOptions -> . [ expresion ] assignMatrix init
    (30) init -> . = initWith errorInit
    (34) initDict -> . = ( dictType : dictType ) errorInitDict

    [               shift and go to state 143
    =               shift and go to state 139

    initDict                       shift and go to state 140
    assignOptions                  shift and go to state 141
    init                           shift and go to state 142

state 114

    (98) condition -> errorCondition IF . ( expresion ) { body } optionalElse

    (               shift and go to state 144


state 115

    (44) cyTypeParam -> , saveID saveTypeParam ID cyTypeParam .

    ;               reduce using rule 44 (cyTypeParam -> , saveID saveTypeParam ID cyTypeParam .)
    )               reduce using rule 44 (cyTypeParam -> , saveID saveTypeParam ID cyTypeParam .)


state 116

    (103) dict -> errorDict ( type : type ) .

    ;               reduce using rule 103 (dict -> errorDict ( type : type ) .)
    [               reduce using rule 103 (dict -> errorDict ( type : type ) .)


state 117

    (96) optionalMatrix -> [ CTED . ]

    ]               shift and go to state 145


state 118

    (53) opParameters -> param saveParamToDirProc errorOpParameters .

    )               reduce using rule 53 (opParameters -> param saveParamToDirProc errorOpParameters .)


state 119

    (40) param -> saveType type errorParam . ID cyTypeParam cyParam

    ID              shift and go to state 146


state 120

    (48) function -> errorFunction FUNC saveType ID saveProc flagParameters ( opParameters ) flagParameters . opReturns } clearVarsTable
    (58) opReturns -> . errorOpReturns RETURNS type saveReturnType { opVars body return
    (59) opReturns -> . { opVars body
    (61) errorOpReturns -> .

    {               shift and go to state 148
    RETURNS         reduce using rule 61 (errorOpReturns -> .)

    errorOpReturns                 shift and go to state 147
    opReturns                      shift and go to state 149

state 121

    (76) whileCycle -> errorWhileCycle WHILE ( . expresion ) { body }
    (105) expresion -> . sExp cyExpresion errorExpresion
    (110) sExp -> . exp errorOpSExp opSExp
    (119) exp -> . term errorCyExp cyExp
    (124) term -> . fact cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . ( expresion )
    (132) fact -> . ID opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    expresion                      shift and go to state 150
    term                           shift and go to state 132
    funcCall                       shift and go to state 134
    sExp                           shift and go to state 126
    cte                            shift and go to state 135
    exp                            shift and go to state 137
    fact                           shift and go to state 138

state 122

    (78) forCycle -> errorForCycle FOR ( . assign ; expresion ; assign ) { body }
    (80) assign -> . ID errorAssign assignOptions

    ID              shift and go to state 151

    assign                         shift and go to state 152

state 123

    (88) funcCall -> ID ( opParamCall . )

    )               shift and go to state 153


state 124

    (148) cte -> TRUE .

    *               reduce using rule 148 (cte -> TRUE .)
    /               reduce using rule 148 (cte -> TRUE .)
    +               reduce using rule 148 (cte -> TRUE .)
    -               reduce using rule 148 (cte -> TRUE .)
    EQ              reduce using rule 148 (cte -> TRUE .)
    DIF             reduce using rule 148 (cte -> TRUE .)
    LTOEQ           reduce using rule 148 (cte -> TRUE .)
    GTOEQ           reduce using rule 148 (cte -> TRUE .)
    >               reduce using rule 148 (cte -> TRUE .)
    <               reduce using rule 148 (cte -> TRUE .)
    AND             reduce using rule 148 (cte -> TRUE .)
    OR              reduce using rule 148 (cte -> TRUE .)
    ]               reduce using rule 148 (cte -> TRUE .)
    ,               reduce using rule 148 (cte -> TRUE .)
    )               reduce using rule 148 (cte -> TRUE .)
    ;               reduce using rule 148 (cte -> TRUE .)
    :               reduce using rule 148 (cte -> TRUE .)


state 125

    (131) fact -> ( . expresion )
    (105) expresion -> . sExp cyExpresion errorExpresion
    (110) sExp -> . exp errorOpSExp opSExp
    (119) exp -> . term errorCyExp cyExp
    (124) term -> . fact cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . ( expresion )
    (132) fact -> . ID opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    expresion                      shift and go to state 154
    term                           shift and go to state 132
    funcCall                       shift and go to state 134
    sExp                           shift and go to state 126
    cte                            shift and go to state 135
    exp                            shift and go to state 137
    fact                           shift and go to state 138

state 126

    (105) expresion -> sExp . cyExpresion errorExpresion
    (107) cyExpresion -> . AND expresion
    (108) cyExpresion -> . OR expresion
    (109) cyExpresion -> . empty
    (150) empty -> .

    AND             shift and go to state 155
    OR              shift and go to state 157
    ,               reduce using rule 150 (empty -> .)
    )               reduce using rule 150 (empty -> .)
    ;               reduce using rule 150 (empty -> .)
    ]               reduce using rule 150 (empty -> .)

    cyExpresion                    shift and go to state 156
    empty                          shift and go to state 158

state 127

    (90) opParamCall -> empty .

    )               reduce using rule 90 (opParamCall -> empty .)


state 128

    (146) cte -> CTED .

    *               reduce using rule 146 (cte -> CTED .)
    /               reduce using rule 146 (cte -> CTED .)
    +               reduce using rule 146 (cte -> CTED .)
    -               reduce using rule 146 (cte -> CTED .)
    EQ              reduce using rule 146 (cte -> CTED .)
    DIF             reduce using rule 146 (cte -> CTED .)
    LTOEQ           reduce using rule 146 (cte -> CTED .)
    GTOEQ           reduce using rule 146 (cte -> CTED .)
    >               reduce using rule 146 (cte -> CTED .)
    <               reduce using rule 146 (cte -> CTED .)
    AND             reduce using rule 146 (cte -> CTED .)
    OR              reduce using rule 146 (cte -> CTED .)
    ]               reduce using rule 146 (cte -> CTED .)
    ,               reduce using rule 146 (cte -> CTED .)
    )               reduce using rule 146 (cte -> CTED .)
    ;               reduce using rule 146 (cte -> CTED .)
    :               reduce using rule 146 (cte -> CTED .)


state 129

    (132) fact -> ID . opAccess errorOpAccess
    (88) funcCall -> ID . ( opParamCall )
    (134) opAccess -> . opStruct
    (135) opAccess -> . opDictionary
    (136) opAccess -> . empty
    (138) opStruct -> . errorOpStruct [ expresion ] opMatrix
    (143) opDictionary -> . . dictIndex
    (150) empty -> .
    (139) errorOpStruct -> .

    (               shift and go to state 112
    .               shift and go to state 163
    *               reduce using rule 150 (empty -> .)
    /               reduce using rule 150 (empty -> .)
    +               reduce using rule 150 (empty -> .)
    -               reduce using rule 150 (empty -> .)
    EQ              reduce using rule 150 (empty -> .)
    DIF             reduce using rule 150 (empty -> .)
    LTOEQ           reduce using rule 150 (empty -> .)
    GTOEQ           reduce using rule 150 (empty -> .)
    >               reduce using rule 150 (empty -> .)
    <               reduce using rule 150 (empty -> .)
    AND             reduce using rule 150 (empty -> .)
    OR              reduce using rule 150 (empty -> .)
    ,               reduce using rule 150 (empty -> .)
    )               reduce using rule 150 (empty -> .)
    ]               reduce using rule 150 (empty -> .)
    ;               reduce using rule 150 (empty -> .)
    [               reduce using rule 139 (errorOpStruct -> .)

    errorOpStruct                  shift and go to state 159
    opDictionary                   shift and go to state 164
    opStruct                       shift and go to state 160
    opAccess                       shift and go to state 161
    empty                          shift and go to state 162

state 130

    (89) opParamCall -> expresion . cyParamCall
    (91) cyParamCall -> . , expresion cyParamCall
    (92) cyParamCall -> . empty
    (150) empty -> .

    ,               shift and go to state 166
    )               reduce using rule 150 (empty -> .)

    cyParamCall                    shift and go to state 165
    empty                          shift and go to state 167

state 131

    (128) fact -> CTES .

    *               reduce using rule 128 (fact -> CTES .)
    /               reduce using rule 128 (fact -> CTES .)
    +               reduce using rule 128 (fact -> CTES .)
    -               reduce using rule 128 (fact -> CTES .)
    EQ              reduce using rule 128 (fact -> CTES .)
    DIF             reduce using rule 128 (fact -> CTES .)
    LTOEQ           reduce using rule 128 (fact -> CTES .)
    GTOEQ           reduce using rule 128 (fact -> CTES .)
    >               reduce using rule 128 (fact -> CTES .)
    <               reduce using rule 128 (fact -> CTES .)
    AND             reduce using rule 128 (fact -> CTES .)
    OR              reduce using rule 128 (fact -> CTES .)
    ;               reduce using rule 128 (fact -> CTES .)
    )               reduce using rule 128 (fact -> CTES .)
    ,               reduce using rule 128 (fact -> CTES .)
    ]               reduce using rule 128 (fact -> CTES .)


state 132

    (119) exp -> term . errorCyExp cyExp
    (123) errorCyExp -> .

    +               reduce using rule 123 (errorCyExp -> .)
    -               reduce using rule 123 (errorCyExp -> .)
    EQ              reduce using rule 123 (errorCyExp -> .)
    DIF             reduce using rule 123 (errorCyExp -> .)
    LTOEQ           reduce using rule 123 (errorCyExp -> .)
    GTOEQ           reduce using rule 123 (errorCyExp -> .)
    >               reduce using rule 123 (errorCyExp -> .)
    <               reduce using rule 123 (errorCyExp -> .)
    AND             reduce using rule 123 (errorCyExp -> .)
    OR              reduce using rule 123 (errorCyExp -> .)
    ,               reduce using rule 123 (errorCyExp -> .)
    )               reduce using rule 123 (errorCyExp -> .)
    ;               reduce using rule 123 (errorCyExp -> .)
    ]               reduce using rule 123 (errorCyExp -> .)

    errorCyExp                     shift and go to state 168

state 133

    (149) cte -> FALSE .

    *               reduce using rule 149 (cte -> FALSE .)
    /               reduce using rule 149 (cte -> FALSE .)
    +               reduce using rule 149 (cte -> FALSE .)
    -               reduce using rule 149 (cte -> FALSE .)
    EQ              reduce using rule 149 (cte -> FALSE .)
    DIF             reduce using rule 149 (cte -> FALSE .)
    LTOEQ           reduce using rule 149 (cte -> FALSE .)
    GTOEQ           reduce using rule 149 (cte -> FALSE .)
    >               reduce using rule 149 (cte -> FALSE .)
    <               reduce using rule 149 (cte -> FALSE .)
    AND             reduce using rule 149 (cte -> FALSE .)
    OR              reduce using rule 149 (cte -> FALSE .)
    ]               reduce using rule 149 (cte -> FALSE .)
    ,               reduce using rule 149 (cte -> FALSE .)
    )               reduce using rule 149 (cte -> FALSE .)
    ;               reduce using rule 149 (cte -> FALSE .)
    :               reduce using rule 149 (cte -> FALSE .)


state 134

    (130) fact -> funcCall .

    *               reduce using rule 130 (fact -> funcCall .)
    /               reduce using rule 130 (fact -> funcCall .)
    +               reduce using rule 130 (fact -> funcCall .)
    -               reduce using rule 130 (fact -> funcCall .)
    AND             reduce using rule 130 (fact -> funcCall .)
    OR              reduce using rule 130 (fact -> funcCall .)
    ,               reduce using rule 130 (fact -> funcCall .)
    )               reduce using rule 130 (fact -> funcCall .)
    ;               reduce using rule 130 (fact -> funcCall .)
    ]               reduce using rule 130 (fact -> funcCall .)
    EQ              reduce using rule 130 (fact -> funcCall .)
    DIF             reduce using rule 130 (fact -> funcCall .)
    LTOEQ           reduce using rule 130 (fact -> funcCall .)
    GTOEQ           reduce using rule 130 (fact -> funcCall .)
    >               reduce using rule 130 (fact -> funcCall .)
    <               reduce using rule 130 (fact -> funcCall .)


state 135

    (129) fact -> cte .

    *               reduce using rule 129 (fact -> cte .)
    /               reduce using rule 129 (fact -> cte .)
    +               reduce using rule 129 (fact -> cte .)
    -               reduce using rule 129 (fact -> cte .)
    EQ              reduce using rule 129 (fact -> cte .)
    DIF             reduce using rule 129 (fact -> cte .)
    LTOEQ           reduce using rule 129 (fact -> cte .)
    GTOEQ           reduce using rule 129 (fact -> cte .)
    >               reduce using rule 129 (fact -> cte .)
    <               reduce using rule 129 (fact -> cte .)
    AND             reduce using rule 129 (fact -> cte .)
    OR              reduce using rule 129 (fact -> cte .)
    ;               reduce using rule 129 (fact -> cte .)
    )               reduce using rule 129 (fact -> cte .)
    ,               reduce using rule 129 (fact -> cte .)
    ]               reduce using rule 129 (fact -> cte .)


state 136

    (147) cte -> CTEF .

    *               reduce using rule 147 (cte -> CTEF .)
    /               reduce using rule 147 (cte -> CTEF .)
    +               reduce using rule 147 (cte -> CTEF .)
    -               reduce using rule 147 (cte -> CTEF .)
    EQ              reduce using rule 147 (cte -> CTEF .)
    DIF             reduce using rule 147 (cte -> CTEF .)
    LTOEQ           reduce using rule 147 (cte -> CTEF .)
    GTOEQ           reduce using rule 147 (cte -> CTEF .)
    >               reduce using rule 147 (cte -> CTEF .)
    <               reduce using rule 147 (cte -> CTEF .)
    AND             reduce using rule 147 (cte -> CTEF .)
    OR              reduce using rule 147 (cte -> CTEF .)
    ]               reduce using rule 147 (cte -> CTEF .)
    ,               reduce using rule 147 (cte -> CTEF .)
    )               reduce using rule 147 (cte -> CTEF .)
    ;               reduce using rule 147 (cte -> CTEF .)
    :               reduce using rule 147 (cte -> CTEF .)


state 137

    (110) sExp -> exp . errorOpSExp opSExp
    (118) errorOpSExp -> .

    EQ              reduce using rule 118 (errorOpSExp -> .)
    DIF             reduce using rule 118 (errorOpSExp -> .)
    LTOEQ           reduce using rule 118 (errorOpSExp -> .)
    GTOEQ           reduce using rule 118 (errorOpSExp -> .)
    >               reduce using rule 118 (errorOpSExp -> .)
    <               reduce using rule 118 (errorOpSExp -> .)
    AND             reduce using rule 118 (errorOpSExp -> .)
    OR              reduce using rule 118 (errorOpSExp -> .)
    ,               reduce using rule 118 (errorOpSExp -> .)
    )               reduce using rule 118 (errorOpSExp -> .)
    ;               reduce using rule 118 (errorOpSExp -> .)
    ]               reduce using rule 118 (errorOpSExp -> .)

    errorOpSExp                    shift and go to state 169

state 138

    (124) term -> fact . cyTerm
    (125) cyTerm -> . * errorFact fact
    (126) cyTerm -> . / fact
    (127) cyTerm -> . empty
    (150) empty -> .

    *               shift and go to state 170
    /               shift and go to state 171
    +               reduce using rule 150 (empty -> .)
    -               reduce using rule 150 (empty -> .)
    EQ              reduce using rule 150 (empty -> .)
    DIF             reduce using rule 150 (empty -> .)
    LTOEQ           reduce using rule 150 (empty -> .)
    GTOEQ           reduce using rule 150 (empty -> .)
    >               reduce using rule 150 (empty -> .)
    <               reduce using rule 150 (empty -> .)
    AND             reduce using rule 150 (empty -> .)
    OR              reduce using rule 150 (empty -> .)
    ,               reduce using rule 150 (empty -> .)
    )               reduce using rule 150 (empty -> .)
    ;               reduce using rule 150 (empty -> .)
    ]               reduce using rule 150 (empty -> .)

    cyTerm                         shift and go to state 172
    empty                          shift and go to state 173

state 139

    (30) init -> = . initWith errorInit
    (34) initDict -> = . ( dictType : dictType ) errorInitDict
    (32) initWith -> . expresion
    (33) initWith -> . funcCall
    (105) expresion -> . sExp cyExpresion errorExpresion
    (88) funcCall -> . ID ( opParamCall )
    (110) sExp -> . exp errorOpSExp opSExp
    (119) exp -> . term errorCyExp cyExp
    (124) term -> . fact cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . ( expresion )
    (132) fact -> . ID opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE

    (               shift and go to state 175
    ID              shift and go to state 176
    CTES            shift and go to state 131
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    expresion                      shift and go to state 177
    initWith                       shift and go to state 174
    funcCall                       shift and go to state 178
    sExp                           shift and go to state 126
    cte                            shift and go to state 135
    term                           shift and go to state 132
    exp                            shift and go to state 137
    fact                           shift and go to state 138

state 140

    (83) assignOptions -> initDict .

    ;               reduce using rule 83 (assignOptions -> initDict .)
    )               reduce using rule 83 (assignOptions -> initDict .)


state 141

    (80) assign -> ID errorAssign assignOptions .

    )               reduce using rule 80 (assign -> ID errorAssign assignOptions .)
    ;               reduce using rule 80 (assign -> ID errorAssign assignOptions .)


state 142

    (82) assignOptions -> init .

    ;               reduce using rule 82 (assignOptions -> init .)
    )               reduce using rule 82 (assignOptions -> init .)


state 143

    (84) assignOptions -> [ . expresion ] assignMatrix init
    (105) expresion -> . sExp cyExpresion errorExpresion
    (110) sExp -> . exp errorOpSExp opSExp
    (119) exp -> . term errorCyExp cyExp
    (124) term -> . fact cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . ( expresion )
    (132) fact -> . ID opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    expresion                      shift and go to state 179
    term                           shift and go to state 132
    funcCall                       shift and go to state 134
    sExp                           shift and go to state 126
    cte                            shift and go to state 135
    exp                            shift and go to state 137
    fact                           shift and go to state 138

state 144

    (98) condition -> errorCondition IF ( . expresion ) { body } optionalElse
    (105) expresion -> . sExp cyExpresion errorExpresion
    (110) sExp -> . exp errorOpSExp opSExp
    (119) exp -> . term errorCyExp cyExp
    (124) term -> . fact cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . ( expresion )
    (132) fact -> . ID opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    expresion                      shift and go to state 180
    term                           shift and go to state 132
    funcCall                       shift and go to state 134
    sExp                           shift and go to state 126
    cte                            shift and go to state 135
    exp                            shift and go to state 137
    fact                           shift and go to state 138

state 145

    (96) optionalMatrix -> [ CTED ] .

    ;               reduce using rule 96 (optionalMatrix -> [ CTED ] .)


state 146

    (40) param -> saveType type errorParam ID . cyTypeParam cyParam
    (44) cyTypeParam -> . , saveID saveTypeParam ID cyTypeParam
    (45) cyTypeParam -> . empty
    (150) empty -> .

    ,               shift and go to state 55
    ;               reduce using rule 150 (empty -> .)
    )               reduce using rule 150 (empty -> .)

    empty                          shift and go to state 56
    cyTypeParam                    shift and go to state 181

state 147

    (58) opReturns -> errorOpReturns . RETURNS type saveReturnType { opVars body return

    RETURNS         shift and go to state 182


state 148

    (59) opReturns -> { . opVars body
    (6) opVars -> . vars
    (7) opVars -> . empty
    (10) vars -> . errorVars VARS declare
    (150) empty -> .
    (12) errorVars -> .

    ID              reduce using rule 150 (empty -> .)
    IF              reduce using rule 150 (empty -> .)
    FOR             reduce using rule 150 (empty -> .)
    WHILE           reduce using rule 150 (empty -> .)
    }               reduce using rule 150 (empty -> .)
    VARS            reduce using rule 12 (errorVars -> .)

    vars                           shift and go to state 8
    opVars                         shift and go to state 183
    errorVars                      shift and go to state 10
    empty                          shift and go to state 11

state 149

    (48) function -> errorFunction FUNC saveType ID saveProc flagParameters ( opParameters ) flagParameters opReturns . } clearVarsTable

    }               shift and go to state 184


state 150

    (76) whileCycle -> errorWhileCycle WHILE ( expresion . ) { body }

    )               shift and go to state 185


state 151

    (80) assign -> ID . errorAssign assignOptions
    (81) errorAssign -> .

    [               reduce using rule 81 (errorAssign -> .)
    =               reduce using rule 81 (errorAssign -> .)

    errorAssign                    shift and go to state 113

state 152

    (78) forCycle -> errorForCycle FOR ( assign . ; expresion ; assign ) { body }

    ;               shift and go to state 186


state 153

    (88) funcCall -> ID ( opParamCall ) .

    *               reduce using rule 88 (funcCall -> ID ( opParamCall ) .)
    /               reduce using rule 88 (funcCall -> ID ( opParamCall ) .)
    +               reduce using rule 88 (funcCall -> ID ( opParamCall ) .)
    -               reduce using rule 88 (funcCall -> ID ( opParamCall ) .)
    AND             reduce using rule 88 (funcCall -> ID ( opParamCall ) .)
    OR              reduce using rule 88 (funcCall -> ID ( opParamCall ) .)
    ,               reduce using rule 88 (funcCall -> ID ( opParamCall ) .)
    )               reduce using rule 88 (funcCall -> ID ( opParamCall ) .)
    ;               reduce using rule 88 (funcCall -> ID ( opParamCall ) .)
    ]               reduce using rule 88 (funcCall -> ID ( opParamCall ) .)
    EQ              reduce using rule 88 (funcCall -> ID ( opParamCall ) .)
    DIF             reduce using rule 88 (funcCall -> ID ( opParamCall ) .)
    LTOEQ           reduce using rule 88 (funcCall -> ID ( opParamCall ) .)
    GTOEQ           reduce using rule 88 (funcCall -> ID ( opParamCall ) .)
    >               reduce using rule 88 (funcCall -> ID ( opParamCall ) .)
    <               reduce using rule 88 (funcCall -> ID ( opParamCall ) .)


state 154

    (131) fact -> ( expresion . )

    )               shift and go to state 187


state 155

    (107) cyExpresion -> AND . expresion
    (105) expresion -> . sExp cyExpresion errorExpresion
    (110) sExp -> . exp errorOpSExp opSExp
    (119) exp -> . term errorCyExp cyExp
    (124) term -> . fact cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . ( expresion )
    (132) fact -> . ID opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    expresion                      shift and go to state 188
    term                           shift and go to state 132
    funcCall                       shift and go to state 134
    sExp                           shift and go to state 126
    cte                            shift and go to state 135
    exp                            shift and go to state 137
    fact                           shift and go to state 138

state 156

    (105) expresion -> sExp cyExpresion . errorExpresion
    (106) errorExpresion -> .

    ,               reduce using rule 106 (errorExpresion -> .)
    )               reduce using rule 106 (errorExpresion -> .)
    ;               reduce using rule 106 (errorExpresion -> .)
    ]               reduce using rule 106 (errorExpresion -> .)

    errorExpresion                 shift and go to state 189

state 157

    (108) cyExpresion -> OR . expresion
    (105) expresion -> . sExp cyExpresion errorExpresion
    (110) sExp -> . exp errorOpSExp opSExp
    (119) exp -> . term errorCyExp cyExp
    (124) term -> . fact cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . ( expresion )
    (132) fact -> . ID opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    expresion                      shift and go to state 190
    term                           shift and go to state 132
    funcCall                       shift and go to state 134
    sExp                           shift and go to state 126
    cte                            shift and go to state 135
    exp                            shift and go to state 137
    fact                           shift and go to state 138

state 158

    (109) cyExpresion -> empty .

    ,               reduce using rule 109 (cyExpresion -> empty .)
    )               reduce using rule 109 (cyExpresion -> empty .)
    ;               reduce using rule 109 (cyExpresion -> empty .)
    ]               reduce using rule 109 (cyExpresion -> empty .)


state 159

    (138) opStruct -> errorOpStruct . [ expresion ] opMatrix

    [               shift and go to state 191


state 160

    (134) opAccess -> opStruct .

    *               reduce using rule 134 (opAccess -> opStruct .)
    /               reduce using rule 134 (opAccess -> opStruct .)
    +               reduce using rule 134 (opAccess -> opStruct .)
    -               reduce using rule 134 (opAccess -> opStruct .)
    EQ              reduce using rule 134 (opAccess -> opStruct .)
    DIF             reduce using rule 134 (opAccess -> opStruct .)
    LTOEQ           reduce using rule 134 (opAccess -> opStruct .)
    GTOEQ           reduce using rule 134 (opAccess -> opStruct .)
    >               reduce using rule 134 (opAccess -> opStruct .)
    <               reduce using rule 134 (opAccess -> opStruct .)
    AND             reduce using rule 134 (opAccess -> opStruct .)
    OR              reduce using rule 134 (opAccess -> opStruct .)
    ;               reduce using rule 134 (opAccess -> opStruct .)
    )               reduce using rule 134 (opAccess -> opStruct .)
    ,               reduce using rule 134 (opAccess -> opStruct .)
    ]               reduce using rule 134 (opAccess -> opStruct .)


state 161

    (132) fact -> ID opAccess . errorOpAccess
    (137) errorOpAccess -> .

    *               reduce using rule 137 (errorOpAccess -> .)
    /               reduce using rule 137 (errorOpAccess -> .)
    +               reduce using rule 137 (errorOpAccess -> .)
    -               reduce using rule 137 (errorOpAccess -> .)
    EQ              reduce using rule 137 (errorOpAccess -> .)
    DIF             reduce using rule 137 (errorOpAccess -> .)
    LTOEQ           reduce using rule 137 (errorOpAccess -> .)
    GTOEQ           reduce using rule 137 (errorOpAccess -> .)
    >               reduce using rule 137 (errorOpAccess -> .)
    <               reduce using rule 137 (errorOpAccess -> .)
    AND             reduce using rule 137 (errorOpAccess -> .)
    OR              reduce using rule 137 (errorOpAccess -> .)
    ,               reduce using rule 137 (errorOpAccess -> .)
    )               reduce using rule 137 (errorOpAccess -> .)
    ;               reduce using rule 137 (errorOpAccess -> .)
    ]               reduce using rule 137 (errorOpAccess -> .)

    errorOpAccess                  shift and go to state 192

state 162

    (136) opAccess -> empty .

    *               reduce using rule 136 (opAccess -> empty .)
    /               reduce using rule 136 (opAccess -> empty .)
    +               reduce using rule 136 (opAccess -> empty .)
    -               reduce using rule 136 (opAccess -> empty .)
    EQ              reduce using rule 136 (opAccess -> empty .)
    DIF             reduce using rule 136 (opAccess -> empty .)
    LTOEQ           reduce using rule 136 (opAccess -> empty .)
    GTOEQ           reduce using rule 136 (opAccess -> empty .)
    >               reduce using rule 136 (opAccess -> empty .)
    <               reduce using rule 136 (opAccess -> empty .)
    AND             reduce using rule 136 (opAccess -> empty .)
    OR              reduce using rule 136 (opAccess -> empty .)
    ;               reduce using rule 136 (opAccess -> empty .)
    )               reduce using rule 136 (opAccess -> empty .)
    ,               reduce using rule 136 (opAccess -> empty .)
    ]               reduce using rule 136 (opAccess -> empty .)


state 163

    (143) opDictionary -> . . dictIndex
    (144) dictIndex -> . FIRST
    (145) dictIndex -> . LAST

    FIRST           shift and go to state 193
    LAST            shift and go to state 194

    dictIndex                      shift and go to state 195

state 164

    (135) opAccess -> opDictionary .

    *               reduce using rule 135 (opAccess -> opDictionary .)
    /               reduce using rule 135 (opAccess -> opDictionary .)
    +               reduce using rule 135 (opAccess -> opDictionary .)
    -               reduce using rule 135 (opAccess -> opDictionary .)
    EQ              reduce using rule 135 (opAccess -> opDictionary .)
    DIF             reduce using rule 135 (opAccess -> opDictionary .)
    LTOEQ           reduce using rule 135 (opAccess -> opDictionary .)
    GTOEQ           reduce using rule 135 (opAccess -> opDictionary .)
    >               reduce using rule 135 (opAccess -> opDictionary .)
    <               reduce using rule 135 (opAccess -> opDictionary .)
    AND             reduce using rule 135 (opAccess -> opDictionary .)
    OR              reduce using rule 135 (opAccess -> opDictionary .)
    ;               reduce using rule 135 (opAccess -> opDictionary .)
    )               reduce using rule 135 (opAccess -> opDictionary .)
    ,               reduce using rule 135 (opAccess -> opDictionary .)
    ]               reduce using rule 135 (opAccess -> opDictionary .)


state 165

    (89) opParamCall -> expresion cyParamCall .

    )               reduce using rule 89 (opParamCall -> expresion cyParamCall .)


state 166

    (91) cyParamCall -> , . expresion cyParamCall
    (105) expresion -> . sExp cyExpresion errorExpresion
    (110) sExp -> . exp errorOpSExp opSExp
    (119) exp -> . term errorCyExp cyExp
    (124) term -> . fact cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . ( expresion )
    (132) fact -> . ID opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    expresion                      shift and go to state 196
    term                           shift and go to state 132
    funcCall                       shift and go to state 134
    sExp                           shift and go to state 126
    cte                            shift and go to state 135
    exp                            shift and go to state 137
    fact                           shift and go to state 138

state 167

    (92) cyParamCall -> empty .

    )               reduce using rule 92 (cyParamCall -> empty .)


state 168

    (119) exp -> term errorCyExp . cyExp
    (120) cyExp -> . + term
    (121) cyExp -> . - term
    (122) cyExp -> . empty
    (150) empty -> .

    +               shift and go to state 198
    -               shift and go to state 199
    EQ              reduce using rule 150 (empty -> .)
    DIF             reduce using rule 150 (empty -> .)
    LTOEQ           reduce using rule 150 (empty -> .)
    GTOEQ           reduce using rule 150 (empty -> .)
    >               reduce using rule 150 (empty -> .)
    <               reduce using rule 150 (empty -> .)
    AND             reduce using rule 150 (empty -> .)
    OR              reduce using rule 150 (empty -> .)
    ,               reduce using rule 150 (empty -> .)
    )               reduce using rule 150 (empty -> .)
    ;               reduce using rule 150 (empty -> .)
    ]               reduce using rule 150 (empty -> .)

    cyExp                          shift and go to state 197
    empty                          shift and go to state 200

state 169

    (110) sExp -> exp errorOpSExp . opSExp
    (111) opSExp -> . EQ exp
    (112) opSExp -> . DIF exp
    (113) opSExp -> . LTOEQ exp
    (114) opSExp -> . GTOEQ exp
    (115) opSExp -> . > exp
    (116) opSExp -> . < exp
    (117) opSExp -> . empty
    (150) empty -> .

    EQ              shift and go to state 201
    DIF             shift and go to state 202
    LTOEQ           shift and go to state 205
    GTOEQ           shift and go to state 203
    >               shift and go to state 204
    <               shift and go to state 206
    AND             reduce using rule 150 (empty -> .)
    OR              reduce using rule 150 (empty -> .)
    ,               reduce using rule 150 (empty -> .)
    )               reduce using rule 150 (empty -> .)
    ;               reduce using rule 150 (empty -> .)
    ]               reduce using rule 150 (empty -> .)

    empty                          shift and go to state 207
    opSExp                         shift and go to state 208

state 170

    (125) cyTerm -> * . errorFact fact
    (133) errorFact -> .

    CTES            reduce using rule 133 (errorFact -> .)
    (               reduce using rule 133 (errorFact -> .)
    ID              reduce using rule 133 (errorFact -> .)
    CTED            reduce using rule 133 (errorFact -> .)
    CTEF            reduce using rule 133 (errorFact -> .)
    TRUE            reduce using rule 133 (errorFact -> .)
    FALSE           reduce using rule 133 (errorFact -> .)

    errorFact                      shift and go to state 209

state 171

    (126) cyTerm -> / . fact
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . ( expresion )
    (132) fact -> . ID opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    funcCall                       shift and go to state 134
    cte                            shift and go to state 135
    fact                           shift and go to state 210

state 172

    (124) term -> fact cyTerm .

    +               reduce using rule 124 (term -> fact cyTerm .)
    -               reduce using rule 124 (term -> fact cyTerm .)
    EQ              reduce using rule 124 (term -> fact cyTerm .)
    DIF             reduce using rule 124 (term -> fact cyTerm .)
    LTOEQ           reduce using rule 124 (term -> fact cyTerm .)
    GTOEQ           reduce using rule 124 (term -> fact cyTerm .)
    >               reduce using rule 124 (term -> fact cyTerm .)
    <               reduce using rule 124 (term -> fact cyTerm .)
    AND             reduce using rule 124 (term -> fact cyTerm .)
    OR              reduce using rule 124 (term -> fact cyTerm .)
    ,               reduce using rule 124 (term -> fact cyTerm .)
    )               reduce using rule 124 (term -> fact cyTerm .)
    ;               reduce using rule 124 (term -> fact cyTerm .)
    ]               reduce using rule 124 (term -> fact cyTerm .)


state 173

    (127) cyTerm -> empty .

    +               reduce using rule 127 (cyTerm -> empty .)
    -               reduce using rule 127 (cyTerm -> empty .)
    EQ              reduce using rule 127 (cyTerm -> empty .)
    DIF             reduce using rule 127 (cyTerm -> empty .)
    LTOEQ           reduce using rule 127 (cyTerm -> empty .)
    GTOEQ           reduce using rule 127 (cyTerm -> empty .)
    >               reduce using rule 127 (cyTerm -> empty .)
    <               reduce using rule 127 (cyTerm -> empty .)
    AND             reduce using rule 127 (cyTerm -> empty .)
    OR              reduce using rule 127 (cyTerm -> empty .)
    ,               reduce using rule 127 (cyTerm -> empty .)
    )               reduce using rule 127 (cyTerm -> empty .)
    ;               reduce using rule 127 (cyTerm -> empty .)
    ]               reduce using rule 127 (cyTerm -> empty .)


state 174

    (30) init -> = initWith . errorInit
    (31) errorInit -> .

    ;               reduce using rule 31 (errorInit -> .)
    )               reduce using rule 31 (errorInit -> .)

    errorInit                      shift and go to state 211

state 175

    (34) initDict -> = ( . dictType : dictType ) errorInitDict
    (131) fact -> ( . expresion )
    (36) dictType -> . errorDictType CTES
    (37) dictType -> . cte
    (38) dictType -> . ID
    (105) expresion -> . sExp cyExpresion errorExpresion
    (39) errorDictType -> .
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (110) sExp -> . exp errorOpSExp opSExp
    (119) exp -> . term errorCyExp cyExp
    (124) term -> . fact cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . ( expresion )
    (132) fact -> . ID opAccess errorOpAccess
    (88) funcCall -> . ID ( opParamCall )

  ! shift/reduce conflict for CTES resolved as shift
    ID              shift and go to state 214
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133
    CTES            shift and go to state 131
    (               shift and go to state 125

  ! CTES            [ reduce using rule 39 (errorDictType -> .) ]

    dictType                       shift and go to state 212
    expresion                      shift and go to state 154
    term                           shift and go to state 132
    errorDictType                  shift and go to state 213
    funcCall                       shift and go to state 134
    sExp                           shift and go to state 126
    cte                            shift and go to state 215
    exp                            shift and go to state 137
    fact                           shift and go to state 138

state 176

    (88) funcCall -> ID . ( opParamCall )
    (132) fact -> ID . opAccess errorOpAccess
    (134) opAccess -> . opStruct
    (135) opAccess -> . opDictionary
    (136) opAccess -> . empty
    (138) opStruct -> . errorOpStruct [ expresion ] opMatrix
    (143) opDictionary -> . . dictIndex
    (150) empty -> .
    (139) errorOpStruct -> .

    (               shift and go to state 112
    .               shift and go to state 163
    *               reduce using rule 150 (empty -> .)
    /               reduce using rule 150 (empty -> .)
    +               reduce using rule 150 (empty -> .)
    -               reduce using rule 150 (empty -> .)
    EQ              reduce using rule 150 (empty -> .)
    DIF             reduce using rule 150 (empty -> .)
    LTOEQ           reduce using rule 150 (empty -> .)
    GTOEQ           reduce using rule 150 (empty -> .)
    >               reduce using rule 150 (empty -> .)
    <               reduce using rule 150 (empty -> .)
    AND             reduce using rule 150 (empty -> .)
    OR              reduce using rule 150 (empty -> .)
    ;               reduce using rule 150 (empty -> .)
    )               reduce using rule 150 (empty -> .)
    [               reduce using rule 139 (errorOpStruct -> .)

    errorOpStruct                  shift and go to state 159
    opDictionary                   shift and go to state 164
    opStruct                       shift and go to state 160
    opAccess                       shift and go to state 161
    empty                          shift and go to state 162

state 177

    (32) initWith -> expresion .

    ;               reduce using rule 32 (initWith -> expresion .)
    )               reduce using rule 32 (initWith -> expresion .)


state 178

    (33) initWith -> funcCall .
    (130) fact -> funcCall .

  ! reduce/reduce conflict for ; resolved using rule 33 (initWith -> funcCall .)
  ! reduce/reduce conflict for ) resolved using rule 33 (initWith -> funcCall .)
    ;               reduce using rule 33 (initWith -> funcCall .)
    )               reduce using rule 33 (initWith -> funcCall .)
    *               reduce using rule 130 (fact -> funcCall .)
    /               reduce using rule 130 (fact -> funcCall .)
    +               reduce using rule 130 (fact -> funcCall .)
    -               reduce using rule 130 (fact -> funcCall .)
    EQ              reduce using rule 130 (fact -> funcCall .)
    DIF             reduce using rule 130 (fact -> funcCall .)
    LTOEQ           reduce using rule 130 (fact -> funcCall .)
    GTOEQ           reduce using rule 130 (fact -> funcCall .)
    >               reduce using rule 130 (fact -> funcCall .)
    <               reduce using rule 130 (fact -> funcCall .)
    AND             reduce using rule 130 (fact -> funcCall .)
    OR              reduce using rule 130 (fact -> funcCall .)

  ! ;               [ reduce using rule 130 (fact -> funcCall .) ]
  ! )               [ reduce using rule 130 (fact -> funcCall .) ]


state 179

    (84) assignOptions -> [ expresion . ] assignMatrix init

    ]               shift and go to state 216


state 180

    (98) condition -> errorCondition IF ( expresion . ) { body } optionalElse

    )               shift and go to state 217


state 181

    (40) param -> saveType type errorParam ID cyTypeParam . cyParam
    (42) cyParam -> . errorCyParam saveID saveTypeParam ; param
    (43) cyParam -> . empty saveID saveTypeParam
    (47) errorCyParam -> .
    (150) empty -> .

    ;               reduce using rule 47 (errorCyParam -> .)
    )               reduce using rule 150 (empty -> .)

    empty                          shift and go to state 218
    cyParam                        shift and go to state 220
    errorCyParam                   shift and go to state 219

state 182

    (58) opReturns -> errorOpReturns RETURNS . type saveReturnType { opVars body return
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . OBJECT
    (17) type -> . BOOL
    (18) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    OBJECT          shift and go to state 32
    BOOL            shift and go to state 33
    INT             reduce using rule 18 (errorType -> .)

    errorType                      shift and go to state 31
    type                           shift and go to state 221

state 183

    (59) opReturns -> { opVars . body
    (70) body -> . errorBody cyInstruction
    (71) body -> . empty
    (72) errorBody -> .
    (150) empty -> .

    ID              reduce using rule 72 (errorBody -> .)
    IF              reduce using rule 72 (errorBody -> .)
    FOR             reduce using rule 72 (errorBody -> .)
    WHILE           reduce using rule 72 (errorBody -> .)
    }               reduce using rule 150 (empty -> .)

    body                           shift and go to state 222
    empty                          shift and go to state 76
    errorBody                      shift and go to state 75

state 184

    (48) function -> errorFunction FUNC saveType ID saveProc flagParameters ( opParameters ) flagParameters opReturns } . clearVarsTable
    (50) clearVarsTable -> .

    FUNC            reduce using rule 50 (clearVarsTable -> .)
    MAIN            reduce using rule 50 (clearVarsTable -> .)

    clearVarsTable                 shift and go to state 223

state 185

    (76) whileCycle -> errorWhileCycle WHILE ( expresion ) . { body }

    {               shift and go to state 224


state 186

    (78) forCycle -> errorForCycle FOR ( assign ; . expresion ; assign ) { body }
    (105) expresion -> . sExp cyExpresion errorExpresion
    (110) sExp -> . exp errorOpSExp opSExp
    (119) exp -> . term errorCyExp cyExp
    (124) term -> . fact cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . ( expresion )
    (132) fact -> . ID opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    expresion                      shift and go to state 225
    term                           shift and go to state 132
    funcCall                       shift and go to state 134
    sExp                           shift and go to state 126
    cte                            shift and go to state 135
    exp                            shift and go to state 137
    fact                           shift and go to state 138

state 187

    (131) fact -> ( expresion ) .

    *               reduce using rule 131 (fact -> ( expresion ) .)
    /               reduce using rule 131 (fact -> ( expresion ) .)
    +               reduce using rule 131 (fact -> ( expresion ) .)
    -               reduce using rule 131 (fact -> ( expresion ) .)
    EQ              reduce using rule 131 (fact -> ( expresion ) .)
    DIF             reduce using rule 131 (fact -> ( expresion ) .)
    LTOEQ           reduce using rule 131 (fact -> ( expresion ) .)
    GTOEQ           reduce using rule 131 (fact -> ( expresion ) .)
    >               reduce using rule 131 (fact -> ( expresion ) .)
    <               reduce using rule 131 (fact -> ( expresion ) .)
    AND             reduce using rule 131 (fact -> ( expresion ) .)
    OR              reduce using rule 131 (fact -> ( expresion ) .)
    ;               reduce using rule 131 (fact -> ( expresion ) .)
    )               reduce using rule 131 (fact -> ( expresion ) .)
    ,               reduce using rule 131 (fact -> ( expresion ) .)
    ]               reduce using rule 131 (fact -> ( expresion ) .)


state 188

    (107) cyExpresion -> AND expresion .

    ,               reduce using rule 107 (cyExpresion -> AND expresion .)
    )               reduce using rule 107 (cyExpresion -> AND expresion .)
    ;               reduce using rule 107 (cyExpresion -> AND expresion .)
    ]               reduce using rule 107 (cyExpresion -> AND expresion .)


state 189

    (105) expresion -> sExp cyExpresion errorExpresion .

    ]               reduce using rule 105 (expresion -> sExp cyExpresion errorExpresion .)
    ;               reduce using rule 105 (expresion -> sExp cyExpresion errorExpresion .)
    )               reduce using rule 105 (expresion -> sExp cyExpresion errorExpresion .)
    ,               reduce using rule 105 (expresion -> sExp cyExpresion errorExpresion .)


state 190

    (108) cyExpresion -> OR expresion .

    ,               reduce using rule 108 (cyExpresion -> OR expresion .)
    )               reduce using rule 108 (cyExpresion -> OR expresion .)
    ;               reduce using rule 108 (cyExpresion -> OR expresion .)
    ]               reduce using rule 108 (cyExpresion -> OR expresion .)


state 191

    (138) opStruct -> errorOpStruct [ . expresion ] opMatrix
    (105) expresion -> . sExp cyExpresion errorExpresion
    (110) sExp -> . exp errorOpSExp opSExp
    (119) exp -> . term errorCyExp cyExp
    (124) term -> . fact cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . ( expresion )
    (132) fact -> . ID opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    expresion                      shift and go to state 226
    term                           shift and go to state 132
    exp                            shift and go to state 137
    funcCall                       shift and go to state 134
    sExp                           shift and go to state 126
    cte                            shift and go to state 135
    fact                           shift and go to state 138

state 192

    (132) fact -> ID opAccess errorOpAccess .

    *               reduce using rule 132 (fact -> ID opAccess errorOpAccess .)
    /               reduce using rule 132 (fact -> ID opAccess errorOpAccess .)
    +               reduce using rule 132 (fact -> ID opAccess errorOpAccess .)
    -               reduce using rule 132 (fact -> ID opAccess errorOpAccess .)
    EQ              reduce using rule 132 (fact -> ID opAccess errorOpAccess .)
    DIF             reduce using rule 132 (fact -> ID opAccess errorOpAccess .)
    LTOEQ           reduce using rule 132 (fact -> ID opAccess errorOpAccess .)
    GTOEQ           reduce using rule 132 (fact -> ID opAccess errorOpAccess .)
    >               reduce using rule 132 (fact -> ID opAccess errorOpAccess .)
    <               reduce using rule 132 (fact -> ID opAccess errorOpAccess .)
    AND             reduce using rule 132 (fact -> ID opAccess errorOpAccess .)
    OR              reduce using rule 132 (fact -> ID opAccess errorOpAccess .)
    ;               reduce using rule 132 (fact -> ID opAccess errorOpAccess .)
    )               reduce using rule 132 (fact -> ID opAccess errorOpAccess .)
    ,               reduce using rule 132 (fact -> ID opAccess errorOpAccess .)
    ]               reduce using rule 132 (fact -> ID opAccess errorOpAccess .)


state 193

    (144) dictIndex -> FIRST .

    *               reduce using rule 144 (dictIndex -> FIRST .)
    /               reduce using rule 144 (dictIndex -> FIRST .)
    +               reduce using rule 144 (dictIndex -> FIRST .)
    -               reduce using rule 144 (dictIndex -> FIRST .)
    EQ              reduce using rule 144 (dictIndex -> FIRST .)
    DIF             reduce using rule 144 (dictIndex -> FIRST .)
    LTOEQ           reduce using rule 144 (dictIndex -> FIRST .)
    GTOEQ           reduce using rule 144 (dictIndex -> FIRST .)
    >               reduce using rule 144 (dictIndex -> FIRST .)
    <               reduce using rule 144 (dictIndex -> FIRST .)
    AND             reduce using rule 144 (dictIndex -> FIRST .)
    OR              reduce using rule 144 (dictIndex -> FIRST .)
    ,               reduce using rule 144 (dictIndex -> FIRST .)
    )               reduce using rule 144 (dictIndex -> FIRST .)
    ]               reduce using rule 144 (dictIndex -> FIRST .)
    ;               reduce using rule 144 (dictIndex -> FIRST .)


state 194

    (145) dictIndex -> LAST .

    *               reduce using rule 145 (dictIndex -> LAST .)
    /               reduce using rule 145 (dictIndex -> LAST .)
    +               reduce using rule 145 (dictIndex -> LAST .)
    -               reduce using rule 145 (dictIndex -> LAST .)
    EQ              reduce using rule 145 (dictIndex -> LAST .)
    DIF             reduce using rule 145 (dictIndex -> LAST .)
    LTOEQ           reduce using rule 145 (dictIndex -> LAST .)
    GTOEQ           reduce using rule 145 (dictIndex -> LAST .)
    >               reduce using rule 145 (dictIndex -> LAST .)
    <               reduce using rule 145 (dictIndex -> LAST .)
    AND             reduce using rule 145 (dictIndex -> LAST .)
    OR              reduce using rule 145 (dictIndex -> LAST .)
    ,               reduce using rule 145 (dictIndex -> LAST .)
    )               reduce using rule 145 (dictIndex -> LAST .)
    ]               reduce using rule 145 (dictIndex -> LAST .)
    ;               reduce using rule 145 (dictIndex -> LAST .)


state 195

    (143) opDictionary -> . dictIndex .

    *               reduce using rule 143 (opDictionary -> . dictIndex .)
    /               reduce using rule 143 (opDictionary -> . dictIndex .)
    +               reduce using rule 143 (opDictionary -> . dictIndex .)
    -               reduce using rule 143 (opDictionary -> . dictIndex .)
    EQ              reduce using rule 143 (opDictionary -> . dictIndex .)
    DIF             reduce using rule 143 (opDictionary -> . dictIndex .)
    LTOEQ           reduce using rule 143 (opDictionary -> . dictIndex .)
    GTOEQ           reduce using rule 143 (opDictionary -> . dictIndex .)
    >               reduce using rule 143 (opDictionary -> . dictIndex .)
    <               reduce using rule 143 (opDictionary -> . dictIndex .)
    AND             reduce using rule 143 (opDictionary -> . dictIndex .)
    OR              reduce using rule 143 (opDictionary -> . dictIndex .)
    ,               reduce using rule 143 (opDictionary -> . dictIndex .)
    )               reduce using rule 143 (opDictionary -> . dictIndex .)
    ]               reduce using rule 143 (opDictionary -> . dictIndex .)
    ;               reduce using rule 143 (opDictionary -> . dictIndex .)


state 196

    (91) cyParamCall -> , expresion . cyParamCall
    (91) cyParamCall -> . , expresion cyParamCall
    (92) cyParamCall -> . empty
    (150) empty -> .

    ,               shift and go to state 166
    )               reduce using rule 150 (empty -> .)

    cyParamCall                    shift and go to state 227
    empty                          shift and go to state 167

state 197

    (119) exp -> term errorCyExp cyExp .

    EQ              reduce using rule 119 (exp -> term errorCyExp cyExp .)
    DIF             reduce using rule 119 (exp -> term errorCyExp cyExp .)
    LTOEQ           reduce using rule 119 (exp -> term errorCyExp cyExp .)
    GTOEQ           reduce using rule 119 (exp -> term errorCyExp cyExp .)
    >               reduce using rule 119 (exp -> term errorCyExp cyExp .)
    <               reduce using rule 119 (exp -> term errorCyExp cyExp .)
    AND             reduce using rule 119 (exp -> term errorCyExp cyExp .)
    OR              reduce using rule 119 (exp -> term errorCyExp cyExp .)
    ;               reduce using rule 119 (exp -> term errorCyExp cyExp .)
    )               reduce using rule 119 (exp -> term errorCyExp cyExp .)
    ,               reduce using rule 119 (exp -> term errorCyExp cyExp .)
    ]               reduce using rule 119 (exp -> term errorCyExp cyExp .)


state 198

    (120) cyExp -> + . term
    (124) term -> . fact cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . ( expresion )
    (132) fact -> . ID opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    term                           shift and go to state 228
    funcCall                       shift and go to state 134
    cte                            shift and go to state 135
    fact                           shift and go to state 138

state 199

    (121) cyExp -> - . term
    (124) term -> . fact cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . ( expresion )
    (132) fact -> . ID opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    term                           shift and go to state 229
    funcCall                       shift and go to state 134
    cte                            shift and go to state 135
    fact                           shift and go to state 138

state 200

    (122) cyExp -> empty .

    EQ              reduce using rule 122 (cyExp -> empty .)
    DIF             reduce using rule 122 (cyExp -> empty .)
    LTOEQ           reduce using rule 122 (cyExp -> empty .)
    GTOEQ           reduce using rule 122 (cyExp -> empty .)
    >               reduce using rule 122 (cyExp -> empty .)
    <               reduce using rule 122 (cyExp -> empty .)
    AND             reduce using rule 122 (cyExp -> empty .)
    OR              reduce using rule 122 (cyExp -> empty .)
    ,               reduce using rule 122 (cyExp -> empty .)
    )               reduce using rule 122 (cyExp -> empty .)
    ;               reduce using rule 122 (cyExp -> empty .)
    ]               reduce using rule 122 (cyExp -> empty .)


state 201

    (111) opSExp -> EQ . exp
    (119) exp -> . term errorCyExp cyExp
    (124) term -> . fact cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . ( expresion )
    (132) fact -> . ID opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    term                           shift and go to state 132
    funcCall                       shift and go to state 134
    cte                            shift and go to state 135
    exp                            shift and go to state 230
    fact                           shift and go to state 138

state 202

    (112) opSExp -> DIF . exp
    (119) exp -> . term errorCyExp cyExp
    (124) term -> . fact cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . ( expresion )
    (132) fact -> . ID opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    term                           shift and go to state 132
    funcCall                       shift and go to state 134
    cte                            shift and go to state 135
    exp                            shift and go to state 231
    fact                           shift and go to state 138

state 203

    (114) opSExp -> GTOEQ . exp
    (119) exp -> . term errorCyExp cyExp
    (124) term -> . fact cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . ( expresion )
    (132) fact -> . ID opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    term                           shift and go to state 132
    funcCall                       shift and go to state 134
    cte                            shift and go to state 135
    exp                            shift and go to state 232
    fact                           shift and go to state 138

state 204

    (115) opSExp -> > . exp
    (119) exp -> . term errorCyExp cyExp
    (124) term -> . fact cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . ( expresion )
    (132) fact -> . ID opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    term                           shift and go to state 132
    funcCall                       shift and go to state 134
    cte                            shift and go to state 135
    exp                            shift and go to state 233
    fact                           shift and go to state 138

state 205

    (113) opSExp -> LTOEQ . exp
    (119) exp -> . term errorCyExp cyExp
    (124) term -> . fact cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . ( expresion )
    (132) fact -> . ID opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    term                           shift and go to state 132
    funcCall                       shift and go to state 134
    cte                            shift and go to state 135
    exp                            shift and go to state 234
    fact                           shift and go to state 138

state 206

    (116) opSExp -> < . exp
    (119) exp -> . term errorCyExp cyExp
    (124) term -> . fact cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . ( expresion )
    (132) fact -> . ID opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    term                           shift and go to state 132
    funcCall                       shift and go to state 134
    cte                            shift and go to state 135
    exp                            shift and go to state 235
    fact                           shift and go to state 138

state 207

    (117) opSExp -> empty .

    AND             reduce using rule 117 (opSExp -> empty .)
    OR              reduce using rule 117 (opSExp -> empty .)
    ,               reduce using rule 117 (opSExp -> empty .)
    )               reduce using rule 117 (opSExp -> empty .)
    ;               reduce using rule 117 (opSExp -> empty .)
    ]               reduce using rule 117 (opSExp -> empty .)


state 208

    (110) sExp -> exp errorOpSExp opSExp .

    AND             reduce using rule 110 (sExp -> exp errorOpSExp opSExp .)
    OR              reduce using rule 110 (sExp -> exp errorOpSExp opSExp .)
    ,               reduce using rule 110 (sExp -> exp errorOpSExp opSExp .)
    )               reduce using rule 110 (sExp -> exp errorOpSExp opSExp .)
    ;               reduce using rule 110 (sExp -> exp errorOpSExp opSExp .)
    ]               reduce using rule 110 (sExp -> exp errorOpSExp opSExp .)


state 209

    (125) cyTerm -> * errorFact . fact
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . ( expresion )
    (132) fact -> . ID opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    funcCall                       shift and go to state 134
    cte                            shift and go to state 135
    fact                           shift and go to state 236

state 210

    (126) cyTerm -> / fact .

    +               reduce using rule 126 (cyTerm -> / fact .)
    -               reduce using rule 126 (cyTerm -> / fact .)
    EQ              reduce using rule 126 (cyTerm -> / fact .)
    DIF             reduce using rule 126 (cyTerm -> / fact .)
    LTOEQ           reduce using rule 126 (cyTerm -> / fact .)
    GTOEQ           reduce using rule 126 (cyTerm -> / fact .)
    >               reduce using rule 126 (cyTerm -> / fact .)
    <               reduce using rule 126 (cyTerm -> / fact .)
    AND             reduce using rule 126 (cyTerm -> / fact .)
    OR              reduce using rule 126 (cyTerm -> / fact .)
    ,               reduce using rule 126 (cyTerm -> / fact .)
    )               reduce using rule 126 (cyTerm -> / fact .)
    ;               reduce using rule 126 (cyTerm -> / fact .)
    ]               reduce using rule 126 (cyTerm -> / fact .)


state 211

    (30) init -> = initWith errorInit .

    ;               reduce using rule 30 (init -> = initWith errorInit .)
    )               reduce using rule 30 (init -> = initWith errorInit .)


state 212

    (34) initDict -> = ( dictType . : dictType ) errorInitDict

    :               shift and go to state 237


state 213

    (36) dictType -> errorDictType . CTES

    CTES            shift and go to state 238


state 214

    (38) dictType -> ID .
    (132) fact -> ID . opAccess errorOpAccess
    (88) funcCall -> ID . ( opParamCall )
    (134) opAccess -> . opStruct
    (135) opAccess -> . opDictionary
    (136) opAccess -> . empty
    (138) opStruct -> . errorOpStruct [ expresion ] opMatrix
    (143) opDictionary -> . . dictIndex
    (150) empty -> .
    (139) errorOpStruct -> .

    :               reduce using rule 38 (dictType -> ID .)
    (               shift and go to state 112
    .               shift and go to state 163
    *               reduce using rule 150 (empty -> .)
    /               reduce using rule 150 (empty -> .)
    +               reduce using rule 150 (empty -> .)
    -               reduce using rule 150 (empty -> .)
    EQ              reduce using rule 150 (empty -> .)
    DIF             reduce using rule 150 (empty -> .)
    LTOEQ           reduce using rule 150 (empty -> .)
    GTOEQ           reduce using rule 150 (empty -> .)
    >               reduce using rule 150 (empty -> .)
    <               reduce using rule 150 (empty -> .)
    AND             reduce using rule 150 (empty -> .)
    OR              reduce using rule 150 (empty -> .)
    )               reduce using rule 150 (empty -> .)
    [               reduce using rule 139 (errorOpStruct -> .)

    errorOpStruct                  shift and go to state 159
    opDictionary                   shift and go to state 164
    opStruct                       shift and go to state 160
    opAccess                       shift and go to state 161
    empty                          shift and go to state 162

state 215

    (37) dictType -> cte .
    (129) fact -> cte .

    :               reduce using rule 37 (dictType -> cte .)
    *               reduce using rule 129 (fact -> cte .)
    /               reduce using rule 129 (fact -> cte .)
    +               reduce using rule 129 (fact -> cte .)
    -               reduce using rule 129 (fact -> cte .)
    EQ              reduce using rule 129 (fact -> cte .)
    DIF             reduce using rule 129 (fact -> cte .)
    LTOEQ           reduce using rule 129 (fact -> cte .)
    GTOEQ           reduce using rule 129 (fact -> cte .)
    >               reduce using rule 129 (fact -> cte .)
    <               reduce using rule 129 (fact -> cte .)
    AND             reduce using rule 129 (fact -> cte .)
    OR              reduce using rule 129 (fact -> cte .)
    )               reduce using rule 129 (fact -> cte .)


state 216

    (84) assignOptions -> [ expresion ] . assignMatrix init
    (85) assignMatrix -> . [ expresion ] errorAssignMatrix
    (86) assignMatrix -> . empty
    (150) empty -> .

    [               shift and go to state 240
    =               reduce using rule 150 (empty -> .)

    assignMatrix                   shift and go to state 239
    empty                          shift and go to state 241

state 217

    (98) condition -> errorCondition IF ( expresion ) . { body } optionalElse

    {               shift and go to state 242


state 218

    (43) cyParam -> empty . saveID saveTypeParam
    (11) saveID -> .

    )               reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 243

state 219

    (42) cyParam -> errorCyParam . saveID saveTypeParam ; param
    (11) saveID -> .

    ;               reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 244

state 220

    (40) param -> saveType type errorParam ID cyTypeParam cyParam .

    )               reduce using rule 40 (param -> saveType type errorParam ID cyTypeParam cyParam .)


state 221

    (58) opReturns -> errorOpReturns RETURNS type . saveReturnType { opVars body return
    (60) saveReturnType -> .

    {               reduce using rule 60 (saveReturnType -> .)

    saveReturnType                 shift and go to state 245

state 222

    (59) opReturns -> { opVars body .

    }               reduce using rule 59 (opReturns -> { opVars body .)


state 223

    (48) function -> errorFunction FUNC saveType ID saveProc flagParameters ( opParameters ) flagParameters opReturns } clearVarsTable .

    FUNC            reduce using rule 48 (function -> errorFunction FUNC saveType ID saveProc flagParameters ( opParameters ) flagParameters opReturns } clearVarsTable .)
    MAIN            reduce using rule 48 (function -> errorFunction FUNC saveType ID saveProc flagParameters ( opParameters ) flagParameters opReturns } clearVarsTable .)


state 224

    (76) whileCycle -> errorWhileCycle WHILE ( expresion ) { . body }
    (70) body -> . errorBody cyInstruction
    (71) body -> . empty
    (72) errorBody -> .
    (150) empty -> .

    ID              reduce using rule 72 (errorBody -> .)
    IF              reduce using rule 72 (errorBody -> .)
    FOR             reduce using rule 72 (errorBody -> .)
    WHILE           reduce using rule 72 (errorBody -> .)
    }               reduce using rule 150 (empty -> .)

    body                           shift and go to state 246
    errorBody                      shift and go to state 75
    empty                          shift and go to state 76

state 225

    (78) forCycle -> errorForCycle FOR ( assign ; expresion . ; assign ) { body }

    ;               shift and go to state 247


state 226

    (138) opStruct -> errorOpStruct [ expresion . ] opMatrix

    ]               shift and go to state 248


state 227

    (91) cyParamCall -> , expresion cyParamCall .

    )               reduce using rule 91 (cyParamCall -> , expresion cyParamCall .)


state 228

    (120) cyExp -> + term .

    EQ              reduce using rule 120 (cyExp -> + term .)
    DIF             reduce using rule 120 (cyExp -> + term .)
    LTOEQ           reduce using rule 120 (cyExp -> + term .)
    GTOEQ           reduce using rule 120 (cyExp -> + term .)
    >               reduce using rule 120 (cyExp -> + term .)
    <               reduce using rule 120 (cyExp -> + term .)
    AND             reduce using rule 120 (cyExp -> + term .)
    OR              reduce using rule 120 (cyExp -> + term .)
    ,               reduce using rule 120 (cyExp -> + term .)
    )               reduce using rule 120 (cyExp -> + term .)
    ;               reduce using rule 120 (cyExp -> + term .)
    ]               reduce using rule 120 (cyExp -> + term .)


state 229

    (121) cyExp -> - term .

    EQ              reduce using rule 121 (cyExp -> - term .)
    DIF             reduce using rule 121 (cyExp -> - term .)
    LTOEQ           reduce using rule 121 (cyExp -> - term .)
    GTOEQ           reduce using rule 121 (cyExp -> - term .)
    >               reduce using rule 121 (cyExp -> - term .)
    <               reduce using rule 121 (cyExp -> - term .)
    AND             reduce using rule 121 (cyExp -> - term .)
    OR              reduce using rule 121 (cyExp -> - term .)
    ,               reduce using rule 121 (cyExp -> - term .)
    )               reduce using rule 121 (cyExp -> - term .)
    ;               reduce using rule 121 (cyExp -> - term .)
    ]               reduce using rule 121 (cyExp -> - term .)


state 230

    (111) opSExp -> EQ exp .

    AND             reduce using rule 111 (opSExp -> EQ exp .)
    OR              reduce using rule 111 (opSExp -> EQ exp .)
    ,               reduce using rule 111 (opSExp -> EQ exp .)
    )               reduce using rule 111 (opSExp -> EQ exp .)
    ;               reduce using rule 111 (opSExp -> EQ exp .)
    ]               reduce using rule 111 (opSExp -> EQ exp .)


state 231

    (112) opSExp -> DIF exp .

    AND             reduce using rule 112 (opSExp -> DIF exp .)
    OR              reduce using rule 112 (opSExp -> DIF exp .)
    ,               reduce using rule 112 (opSExp -> DIF exp .)
    )               reduce using rule 112 (opSExp -> DIF exp .)
    ;               reduce using rule 112 (opSExp -> DIF exp .)
    ]               reduce using rule 112 (opSExp -> DIF exp .)


state 232

    (114) opSExp -> GTOEQ exp .

    AND             reduce using rule 114 (opSExp -> GTOEQ exp .)
    OR              reduce using rule 114 (opSExp -> GTOEQ exp .)
    ,               reduce using rule 114 (opSExp -> GTOEQ exp .)
    )               reduce using rule 114 (opSExp -> GTOEQ exp .)
    ;               reduce using rule 114 (opSExp -> GTOEQ exp .)
    ]               reduce using rule 114 (opSExp -> GTOEQ exp .)


state 233

    (115) opSExp -> > exp .

    AND             reduce using rule 115 (opSExp -> > exp .)
    OR              reduce using rule 115 (opSExp -> > exp .)
    ,               reduce using rule 115 (opSExp -> > exp .)
    )               reduce using rule 115 (opSExp -> > exp .)
    ;               reduce using rule 115 (opSExp -> > exp .)
    ]               reduce using rule 115 (opSExp -> > exp .)


state 234

    (113) opSExp -> LTOEQ exp .

    AND             reduce using rule 113 (opSExp -> LTOEQ exp .)
    OR              reduce using rule 113 (opSExp -> LTOEQ exp .)
    ,               reduce using rule 113 (opSExp -> LTOEQ exp .)
    )               reduce using rule 113 (opSExp -> LTOEQ exp .)
    ;               reduce using rule 113 (opSExp -> LTOEQ exp .)
    ]               reduce using rule 113 (opSExp -> LTOEQ exp .)


state 235

    (116) opSExp -> < exp .

    AND             reduce using rule 116 (opSExp -> < exp .)
    OR              reduce using rule 116 (opSExp -> < exp .)
    ,               reduce using rule 116 (opSExp -> < exp .)
    )               reduce using rule 116 (opSExp -> < exp .)
    ;               reduce using rule 116 (opSExp -> < exp .)
    ]               reduce using rule 116 (opSExp -> < exp .)


state 236

    (125) cyTerm -> * errorFact fact .

    +               reduce using rule 125 (cyTerm -> * errorFact fact .)
    -               reduce using rule 125 (cyTerm -> * errorFact fact .)
    EQ              reduce using rule 125 (cyTerm -> * errorFact fact .)
    DIF             reduce using rule 125 (cyTerm -> * errorFact fact .)
    LTOEQ           reduce using rule 125 (cyTerm -> * errorFact fact .)
    GTOEQ           reduce using rule 125 (cyTerm -> * errorFact fact .)
    >               reduce using rule 125 (cyTerm -> * errorFact fact .)
    <               reduce using rule 125 (cyTerm -> * errorFact fact .)
    AND             reduce using rule 125 (cyTerm -> * errorFact fact .)
    OR              reduce using rule 125 (cyTerm -> * errorFact fact .)
    ,               reduce using rule 125 (cyTerm -> * errorFact fact .)
    )               reduce using rule 125 (cyTerm -> * errorFact fact .)
    ;               reduce using rule 125 (cyTerm -> * errorFact fact .)
    ]               reduce using rule 125 (cyTerm -> * errorFact fact .)


state 237

    (34) initDict -> = ( dictType : . dictType ) errorInitDict
    (36) dictType -> . errorDictType CTES
    (37) dictType -> . cte
    (38) dictType -> . ID
    (39) errorDictType -> .
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE

    ID              shift and go to state 251
    CTES            reduce using rule 39 (errorDictType -> .)
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    dictType                       shift and go to state 249
    errorDictType                  shift and go to state 213
    cte                            shift and go to state 250

state 238

    (36) dictType -> errorDictType CTES .

    )               reduce using rule 36 (dictType -> errorDictType CTES .)
    :               reduce using rule 36 (dictType -> errorDictType CTES .)


state 239

    (84) assignOptions -> [ expresion ] assignMatrix . init
    (30) init -> . = initWith errorInit

    =               shift and go to state 253

    init                           shift and go to state 252

state 240

    (85) assignMatrix -> [ . expresion ] errorAssignMatrix
    (105) expresion -> . sExp cyExpresion errorExpresion
    (110) sExp -> . exp errorOpSExp opSExp
    (119) exp -> . term errorCyExp cyExp
    (124) term -> . fact cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . ( expresion )
    (132) fact -> . ID opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    expresion                      shift and go to state 254
    term                           shift and go to state 132
    funcCall                       shift and go to state 134
    sExp                           shift and go to state 126
    cte                            shift and go to state 135
    exp                            shift and go to state 137
    fact                           shift and go to state 138

state 241

    (86) assignMatrix -> empty .

    =               reduce using rule 86 (assignMatrix -> empty .)


state 242

    (98) condition -> errorCondition IF ( expresion ) { . body } optionalElse
    (70) body -> . errorBody cyInstruction
    (71) body -> . empty
    (72) errorBody -> .
    (150) empty -> .

    ID              reduce using rule 72 (errorBody -> .)
    IF              reduce using rule 72 (errorBody -> .)
    FOR             reduce using rule 72 (errorBody -> .)
    WHILE           reduce using rule 72 (errorBody -> .)
    }               reduce using rule 150 (empty -> .)

    body                           shift and go to state 255
    errorBody                      shift and go to state 75
    empty                          shift and go to state 76

state 243

    (43) cyParam -> empty saveID . saveTypeParam
    (46) saveTypeParam -> .

    )               reduce using rule 46 (saveTypeParam -> .)

    saveTypeParam                  shift and go to state 256

state 244

    (42) cyParam -> errorCyParam saveID . saveTypeParam ; param
    (46) saveTypeParam -> .

    ;               reduce using rule 46 (saveTypeParam -> .)

    saveTypeParam                  shift and go to state 257

state 245

    (58) opReturns -> errorOpReturns RETURNS type saveReturnType . { opVars body return

    {               shift and go to state 258


state 246

    (76) whileCycle -> errorWhileCycle WHILE ( expresion ) { body . }

    }               shift and go to state 259


state 247

    (78) forCycle -> errorForCycle FOR ( assign ; expresion ; . assign ) { body }
    (80) assign -> . ID errorAssign assignOptions

    ID              shift and go to state 151

    assign                         shift and go to state 260

state 248

    (138) opStruct -> errorOpStruct [ expresion ] . opMatrix
    (140) opMatrix -> . errorOpMatrix [ expresion ]
    (141) opMatrix -> . empty
    (142) errorOpMatrix -> .
    (150) empty -> .

    [               reduce using rule 142 (errorOpMatrix -> .)
    *               reduce using rule 150 (empty -> .)
    /               reduce using rule 150 (empty -> .)
    +               reduce using rule 150 (empty -> .)
    -               reduce using rule 150 (empty -> .)
    EQ              reduce using rule 150 (empty -> .)
    DIF             reduce using rule 150 (empty -> .)
    LTOEQ           reduce using rule 150 (empty -> .)
    GTOEQ           reduce using rule 150 (empty -> .)
    >               reduce using rule 150 (empty -> .)
    <               reduce using rule 150 (empty -> .)
    AND             reduce using rule 150 (empty -> .)
    OR              reduce using rule 150 (empty -> .)
    ,               reduce using rule 150 (empty -> .)
    )               reduce using rule 150 (empty -> .)
    ]               reduce using rule 150 (empty -> .)
    ;               reduce using rule 150 (empty -> .)

    empty                          shift and go to state 263
    errorOpMatrix                  shift and go to state 261
    opMatrix                       shift and go to state 262

state 249

    (34) initDict -> = ( dictType : dictType . ) errorInitDict

    )               shift and go to state 264


state 250

    (37) dictType -> cte .

    )               reduce using rule 37 (dictType -> cte .)


state 251

    (38) dictType -> ID .

    )               reduce using rule 38 (dictType -> ID .)


state 252

    (84) assignOptions -> [ expresion ] assignMatrix init .

    ;               reduce using rule 84 (assignOptions -> [ expresion ] assignMatrix init .)
    )               reduce using rule 84 (assignOptions -> [ expresion ] assignMatrix init .)


state 253

    (30) init -> = . initWith errorInit
    (32) initWith -> . expresion
    (33) initWith -> . funcCall
    (105) expresion -> . sExp cyExpresion errorExpresion
    (88) funcCall -> . ID ( opParamCall )
    (110) sExp -> . exp errorOpSExp opSExp
    (119) exp -> . term errorCyExp cyExp
    (124) term -> . fact cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . ( expresion )
    (132) fact -> . ID opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE

    ID              shift and go to state 176
    CTES            shift and go to state 131
    (               shift and go to state 125
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    expresion                      shift and go to state 177
    initWith                       shift and go to state 174
    funcCall                       shift and go to state 178
    sExp                           shift and go to state 126
    cte                            shift and go to state 135
    term                           shift and go to state 132
    exp                            shift and go to state 137
    fact                           shift and go to state 138

state 254

    (85) assignMatrix -> [ expresion . ] errorAssignMatrix

    ]               shift and go to state 265


state 255

    (98) condition -> errorCondition IF ( expresion ) { body . } optionalElse

    }               shift and go to state 266


state 256

    (43) cyParam -> empty saveID saveTypeParam .

    )               reduce using rule 43 (cyParam -> empty saveID saveTypeParam .)


state 257

    (42) cyParam -> errorCyParam saveID saveTypeParam . ; param

    ;               shift and go to state 267


state 258

    (58) opReturns -> errorOpReturns RETURNS type saveReturnType { . opVars body return
    (6) opVars -> . vars
    (7) opVars -> . empty
    (10) vars -> . errorVars VARS declare
    (150) empty -> .
    (12) errorVars -> .

    RETURN          reduce using rule 150 (empty -> .)
    ID              reduce using rule 150 (empty -> .)
    IF              reduce using rule 150 (empty -> .)
    FOR             reduce using rule 150 (empty -> .)
    WHILE           reduce using rule 150 (empty -> .)
    VARS            reduce using rule 12 (errorVars -> .)

    vars                           shift and go to state 8
    opVars                         shift and go to state 268
    errorVars                      shift and go to state 10
    empty                          shift and go to state 11

state 259

    (76) whileCycle -> errorWhileCycle WHILE ( expresion ) { body } .

    ID              reduce using rule 76 (whileCycle -> errorWhileCycle WHILE ( expresion ) { body } .)
    IF              reduce using rule 76 (whileCycle -> errorWhileCycle WHILE ( expresion ) { body } .)
    FOR             reduce using rule 76 (whileCycle -> errorWhileCycle WHILE ( expresion ) { body } .)
    WHILE           reduce using rule 76 (whileCycle -> errorWhileCycle WHILE ( expresion ) { body } .)
    }               reduce using rule 76 (whileCycle -> errorWhileCycle WHILE ( expresion ) { body } .)
    RETURN          reduce using rule 76 (whileCycle -> errorWhileCycle WHILE ( expresion ) { body } .)


state 260

    (78) forCycle -> errorForCycle FOR ( assign ; expresion ; assign . ) { body }

    )               shift and go to state 269


state 261

    (140) opMatrix -> errorOpMatrix . [ expresion ]

    [               shift and go to state 270


state 262

    (138) opStruct -> errorOpStruct [ expresion ] opMatrix .

    *               reduce using rule 138 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    /               reduce using rule 138 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    +               reduce using rule 138 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    -               reduce using rule 138 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    EQ              reduce using rule 138 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    DIF             reduce using rule 138 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    LTOEQ           reduce using rule 138 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    GTOEQ           reduce using rule 138 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    >               reduce using rule 138 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    <               reduce using rule 138 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    AND             reduce using rule 138 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    OR              reduce using rule 138 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    )               reduce using rule 138 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    ,               reduce using rule 138 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    ]               reduce using rule 138 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    ;               reduce using rule 138 (opStruct -> errorOpStruct [ expresion ] opMatrix .)


state 263

    (141) opMatrix -> empty .

    *               reduce using rule 141 (opMatrix -> empty .)
    /               reduce using rule 141 (opMatrix -> empty .)
    +               reduce using rule 141 (opMatrix -> empty .)
    -               reduce using rule 141 (opMatrix -> empty .)
    EQ              reduce using rule 141 (opMatrix -> empty .)
    DIF             reduce using rule 141 (opMatrix -> empty .)
    LTOEQ           reduce using rule 141 (opMatrix -> empty .)
    GTOEQ           reduce using rule 141 (opMatrix -> empty .)
    >               reduce using rule 141 (opMatrix -> empty .)
    <               reduce using rule 141 (opMatrix -> empty .)
    AND             reduce using rule 141 (opMatrix -> empty .)
    OR              reduce using rule 141 (opMatrix -> empty .)
    ,               reduce using rule 141 (opMatrix -> empty .)
    )               reduce using rule 141 (opMatrix -> empty .)
    ]               reduce using rule 141 (opMatrix -> empty .)
    ;               reduce using rule 141 (opMatrix -> empty .)


state 264

    (34) initDict -> = ( dictType : dictType ) . errorInitDict
    (35) errorInitDict -> .

    ;               reduce using rule 35 (errorInitDict -> .)
    )               reduce using rule 35 (errorInitDict -> .)

    errorInitDict                  shift and go to state 271

state 265

    (85) assignMatrix -> [ expresion ] . errorAssignMatrix
    (87) errorAssignMatrix -> .

    =               reduce using rule 87 (errorAssignMatrix -> .)

    errorAssignMatrix              shift and go to state 272

state 266

    (98) condition -> errorCondition IF ( expresion ) { body } . optionalElse
    (100) optionalElse -> . errorElse ELSE { body }
    (101) optionalElse -> . empty
    (102) errorElse -> .
    (150) empty -> .

    ELSE            reduce using rule 102 (errorElse -> .)
    ID              reduce using rule 150 (empty -> .)
    IF              reduce using rule 150 (empty -> .)
    FOR             reduce using rule 150 (empty -> .)
    WHILE           reduce using rule 150 (empty -> .)
    }               reduce using rule 150 (empty -> .)
    RETURN          reduce using rule 150 (empty -> .)

    errorElse                      shift and go to state 273
    optionalElse                   shift and go to state 274
    empty                          shift and go to state 275

state 267

    (42) cyParam -> errorCyParam saveID saveTypeParam ; . param
    (40) param -> . saveType type errorParam ID cyTypeParam cyParam
    (3) saveType -> .

    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    OBJECT          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)

    param                          shift and go to state 276
    saveType                       shift and go to state 82

state 268

    (58) opReturns -> errorOpReturns RETURNS type saveReturnType { opVars . body return
    (70) body -> . errorBody cyInstruction
    (71) body -> . empty
    (72) errorBody -> .
    (150) empty -> .

    ID              reduce using rule 72 (errorBody -> .)
    IF              reduce using rule 72 (errorBody -> .)
    FOR             reduce using rule 72 (errorBody -> .)
    WHILE           reduce using rule 72 (errorBody -> .)
    RETURN          reduce using rule 150 (empty -> .)

    body                           shift and go to state 277
    errorBody                      shift and go to state 75
    empty                          shift and go to state 76

state 269

    (78) forCycle -> errorForCycle FOR ( assign ; expresion ; assign ) . { body }

    {               shift and go to state 278


state 270

    (140) opMatrix -> errorOpMatrix [ . expresion ]
    (105) expresion -> . sExp cyExpresion errorExpresion
    (110) sExp -> . exp errorOpSExp opSExp
    (119) exp -> . term errorCyExp cyExp
    (124) term -> . fact cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . ( expresion )
    (132) fact -> . ID opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    expresion                      shift and go to state 279
    term                           shift and go to state 132
    funcCall                       shift and go to state 134
    sExp                           shift and go to state 126
    cte                            shift and go to state 135
    exp                            shift and go to state 137
    fact                           shift and go to state 138

state 271

    (34) initDict -> = ( dictType : dictType ) errorInitDict .

    ;               reduce using rule 34 (initDict -> = ( dictType : dictType ) errorInitDict .)
    )               reduce using rule 34 (initDict -> = ( dictType : dictType ) errorInitDict .)


state 272

    (85) assignMatrix -> [ expresion ] errorAssignMatrix .

    =               reduce using rule 85 (assignMatrix -> [ expresion ] errorAssignMatrix .)


state 273

    (100) optionalElse -> errorElse . ELSE { body }

    ELSE            shift and go to state 280


state 274

    (98) condition -> errorCondition IF ( expresion ) { body } optionalElse .

    ID              reduce using rule 98 (condition -> errorCondition IF ( expresion ) { body } optionalElse .)
    IF              reduce using rule 98 (condition -> errorCondition IF ( expresion ) { body } optionalElse .)
    FOR             reduce using rule 98 (condition -> errorCondition IF ( expresion ) { body } optionalElse .)
    WHILE           reduce using rule 98 (condition -> errorCondition IF ( expresion ) { body } optionalElse .)
    }               reduce using rule 98 (condition -> errorCondition IF ( expresion ) { body } optionalElse .)
    RETURN          reduce using rule 98 (condition -> errorCondition IF ( expresion ) { body } optionalElse .)


state 275

    (101) optionalElse -> empty .

    ID              reduce using rule 101 (optionalElse -> empty .)
    IF              reduce using rule 101 (optionalElse -> empty .)
    FOR             reduce using rule 101 (optionalElse -> empty .)
    WHILE           reduce using rule 101 (optionalElse -> empty .)
    }               reduce using rule 101 (optionalElse -> empty .)
    RETURN          reduce using rule 101 (optionalElse -> empty .)


state 276

    (42) cyParam -> errorCyParam saveID saveTypeParam ; param .

    )               reduce using rule 42 (cyParam -> errorCyParam saveID saveTypeParam ; param .)


state 277

    (58) opReturns -> errorOpReturns RETURNS type saveReturnType { opVars body . return
    (51) return -> . errorReturn RETURN expresion ;
    (52) errorReturn -> .

    RETURN          reduce using rule 52 (errorReturn -> .)

    return                         shift and go to state 281
    errorReturn                    shift and go to state 282

state 278

    (78) forCycle -> errorForCycle FOR ( assign ; expresion ; assign ) { . body }
    (70) body -> . errorBody cyInstruction
    (71) body -> . empty
    (72) errorBody -> .
    (150) empty -> .

    ID              reduce using rule 72 (errorBody -> .)
    IF              reduce using rule 72 (errorBody -> .)
    FOR             reduce using rule 72 (errorBody -> .)
    WHILE           reduce using rule 72 (errorBody -> .)
    }               reduce using rule 150 (empty -> .)

    body                           shift and go to state 283
    errorBody                      shift and go to state 75
    empty                          shift and go to state 76

state 279

    (140) opMatrix -> errorOpMatrix [ expresion . ]

    ]               shift and go to state 284


state 280

    (100) optionalElse -> errorElse ELSE . { body }

    {               shift and go to state 285


state 281

    (58) opReturns -> errorOpReturns RETURNS type saveReturnType { opVars body return .

    }               reduce using rule 58 (opReturns -> errorOpReturns RETURNS type saveReturnType { opVars body return .)


state 282

    (51) return -> errorReturn . RETURN expresion ;

    RETURN          shift and go to state 286


state 283

    (78) forCycle -> errorForCycle FOR ( assign ; expresion ; assign ) { body . }

    }               shift and go to state 287


state 284

    (140) opMatrix -> errorOpMatrix [ expresion ] .

    *               reduce using rule 140 (opMatrix -> errorOpMatrix [ expresion ] .)
    /               reduce using rule 140 (opMatrix -> errorOpMatrix [ expresion ] .)
    +               reduce using rule 140 (opMatrix -> errorOpMatrix [ expresion ] .)
    -               reduce using rule 140 (opMatrix -> errorOpMatrix [ expresion ] .)
    EQ              reduce using rule 140 (opMatrix -> errorOpMatrix [ expresion ] .)
    DIF             reduce using rule 140 (opMatrix -> errorOpMatrix [ expresion ] .)
    LTOEQ           reduce using rule 140 (opMatrix -> errorOpMatrix [ expresion ] .)
    GTOEQ           reduce using rule 140 (opMatrix -> errorOpMatrix [ expresion ] .)
    >               reduce using rule 140 (opMatrix -> errorOpMatrix [ expresion ] .)
    <               reduce using rule 140 (opMatrix -> errorOpMatrix [ expresion ] .)
    AND             reduce using rule 140 (opMatrix -> errorOpMatrix [ expresion ] .)
    OR              reduce using rule 140 (opMatrix -> errorOpMatrix [ expresion ] .)
    ,               reduce using rule 140 (opMatrix -> errorOpMatrix [ expresion ] .)
    )               reduce using rule 140 (opMatrix -> errorOpMatrix [ expresion ] .)
    ]               reduce using rule 140 (opMatrix -> errorOpMatrix [ expresion ] .)
    ;               reduce using rule 140 (opMatrix -> errorOpMatrix [ expresion ] .)


state 285

    (100) optionalElse -> errorElse ELSE { . body }
    (70) body -> . errorBody cyInstruction
    (71) body -> . empty
    (72) errorBody -> .
    (150) empty -> .

    ID              reduce using rule 72 (errorBody -> .)
    IF              reduce using rule 72 (errorBody -> .)
    FOR             reduce using rule 72 (errorBody -> .)
    WHILE           reduce using rule 72 (errorBody -> .)
    }               reduce using rule 150 (empty -> .)

    body                           shift and go to state 288
    empty                          shift and go to state 76
    errorBody                      shift and go to state 75

state 286

    (51) return -> errorReturn RETURN . expresion ;
    (105) expresion -> . sExp cyExpresion errorExpresion
    (110) sExp -> . exp errorOpSExp opSExp
    (119) exp -> . term errorCyExp cyExp
    (124) term -> . fact cyTerm
    (128) fact -> . CTES
    (129) fact -> . cte
    (130) fact -> . funcCall
    (131) fact -> . ( expresion )
    (132) fact -> . ID opAccess errorOpAccess
    (146) cte -> . CTED
    (147) cte -> . CTEF
    (148) cte -> . TRUE
    (149) cte -> . FALSE
    (88) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    expresion                      shift and go to state 289
    term                           shift and go to state 132
    funcCall                       shift and go to state 134
    sExp                           shift and go to state 126
    cte                            shift and go to state 135
    exp                            shift and go to state 137
    fact                           shift and go to state 138

state 287

    (78) forCycle -> errorForCycle FOR ( assign ; expresion ; assign ) { body } .

    ID              reduce using rule 78 (forCycle -> errorForCycle FOR ( assign ; expresion ; assign ) { body } .)
    IF              reduce using rule 78 (forCycle -> errorForCycle FOR ( assign ; expresion ; assign ) { body } .)
    FOR             reduce using rule 78 (forCycle -> errorForCycle FOR ( assign ; expresion ; assign ) { body } .)
    WHILE           reduce using rule 78 (forCycle -> errorForCycle FOR ( assign ; expresion ; assign ) { body } .)
    }               reduce using rule 78 (forCycle -> errorForCycle FOR ( assign ; expresion ; assign ) { body } .)
    RETURN          reduce using rule 78 (forCycle -> errorForCycle FOR ( assign ; expresion ; assign ) { body } .)


state 288

    (100) optionalElse -> errorElse ELSE { body . }

    }               shift and go to state 290


state 289

    (51) return -> errorReturn RETURN expresion . ;

    ;               shift and go to state 291


state 290

    (100) optionalElse -> errorElse ELSE { body } .

    ID              reduce using rule 100 (optionalElse -> errorElse ELSE { body } .)
    IF              reduce using rule 100 (optionalElse -> errorElse ELSE { body } .)
    FOR             reduce using rule 100 (optionalElse -> errorElse ELSE { body } .)
    WHILE           reduce using rule 100 (optionalElse -> errorElse ELSE { body } .)
    }               reduce using rule 100 (optionalElse -> errorElse ELSE { body } .)
    RETURN          reduce using rule 100 (optionalElse -> errorElse ELSE { body } .)


state 291

    (51) return -> errorReturn RETURN expresion ; .

    }               reduce using rule 51 (return -> errorReturn RETURN expresion ; .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CTES in state 175 resolved as shift
WARNING: reduce/reduce conflict in state 178 resolved using rule (initWith -> funcCall)
WARNING: rejected rule (fact -> funcCall) in state 178
