Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables
Rule 2     changeCurrentScope -> <empty>
Rule 3     saveType -> <empty>
Rule 4     saveProc -> <empty>
Rule 5     errorProgram -> <empty>
Rule 6     opVars -> vars
Rule 7     opVars -> empty
Rule 8     opFunctions -> function opFunctions
Rule 9     opFunctions -> empty
Rule 10    vars -> errorVars VARS declare
Rule 11    saveID -> <empty>
Rule 12    errorVars -> <empty>
Rule 13    type -> errorType INT
Rule 14    type -> FLOAT
Rule 15    type -> STRING
Rule 16    type -> BOOL
Rule 17    errorType -> <empty>
Rule 18    main -> errorMain MAIN saveMain { opVars body } clearVarsTable
Rule 19    saveMain -> <empty>
Rule 20    errorMain -> <empty>
Rule 21    instr -> basicStatements ;
Rule 22    instr -> condition
Rule 23    instr -> cycle
Rule 24    basicStatements -> assign
Rule 25    basicStatements -> funcCall
Rule 26    basicStatements -> print
Rule 27    basicStatements -> read
Rule 28    print -> PRINT PARINI exp performPrint cyPrint PARFIN
Rule 29    cyPrint -> , fix exp performPrint cyPrint
Rule 30    cyPrint -> empty
Rule 31    read -> READ PARINI ID performRead cyRead PARFIN
Rule 32    cyRead -> , fix ID performRead cyRead
Rule 33    cyRead -> empty
Rule 34    fix -> <empty>
Rule 35    declare -> basicDeclare
Rule 36    declare -> structDeclare
Rule 37    declare -> dictDeclare
Rule 38    init -> ASGN saveOperator errorInit initWith
Rule 39    errorInit -> <empty>
Rule 40    initWith -> expresion
Rule 41    initWith -> funcCall
Rule 42    initDict -> ASGN PARINI dictType : dictType PARFIN errorInitDict
Rule 43    errorInitDict -> <empty>
Rule 44    dictType -> errorDictType CTES
Rule 45    dictType -> cte
Rule 46    dictType -> ID
Rule 47    errorDictType -> <empty>
Rule 48    param -> saveType type errorParam ID cyTypeParam cyParam
Rule 49    errorParam -> <empty>
Rule 50    cyParam -> errorCyParam saveID saveTypeParam ; param
Rule 51    cyParam -> empty saveID saveTypeParam
Rule 52    cyTypeParam -> , saveID saveTypeParam ID cyTypeParam
Rule 53    cyTypeParam -> empty
Rule 54    saveTypeParam -> <empty>
Rule 55    errorCyParam -> <empty>
Rule 56    function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
Rule 57    errorFunction -> <empty>
Rule 58    clearVarsTable -> <empty>
Rule 59    return -> errorReturn RETURN expresion ;
Rule 60    errorReturn -> <empty>
Rule 61    opParameters -> param saveParamToDirProc errorOpParameters
Rule 62    opParameters -> empty
Rule 63    flagParameters -> <empty>
Rule 64    saveParamToDirProc -> <empty>
Rule 65    errorOpParameters -> <empty>
Rule 66    opReturns -> errorOpReturns RETURNS type saveReturnType { opVars body return
Rule 67    opReturns -> { opVars body
Rule 68    saveReturnType -> <empty>
Rule 69    errorOpReturns -> <empty>
Rule 70    basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
Rule 71    errorBasicDeclare -> <empty>
Rule 72    structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare
Rule 73    errorStructDeclare -> <empty>
Rule 74    dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare
Rule 75    errorDictDeclare -> <empty>
Rule 76    cyDeclare -> declare
Rule 77    cyDeclare -> empty
Rule 78    body -> errorBody cyInstruction
Rule 79    body -> empty
Rule 80    errorBody -> <empty>
Rule 81    cyInstruction -> instr body
Rule 82    cycle -> forCycle
Rule 83    cycle -> whileCycle
Rule 84    whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body }
Rule 85    errorWhileCycle -> <empty>
Rule 86    forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body }
Rule 87    errorForCycle -> <empty>
Rule 88    assign -> ID saveVariable errorAssign assignOptions performAssign
Rule 89    errorAssign -> <empty>
Rule 90    assignOptions -> init
Rule 91    assignOptions -> initDict
Rule 92    assignOptions -> [ expresion ] assignMatrix init
Rule 93    assignMatrix -> [ expresion ] errorAssignMatrix
Rule 94    assignMatrix -> empty
Rule 95    errorAssignMatrix -> <empty>
Rule 96    funcCall -> ID PARINI opParamCall PARFIN
Rule 97    opParamCall -> expresion cyParamCall
Rule 98    opParamCall -> empty
Rule 99    cyParamCall -> , expresion cyParamCall
Rule 100   cyParamCall -> empty
Rule 101   struct -> structType [ CTED ] optionalMatrix
Rule 102   structType -> type
Rule 103   structType -> DICT dict
Rule 104   optionalMatrix -> [ CTED ]
Rule 105   optionalMatrix -> empty
Rule 106   condition -> errorCondition IF PARINI expresion PARFIN { body } optionalElse
Rule 107   errorCondition -> <empty>
Rule 108   optionalElse -> errorElse ELSE { body }
Rule 109   optionalElse -> empty
Rule 110   errorElse -> <empty>
Rule 111   dict -> errorDict PARINI type : type PARFIN
Rule 112   errorDict -> <empty>
Rule 113   expresion -> sExp performAndOr cyExpresion errorExpresion
Rule 114   errorExpresion -> <empty>
Rule 115   cyExpresion -> AND saveOperator expresion
Rule 116   cyExpresion -> OR saveOperator expresion
Rule 117   cyExpresion -> empty
Rule 118   sExp -> exp errorOpSExp opSExp performRelational
Rule 119   opSExp -> EQ saveOperator exp
Rule 120   opSExp -> DIF saveOperator exp
Rule 121   opSExp -> LTOEQ saveOperator exp
Rule 122   opSExp -> GTOEQ saveOperator exp
Rule 123   opSExp -> GT saveOperator exp
Rule 124   opSExp -> LT saveOperator exp
Rule 125   opSExp -> empty
Rule 126   errorOpSExp -> <empty>
Rule 127   exp -> term performAddSub errorCyExp cyExp
Rule 128   cyExp -> PLUS saveOperator exp
Rule 129   cyExp -> MINUS saveOperator exp
Rule 130   cyExp -> empty
Rule 131   errorCyExp -> <empty>
Rule 132   term -> fact performMulDiv cyTerm
Rule 133   cyTerm -> MULT saveOperator errorFact term
Rule 134   cyTerm -> DIV saveOperator term
Rule 135   cyTerm -> empty
Rule 136   fact -> CTES saveConstantString
Rule 137   fact -> cte
Rule 138   fact -> funcCall
Rule 139   fact -> PARINI putFondo expresion PARFIN takeFondo
Rule 140   fact -> ID saveVariable opAccess errorOpAccess
Rule 141   errorFact -> <empty>
Rule 142   opAccess -> opStruct
Rule 143   opAccess -> opDictionary
Rule 144   opAccess -> empty
Rule 145   errorOpAccess -> <empty>
Rule 146   opStruct -> errorOpStruct [ expresion ] opMatrix
Rule 147   errorOpStruct -> <empty>
Rule 148   opMatrix -> errorOpMatrix [ expresion ]
Rule 149   opMatrix -> empty
Rule 150   errorOpMatrix -> <empty>
Rule 151   opDictionary -> . dictIndex
Rule 152   dictIndex -> FIRST
Rule 153   dictIndex -> LAST
Rule 154   cte -> CTED saveConstantInt
Rule 155   cte -> CTEF saveConstantFloat
Rule 156   cte -> TRUE saveConstantBool
Rule 157   cte -> FALSE saveConstantBool
Rule 158   empty -> <empty>
Rule 159   printTables -> <empty>
Rule 160   saveConstantInt -> <empty>
Rule 161   saveConstantFloat -> <empty>
Rule 162   saveConstantBool -> <empty>
Rule 163   saveConstantString -> <empty>
Rule 164   saveVariable -> <empty>
Rule 165   saveOperator -> <empty>
Rule 166   putFondo -> <empty>
Rule 167   takeFondo -> <empty>
Rule 168   performAssign -> <empty>
Rule 169   performMulDiv -> <empty>
Rule 170   performAddSub -> <empty>
Rule 171   performRelational -> <empty>
Rule 172   performAndOr -> <empty>
Rule 173   performPrint -> <empty>
Rule 174   performRead -> <empty>

Terminals, with rules where they appear

,                    : 29 32 52 99
.                    : 151
:                    : 42 111
;                    : 21 50 59 70 72 74 86 86
AND                  : 115
ASGN                 : 38 42
BOOL                 : 16
CTED                 : 101 104 154
CTEF                 : 155
CTES                 : 44 136
DICT                 : 74 103
DIF                  : 120
DIV                  : 134
ELSE                 : 108
EQ                   : 119
FALSE                : 157
FIRST                : 152
FLOAT                : 14
FOR                  : 86
FUNC                 : 56
GT                   : 123
GTOEQ                : 122
ID                   : 1 31 32 46 48 52 56 70 72 74 88 96 140
IF                   : 106
INT                  : 13
LAST                 : 153
LT                   : 124
LTOEQ                : 121
MAIN                 : 18
MINUS                : 129
MULT                 : 133
OR                   : 116
PARFIN               : 28 31 42 56 84 86 96 106 111 139
PARINI               : 28 31 42 56 84 86 96 106 111 139
PLUS                 : 128
PRINT                : 28
PROGRAM              : 1
READ                 : 31
RETURN               : 59
RETURNS              : 66
STRING               : 15
STRUCT               : 72
TRUE                 : 156
VARS                 : 10
WHILE                : 84
[                    : 92 93 101 104 146 148
]                    : 92 93 101 104 146 148
error                : 
{                    : 1 18 66 67 84 86 106 108
}                    : 1 18 56 84 86 106 108

Nonterminals, with rules where they appear

assign               : 24 86 86
assignMatrix         : 92
assignOptions        : 88
basicDeclare         : 35
basicStatements      : 21
body                 : 18 66 67 81 84 86 106 108
changeCurrentScope   : 1
clearVarsTable       : 18 56
condition            : 22
cte                  : 45 137
cyDeclare            : 70 72 74
cyExp                : 127
cyExpresion          : 113
cyInstruction        : 78
cyParam              : 48
cyParamCall          : 97 99
cyPrint              : 28 29
cyRead               : 31 32
cyTerm               : 132
cyTypeParam          : 48 52 70
cycle                : 23
declare              : 10 76
dict                 : 74 103
dictDeclare          : 37
dictIndex            : 151
dictType             : 42 42
empty                : 7 9 30 33 51 53 62 77 79 94 98 100 105 109 117 125 130 135 144 149
errorAssign          : 88
errorAssignMatrix    : 93
errorBasicDeclare    : 70
errorBody            : 78
errorCondition       : 106
errorCyExp           : 127
errorCyParam         : 50
errorDict            : 111
errorDictDeclare     : 74
errorDictType        : 44
errorElse            : 108
errorExpresion       : 113
errorFact            : 133
errorForCycle        : 86
errorFunction        : 56
errorInit            : 38
errorInitDict        : 42
errorMain            : 18
errorOpAccess        : 140
errorOpMatrix        : 148
errorOpParameters    : 61
errorOpReturns       : 66
errorOpSExp          : 118
errorOpStruct        : 146
errorParam           : 48
errorProgram         : 1
errorReturn          : 59
errorStructDeclare   : 72
errorType            : 13
errorVars            : 10
errorWhileCycle      : 84
exp                  : 28 29 118 119 120 121 122 123 124 128 129
expresion            : 40 59 84 86 92 93 97 99 106 115 116 139 146 148
fact                 : 132
fix                  : 29 32
flagParameters       : 56 56
forCycle             : 82
funcCall             : 25 41 138
function             : 8
init                 : 90 92
initDict             : 91
initWith             : 38
instr                : 81
main                 : 1
opAccess             : 140
opDictionary         : 143
opFunctions          : 1 8
opMatrix             : 146
opParamCall          : 96
opParameters         : 56
opReturns            : 56
opSExp               : 118
opStruct             : 142
opVars               : 1 18 66 67
optionalElse         : 106
optionalMatrix       : 101
param                : 50 61
performAddSub        : 127
performAndOr         : 113
performAssign        : 88
performMulDiv        : 132
performPrint         : 28 29
performRead          : 31 32
performRelational    : 118
print                : 26
printTables          : 1
program              : 0
putFondo             : 139
read                 : 27
return               : 66
sExp                 : 113
saveConstantBool     : 156 157
saveConstantFloat    : 155
saveConstantInt      : 154
saveConstantString   : 136
saveID               : 50 51 52 70
saveMain             : 18
saveOperator         : 38 115 116 119 120 121 122 123 124 128 129 133 134
saveParamToDirProc   : 61
saveProc             : 1 56
saveReturnType       : 66
saveType             : 1 48 56 70
saveTypeParam        : 50 51 52
saveVariable         : 88 140
struct               : 72
structDeclare        : 36
structType           : 101
takeFondo            : 139
term                 : 127 133 134
type                 : 48 66 70 102 111 111
vars                 : 6
whileCycle           : 83

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables
    (5) errorProgram -> .

    PROGRAM         reduce using rule 5 (errorProgram -> .)

    errorProgram                   shift and go to state 2
    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> errorProgram . PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables

    PROGRAM         shift and go to state 3


state 3

    (1) program -> errorProgram PROGRAM . saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables
    (3) saveType -> .

    ID              reduce using rule 3 (saveType -> .)

    saveType                       shift and go to state 4

state 4

    (1) program -> errorProgram PROGRAM saveType . ID saveProc { opVars changeCurrentScope opFunctions main } printTables

    ID              shift and go to state 5


state 5

    (1) program -> errorProgram PROGRAM saveType ID . saveProc { opVars changeCurrentScope opFunctions main } printTables
    (4) saveProc -> .

    {               reduce using rule 4 (saveProc -> .)

    saveProc                       shift and go to state 6

state 6

    (1) program -> errorProgram PROGRAM saveType ID saveProc . { opVars changeCurrentScope opFunctions main } printTables

    {               shift and go to state 7


state 7

    (1) program -> errorProgram PROGRAM saveType ID saveProc { . opVars changeCurrentScope opFunctions main } printTables
    (6) opVars -> . vars
    (7) opVars -> . empty
    (10) vars -> . errorVars VARS declare
    (158) empty -> .
    (12) errorVars -> .

    MAIN            reduce using rule 158 (empty -> .)
    FUNC            reduce using rule 158 (empty -> .)
    VARS            reduce using rule 12 (errorVars -> .)

    vars                           shift and go to state 8
    opVars                         shift and go to state 9
    errorVars                      shift and go to state 10
    empty                          shift and go to state 11

state 8

    (6) opVars -> vars .

    ID              reduce using rule 6 (opVars -> vars .)
    PRINT           reduce using rule 6 (opVars -> vars .)
    READ            reduce using rule 6 (opVars -> vars .)
    IF              reduce using rule 6 (opVars -> vars .)
    FOR             reduce using rule 6 (opVars -> vars .)
    WHILE           reduce using rule 6 (opVars -> vars .)
    }               reduce using rule 6 (opVars -> vars .)
    RETURN          reduce using rule 6 (opVars -> vars .)
    MAIN            reduce using rule 6 (opVars -> vars .)
    FUNC            reduce using rule 6 (opVars -> vars .)


state 9

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars . changeCurrentScope opFunctions main } printTables
    (2) changeCurrentScope -> .

    MAIN            reduce using rule 2 (changeCurrentScope -> .)
    FUNC            reduce using rule 2 (changeCurrentScope -> .)

    changeCurrentScope             shift and go to state 12

state 10

    (10) vars -> errorVars . VARS declare

    VARS            shift and go to state 13


state 11

    (7) opVars -> empty .

    ID              reduce using rule 7 (opVars -> empty .)
    PRINT           reduce using rule 7 (opVars -> empty .)
    READ            reduce using rule 7 (opVars -> empty .)
    IF              reduce using rule 7 (opVars -> empty .)
    FOR             reduce using rule 7 (opVars -> empty .)
    WHILE           reduce using rule 7 (opVars -> empty .)
    }               reduce using rule 7 (opVars -> empty .)
    RETURN          reduce using rule 7 (opVars -> empty .)
    MAIN            reduce using rule 7 (opVars -> empty .)
    FUNC            reduce using rule 7 (opVars -> empty .)


state 12

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope . opFunctions main } printTables
    (8) opFunctions -> . function opFunctions
    (9) opFunctions -> . empty
    (56) function -> . errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (158) empty -> .
    (57) errorFunction -> .

    MAIN            reduce using rule 158 (empty -> .)
    FUNC            reduce using rule 57 (errorFunction -> .)

    function                       shift and go to state 16
    errorFunction                  shift and go to state 17
    empty                          shift and go to state 15
    opFunctions                    shift and go to state 14

state 13

    (10) vars -> errorVars VARS . declare
    (35) declare -> . basicDeclare
    (36) declare -> . structDeclare
    (37) declare -> . dictDeclare
    (70) basicDeclare -> . saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (72) structDeclare -> . errorStructDeclare STRUCT ID struct ; cyDeclare
    (74) dictDeclare -> . errorDictDeclare DICT ID dict ; cyDeclare
    (3) saveType -> .
    (73) errorStructDeclare -> .
    (75) errorDictDeclare -> .

    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)
    STRUCT          reduce using rule 73 (errorStructDeclare -> .)
    DICT            reduce using rule 75 (errorDictDeclare -> .)

    dictDeclare                    shift and go to state 18
    saveType                       shift and go to state 19
    errorDictDeclare               shift and go to state 20
    structDeclare                  shift and go to state 21
    errorStructDeclare             shift and go to state 22
    basicDeclare                   shift and go to state 23
    declare                        shift and go to state 24

state 14

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions . main } printTables
    (18) main -> . errorMain MAIN saveMain { opVars body } clearVarsTable
    (20) errorMain -> .

    MAIN            reduce using rule 20 (errorMain -> .)

    main                           shift and go to state 25
    errorMain                      shift and go to state 26

state 15

    (9) opFunctions -> empty .

    MAIN            reduce using rule 9 (opFunctions -> empty .)


state 16

    (8) opFunctions -> function . opFunctions
    (8) opFunctions -> . function opFunctions
    (9) opFunctions -> . empty
    (56) function -> . errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (158) empty -> .
    (57) errorFunction -> .

    MAIN            reduce using rule 158 (empty -> .)
    FUNC            reduce using rule 57 (errorFunction -> .)

    function                       shift and go to state 16
    errorFunction                  shift and go to state 17
    empty                          shift and go to state 15
    opFunctions                    shift and go to state 27

state 17

    (56) function -> errorFunction . FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable

    FUNC            shift and go to state 28


state 18

    (37) declare -> dictDeclare .

    MAIN            reduce using rule 37 (declare -> dictDeclare .)
    FUNC            reduce using rule 37 (declare -> dictDeclare .)
    }               reduce using rule 37 (declare -> dictDeclare .)
    ID              reduce using rule 37 (declare -> dictDeclare .)
    PRINT           reduce using rule 37 (declare -> dictDeclare .)
    READ            reduce using rule 37 (declare -> dictDeclare .)
    IF              reduce using rule 37 (declare -> dictDeclare .)
    FOR             reduce using rule 37 (declare -> dictDeclare .)
    WHILE           reduce using rule 37 (declare -> dictDeclare .)
    RETURN          reduce using rule 37 (declare -> dictDeclare .)


state 19

    (70) basicDeclare -> saveType . type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    errorType                      shift and go to state 31
    type                           shift and go to state 33

state 20

    (74) dictDeclare -> errorDictDeclare . DICT ID dict ; cyDeclare

    DICT            shift and go to state 34


state 21

    (36) declare -> structDeclare .

    MAIN            reduce using rule 36 (declare -> structDeclare .)
    FUNC            reduce using rule 36 (declare -> structDeclare .)
    }               reduce using rule 36 (declare -> structDeclare .)
    ID              reduce using rule 36 (declare -> structDeclare .)
    PRINT           reduce using rule 36 (declare -> structDeclare .)
    READ            reduce using rule 36 (declare -> structDeclare .)
    IF              reduce using rule 36 (declare -> structDeclare .)
    FOR             reduce using rule 36 (declare -> structDeclare .)
    WHILE           reduce using rule 36 (declare -> structDeclare .)
    RETURN          reduce using rule 36 (declare -> structDeclare .)


state 22

    (72) structDeclare -> errorStructDeclare . STRUCT ID struct ; cyDeclare

    STRUCT          shift and go to state 35


state 23

    (35) declare -> basicDeclare .

    MAIN            reduce using rule 35 (declare -> basicDeclare .)
    FUNC            reduce using rule 35 (declare -> basicDeclare .)
    }               reduce using rule 35 (declare -> basicDeclare .)
    ID              reduce using rule 35 (declare -> basicDeclare .)
    PRINT           reduce using rule 35 (declare -> basicDeclare .)
    READ            reduce using rule 35 (declare -> basicDeclare .)
    IF              reduce using rule 35 (declare -> basicDeclare .)
    FOR             reduce using rule 35 (declare -> basicDeclare .)
    WHILE           reduce using rule 35 (declare -> basicDeclare .)
    RETURN          reduce using rule 35 (declare -> basicDeclare .)


state 24

    (10) vars -> errorVars VARS declare .

    ID              reduce using rule 10 (vars -> errorVars VARS declare .)
    PRINT           reduce using rule 10 (vars -> errorVars VARS declare .)
    READ            reduce using rule 10 (vars -> errorVars VARS declare .)
    IF              reduce using rule 10 (vars -> errorVars VARS declare .)
    FOR             reduce using rule 10 (vars -> errorVars VARS declare .)
    WHILE           reduce using rule 10 (vars -> errorVars VARS declare .)
    }               reduce using rule 10 (vars -> errorVars VARS declare .)
    MAIN            reduce using rule 10 (vars -> errorVars VARS declare .)
    FUNC            reduce using rule 10 (vars -> errorVars VARS declare .)
    RETURN          reduce using rule 10 (vars -> errorVars VARS declare .)


state 25

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main . } printTables

    }               shift and go to state 36


state 26

    (18) main -> errorMain . MAIN saveMain { opVars body } clearVarsTable

    MAIN            shift and go to state 37


state 27

    (8) opFunctions -> function opFunctions .

    MAIN            reduce using rule 8 (opFunctions -> function opFunctions .)


state 28

    (56) function -> errorFunction FUNC . saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (3) saveType -> .

    ID              reduce using rule 3 (saveType -> .)

    saveType                       shift and go to state 38

state 29

    (14) type -> FLOAT .

    {               reduce using rule 14 (type -> FLOAT .)
    PARFIN          reduce using rule 14 (type -> FLOAT .)
    ID              reduce using rule 14 (type -> FLOAT .)
    [               reduce using rule 14 (type -> FLOAT .)
    :               reduce using rule 14 (type -> FLOAT .)


state 30

    (15) type -> STRING .

    {               reduce using rule 15 (type -> STRING .)
    PARFIN          reduce using rule 15 (type -> STRING .)
    ID              reduce using rule 15 (type -> STRING .)
    [               reduce using rule 15 (type -> STRING .)
    :               reduce using rule 15 (type -> STRING .)


state 31

    (13) type -> errorType . INT

    INT             shift and go to state 39


state 32

    (16) type -> BOOL .

    {               reduce using rule 16 (type -> BOOL .)
    PARFIN          reduce using rule 16 (type -> BOOL .)
    ID              reduce using rule 16 (type -> BOOL .)
    [               reduce using rule 16 (type -> BOOL .)
    :               reduce using rule 16 (type -> BOOL .)


state 33

    (70) basicDeclare -> saveType type . errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (71) errorBasicDeclare -> .

    ID              reduce using rule 71 (errorBasicDeclare -> .)

    errorBasicDeclare              shift and go to state 40

state 34

    (74) dictDeclare -> errorDictDeclare DICT . ID dict ; cyDeclare

    ID              shift and go to state 41


state 35

    (72) structDeclare -> errorStructDeclare STRUCT . ID struct ; cyDeclare

    ID              shift and go to state 42


state 36

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } . printTables
    (159) printTables -> .

    $end            reduce using rule 159 (printTables -> .)

    printTables                    shift and go to state 43

state 37

    (18) main -> errorMain MAIN . saveMain { opVars body } clearVarsTable
    (19) saveMain -> .

    {               reduce using rule 19 (saveMain -> .)

    saveMain                       shift and go to state 44

state 38

    (56) function -> errorFunction FUNC saveType . ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable

    ID              shift and go to state 45


state 39

    (13) type -> errorType INT .

    {               reduce using rule 13 (type -> errorType INT .)
    PARFIN          reduce using rule 13 (type -> errorType INT .)
    ID              reduce using rule 13 (type -> errorType INT .)
    [               reduce using rule 13 (type -> errorType INT .)
    :               reduce using rule 13 (type -> errorType INT .)


state 40

    (70) basicDeclare -> saveType type errorBasicDeclare . ID cyTypeParam saveID ; cyDeclare

    ID              shift and go to state 46


state 41

    (74) dictDeclare -> errorDictDeclare DICT ID . dict ; cyDeclare
    (111) dict -> . errorDict PARINI type : type PARFIN
    (112) errorDict -> .

    PARINI          reduce using rule 112 (errorDict -> .)

    dict                           shift and go to state 48
    errorDict                      shift and go to state 47

state 42

    (72) structDeclare -> errorStructDeclare STRUCT ID . struct ; cyDeclare
    (101) struct -> . structType [ CTED ] optionalMatrix
    (102) structType -> . type
    (103) structType -> . DICT dict
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    DICT            shift and go to state 51
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    structType                     shift and go to state 49
    struct                         shift and go to state 50
    errorType                      shift and go to state 31
    type                           shift and go to state 52

state 43

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables .

    $end            reduce using rule 1 (program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables .)


state 44

    (18) main -> errorMain MAIN saveMain . { opVars body } clearVarsTable

    {               shift and go to state 53


state 45

    (56) function -> errorFunction FUNC saveType ID . saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (4) saveProc -> .

    PARINI          reduce using rule 4 (saveProc -> .)

    saveProc                       shift and go to state 54

state 46

    (70) basicDeclare -> saveType type errorBasicDeclare ID . cyTypeParam saveID ; cyDeclare
    (52) cyTypeParam -> . , saveID saveTypeParam ID cyTypeParam
    (53) cyTypeParam -> . empty
    (158) empty -> .

    ,               shift and go to state 55
    ;               reduce using rule 158 (empty -> .)

    empty                          shift and go to state 56
    cyTypeParam                    shift and go to state 57

state 47

    (111) dict -> errorDict . PARINI type : type PARFIN

    PARINI          shift and go to state 58


state 48

    (74) dictDeclare -> errorDictDeclare DICT ID dict . ; cyDeclare

    ;               shift and go to state 59


state 49

    (101) struct -> structType . [ CTED ] optionalMatrix

    [               shift and go to state 60


state 50

    (72) structDeclare -> errorStructDeclare STRUCT ID struct . ; cyDeclare

    ;               shift and go to state 61


state 51

    (103) structType -> DICT . dict
    (111) dict -> . errorDict PARINI type : type PARFIN
    (112) errorDict -> .

    PARINI          reduce using rule 112 (errorDict -> .)

    dict                           shift and go to state 62
    errorDict                      shift and go to state 47

state 52

    (102) structType -> type .

    [               reduce using rule 102 (structType -> type .)


state 53

    (18) main -> errorMain MAIN saveMain { . opVars body } clearVarsTable
    (6) opVars -> . vars
    (7) opVars -> . empty
    (10) vars -> . errorVars VARS declare
    (158) empty -> .
    (12) errorVars -> .

    }               reduce using rule 158 (empty -> .)
    ID              reduce using rule 158 (empty -> .)
    PRINT           reduce using rule 158 (empty -> .)
    READ            reduce using rule 158 (empty -> .)
    IF              reduce using rule 158 (empty -> .)
    FOR             reduce using rule 158 (empty -> .)
    WHILE           reduce using rule 158 (empty -> .)
    VARS            reduce using rule 12 (errorVars -> .)

    vars                           shift and go to state 8
    opVars                         shift and go to state 63
    errorVars                      shift and go to state 10
    empty                          shift and go to state 11

state 54

    (56) function -> errorFunction FUNC saveType ID saveProc . flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (63) flagParameters -> .

    PARINI          reduce using rule 63 (flagParameters -> .)

    flagParameters                 shift and go to state 64

state 55

    (52) cyTypeParam -> , . saveID saveTypeParam ID cyTypeParam
    (11) saveID -> .

    ID              reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 65

state 56

    (53) cyTypeParam -> empty .

    ;               reduce using rule 53 (cyTypeParam -> empty .)
    PARFIN          reduce using rule 53 (cyTypeParam -> empty .)


state 57

    (70) basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam . saveID ; cyDeclare
    (11) saveID -> .

    ;               reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 66

state 58

    (111) dict -> errorDict PARINI . type : type PARFIN
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    errorType                      shift and go to state 31
    type                           shift and go to state 67

state 59

    (74) dictDeclare -> errorDictDeclare DICT ID dict ; . cyDeclare
    (76) cyDeclare -> . declare
    (77) cyDeclare -> . empty
    (35) declare -> . basicDeclare
    (36) declare -> . structDeclare
    (37) declare -> . dictDeclare
    (158) empty -> .
    (70) basicDeclare -> . saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (72) structDeclare -> . errorStructDeclare STRUCT ID struct ; cyDeclare
    (74) dictDeclare -> . errorDictDeclare DICT ID dict ; cyDeclare
    (3) saveType -> .
    (73) errorStructDeclare -> .
    (75) errorDictDeclare -> .

    MAIN            reduce using rule 158 (empty -> .)
    FUNC            reduce using rule 158 (empty -> .)
    }               reduce using rule 158 (empty -> .)
    ID              reduce using rule 158 (empty -> .)
    PRINT           reduce using rule 158 (empty -> .)
    READ            reduce using rule 158 (empty -> .)
    IF              reduce using rule 158 (empty -> .)
    FOR             reduce using rule 158 (empty -> .)
    WHILE           reduce using rule 158 (empty -> .)
    RETURN          reduce using rule 158 (empty -> .)
    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)
    STRUCT          reduce using rule 73 (errorStructDeclare -> .)
    DICT            reduce using rule 75 (errorDictDeclare -> .)

    dictDeclare                    shift and go to state 18
    cyDeclare                      shift and go to state 68
    saveType                       shift and go to state 19
    structDeclare                  shift and go to state 21
    errorDictDeclare               shift and go to state 20
    errorStructDeclare             shift and go to state 22
    basicDeclare                   shift and go to state 23
    declare                        shift and go to state 69
    empty                          shift and go to state 70

state 60

    (101) struct -> structType [ . CTED ] optionalMatrix

    CTED            shift and go to state 71


state 61

    (72) structDeclare -> errorStructDeclare STRUCT ID struct ; . cyDeclare
    (76) cyDeclare -> . declare
    (77) cyDeclare -> . empty
    (35) declare -> . basicDeclare
    (36) declare -> . structDeclare
    (37) declare -> . dictDeclare
    (158) empty -> .
    (70) basicDeclare -> . saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (72) structDeclare -> . errorStructDeclare STRUCT ID struct ; cyDeclare
    (74) dictDeclare -> . errorDictDeclare DICT ID dict ; cyDeclare
    (3) saveType -> .
    (73) errorStructDeclare -> .
    (75) errorDictDeclare -> .

    MAIN            reduce using rule 158 (empty -> .)
    FUNC            reduce using rule 158 (empty -> .)
    }               reduce using rule 158 (empty -> .)
    ID              reduce using rule 158 (empty -> .)
    PRINT           reduce using rule 158 (empty -> .)
    READ            reduce using rule 158 (empty -> .)
    IF              reduce using rule 158 (empty -> .)
    FOR             reduce using rule 158 (empty -> .)
    WHILE           reduce using rule 158 (empty -> .)
    RETURN          reduce using rule 158 (empty -> .)
    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)
    STRUCT          reduce using rule 73 (errorStructDeclare -> .)
    DICT            reduce using rule 75 (errorDictDeclare -> .)

    dictDeclare                    shift and go to state 18
    cyDeclare                      shift and go to state 72
    saveType                       shift and go to state 19
    errorDictDeclare               shift and go to state 20
    structDeclare                  shift and go to state 21
    basicDeclare                   shift and go to state 23
    declare                        shift and go to state 69
    empty                          shift and go to state 70
    errorStructDeclare             shift and go to state 22

state 62

    (103) structType -> DICT dict .

    [               reduce using rule 103 (structType -> DICT dict .)


state 63

    (18) main -> errorMain MAIN saveMain { opVars . body } clearVarsTable
    (78) body -> . errorBody cyInstruction
    (79) body -> . empty
    (80) errorBody -> .
    (158) empty -> .

    ID              reduce using rule 80 (errorBody -> .)
    PRINT           reduce using rule 80 (errorBody -> .)
    READ            reduce using rule 80 (errorBody -> .)
    IF              reduce using rule 80 (errorBody -> .)
    FOR             reduce using rule 80 (errorBody -> .)
    WHILE           reduce using rule 80 (errorBody -> .)
    }               reduce using rule 158 (empty -> .)

    body                           shift and go to state 73
    errorBody                      shift and go to state 74
    empty                          shift and go to state 75

state 64

    (56) function -> errorFunction FUNC saveType ID saveProc flagParameters . PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable

    PARINI          shift and go to state 76


state 65

    (52) cyTypeParam -> , saveID . saveTypeParam ID cyTypeParam
    (54) saveTypeParam -> .

    ID              reduce using rule 54 (saveTypeParam -> .)

    saveTypeParam                  shift and go to state 77

state 66

    (70) basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID . ; cyDeclare

    ;               shift and go to state 78


state 67

    (111) dict -> errorDict PARINI type . : type PARFIN

    :               shift and go to state 79


state 68

    (74) dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .

    MAIN            reduce using rule 74 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    FUNC            reduce using rule 74 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    }               reduce using rule 74 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    ID              reduce using rule 74 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    PRINT           reduce using rule 74 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    READ            reduce using rule 74 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    IF              reduce using rule 74 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    FOR             reduce using rule 74 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    WHILE           reduce using rule 74 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    RETURN          reduce using rule 74 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)


state 69

    (76) cyDeclare -> declare .

    MAIN            reduce using rule 76 (cyDeclare -> declare .)
    FUNC            reduce using rule 76 (cyDeclare -> declare .)
    }               reduce using rule 76 (cyDeclare -> declare .)
    ID              reduce using rule 76 (cyDeclare -> declare .)
    PRINT           reduce using rule 76 (cyDeclare -> declare .)
    READ            reduce using rule 76 (cyDeclare -> declare .)
    IF              reduce using rule 76 (cyDeclare -> declare .)
    FOR             reduce using rule 76 (cyDeclare -> declare .)
    WHILE           reduce using rule 76 (cyDeclare -> declare .)
    RETURN          reduce using rule 76 (cyDeclare -> declare .)


state 70

    (77) cyDeclare -> empty .

    MAIN            reduce using rule 77 (cyDeclare -> empty .)
    FUNC            reduce using rule 77 (cyDeclare -> empty .)
    }               reduce using rule 77 (cyDeclare -> empty .)
    ID              reduce using rule 77 (cyDeclare -> empty .)
    PRINT           reduce using rule 77 (cyDeclare -> empty .)
    READ            reduce using rule 77 (cyDeclare -> empty .)
    IF              reduce using rule 77 (cyDeclare -> empty .)
    FOR             reduce using rule 77 (cyDeclare -> empty .)
    WHILE           reduce using rule 77 (cyDeclare -> empty .)
    RETURN          reduce using rule 77 (cyDeclare -> empty .)


state 71

    (101) struct -> structType [ CTED . ] optionalMatrix

    ]               shift and go to state 80


state 72

    (72) structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .

    MAIN            reduce using rule 72 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    FUNC            reduce using rule 72 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    }               reduce using rule 72 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    ID              reduce using rule 72 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    PRINT           reduce using rule 72 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    READ            reduce using rule 72 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    IF              reduce using rule 72 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    FOR             reduce using rule 72 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    WHILE           reduce using rule 72 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    RETURN          reduce using rule 72 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)


state 73

    (18) main -> errorMain MAIN saveMain { opVars body . } clearVarsTable

    }               shift and go to state 81


state 74

    (78) body -> errorBody . cyInstruction
    (81) cyInstruction -> . instr body
    (21) instr -> . basicStatements ;
    (22) instr -> . condition
    (23) instr -> . cycle
    (24) basicStatements -> . assign
    (25) basicStatements -> . funcCall
    (26) basicStatements -> . print
    (27) basicStatements -> . read
    (106) condition -> . errorCondition IF PARINI expresion PARFIN { body } optionalElse
    (82) cycle -> . forCycle
    (83) cycle -> . whileCycle
    (88) assign -> . ID saveVariable errorAssign assignOptions performAssign
    (96) funcCall -> . ID PARINI opParamCall PARFIN
    (28) print -> . PRINT PARINI exp performPrint cyPrint PARFIN
    (31) read -> . READ PARINI ID performRead cyRead PARFIN
    (107) errorCondition -> .
    (86) forCycle -> . errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body }
    (84) whileCycle -> . errorWhileCycle WHILE PARINI expresion PARFIN { body }
    (87) errorForCycle -> .
    (85) errorWhileCycle -> .

    ID              shift and go to state 88
    PRINT           shift and go to state 85
    READ            shift and go to state 83
    IF              reduce using rule 107 (errorCondition -> .)
    FOR             reduce using rule 87 (errorForCycle -> .)
    WHILE           reduce using rule 85 (errorWhileCycle -> .)

    instr                          shift and go to state 82
    whileCycle                     shift and go to state 84
    forCycle                       shift and go to state 86
    errorWhileCycle                shift and go to state 87
    condition                      shift and go to state 95
    print                          shift and go to state 89
    read                           shift and go to state 91
    basicStatements                shift and go to state 92
    errorForCycle                  shift and go to state 93
    cyInstruction                  shift and go to state 94
    cycle                          shift and go to state 90
    funcCall                       shift and go to state 96
    errorCondition                 shift and go to state 97
    assign                         shift and go to state 98

state 75

    (79) body -> empty .

    }               reduce using rule 79 (body -> empty .)
    RETURN          reduce using rule 79 (body -> empty .)


state 76

    (56) function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI . opParameters PARFIN flagParameters opReturns } clearVarsTable
    (61) opParameters -> . param saveParamToDirProc errorOpParameters
    (62) opParameters -> . empty
    (48) param -> . saveType type errorParam ID cyTypeParam cyParam
    (158) empty -> .
    (3) saveType -> .

    PARFIN          reduce using rule 158 (empty -> .)
    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)

    opParameters                   shift and go to state 99
    param                          shift and go to state 100
    saveType                       shift and go to state 101
    empty                          shift and go to state 102

state 77

    (52) cyTypeParam -> , saveID saveTypeParam . ID cyTypeParam

    ID              shift and go to state 103


state 78

    (70) basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; . cyDeclare
    (76) cyDeclare -> . declare
    (77) cyDeclare -> . empty
    (35) declare -> . basicDeclare
    (36) declare -> . structDeclare
    (37) declare -> . dictDeclare
    (158) empty -> .
    (70) basicDeclare -> . saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (72) structDeclare -> . errorStructDeclare STRUCT ID struct ; cyDeclare
    (74) dictDeclare -> . errorDictDeclare DICT ID dict ; cyDeclare
    (3) saveType -> .
    (73) errorStructDeclare -> .
    (75) errorDictDeclare -> .

    MAIN            reduce using rule 158 (empty -> .)
    FUNC            reduce using rule 158 (empty -> .)
    }               reduce using rule 158 (empty -> .)
    ID              reduce using rule 158 (empty -> .)
    PRINT           reduce using rule 158 (empty -> .)
    READ            reduce using rule 158 (empty -> .)
    IF              reduce using rule 158 (empty -> .)
    FOR             reduce using rule 158 (empty -> .)
    WHILE           reduce using rule 158 (empty -> .)
    RETURN          reduce using rule 158 (empty -> .)
    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)
    STRUCT          reduce using rule 73 (errorStructDeclare -> .)
    DICT            reduce using rule 75 (errorDictDeclare -> .)

    dictDeclare                    shift and go to state 18
    cyDeclare                      shift and go to state 104
    basicDeclare                   shift and go to state 23
    saveType                       shift and go to state 19
    errorDictDeclare               shift and go to state 20
    empty                          shift and go to state 70
    structDeclare                  shift and go to state 21
    errorStructDeclare             shift and go to state 22
    declare                        shift and go to state 69

state 79

    (111) dict -> errorDict PARINI type : . type PARFIN
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    errorType                      shift and go to state 31
    type                           shift and go to state 105

state 80

    (101) struct -> structType [ CTED ] . optionalMatrix
    (104) optionalMatrix -> . [ CTED ]
    (105) optionalMatrix -> . empty
    (158) empty -> .

    [               shift and go to state 107
    ;               reduce using rule 158 (empty -> .)

    empty                          shift and go to state 108
    optionalMatrix                 shift and go to state 106

state 81

    (18) main -> errorMain MAIN saveMain { opVars body } . clearVarsTable
    (58) clearVarsTable -> .

    }               reduce using rule 58 (clearVarsTable -> .)

    clearVarsTable                 shift and go to state 109

state 82

    (81) cyInstruction -> instr . body
    (78) body -> . errorBody cyInstruction
    (79) body -> . empty
    (80) errorBody -> .
    (158) empty -> .

    ID              reduce using rule 80 (errorBody -> .)
    PRINT           reduce using rule 80 (errorBody -> .)
    READ            reduce using rule 80 (errorBody -> .)
    IF              reduce using rule 80 (errorBody -> .)
    FOR             reduce using rule 80 (errorBody -> .)
    WHILE           reduce using rule 80 (errorBody -> .)
    }               reduce using rule 158 (empty -> .)
    RETURN          reduce using rule 158 (empty -> .)

    body                           shift and go to state 110
    errorBody                      shift and go to state 74
    empty                          shift and go to state 75

state 83

    (31) read -> READ . PARINI ID performRead cyRead PARFIN

    PARINI          shift and go to state 111


state 84

    (83) cycle -> whileCycle .

    ID              reduce using rule 83 (cycle -> whileCycle .)
    PRINT           reduce using rule 83 (cycle -> whileCycle .)
    READ            reduce using rule 83 (cycle -> whileCycle .)
    IF              reduce using rule 83 (cycle -> whileCycle .)
    FOR             reduce using rule 83 (cycle -> whileCycle .)
    WHILE           reduce using rule 83 (cycle -> whileCycle .)
    }               reduce using rule 83 (cycle -> whileCycle .)
    RETURN          reduce using rule 83 (cycle -> whileCycle .)


state 85

    (28) print -> PRINT . PARINI exp performPrint cyPrint PARFIN

    PARINI          shift and go to state 112


state 86

    (82) cycle -> forCycle .

    ID              reduce using rule 82 (cycle -> forCycle .)
    PRINT           reduce using rule 82 (cycle -> forCycle .)
    READ            reduce using rule 82 (cycle -> forCycle .)
    IF              reduce using rule 82 (cycle -> forCycle .)
    FOR             reduce using rule 82 (cycle -> forCycle .)
    WHILE           reduce using rule 82 (cycle -> forCycle .)
    }               reduce using rule 82 (cycle -> forCycle .)
    RETURN          reduce using rule 82 (cycle -> forCycle .)


state 87

    (84) whileCycle -> errorWhileCycle . WHILE PARINI expresion PARFIN { body }

    WHILE           shift and go to state 113


state 88

    (88) assign -> ID . saveVariable errorAssign assignOptions performAssign
    (96) funcCall -> ID . PARINI opParamCall PARFIN
    (164) saveVariable -> .

    PARINI          shift and go to state 115
    [               reduce using rule 164 (saveVariable -> .)
    ASGN            reduce using rule 164 (saveVariable -> .)

    saveVariable                   shift and go to state 114

state 89

    (26) basicStatements -> print .

    ;               reduce using rule 26 (basicStatements -> print .)


state 90

    (23) instr -> cycle .

    ID              reduce using rule 23 (instr -> cycle .)
    PRINT           reduce using rule 23 (instr -> cycle .)
    READ            reduce using rule 23 (instr -> cycle .)
    IF              reduce using rule 23 (instr -> cycle .)
    FOR             reduce using rule 23 (instr -> cycle .)
    WHILE           reduce using rule 23 (instr -> cycle .)
    }               reduce using rule 23 (instr -> cycle .)
    RETURN          reduce using rule 23 (instr -> cycle .)


state 91

    (27) basicStatements -> read .

    ;               reduce using rule 27 (basicStatements -> read .)


state 92

    (21) instr -> basicStatements . ;

    ;               shift and go to state 116


state 93

    (86) forCycle -> errorForCycle . FOR PARINI assign ; expresion ; assign PARFIN { body }

    FOR             shift and go to state 117


state 94

    (78) body -> errorBody cyInstruction .

    }               reduce using rule 78 (body -> errorBody cyInstruction .)
    RETURN          reduce using rule 78 (body -> errorBody cyInstruction .)


state 95

    (22) instr -> condition .

    ID              reduce using rule 22 (instr -> condition .)
    PRINT           reduce using rule 22 (instr -> condition .)
    READ            reduce using rule 22 (instr -> condition .)
    IF              reduce using rule 22 (instr -> condition .)
    FOR             reduce using rule 22 (instr -> condition .)
    WHILE           reduce using rule 22 (instr -> condition .)
    }               reduce using rule 22 (instr -> condition .)
    RETURN          reduce using rule 22 (instr -> condition .)


state 96

    (25) basicStatements -> funcCall .

    ;               reduce using rule 25 (basicStatements -> funcCall .)


state 97

    (106) condition -> errorCondition . IF PARINI expresion PARFIN { body } optionalElse

    IF              shift and go to state 118


state 98

    (24) basicStatements -> assign .

    ;               reduce using rule 24 (basicStatements -> assign .)


state 99

    (56) function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters . PARFIN flagParameters opReturns } clearVarsTable

    PARFIN          shift and go to state 119


state 100

    (61) opParameters -> param . saveParamToDirProc errorOpParameters
    (64) saveParamToDirProc -> .

    PARFIN          reduce using rule 64 (saveParamToDirProc -> .)

    saveParamToDirProc             shift and go to state 120

state 101

    (48) param -> saveType . type errorParam ID cyTypeParam cyParam
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    type                           shift and go to state 121
    errorType                      shift and go to state 31

state 102

    (62) opParameters -> empty .

    PARFIN          reduce using rule 62 (opParameters -> empty .)


state 103

    (52) cyTypeParam -> , saveID saveTypeParam ID . cyTypeParam
    (52) cyTypeParam -> . , saveID saveTypeParam ID cyTypeParam
    (53) cyTypeParam -> . empty
    (158) empty -> .

    ,               shift and go to state 55
    ;               reduce using rule 158 (empty -> .)
    PARFIN          reduce using rule 158 (empty -> .)

    cyTypeParam                    shift and go to state 122
    empty                          shift and go to state 56

state 104

    (70) basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .

    MAIN            reduce using rule 70 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    FUNC            reduce using rule 70 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    }               reduce using rule 70 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    ID              reduce using rule 70 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    PRINT           reduce using rule 70 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    READ            reduce using rule 70 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    IF              reduce using rule 70 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    FOR             reduce using rule 70 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    WHILE           reduce using rule 70 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    RETURN          reduce using rule 70 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)


state 105

    (111) dict -> errorDict PARINI type : type . PARFIN

    PARFIN          shift and go to state 123


state 106

    (101) struct -> structType [ CTED ] optionalMatrix .

    ;               reduce using rule 101 (struct -> structType [ CTED ] optionalMatrix .)


state 107

    (104) optionalMatrix -> [ . CTED ]

    CTED            shift and go to state 124


state 108

    (105) optionalMatrix -> empty .

    ;               reduce using rule 105 (optionalMatrix -> empty .)


state 109

    (18) main -> errorMain MAIN saveMain { opVars body } clearVarsTable .

    }               reduce using rule 18 (main -> errorMain MAIN saveMain { opVars body } clearVarsTable .)


state 110

    (81) cyInstruction -> instr body .

    }               reduce using rule 81 (cyInstruction -> instr body .)
    RETURN          reduce using rule 81 (cyInstruction -> instr body .)


state 111

    (31) read -> READ PARINI . ID performRead cyRead PARFIN

    ID              shift and go to state 125


state 112

    (28) print -> PRINT PARINI . exp performPrint cyPrint PARFIN
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES saveConstantString
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED saveConstantInt
    (155) cte -> . CTEF saveConstantFloat
    (156) cte -> . TRUE saveConstantBool
    (157) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 136
    fact                           shift and go to state 137

state 113

    (84) whileCycle -> errorWhileCycle WHILE . PARINI expresion PARFIN { body }

    PARINI          shift and go to state 138


state 114

    (88) assign -> ID saveVariable . errorAssign assignOptions performAssign
    (89) errorAssign -> .

    [               reduce using rule 89 (errorAssign -> .)
    ASGN            reduce using rule 89 (errorAssign -> .)

    errorAssign                    shift and go to state 139

state 115

    (96) funcCall -> ID PARINI . opParamCall PARFIN
    (97) opParamCall -> . expresion cyParamCall
    (98) opParamCall -> . empty
    (113) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (158) empty -> .
    (118) sExp -> . exp errorOpSExp opSExp performRelational
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES saveConstantString
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED saveConstantInt
    (155) cte -> . CTEF saveConstantFloat
    (156) cte -> . TRUE saveConstantBool
    (157) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    PARFIN          reduce using rule 158 (empty -> .)
    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    opParamCall                    shift and go to state 140
    sExp                           shift and go to state 141
    empty                          shift and go to state 142
    expresion                      shift and go to state 143
    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 144
    fact                           shift and go to state 137

state 116

    (21) instr -> basicStatements ; .

    ID              reduce using rule 21 (instr -> basicStatements ; .)
    PRINT           reduce using rule 21 (instr -> basicStatements ; .)
    READ            reduce using rule 21 (instr -> basicStatements ; .)
    IF              reduce using rule 21 (instr -> basicStatements ; .)
    FOR             reduce using rule 21 (instr -> basicStatements ; .)
    WHILE           reduce using rule 21 (instr -> basicStatements ; .)
    }               reduce using rule 21 (instr -> basicStatements ; .)
    RETURN          reduce using rule 21 (instr -> basicStatements ; .)


state 117

    (86) forCycle -> errorForCycle FOR . PARINI assign ; expresion ; assign PARFIN { body }

    PARINI          shift and go to state 145


state 118

    (106) condition -> errorCondition IF . PARINI expresion PARFIN { body } optionalElse

    PARINI          shift and go to state 146


state 119

    (56) function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN . flagParameters opReturns } clearVarsTable
    (63) flagParameters -> .

    {               reduce using rule 63 (flagParameters -> .)
    RETURNS         reduce using rule 63 (flagParameters -> .)

    flagParameters                 shift and go to state 147

state 120

    (61) opParameters -> param saveParamToDirProc . errorOpParameters
    (65) errorOpParameters -> .

    PARFIN          reduce using rule 65 (errorOpParameters -> .)

    errorOpParameters              shift and go to state 148

state 121

    (48) param -> saveType type . errorParam ID cyTypeParam cyParam
    (49) errorParam -> .

    ID              reduce using rule 49 (errorParam -> .)

    errorParam                     shift and go to state 149

state 122

    (52) cyTypeParam -> , saveID saveTypeParam ID cyTypeParam .

    ;               reduce using rule 52 (cyTypeParam -> , saveID saveTypeParam ID cyTypeParam .)
    PARFIN          reduce using rule 52 (cyTypeParam -> , saveID saveTypeParam ID cyTypeParam .)


state 123

    (111) dict -> errorDict PARINI type : type PARFIN .

    ;               reduce using rule 111 (dict -> errorDict PARINI type : type PARFIN .)
    [               reduce using rule 111 (dict -> errorDict PARINI type : type PARFIN .)


state 124

    (104) optionalMatrix -> [ CTED . ]

    ]               shift and go to state 150


state 125

    (31) read -> READ PARINI ID . performRead cyRead PARFIN
    (174) performRead -> .

    ,               reduce using rule 174 (performRead -> .)
    PARFIN          reduce using rule 174 (performRead -> .)

    performRead                    shift and go to state 151

state 126

    (156) cte -> TRUE . saveConstantBool
    (162) saveConstantBool -> .

    MULT            reduce using rule 162 (saveConstantBool -> .)
    DIV             reduce using rule 162 (saveConstantBool -> .)
    PLUS            reduce using rule 162 (saveConstantBool -> .)
    MINUS           reduce using rule 162 (saveConstantBool -> .)
    ,               reduce using rule 162 (saveConstantBool -> .)
    PARFIN          reduce using rule 162 (saveConstantBool -> .)
    EQ              reduce using rule 162 (saveConstantBool -> .)
    DIF             reduce using rule 162 (saveConstantBool -> .)
    LTOEQ           reduce using rule 162 (saveConstantBool -> .)
    GTOEQ           reduce using rule 162 (saveConstantBool -> .)
    GT              reduce using rule 162 (saveConstantBool -> .)
    LT              reduce using rule 162 (saveConstantBool -> .)
    AND             reduce using rule 162 (saveConstantBool -> .)
    OR              reduce using rule 162 (saveConstantBool -> .)
    ]               reduce using rule 162 (saveConstantBool -> .)
    :               reduce using rule 162 (saveConstantBool -> .)
    ;               reduce using rule 162 (saveConstantBool -> .)

    saveConstantBool               shift and go to state 152

state 127

    (139) fact -> PARINI . putFondo expresion PARFIN takeFondo
    (166) putFondo -> .

    CTES            reduce using rule 166 (putFondo -> .)
    PARINI          reduce using rule 166 (putFondo -> .)
    ID              reduce using rule 166 (putFondo -> .)
    CTED            reduce using rule 166 (putFondo -> .)
    CTEF            reduce using rule 166 (putFondo -> .)
    TRUE            reduce using rule 166 (putFondo -> .)
    FALSE           reduce using rule 166 (putFondo -> .)

    putFondo                       shift and go to state 153

state 128

    (154) cte -> CTED . saveConstantInt
    (160) saveConstantInt -> .

    MULT            reduce using rule 160 (saveConstantInt -> .)
    DIV             reduce using rule 160 (saveConstantInt -> .)
    PLUS            reduce using rule 160 (saveConstantInt -> .)
    MINUS           reduce using rule 160 (saveConstantInt -> .)
    ,               reduce using rule 160 (saveConstantInt -> .)
    PARFIN          reduce using rule 160 (saveConstantInt -> .)
    EQ              reduce using rule 160 (saveConstantInt -> .)
    DIF             reduce using rule 160 (saveConstantInt -> .)
    LTOEQ           reduce using rule 160 (saveConstantInt -> .)
    GTOEQ           reduce using rule 160 (saveConstantInt -> .)
    GT              reduce using rule 160 (saveConstantInt -> .)
    LT              reduce using rule 160 (saveConstantInt -> .)
    AND             reduce using rule 160 (saveConstantInt -> .)
    OR              reduce using rule 160 (saveConstantInt -> .)
    ]               reduce using rule 160 (saveConstantInt -> .)
    :               reduce using rule 160 (saveConstantInt -> .)
    ;               reduce using rule 160 (saveConstantInt -> .)

    saveConstantInt                shift and go to state 154

state 129

    (140) fact -> ID . saveVariable opAccess errorOpAccess
    (96) funcCall -> ID . PARINI opParamCall PARFIN
    (164) saveVariable -> .

    PARINI          shift and go to state 115
    .               reduce using rule 164 (saveVariable -> .)
    [               reduce using rule 164 (saveVariable -> .)
    MULT            reduce using rule 164 (saveVariable -> .)
    DIV             reduce using rule 164 (saveVariable -> .)
    PLUS            reduce using rule 164 (saveVariable -> .)
    MINUS           reduce using rule 164 (saveVariable -> .)
    ,               reduce using rule 164 (saveVariable -> .)
    PARFIN          reduce using rule 164 (saveVariable -> .)
    EQ              reduce using rule 164 (saveVariable -> .)
    DIF             reduce using rule 164 (saveVariable -> .)
    LTOEQ           reduce using rule 164 (saveVariable -> .)
    GTOEQ           reduce using rule 164 (saveVariable -> .)
    GT              reduce using rule 164 (saveVariable -> .)
    LT              reduce using rule 164 (saveVariable -> .)
    AND             reduce using rule 164 (saveVariable -> .)
    OR              reduce using rule 164 (saveVariable -> .)
    ]               reduce using rule 164 (saveVariable -> .)
    ;               reduce using rule 164 (saveVariable -> .)

    saveVariable                   shift and go to state 155

state 130

    (136) fact -> CTES . saveConstantString
    (163) saveConstantString -> .

    MULT            reduce using rule 163 (saveConstantString -> .)
    DIV             reduce using rule 163 (saveConstantString -> .)
    PLUS            reduce using rule 163 (saveConstantString -> .)
    MINUS           reduce using rule 163 (saveConstantString -> .)
    ,               reduce using rule 163 (saveConstantString -> .)
    PARFIN          reduce using rule 163 (saveConstantString -> .)
    EQ              reduce using rule 163 (saveConstantString -> .)
    DIF             reduce using rule 163 (saveConstantString -> .)
    LTOEQ           reduce using rule 163 (saveConstantString -> .)
    GTOEQ           reduce using rule 163 (saveConstantString -> .)
    GT              reduce using rule 163 (saveConstantString -> .)
    LT              reduce using rule 163 (saveConstantString -> .)
    AND             reduce using rule 163 (saveConstantString -> .)
    OR              reduce using rule 163 (saveConstantString -> .)
    ]               reduce using rule 163 (saveConstantString -> .)
    ;               reduce using rule 163 (saveConstantString -> .)

    saveConstantString             shift and go to state 156

state 131

    (127) exp -> term . performAddSub errorCyExp cyExp
    (170) performAddSub -> .

    PLUS            reduce using rule 170 (performAddSub -> .)
    MINUS           reduce using rule 170 (performAddSub -> .)
    ,               reduce using rule 170 (performAddSub -> .)
    PARFIN          reduce using rule 170 (performAddSub -> .)
    EQ              reduce using rule 170 (performAddSub -> .)
    DIF             reduce using rule 170 (performAddSub -> .)
    LTOEQ           reduce using rule 170 (performAddSub -> .)
    GTOEQ           reduce using rule 170 (performAddSub -> .)
    GT              reduce using rule 170 (performAddSub -> .)
    LT              reduce using rule 170 (performAddSub -> .)
    AND             reduce using rule 170 (performAddSub -> .)
    OR              reduce using rule 170 (performAddSub -> .)
    ]               reduce using rule 170 (performAddSub -> .)
    ;               reduce using rule 170 (performAddSub -> .)

    performAddSub                  shift and go to state 157

state 132

    (157) cte -> FALSE . saveConstantBool
    (162) saveConstantBool -> .

    MULT            reduce using rule 162 (saveConstantBool -> .)
    DIV             reduce using rule 162 (saveConstantBool -> .)
    PLUS            reduce using rule 162 (saveConstantBool -> .)
    MINUS           reduce using rule 162 (saveConstantBool -> .)
    ,               reduce using rule 162 (saveConstantBool -> .)
    PARFIN          reduce using rule 162 (saveConstantBool -> .)
    EQ              reduce using rule 162 (saveConstantBool -> .)
    DIF             reduce using rule 162 (saveConstantBool -> .)
    LTOEQ           reduce using rule 162 (saveConstantBool -> .)
    GTOEQ           reduce using rule 162 (saveConstantBool -> .)
    GT              reduce using rule 162 (saveConstantBool -> .)
    LT              reduce using rule 162 (saveConstantBool -> .)
    AND             reduce using rule 162 (saveConstantBool -> .)
    OR              reduce using rule 162 (saveConstantBool -> .)
    ]               reduce using rule 162 (saveConstantBool -> .)
    :               reduce using rule 162 (saveConstantBool -> .)
    ;               reduce using rule 162 (saveConstantBool -> .)

    saveConstantBool               shift and go to state 158

state 133

    (138) fact -> funcCall .

    MULT            reduce using rule 138 (fact -> funcCall .)
    DIV             reduce using rule 138 (fact -> funcCall .)
    PLUS            reduce using rule 138 (fact -> funcCall .)
    MINUS           reduce using rule 138 (fact -> funcCall .)
    AND             reduce using rule 138 (fact -> funcCall .)
    OR              reduce using rule 138 (fact -> funcCall .)
    ,               reduce using rule 138 (fact -> funcCall .)
    PARFIN          reduce using rule 138 (fact -> funcCall .)
    ]               reduce using rule 138 (fact -> funcCall .)
    ;               reduce using rule 138 (fact -> funcCall .)
    EQ              reduce using rule 138 (fact -> funcCall .)
    DIF             reduce using rule 138 (fact -> funcCall .)
    LTOEQ           reduce using rule 138 (fact -> funcCall .)
    GTOEQ           reduce using rule 138 (fact -> funcCall .)
    GT              reduce using rule 138 (fact -> funcCall .)
    LT              reduce using rule 138 (fact -> funcCall .)


state 134

    (137) fact -> cte .

    MULT            reduce using rule 137 (fact -> cte .)
    DIV             reduce using rule 137 (fact -> cte .)
    PLUS            reduce using rule 137 (fact -> cte .)
    MINUS           reduce using rule 137 (fact -> cte .)
    AND             reduce using rule 137 (fact -> cte .)
    OR              reduce using rule 137 (fact -> cte .)
    ,               reduce using rule 137 (fact -> cte .)
    PARFIN          reduce using rule 137 (fact -> cte .)
    ]               reduce using rule 137 (fact -> cte .)
    ;               reduce using rule 137 (fact -> cte .)
    EQ              reduce using rule 137 (fact -> cte .)
    DIF             reduce using rule 137 (fact -> cte .)
    LTOEQ           reduce using rule 137 (fact -> cte .)
    GTOEQ           reduce using rule 137 (fact -> cte .)
    GT              reduce using rule 137 (fact -> cte .)
    LT              reduce using rule 137 (fact -> cte .)


state 135

    (155) cte -> CTEF . saveConstantFloat
    (161) saveConstantFloat -> .

    MULT            reduce using rule 161 (saveConstantFloat -> .)
    DIV             reduce using rule 161 (saveConstantFloat -> .)
    PLUS            reduce using rule 161 (saveConstantFloat -> .)
    MINUS           reduce using rule 161 (saveConstantFloat -> .)
    ,               reduce using rule 161 (saveConstantFloat -> .)
    PARFIN          reduce using rule 161 (saveConstantFloat -> .)
    EQ              reduce using rule 161 (saveConstantFloat -> .)
    DIF             reduce using rule 161 (saveConstantFloat -> .)
    LTOEQ           reduce using rule 161 (saveConstantFloat -> .)
    GTOEQ           reduce using rule 161 (saveConstantFloat -> .)
    GT              reduce using rule 161 (saveConstantFloat -> .)
    LT              reduce using rule 161 (saveConstantFloat -> .)
    AND             reduce using rule 161 (saveConstantFloat -> .)
    OR              reduce using rule 161 (saveConstantFloat -> .)
    ]               reduce using rule 161 (saveConstantFloat -> .)
    :               reduce using rule 161 (saveConstantFloat -> .)
    ;               reduce using rule 161 (saveConstantFloat -> .)

    saveConstantFloat              shift and go to state 159

state 136

    (28) print -> PRINT PARINI exp . performPrint cyPrint PARFIN
    (173) performPrint -> .

    ,               reduce using rule 173 (performPrint -> .)
    PARFIN          reduce using rule 173 (performPrint -> .)

    performPrint                   shift and go to state 160

state 137

    (132) term -> fact . performMulDiv cyTerm
    (169) performMulDiv -> .

    MULT            reduce using rule 169 (performMulDiv -> .)
    DIV             reduce using rule 169 (performMulDiv -> .)
    PLUS            reduce using rule 169 (performMulDiv -> .)
    MINUS           reduce using rule 169 (performMulDiv -> .)
    ,               reduce using rule 169 (performMulDiv -> .)
    PARFIN          reduce using rule 169 (performMulDiv -> .)
    EQ              reduce using rule 169 (performMulDiv -> .)
    DIF             reduce using rule 169 (performMulDiv -> .)
    LTOEQ           reduce using rule 169 (performMulDiv -> .)
    GTOEQ           reduce using rule 169 (performMulDiv -> .)
    GT              reduce using rule 169 (performMulDiv -> .)
    LT              reduce using rule 169 (performMulDiv -> .)
    AND             reduce using rule 169 (performMulDiv -> .)
    OR              reduce using rule 169 (performMulDiv -> .)
    ]               reduce using rule 169 (performMulDiv -> .)
    ;               reduce using rule 169 (performMulDiv -> .)

    performMulDiv                  shift and go to state 161

state 138

    (84) whileCycle -> errorWhileCycle WHILE PARINI . expresion PARFIN { body }
    (113) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (118) sExp -> . exp errorOpSExp opSExp performRelational
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES saveConstantString
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED saveConstantInt
    (155) cte -> . CTEF saveConstantFloat
    (156) cte -> . TRUE saveConstantBool
    (157) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    sExp                           shift and go to state 141
    expresion                      shift and go to state 162
    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 144
    fact                           shift and go to state 137

state 139

    (88) assign -> ID saveVariable errorAssign . assignOptions performAssign
    (90) assignOptions -> . init
    (91) assignOptions -> . initDict
    (92) assignOptions -> . [ expresion ] assignMatrix init
    (38) init -> . ASGN saveOperator errorInit initWith
    (42) initDict -> . ASGN PARINI dictType : dictType PARFIN errorInitDict

    [               shift and go to state 167
    ASGN            shift and go to state 165

    initDict                       shift and go to state 163
    assignOptions                  shift and go to state 164
    init                           shift and go to state 166

state 140

    (96) funcCall -> ID PARINI opParamCall . PARFIN

    PARFIN          shift and go to state 168


state 141

    (113) expresion -> sExp . performAndOr cyExpresion errorExpresion
    (172) performAndOr -> .

    AND             reduce using rule 172 (performAndOr -> .)
    OR              reduce using rule 172 (performAndOr -> .)
    ,               reduce using rule 172 (performAndOr -> .)
    PARFIN          reduce using rule 172 (performAndOr -> .)
    ]               reduce using rule 172 (performAndOr -> .)
    ;               reduce using rule 172 (performAndOr -> .)

    performAndOr                   shift and go to state 169

state 142

    (98) opParamCall -> empty .

    PARFIN          reduce using rule 98 (opParamCall -> empty .)


state 143

    (97) opParamCall -> expresion . cyParamCall
    (99) cyParamCall -> . , expresion cyParamCall
    (100) cyParamCall -> . empty
    (158) empty -> .

    ,               shift and go to state 171
    PARFIN          reduce using rule 158 (empty -> .)

    cyParamCall                    shift and go to state 170
    empty                          shift and go to state 172

state 144

    (118) sExp -> exp . errorOpSExp opSExp performRelational
    (126) errorOpSExp -> .

    EQ              reduce using rule 126 (errorOpSExp -> .)
    DIF             reduce using rule 126 (errorOpSExp -> .)
    LTOEQ           reduce using rule 126 (errorOpSExp -> .)
    GTOEQ           reduce using rule 126 (errorOpSExp -> .)
    GT              reduce using rule 126 (errorOpSExp -> .)
    LT              reduce using rule 126 (errorOpSExp -> .)
    AND             reduce using rule 126 (errorOpSExp -> .)
    OR              reduce using rule 126 (errorOpSExp -> .)
    ,               reduce using rule 126 (errorOpSExp -> .)
    PARFIN          reduce using rule 126 (errorOpSExp -> .)
    ]               reduce using rule 126 (errorOpSExp -> .)
    ;               reduce using rule 126 (errorOpSExp -> .)

    errorOpSExp                    shift and go to state 173

state 145

    (86) forCycle -> errorForCycle FOR PARINI . assign ; expresion ; assign PARFIN { body }
    (88) assign -> . ID saveVariable errorAssign assignOptions performAssign

    ID              shift and go to state 174

    assign                         shift and go to state 175

state 146

    (106) condition -> errorCondition IF PARINI . expresion PARFIN { body } optionalElse
    (113) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (118) sExp -> . exp errorOpSExp opSExp performRelational
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES saveConstantString
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED saveConstantInt
    (155) cte -> . CTEF saveConstantFloat
    (156) cte -> . TRUE saveConstantBool
    (157) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    sExp                           shift and go to state 141
    expresion                      shift and go to state 176
    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 144
    fact                           shift and go to state 137

state 147

    (56) function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters . opReturns } clearVarsTable
    (66) opReturns -> . errorOpReturns RETURNS type saveReturnType { opVars body return
    (67) opReturns -> . { opVars body
    (69) errorOpReturns -> .

    {               shift and go to state 179
    RETURNS         reduce using rule 69 (errorOpReturns -> .)

    errorOpReturns                 shift and go to state 178
    opReturns                      shift and go to state 177

state 148

    (61) opParameters -> param saveParamToDirProc errorOpParameters .

    PARFIN          reduce using rule 61 (opParameters -> param saveParamToDirProc errorOpParameters .)


state 149

    (48) param -> saveType type errorParam . ID cyTypeParam cyParam

    ID              shift and go to state 180


state 150

    (104) optionalMatrix -> [ CTED ] .

    ;               reduce using rule 104 (optionalMatrix -> [ CTED ] .)


state 151

    (31) read -> READ PARINI ID performRead . cyRead PARFIN
    (32) cyRead -> . , fix ID performRead cyRead
    (33) cyRead -> . empty
    (158) empty -> .

    ,               shift and go to state 181
    PARFIN          reduce using rule 158 (empty -> .)

    cyRead                         shift and go to state 182
    empty                          shift and go to state 183

state 152

    (156) cte -> TRUE saveConstantBool .

    MULT            reduce using rule 156 (cte -> TRUE saveConstantBool .)
    DIV             reduce using rule 156 (cte -> TRUE saveConstantBool .)
    PLUS            reduce using rule 156 (cte -> TRUE saveConstantBool .)
    MINUS           reduce using rule 156 (cte -> TRUE saveConstantBool .)
    ,               reduce using rule 156 (cte -> TRUE saveConstantBool .)
    PARFIN          reduce using rule 156 (cte -> TRUE saveConstantBool .)
    EQ              reduce using rule 156 (cte -> TRUE saveConstantBool .)
    DIF             reduce using rule 156 (cte -> TRUE saveConstantBool .)
    LTOEQ           reduce using rule 156 (cte -> TRUE saveConstantBool .)
    GTOEQ           reduce using rule 156 (cte -> TRUE saveConstantBool .)
    GT              reduce using rule 156 (cte -> TRUE saveConstantBool .)
    LT              reduce using rule 156 (cte -> TRUE saveConstantBool .)
    AND             reduce using rule 156 (cte -> TRUE saveConstantBool .)
    OR              reduce using rule 156 (cte -> TRUE saveConstantBool .)
    ]               reduce using rule 156 (cte -> TRUE saveConstantBool .)
    ;               reduce using rule 156 (cte -> TRUE saveConstantBool .)
    :               reduce using rule 156 (cte -> TRUE saveConstantBool .)


state 153

    (139) fact -> PARINI putFondo . expresion PARFIN takeFondo
    (113) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (118) sExp -> . exp errorOpSExp opSExp performRelational
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES saveConstantString
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED saveConstantInt
    (155) cte -> . CTEF saveConstantFloat
    (156) cte -> . TRUE saveConstantBool
    (157) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    sExp                           shift and go to state 141
    expresion                      shift and go to state 184
    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 144
    fact                           shift and go to state 137

state 154

    (154) cte -> CTED saveConstantInt .

    MULT            reduce using rule 154 (cte -> CTED saveConstantInt .)
    DIV             reduce using rule 154 (cte -> CTED saveConstantInt .)
    PLUS            reduce using rule 154 (cte -> CTED saveConstantInt .)
    MINUS           reduce using rule 154 (cte -> CTED saveConstantInt .)
    ,               reduce using rule 154 (cte -> CTED saveConstantInt .)
    PARFIN          reduce using rule 154 (cte -> CTED saveConstantInt .)
    EQ              reduce using rule 154 (cte -> CTED saveConstantInt .)
    DIF             reduce using rule 154 (cte -> CTED saveConstantInt .)
    LTOEQ           reduce using rule 154 (cte -> CTED saveConstantInt .)
    GTOEQ           reduce using rule 154 (cte -> CTED saveConstantInt .)
    GT              reduce using rule 154 (cte -> CTED saveConstantInt .)
    LT              reduce using rule 154 (cte -> CTED saveConstantInt .)
    AND             reduce using rule 154 (cte -> CTED saveConstantInt .)
    OR              reduce using rule 154 (cte -> CTED saveConstantInt .)
    ]               reduce using rule 154 (cte -> CTED saveConstantInt .)
    ;               reduce using rule 154 (cte -> CTED saveConstantInt .)
    :               reduce using rule 154 (cte -> CTED saveConstantInt .)


state 155

    (140) fact -> ID saveVariable . opAccess errorOpAccess
    (142) opAccess -> . opStruct
    (143) opAccess -> . opDictionary
    (144) opAccess -> . empty
    (146) opStruct -> . errorOpStruct [ expresion ] opMatrix
    (151) opDictionary -> . . dictIndex
    (158) empty -> .
    (147) errorOpStruct -> .

    .               shift and go to state 189
    MULT            reduce using rule 158 (empty -> .)
    DIV             reduce using rule 158 (empty -> .)
    PLUS            reduce using rule 158 (empty -> .)
    MINUS           reduce using rule 158 (empty -> .)
    ,               reduce using rule 158 (empty -> .)
    PARFIN          reduce using rule 158 (empty -> .)
    EQ              reduce using rule 158 (empty -> .)
    DIF             reduce using rule 158 (empty -> .)
    LTOEQ           reduce using rule 158 (empty -> .)
    GTOEQ           reduce using rule 158 (empty -> .)
    GT              reduce using rule 158 (empty -> .)
    LT              reduce using rule 158 (empty -> .)
    AND             reduce using rule 158 (empty -> .)
    OR              reduce using rule 158 (empty -> .)
    ]               reduce using rule 158 (empty -> .)
    ;               reduce using rule 158 (empty -> .)
    [               reduce using rule 147 (errorOpStruct -> .)

    errorOpStruct                  shift and go to state 185
    opDictionary                   shift and go to state 186
    opStruct                       shift and go to state 187
    opAccess                       shift and go to state 188
    empty                          shift and go to state 190

state 156

    (136) fact -> CTES saveConstantString .

    MULT            reduce using rule 136 (fact -> CTES saveConstantString .)
    DIV             reduce using rule 136 (fact -> CTES saveConstantString .)
    PLUS            reduce using rule 136 (fact -> CTES saveConstantString .)
    MINUS           reduce using rule 136 (fact -> CTES saveConstantString .)
    AND             reduce using rule 136 (fact -> CTES saveConstantString .)
    OR              reduce using rule 136 (fact -> CTES saveConstantString .)
    ,               reduce using rule 136 (fact -> CTES saveConstantString .)
    PARFIN          reduce using rule 136 (fact -> CTES saveConstantString .)
    ]               reduce using rule 136 (fact -> CTES saveConstantString .)
    ;               reduce using rule 136 (fact -> CTES saveConstantString .)
    EQ              reduce using rule 136 (fact -> CTES saveConstantString .)
    DIF             reduce using rule 136 (fact -> CTES saveConstantString .)
    LTOEQ           reduce using rule 136 (fact -> CTES saveConstantString .)
    GTOEQ           reduce using rule 136 (fact -> CTES saveConstantString .)
    GT              reduce using rule 136 (fact -> CTES saveConstantString .)
    LT              reduce using rule 136 (fact -> CTES saveConstantString .)


state 157

    (127) exp -> term performAddSub . errorCyExp cyExp
    (131) errorCyExp -> .

    PLUS            reduce using rule 131 (errorCyExp -> .)
    MINUS           reduce using rule 131 (errorCyExp -> .)
    ,               reduce using rule 131 (errorCyExp -> .)
    PARFIN          reduce using rule 131 (errorCyExp -> .)
    EQ              reduce using rule 131 (errorCyExp -> .)
    DIF             reduce using rule 131 (errorCyExp -> .)
    LTOEQ           reduce using rule 131 (errorCyExp -> .)
    GTOEQ           reduce using rule 131 (errorCyExp -> .)
    GT              reduce using rule 131 (errorCyExp -> .)
    LT              reduce using rule 131 (errorCyExp -> .)
    AND             reduce using rule 131 (errorCyExp -> .)
    OR              reduce using rule 131 (errorCyExp -> .)
    ]               reduce using rule 131 (errorCyExp -> .)
    ;               reduce using rule 131 (errorCyExp -> .)

    errorCyExp                     shift and go to state 191

state 158

    (157) cte -> FALSE saveConstantBool .

    MULT            reduce using rule 157 (cte -> FALSE saveConstantBool .)
    DIV             reduce using rule 157 (cte -> FALSE saveConstantBool .)
    PLUS            reduce using rule 157 (cte -> FALSE saveConstantBool .)
    MINUS           reduce using rule 157 (cte -> FALSE saveConstantBool .)
    ,               reduce using rule 157 (cte -> FALSE saveConstantBool .)
    PARFIN          reduce using rule 157 (cte -> FALSE saveConstantBool .)
    EQ              reduce using rule 157 (cte -> FALSE saveConstantBool .)
    DIF             reduce using rule 157 (cte -> FALSE saveConstantBool .)
    LTOEQ           reduce using rule 157 (cte -> FALSE saveConstantBool .)
    GTOEQ           reduce using rule 157 (cte -> FALSE saveConstantBool .)
    GT              reduce using rule 157 (cte -> FALSE saveConstantBool .)
    LT              reduce using rule 157 (cte -> FALSE saveConstantBool .)
    AND             reduce using rule 157 (cte -> FALSE saveConstantBool .)
    OR              reduce using rule 157 (cte -> FALSE saveConstantBool .)
    ]               reduce using rule 157 (cte -> FALSE saveConstantBool .)
    ;               reduce using rule 157 (cte -> FALSE saveConstantBool .)
    :               reduce using rule 157 (cte -> FALSE saveConstantBool .)


state 159

    (155) cte -> CTEF saveConstantFloat .

    MULT            reduce using rule 155 (cte -> CTEF saveConstantFloat .)
    DIV             reduce using rule 155 (cte -> CTEF saveConstantFloat .)
    PLUS            reduce using rule 155 (cte -> CTEF saveConstantFloat .)
    MINUS           reduce using rule 155 (cte -> CTEF saveConstantFloat .)
    ,               reduce using rule 155 (cte -> CTEF saveConstantFloat .)
    PARFIN          reduce using rule 155 (cte -> CTEF saveConstantFloat .)
    EQ              reduce using rule 155 (cte -> CTEF saveConstantFloat .)
    DIF             reduce using rule 155 (cte -> CTEF saveConstantFloat .)
    LTOEQ           reduce using rule 155 (cte -> CTEF saveConstantFloat .)
    GTOEQ           reduce using rule 155 (cte -> CTEF saveConstantFloat .)
    GT              reduce using rule 155 (cte -> CTEF saveConstantFloat .)
    LT              reduce using rule 155 (cte -> CTEF saveConstantFloat .)
    AND             reduce using rule 155 (cte -> CTEF saveConstantFloat .)
    OR              reduce using rule 155 (cte -> CTEF saveConstantFloat .)
    ]               reduce using rule 155 (cte -> CTEF saveConstantFloat .)
    ;               reduce using rule 155 (cte -> CTEF saveConstantFloat .)
    :               reduce using rule 155 (cte -> CTEF saveConstantFloat .)


state 160

    (28) print -> PRINT PARINI exp performPrint . cyPrint PARFIN
    (29) cyPrint -> . , fix exp performPrint cyPrint
    (30) cyPrint -> . empty
    (158) empty -> .

    ,               shift and go to state 193
    PARFIN          reduce using rule 158 (empty -> .)

    cyPrint                        shift and go to state 192
    empty                          shift and go to state 194

state 161

    (132) term -> fact performMulDiv . cyTerm
    (133) cyTerm -> . MULT saveOperator errorFact term
    (134) cyTerm -> . DIV saveOperator term
    (135) cyTerm -> . empty
    (158) empty -> .

    MULT            shift and go to state 198
    DIV             shift and go to state 197
    PLUS            reduce using rule 158 (empty -> .)
    MINUS           reduce using rule 158 (empty -> .)
    ,               reduce using rule 158 (empty -> .)
    PARFIN          reduce using rule 158 (empty -> .)
    EQ              reduce using rule 158 (empty -> .)
    DIF             reduce using rule 158 (empty -> .)
    LTOEQ           reduce using rule 158 (empty -> .)
    GTOEQ           reduce using rule 158 (empty -> .)
    GT              reduce using rule 158 (empty -> .)
    LT              reduce using rule 158 (empty -> .)
    AND             reduce using rule 158 (empty -> .)
    OR              reduce using rule 158 (empty -> .)
    ]               reduce using rule 158 (empty -> .)
    ;               reduce using rule 158 (empty -> .)

    cyTerm                         shift and go to state 195
    empty                          shift and go to state 196

state 162

    (84) whileCycle -> errorWhileCycle WHILE PARINI expresion . PARFIN { body }

    PARFIN          shift and go to state 199


state 163

    (91) assignOptions -> initDict .

    ;               reduce using rule 91 (assignOptions -> initDict .)
    PARFIN          reduce using rule 91 (assignOptions -> initDict .)


state 164

    (88) assign -> ID saveVariable errorAssign assignOptions . performAssign
    (168) performAssign -> .

    ;               reduce using rule 168 (performAssign -> .)
    PARFIN          reduce using rule 168 (performAssign -> .)

    performAssign                  shift and go to state 200

state 165

    (38) init -> ASGN . saveOperator errorInit initWith
    (42) initDict -> ASGN . PARINI dictType : dictType PARFIN errorInitDict
    (165) saveOperator -> .

  ! shift/reduce conflict for PARINI resolved as shift
    PARINI          shift and go to state 202
    ID              reduce using rule 165 (saveOperator -> .)
    CTES            reduce using rule 165 (saveOperator -> .)
    CTED            reduce using rule 165 (saveOperator -> .)
    CTEF            reduce using rule 165 (saveOperator -> .)
    TRUE            reduce using rule 165 (saveOperator -> .)
    FALSE           reduce using rule 165 (saveOperator -> .)

  ! PARINI          [ reduce using rule 165 (saveOperator -> .) ]

    saveOperator                   shift and go to state 201

state 166

    (90) assignOptions -> init .

    ;               reduce using rule 90 (assignOptions -> init .)
    PARFIN          reduce using rule 90 (assignOptions -> init .)


state 167

    (92) assignOptions -> [ . expresion ] assignMatrix init
    (113) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (118) sExp -> . exp errorOpSExp opSExp performRelational
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES saveConstantString
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED saveConstantInt
    (155) cte -> . CTEF saveConstantFloat
    (156) cte -> . TRUE saveConstantBool
    (157) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    sExp                           shift and go to state 141
    expresion                      shift and go to state 203
    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 144
    fact                           shift and go to state 137

state 168

    (96) funcCall -> ID PARINI opParamCall PARFIN .

    MULT            reduce using rule 96 (funcCall -> ID PARINI opParamCall PARFIN .)
    DIV             reduce using rule 96 (funcCall -> ID PARINI opParamCall PARFIN .)
    PLUS            reduce using rule 96 (funcCall -> ID PARINI opParamCall PARFIN .)
    MINUS           reduce using rule 96 (funcCall -> ID PARINI opParamCall PARFIN .)
    ,               reduce using rule 96 (funcCall -> ID PARINI opParamCall PARFIN .)
    PARFIN          reduce using rule 96 (funcCall -> ID PARINI opParamCall PARFIN .)
    EQ              reduce using rule 96 (funcCall -> ID PARINI opParamCall PARFIN .)
    DIF             reduce using rule 96 (funcCall -> ID PARINI opParamCall PARFIN .)
    LTOEQ           reduce using rule 96 (funcCall -> ID PARINI opParamCall PARFIN .)
    GTOEQ           reduce using rule 96 (funcCall -> ID PARINI opParamCall PARFIN .)
    GT              reduce using rule 96 (funcCall -> ID PARINI opParamCall PARFIN .)
    LT              reduce using rule 96 (funcCall -> ID PARINI opParamCall PARFIN .)
    AND             reduce using rule 96 (funcCall -> ID PARINI opParamCall PARFIN .)
    OR              reduce using rule 96 (funcCall -> ID PARINI opParamCall PARFIN .)
    ]               reduce using rule 96 (funcCall -> ID PARINI opParamCall PARFIN .)
    ;               reduce using rule 96 (funcCall -> ID PARINI opParamCall PARFIN .)


state 169

    (113) expresion -> sExp performAndOr . cyExpresion errorExpresion
    (115) cyExpresion -> . AND saveOperator expresion
    (116) cyExpresion -> . OR saveOperator expresion
    (117) cyExpresion -> . empty
    (158) empty -> .

    AND             shift and go to state 204
    OR              shift and go to state 205
    ,               reduce using rule 158 (empty -> .)
    PARFIN          reduce using rule 158 (empty -> .)
    ]               reduce using rule 158 (empty -> .)
    ;               reduce using rule 158 (empty -> .)

    cyExpresion                    shift and go to state 206
    empty                          shift and go to state 207

state 170

    (97) opParamCall -> expresion cyParamCall .

    PARFIN          reduce using rule 97 (opParamCall -> expresion cyParamCall .)


state 171

    (99) cyParamCall -> , . expresion cyParamCall
    (113) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (118) sExp -> . exp errorOpSExp opSExp performRelational
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES saveConstantString
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED saveConstantInt
    (155) cte -> . CTEF saveConstantFloat
    (156) cte -> . TRUE saveConstantBool
    (157) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    sExp                           shift and go to state 141
    expresion                      shift and go to state 208
    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 144
    fact                           shift and go to state 137

state 172

    (100) cyParamCall -> empty .

    PARFIN          reduce using rule 100 (cyParamCall -> empty .)


state 173

    (118) sExp -> exp errorOpSExp . opSExp performRelational
    (119) opSExp -> . EQ saveOperator exp
    (120) opSExp -> . DIF saveOperator exp
    (121) opSExp -> . LTOEQ saveOperator exp
    (122) opSExp -> . GTOEQ saveOperator exp
    (123) opSExp -> . GT saveOperator exp
    (124) opSExp -> . LT saveOperator exp
    (125) opSExp -> . empty
    (158) empty -> .

    EQ              shift and go to state 214
    DIF             shift and go to state 211
    LTOEQ           shift and go to state 210
    GTOEQ           shift and go to state 213
    GT              shift and go to state 209
    LT              shift and go to state 212
    AND             reduce using rule 158 (empty -> .)
    OR              reduce using rule 158 (empty -> .)
    ,               reduce using rule 158 (empty -> .)
    PARFIN          reduce using rule 158 (empty -> .)
    ]               reduce using rule 158 (empty -> .)
    ;               reduce using rule 158 (empty -> .)

    empty                          shift and go to state 215
    opSExp                         shift and go to state 216

state 174

    (88) assign -> ID . saveVariable errorAssign assignOptions performAssign
    (164) saveVariable -> .

    [               reduce using rule 164 (saveVariable -> .)
    ASGN            reduce using rule 164 (saveVariable -> .)

    saveVariable                   shift and go to state 114

state 175

    (86) forCycle -> errorForCycle FOR PARINI assign . ; expresion ; assign PARFIN { body }

    ;               shift and go to state 217


state 176

    (106) condition -> errorCondition IF PARINI expresion . PARFIN { body } optionalElse

    PARFIN          shift and go to state 218


state 177

    (56) function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns . } clearVarsTable

    }               shift and go to state 219


state 178

    (66) opReturns -> errorOpReturns . RETURNS type saveReturnType { opVars body return

    RETURNS         shift and go to state 220


state 179

    (67) opReturns -> { . opVars body
    (6) opVars -> . vars
    (7) opVars -> . empty
    (10) vars -> . errorVars VARS declare
    (158) empty -> .
    (12) errorVars -> .

    ID              reduce using rule 158 (empty -> .)
    PRINT           reduce using rule 158 (empty -> .)
    READ            reduce using rule 158 (empty -> .)
    IF              reduce using rule 158 (empty -> .)
    FOR             reduce using rule 158 (empty -> .)
    WHILE           reduce using rule 158 (empty -> .)
    }               reduce using rule 158 (empty -> .)
    VARS            reduce using rule 12 (errorVars -> .)

    vars                           shift and go to state 8
    opVars                         shift and go to state 221
    errorVars                      shift and go to state 10
    empty                          shift and go to state 11

state 180

    (48) param -> saveType type errorParam ID . cyTypeParam cyParam
    (52) cyTypeParam -> . , saveID saveTypeParam ID cyTypeParam
    (53) cyTypeParam -> . empty
    (158) empty -> .

    ,               shift and go to state 55
    ;               reduce using rule 158 (empty -> .)
    PARFIN          reduce using rule 158 (empty -> .)

    empty                          shift and go to state 56
    cyTypeParam                    shift and go to state 222

state 181

    (32) cyRead -> , . fix ID performRead cyRead
    (34) fix -> .

    ID              reduce using rule 34 (fix -> .)

    fix                            shift and go to state 223

state 182

    (31) read -> READ PARINI ID performRead cyRead . PARFIN

    PARFIN          shift and go to state 224


state 183

    (33) cyRead -> empty .

    PARFIN          reduce using rule 33 (cyRead -> empty .)


state 184

    (139) fact -> PARINI putFondo expresion . PARFIN takeFondo

    PARFIN          shift and go to state 225


state 185

    (146) opStruct -> errorOpStruct . [ expresion ] opMatrix

    [               shift and go to state 226


state 186

    (143) opAccess -> opDictionary .

    MULT            reduce using rule 143 (opAccess -> opDictionary .)
    DIV             reduce using rule 143 (opAccess -> opDictionary .)
    PLUS            reduce using rule 143 (opAccess -> opDictionary .)
    MINUS           reduce using rule 143 (opAccess -> opDictionary .)
    ,               reduce using rule 143 (opAccess -> opDictionary .)
    PARFIN          reduce using rule 143 (opAccess -> opDictionary .)
    EQ              reduce using rule 143 (opAccess -> opDictionary .)
    DIF             reduce using rule 143 (opAccess -> opDictionary .)
    LTOEQ           reduce using rule 143 (opAccess -> opDictionary .)
    GTOEQ           reduce using rule 143 (opAccess -> opDictionary .)
    GT              reduce using rule 143 (opAccess -> opDictionary .)
    LT              reduce using rule 143 (opAccess -> opDictionary .)
    AND             reduce using rule 143 (opAccess -> opDictionary .)
    OR              reduce using rule 143 (opAccess -> opDictionary .)
    ]               reduce using rule 143 (opAccess -> opDictionary .)
    ;               reduce using rule 143 (opAccess -> opDictionary .)


state 187

    (142) opAccess -> opStruct .

    MULT            reduce using rule 142 (opAccess -> opStruct .)
    DIV             reduce using rule 142 (opAccess -> opStruct .)
    PLUS            reduce using rule 142 (opAccess -> opStruct .)
    MINUS           reduce using rule 142 (opAccess -> opStruct .)
    ,               reduce using rule 142 (opAccess -> opStruct .)
    PARFIN          reduce using rule 142 (opAccess -> opStruct .)
    EQ              reduce using rule 142 (opAccess -> opStruct .)
    DIF             reduce using rule 142 (opAccess -> opStruct .)
    LTOEQ           reduce using rule 142 (opAccess -> opStruct .)
    GTOEQ           reduce using rule 142 (opAccess -> opStruct .)
    GT              reduce using rule 142 (opAccess -> opStruct .)
    LT              reduce using rule 142 (opAccess -> opStruct .)
    AND             reduce using rule 142 (opAccess -> opStruct .)
    OR              reduce using rule 142 (opAccess -> opStruct .)
    ]               reduce using rule 142 (opAccess -> opStruct .)
    ;               reduce using rule 142 (opAccess -> opStruct .)


state 188

    (140) fact -> ID saveVariable opAccess . errorOpAccess
    (145) errorOpAccess -> .

    MULT            reduce using rule 145 (errorOpAccess -> .)
    DIV             reduce using rule 145 (errorOpAccess -> .)
    PLUS            reduce using rule 145 (errorOpAccess -> .)
    MINUS           reduce using rule 145 (errorOpAccess -> .)
    ,               reduce using rule 145 (errorOpAccess -> .)
    PARFIN          reduce using rule 145 (errorOpAccess -> .)
    EQ              reduce using rule 145 (errorOpAccess -> .)
    DIF             reduce using rule 145 (errorOpAccess -> .)
    LTOEQ           reduce using rule 145 (errorOpAccess -> .)
    GTOEQ           reduce using rule 145 (errorOpAccess -> .)
    GT              reduce using rule 145 (errorOpAccess -> .)
    LT              reduce using rule 145 (errorOpAccess -> .)
    AND             reduce using rule 145 (errorOpAccess -> .)
    OR              reduce using rule 145 (errorOpAccess -> .)
    ]               reduce using rule 145 (errorOpAccess -> .)
    ;               reduce using rule 145 (errorOpAccess -> .)

    errorOpAccess                  shift and go to state 227

state 189

    (151) opDictionary -> . . dictIndex
    (152) dictIndex -> . FIRST
    (153) dictIndex -> . LAST

    FIRST           shift and go to state 228
    LAST            shift and go to state 229

    dictIndex                      shift and go to state 230

state 190

    (144) opAccess -> empty .

    MULT            reduce using rule 144 (opAccess -> empty .)
    DIV             reduce using rule 144 (opAccess -> empty .)
    PLUS            reduce using rule 144 (opAccess -> empty .)
    MINUS           reduce using rule 144 (opAccess -> empty .)
    ,               reduce using rule 144 (opAccess -> empty .)
    PARFIN          reduce using rule 144 (opAccess -> empty .)
    EQ              reduce using rule 144 (opAccess -> empty .)
    DIF             reduce using rule 144 (opAccess -> empty .)
    LTOEQ           reduce using rule 144 (opAccess -> empty .)
    GTOEQ           reduce using rule 144 (opAccess -> empty .)
    GT              reduce using rule 144 (opAccess -> empty .)
    LT              reduce using rule 144 (opAccess -> empty .)
    AND             reduce using rule 144 (opAccess -> empty .)
    OR              reduce using rule 144 (opAccess -> empty .)
    ]               reduce using rule 144 (opAccess -> empty .)
    ;               reduce using rule 144 (opAccess -> empty .)


state 191

    (127) exp -> term performAddSub errorCyExp . cyExp
    (128) cyExp -> . PLUS saveOperator exp
    (129) cyExp -> . MINUS saveOperator exp
    (130) cyExp -> . empty
    (158) empty -> .

    PLUS            shift and go to state 232
    MINUS           shift and go to state 233
    ,               reduce using rule 158 (empty -> .)
    PARFIN          reduce using rule 158 (empty -> .)
    EQ              reduce using rule 158 (empty -> .)
    DIF             reduce using rule 158 (empty -> .)
    LTOEQ           reduce using rule 158 (empty -> .)
    GTOEQ           reduce using rule 158 (empty -> .)
    GT              reduce using rule 158 (empty -> .)
    LT              reduce using rule 158 (empty -> .)
    AND             reduce using rule 158 (empty -> .)
    OR              reduce using rule 158 (empty -> .)
    ]               reduce using rule 158 (empty -> .)
    ;               reduce using rule 158 (empty -> .)

    cyExp                          shift and go to state 231
    empty                          shift and go to state 234

state 192

    (28) print -> PRINT PARINI exp performPrint cyPrint . PARFIN

    PARFIN          shift and go to state 235


state 193

    (29) cyPrint -> , . fix exp performPrint cyPrint
    (34) fix -> .

    CTES            reduce using rule 34 (fix -> .)
    PARINI          reduce using rule 34 (fix -> .)
    ID              reduce using rule 34 (fix -> .)
    CTED            reduce using rule 34 (fix -> .)
    CTEF            reduce using rule 34 (fix -> .)
    TRUE            reduce using rule 34 (fix -> .)
    FALSE           reduce using rule 34 (fix -> .)

    fix                            shift and go to state 236

state 194

    (30) cyPrint -> empty .

    PARFIN          reduce using rule 30 (cyPrint -> empty .)


state 195

    (132) term -> fact performMulDiv cyTerm .

    PLUS            reduce using rule 132 (term -> fact performMulDiv cyTerm .)
    MINUS           reduce using rule 132 (term -> fact performMulDiv cyTerm .)
    ,               reduce using rule 132 (term -> fact performMulDiv cyTerm .)
    PARFIN          reduce using rule 132 (term -> fact performMulDiv cyTerm .)
    EQ              reduce using rule 132 (term -> fact performMulDiv cyTerm .)
    DIF             reduce using rule 132 (term -> fact performMulDiv cyTerm .)
    LTOEQ           reduce using rule 132 (term -> fact performMulDiv cyTerm .)
    GTOEQ           reduce using rule 132 (term -> fact performMulDiv cyTerm .)
    GT              reduce using rule 132 (term -> fact performMulDiv cyTerm .)
    LT              reduce using rule 132 (term -> fact performMulDiv cyTerm .)
    AND             reduce using rule 132 (term -> fact performMulDiv cyTerm .)
    OR              reduce using rule 132 (term -> fact performMulDiv cyTerm .)
    ]               reduce using rule 132 (term -> fact performMulDiv cyTerm .)
    ;               reduce using rule 132 (term -> fact performMulDiv cyTerm .)


state 196

    (135) cyTerm -> empty .

    PLUS            reduce using rule 135 (cyTerm -> empty .)
    MINUS           reduce using rule 135 (cyTerm -> empty .)
    ,               reduce using rule 135 (cyTerm -> empty .)
    PARFIN          reduce using rule 135 (cyTerm -> empty .)
    EQ              reduce using rule 135 (cyTerm -> empty .)
    DIF             reduce using rule 135 (cyTerm -> empty .)
    LTOEQ           reduce using rule 135 (cyTerm -> empty .)
    GTOEQ           reduce using rule 135 (cyTerm -> empty .)
    GT              reduce using rule 135 (cyTerm -> empty .)
    LT              reduce using rule 135 (cyTerm -> empty .)
    AND             reduce using rule 135 (cyTerm -> empty .)
    OR              reduce using rule 135 (cyTerm -> empty .)
    ]               reduce using rule 135 (cyTerm -> empty .)
    ;               reduce using rule 135 (cyTerm -> empty .)


state 197

    (134) cyTerm -> DIV . saveOperator term
    (165) saveOperator -> .

    CTES            reduce using rule 165 (saveOperator -> .)
    PARINI          reduce using rule 165 (saveOperator -> .)
    ID              reduce using rule 165 (saveOperator -> .)
    CTED            reduce using rule 165 (saveOperator -> .)
    CTEF            reduce using rule 165 (saveOperator -> .)
    TRUE            reduce using rule 165 (saveOperator -> .)
    FALSE           reduce using rule 165 (saveOperator -> .)

    saveOperator                   shift and go to state 237

state 198

    (133) cyTerm -> MULT . saveOperator errorFact term
    (165) saveOperator -> .

    CTES            reduce using rule 165 (saveOperator -> .)
    PARINI          reduce using rule 165 (saveOperator -> .)
    ID              reduce using rule 165 (saveOperator -> .)
    CTED            reduce using rule 165 (saveOperator -> .)
    CTEF            reduce using rule 165 (saveOperator -> .)
    TRUE            reduce using rule 165 (saveOperator -> .)
    FALSE           reduce using rule 165 (saveOperator -> .)

    saveOperator                   shift and go to state 238

state 199

    (84) whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN . { body }

    {               shift and go to state 239


state 200

    (88) assign -> ID saveVariable errorAssign assignOptions performAssign .

    ;               reduce using rule 88 (assign -> ID saveVariable errorAssign assignOptions performAssign .)
    PARFIN          reduce using rule 88 (assign -> ID saveVariable errorAssign assignOptions performAssign .)


state 201

    (38) init -> ASGN saveOperator . errorInit initWith
    (39) errorInit -> .

    ID              reduce using rule 39 (errorInit -> .)
    CTES            reduce using rule 39 (errorInit -> .)
    PARINI          reduce using rule 39 (errorInit -> .)
    CTED            reduce using rule 39 (errorInit -> .)
    CTEF            reduce using rule 39 (errorInit -> .)
    TRUE            reduce using rule 39 (errorInit -> .)
    FALSE           reduce using rule 39 (errorInit -> .)

    errorInit                      shift and go to state 240

state 202

    (42) initDict -> ASGN PARINI . dictType : dictType PARFIN errorInitDict
    (44) dictType -> . errorDictType CTES
    (45) dictType -> . cte
    (46) dictType -> . ID
    (47) errorDictType -> .
    (154) cte -> . CTED saveConstantInt
    (155) cte -> . CTEF saveConstantFloat
    (156) cte -> . TRUE saveConstantBool
    (157) cte -> . FALSE saveConstantBool

    ID              shift and go to state 244
    CTES            reduce using rule 47 (errorDictType -> .)
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    dictType                       shift and go to state 241
    errorDictType                  shift and go to state 242
    cte                            shift and go to state 243

state 203

    (92) assignOptions -> [ expresion . ] assignMatrix init

    ]               shift and go to state 245


state 204

    (115) cyExpresion -> AND . saveOperator expresion
    (165) saveOperator -> .

    CTES            reduce using rule 165 (saveOperator -> .)
    PARINI          reduce using rule 165 (saveOperator -> .)
    ID              reduce using rule 165 (saveOperator -> .)
    CTED            reduce using rule 165 (saveOperator -> .)
    CTEF            reduce using rule 165 (saveOperator -> .)
    TRUE            reduce using rule 165 (saveOperator -> .)
    FALSE           reduce using rule 165 (saveOperator -> .)

    saveOperator                   shift and go to state 246

state 205

    (116) cyExpresion -> OR . saveOperator expresion
    (165) saveOperator -> .

    CTES            reduce using rule 165 (saveOperator -> .)
    PARINI          reduce using rule 165 (saveOperator -> .)
    ID              reduce using rule 165 (saveOperator -> .)
    CTED            reduce using rule 165 (saveOperator -> .)
    CTEF            reduce using rule 165 (saveOperator -> .)
    TRUE            reduce using rule 165 (saveOperator -> .)
    FALSE           reduce using rule 165 (saveOperator -> .)

    saveOperator                   shift and go to state 247

state 206

    (113) expresion -> sExp performAndOr cyExpresion . errorExpresion
    (114) errorExpresion -> .

    ,               reduce using rule 114 (errorExpresion -> .)
    PARFIN          reduce using rule 114 (errorExpresion -> .)
    ]               reduce using rule 114 (errorExpresion -> .)
    ;               reduce using rule 114 (errorExpresion -> .)

    errorExpresion                 shift and go to state 248

state 207

    (117) cyExpresion -> empty .

    ,               reduce using rule 117 (cyExpresion -> empty .)
    PARFIN          reduce using rule 117 (cyExpresion -> empty .)
    ]               reduce using rule 117 (cyExpresion -> empty .)
    ;               reduce using rule 117 (cyExpresion -> empty .)


state 208

    (99) cyParamCall -> , expresion . cyParamCall
    (99) cyParamCall -> . , expresion cyParamCall
    (100) cyParamCall -> . empty
    (158) empty -> .

    ,               shift and go to state 171
    PARFIN          reduce using rule 158 (empty -> .)

    cyParamCall                    shift and go to state 249
    empty                          shift and go to state 172

state 209

    (123) opSExp -> GT . saveOperator exp
    (165) saveOperator -> .

    CTES            reduce using rule 165 (saveOperator -> .)
    PARINI          reduce using rule 165 (saveOperator -> .)
    ID              reduce using rule 165 (saveOperator -> .)
    CTED            reduce using rule 165 (saveOperator -> .)
    CTEF            reduce using rule 165 (saveOperator -> .)
    TRUE            reduce using rule 165 (saveOperator -> .)
    FALSE           reduce using rule 165 (saveOperator -> .)

    saveOperator                   shift and go to state 250

state 210

    (121) opSExp -> LTOEQ . saveOperator exp
    (165) saveOperator -> .

    CTES            reduce using rule 165 (saveOperator -> .)
    PARINI          reduce using rule 165 (saveOperator -> .)
    ID              reduce using rule 165 (saveOperator -> .)
    CTED            reduce using rule 165 (saveOperator -> .)
    CTEF            reduce using rule 165 (saveOperator -> .)
    TRUE            reduce using rule 165 (saveOperator -> .)
    FALSE           reduce using rule 165 (saveOperator -> .)

    saveOperator                   shift and go to state 251

state 211

    (120) opSExp -> DIF . saveOperator exp
    (165) saveOperator -> .

    CTES            reduce using rule 165 (saveOperator -> .)
    PARINI          reduce using rule 165 (saveOperator -> .)
    ID              reduce using rule 165 (saveOperator -> .)
    CTED            reduce using rule 165 (saveOperator -> .)
    CTEF            reduce using rule 165 (saveOperator -> .)
    TRUE            reduce using rule 165 (saveOperator -> .)
    FALSE           reduce using rule 165 (saveOperator -> .)

    saveOperator                   shift and go to state 252

state 212

    (124) opSExp -> LT . saveOperator exp
    (165) saveOperator -> .

    CTES            reduce using rule 165 (saveOperator -> .)
    PARINI          reduce using rule 165 (saveOperator -> .)
    ID              reduce using rule 165 (saveOperator -> .)
    CTED            reduce using rule 165 (saveOperator -> .)
    CTEF            reduce using rule 165 (saveOperator -> .)
    TRUE            reduce using rule 165 (saveOperator -> .)
    FALSE           reduce using rule 165 (saveOperator -> .)

    saveOperator                   shift and go to state 253

state 213

    (122) opSExp -> GTOEQ . saveOperator exp
    (165) saveOperator -> .

    CTES            reduce using rule 165 (saveOperator -> .)
    PARINI          reduce using rule 165 (saveOperator -> .)
    ID              reduce using rule 165 (saveOperator -> .)
    CTED            reduce using rule 165 (saveOperator -> .)
    CTEF            reduce using rule 165 (saveOperator -> .)
    TRUE            reduce using rule 165 (saveOperator -> .)
    FALSE           reduce using rule 165 (saveOperator -> .)

    saveOperator                   shift and go to state 254

state 214

    (119) opSExp -> EQ . saveOperator exp
    (165) saveOperator -> .

    CTES            reduce using rule 165 (saveOperator -> .)
    PARINI          reduce using rule 165 (saveOperator -> .)
    ID              reduce using rule 165 (saveOperator -> .)
    CTED            reduce using rule 165 (saveOperator -> .)
    CTEF            reduce using rule 165 (saveOperator -> .)
    TRUE            reduce using rule 165 (saveOperator -> .)
    FALSE           reduce using rule 165 (saveOperator -> .)

    saveOperator                   shift and go to state 255

state 215

    (125) opSExp -> empty .

    AND             reduce using rule 125 (opSExp -> empty .)
    OR              reduce using rule 125 (opSExp -> empty .)
    ,               reduce using rule 125 (opSExp -> empty .)
    PARFIN          reduce using rule 125 (opSExp -> empty .)
    ]               reduce using rule 125 (opSExp -> empty .)
    ;               reduce using rule 125 (opSExp -> empty .)


state 216

    (118) sExp -> exp errorOpSExp opSExp . performRelational
    (171) performRelational -> .

    AND             reduce using rule 171 (performRelational -> .)
    OR              reduce using rule 171 (performRelational -> .)
    ,               reduce using rule 171 (performRelational -> .)
    PARFIN          reduce using rule 171 (performRelational -> .)
    ]               reduce using rule 171 (performRelational -> .)
    ;               reduce using rule 171 (performRelational -> .)

    performRelational              shift and go to state 256

state 217

    (86) forCycle -> errorForCycle FOR PARINI assign ; . expresion ; assign PARFIN { body }
    (113) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (118) sExp -> . exp errorOpSExp opSExp performRelational
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES saveConstantString
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED saveConstantInt
    (155) cte -> . CTEF saveConstantFloat
    (156) cte -> . TRUE saveConstantBool
    (157) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    sExp                           shift and go to state 141
    expresion                      shift and go to state 257
    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 144
    fact                           shift and go to state 137

state 218

    (106) condition -> errorCondition IF PARINI expresion PARFIN . { body } optionalElse

    {               shift and go to state 258


state 219

    (56) function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } . clearVarsTable
    (58) clearVarsTable -> .

    FUNC            reduce using rule 58 (clearVarsTable -> .)
    MAIN            reduce using rule 58 (clearVarsTable -> .)

    clearVarsTable                 shift and go to state 259

state 220

    (66) opReturns -> errorOpReturns RETURNS . type saveReturnType { opVars body return
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    errorType                      shift and go to state 31
    type                           shift and go to state 260

state 221

    (67) opReturns -> { opVars . body
    (78) body -> . errorBody cyInstruction
    (79) body -> . empty
    (80) errorBody -> .
    (158) empty -> .

    ID              reduce using rule 80 (errorBody -> .)
    PRINT           reduce using rule 80 (errorBody -> .)
    READ            reduce using rule 80 (errorBody -> .)
    IF              reduce using rule 80 (errorBody -> .)
    FOR             reduce using rule 80 (errorBody -> .)
    WHILE           reduce using rule 80 (errorBody -> .)
    }               reduce using rule 158 (empty -> .)

    body                           shift and go to state 261
    empty                          shift and go to state 75
    errorBody                      shift and go to state 74

state 222

    (48) param -> saveType type errorParam ID cyTypeParam . cyParam
    (50) cyParam -> . errorCyParam saveID saveTypeParam ; param
    (51) cyParam -> . empty saveID saveTypeParam
    (55) errorCyParam -> .
    (158) empty -> .

    ;               reduce using rule 55 (errorCyParam -> .)
    PARFIN          reduce using rule 158 (empty -> .)

    empty                          shift and go to state 262
    cyParam                        shift and go to state 264
    errorCyParam                   shift and go to state 263

state 223

    (32) cyRead -> , fix . ID performRead cyRead

    ID              shift and go to state 265


state 224

    (31) read -> READ PARINI ID performRead cyRead PARFIN .

    ;               reduce using rule 31 (read -> READ PARINI ID performRead cyRead PARFIN .)


state 225

    (139) fact -> PARINI putFondo expresion PARFIN . takeFondo
    (167) takeFondo -> .

    MULT            reduce using rule 167 (takeFondo -> .)
    DIV             reduce using rule 167 (takeFondo -> .)
    PLUS            reduce using rule 167 (takeFondo -> .)
    MINUS           reduce using rule 167 (takeFondo -> .)
    ,               reduce using rule 167 (takeFondo -> .)
    PARFIN          reduce using rule 167 (takeFondo -> .)
    EQ              reduce using rule 167 (takeFondo -> .)
    DIF             reduce using rule 167 (takeFondo -> .)
    LTOEQ           reduce using rule 167 (takeFondo -> .)
    GTOEQ           reduce using rule 167 (takeFondo -> .)
    GT              reduce using rule 167 (takeFondo -> .)
    LT              reduce using rule 167 (takeFondo -> .)
    AND             reduce using rule 167 (takeFondo -> .)
    OR              reduce using rule 167 (takeFondo -> .)
    ]               reduce using rule 167 (takeFondo -> .)
    ;               reduce using rule 167 (takeFondo -> .)

    takeFondo                      shift and go to state 266

state 226

    (146) opStruct -> errorOpStruct [ . expresion ] opMatrix
    (113) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (118) sExp -> . exp errorOpSExp opSExp performRelational
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES saveConstantString
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED saveConstantInt
    (155) cte -> . CTEF saveConstantFloat
    (156) cte -> . TRUE saveConstantBool
    (157) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    sExp                           shift and go to state 141
    expresion                      shift and go to state 267
    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 144
    fact                           shift and go to state 137

state 227

    (140) fact -> ID saveVariable opAccess errorOpAccess .

    MULT            reduce using rule 140 (fact -> ID saveVariable opAccess errorOpAccess .)
    DIV             reduce using rule 140 (fact -> ID saveVariable opAccess errorOpAccess .)
    PLUS            reduce using rule 140 (fact -> ID saveVariable opAccess errorOpAccess .)
    MINUS           reduce using rule 140 (fact -> ID saveVariable opAccess errorOpAccess .)
    AND             reduce using rule 140 (fact -> ID saveVariable opAccess errorOpAccess .)
    OR              reduce using rule 140 (fact -> ID saveVariable opAccess errorOpAccess .)
    ,               reduce using rule 140 (fact -> ID saveVariable opAccess errorOpAccess .)
    PARFIN          reduce using rule 140 (fact -> ID saveVariable opAccess errorOpAccess .)
    ]               reduce using rule 140 (fact -> ID saveVariable opAccess errorOpAccess .)
    ;               reduce using rule 140 (fact -> ID saveVariable opAccess errorOpAccess .)
    EQ              reduce using rule 140 (fact -> ID saveVariable opAccess errorOpAccess .)
    DIF             reduce using rule 140 (fact -> ID saveVariable opAccess errorOpAccess .)
    LTOEQ           reduce using rule 140 (fact -> ID saveVariable opAccess errorOpAccess .)
    GTOEQ           reduce using rule 140 (fact -> ID saveVariable opAccess errorOpAccess .)
    GT              reduce using rule 140 (fact -> ID saveVariable opAccess errorOpAccess .)
    LT              reduce using rule 140 (fact -> ID saveVariable opAccess errorOpAccess .)


state 228

    (152) dictIndex -> FIRST .

    MULT            reduce using rule 152 (dictIndex -> FIRST .)
    DIV             reduce using rule 152 (dictIndex -> FIRST .)
    PLUS            reduce using rule 152 (dictIndex -> FIRST .)
    MINUS           reduce using rule 152 (dictIndex -> FIRST .)
    ,               reduce using rule 152 (dictIndex -> FIRST .)
    PARFIN          reduce using rule 152 (dictIndex -> FIRST .)
    EQ              reduce using rule 152 (dictIndex -> FIRST .)
    DIF             reduce using rule 152 (dictIndex -> FIRST .)
    LTOEQ           reduce using rule 152 (dictIndex -> FIRST .)
    GTOEQ           reduce using rule 152 (dictIndex -> FIRST .)
    GT              reduce using rule 152 (dictIndex -> FIRST .)
    LT              reduce using rule 152 (dictIndex -> FIRST .)
    AND             reduce using rule 152 (dictIndex -> FIRST .)
    OR              reduce using rule 152 (dictIndex -> FIRST .)
    ]               reduce using rule 152 (dictIndex -> FIRST .)
    ;               reduce using rule 152 (dictIndex -> FIRST .)


state 229

    (153) dictIndex -> LAST .

    MULT            reduce using rule 153 (dictIndex -> LAST .)
    DIV             reduce using rule 153 (dictIndex -> LAST .)
    PLUS            reduce using rule 153 (dictIndex -> LAST .)
    MINUS           reduce using rule 153 (dictIndex -> LAST .)
    ,               reduce using rule 153 (dictIndex -> LAST .)
    PARFIN          reduce using rule 153 (dictIndex -> LAST .)
    EQ              reduce using rule 153 (dictIndex -> LAST .)
    DIF             reduce using rule 153 (dictIndex -> LAST .)
    LTOEQ           reduce using rule 153 (dictIndex -> LAST .)
    GTOEQ           reduce using rule 153 (dictIndex -> LAST .)
    GT              reduce using rule 153 (dictIndex -> LAST .)
    LT              reduce using rule 153 (dictIndex -> LAST .)
    AND             reduce using rule 153 (dictIndex -> LAST .)
    OR              reduce using rule 153 (dictIndex -> LAST .)
    ]               reduce using rule 153 (dictIndex -> LAST .)
    ;               reduce using rule 153 (dictIndex -> LAST .)


state 230

    (151) opDictionary -> . dictIndex .

    MULT            reduce using rule 151 (opDictionary -> . dictIndex .)
    DIV             reduce using rule 151 (opDictionary -> . dictIndex .)
    PLUS            reduce using rule 151 (opDictionary -> . dictIndex .)
    MINUS           reduce using rule 151 (opDictionary -> . dictIndex .)
    ,               reduce using rule 151 (opDictionary -> . dictIndex .)
    PARFIN          reduce using rule 151 (opDictionary -> . dictIndex .)
    EQ              reduce using rule 151 (opDictionary -> . dictIndex .)
    DIF             reduce using rule 151 (opDictionary -> . dictIndex .)
    LTOEQ           reduce using rule 151 (opDictionary -> . dictIndex .)
    GTOEQ           reduce using rule 151 (opDictionary -> . dictIndex .)
    GT              reduce using rule 151 (opDictionary -> . dictIndex .)
    LT              reduce using rule 151 (opDictionary -> . dictIndex .)
    AND             reduce using rule 151 (opDictionary -> . dictIndex .)
    OR              reduce using rule 151 (opDictionary -> . dictIndex .)
    ]               reduce using rule 151 (opDictionary -> . dictIndex .)
    ;               reduce using rule 151 (opDictionary -> . dictIndex .)


state 231

    (127) exp -> term performAddSub errorCyExp cyExp .

    ,               reduce using rule 127 (exp -> term performAddSub errorCyExp cyExp .)
    PARFIN          reduce using rule 127 (exp -> term performAddSub errorCyExp cyExp .)
    EQ              reduce using rule 127 (exp -> term performAddSub errorCyExp cyExp .)
    DIF             reduce using rule 127 (exp -> term performAddSub errorCyExp cyExp .)
    LTOEQ           reduce using rule 127 (exp -> term performAddSub errorCyExp cyExp .)
    GTOEQ           reduce using rule 127 (exp -> term performAddSub errorCyExp cyExp .)
    GT              reduce using rule 127 (exp -> term performAddSub errorCyExp cyExp .)
    LT              reduce using rule 127 (exp -> term performAddSub errorCyExp cyExp .)
    AND             reduce using rule 127 (exp -> term performAddSub errorCyExp cyExp .)
    OR              reduce using rule 127 (exp -> term performAddSub errorCyExp cyExp .)
    ;               reduce using rule 127 (exp -> term performAddSub errorCyExp cyExp .)
    ]               reduce using rule 127 (exp -> term performAddSub errorCyExp cyExp .)


state 232

    (128) cyExp -> PLUS . saveOperator exp
    (165) saveOperator -> .

    CTES            reduce using rule 165 (saveOperator -> .)
    PARINI          reduce using rule 165 (saveOperator -> .)
    ID              reduce using rule 165 (saveOperator -> .)
    CTED            reduce using rule 165 (saveOperator -> .)
    CTEF            reduce using rule 165 (saveOperator -> .)
    TRUE            reduce using rule 165 (saveOperator -> .)
    FALSE           reduce using rule 165 (saveOperator -> .)

    saveOperator                   shift and go to state 268

state 233

    (129) cyExp -> MINUS . saveOperator exp
    (165) saveOperator -> .

    CTES            reduce using rule 165 (saveOperator -> .)
    PARINI          reduce using rule 165 (saveOperator -> .)
    ID              reduce using rule 165 (saveOperator -> .)
    CTED            reduce using rule 165 (saveOperator -> .)
    CTEF            reduce using rule 165 (saveOperator -> .)
    TRUE            reduce using rule 165 (saveOperator -> .)
    FALSE           reduce using rule 165 (saveOperator -> .)

    saveOperator                   shift and go to state 269

state 234

    (130) cyExp -> empty .

    ,               reduce using rule 130 (cyExp -> empty .)
    PARFIN          reduce using rule 130 (cyExp -> empty .)
    EQ              reduce using rule 130 (cyExp -> empty .)
    DIF             reduce using rule 130 (cyExp -> empty .)
    LTOEQ           reduce using rule 130 (cyExp -> empty .)
    GTOEQ           reduce using rule 130 (cyExp -> empty .)
    GT              reduce using rule 130 (cyExp -> empty .)
    LT              reduce using rule 130 (cyExp -> empty .)
    AND             reduce using rule 130 (cyExp -> empty .)
    OR              reduce using rule 130 (cyExp -> empty .)
    ]               reduce using rule 130 (cyExp -> empty .)
    ;               reduce using rule 130 (cyExp -> empty .)


state 235

    (28) print -> PRINT PARINI exp performPrint cyPrint PARFIN .

    ;               reduce using rule 28 (print -> PRINT PARINI exp performPrint cyPrint PARFIN .)


state 236

    (29) cyPrint -> , fix . exp performPrint cyPrint
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES saveConstantString
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED saveConstantInt
    (155) cte -> . CTEF saveConstantFloat
    (156) cte -> . TRUE saveConstantBool
    (157) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 270
    fact                           shift and go to state 137

state 237

    (134) cyTerm -> DIV saveOperator . term
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES saveConstantString
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED saveConstantInt
    (155) cte -> . CTEF saveConstantFloat
    (156) cte -> . TRUE saveConstantBool
    (157) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    term                           shift and go to state 271
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    fact                           shift and go to state 137

state 238

    (133) cyTerm -> MULT saveOperator . errorFact term
    (141) errorFact -> .

    CTES            reduce using rule 141 (errorFact -> .)
    PARINI          reduce using rule 141 (errorFact -> .)
    ID              reduce using rule 141 (errorFact -> .)
    CTED            reduce using rule 141 (errorFact -> .)
    CTEF            reduce using rule 141 (errorFact -> .)
    TRUE            reduce using rule 141 (errorFact -> .)
    FALSE           reduce using rule 141 (errorFact -> .)

    errorFact                      shift and go to state 272

state 239

    (84) whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { . body }
    (78) body -> . errorBody cyInstruction
    (79) body -> . empty
    (80) errorBody -> .
    (158) empty -> .

    ID              reduce using rule 80 (errorBody -> .)
    PRINT           reduce using rule 80 (errorBody -> .)
    READ            reduce using rule 80 (errorBody -> .)
    IF              reduce using rule 80 (errorBody -> .)
    FOR             reduce using rule 80 (errorBody -> .)
    WHILE           reduce using rule 80 (errorBody -> .)
    }               reduce using rule 158 (empty -> .)

    body                           shift and go to state 273
    errorBody                      shift and go to state 74
    empty                          shift and go to state 75

state 240

    (38) init -> ASGN saveOperator errorInit . initWith
    (40) initWith -> . expresion
    (41) initWith -> . funcCall
    (113) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (96) funcCall -> . ID PARINI opParamCall PARFIN
    (118) sExp -> . exp errorOpSExp opSExp performRelational
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES saveConstantString
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED saveConstantInt
    (155) cte -> . CTEF saveConstantFloat
    (156) cte -> . TRUE saveConstantBool
    (157) cte -> . FALSE saveConstantBool

    ID              shift and go to state 275
    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    initWith                       shift and go to state 274
    sExp                           shift and go to state 141
    expresion                      shift and go to state 276
    term                           shift and go to state 131
    funcCall                       shift and go to state 277
    cte                            shift and go to state 134
    exp                            shift and go to state 144
    fact                           shift and go to state 137

state 241

    (42) initDict -> ASGN PARINI dictType . : dictType PARFIN errorInitDict

    :               shift and go to state 278


state 242

    (44) dictType -> errorDictType . CTES

    CTES            shift and go to state 279


state 243

    (45) dictType -> cte .

    :               reduce using rule 45 (dictType -> cte .)
    PARFIN          reduce using rule 45 (dictType -> cte .)


state 244

    (46) dictType -> ID .

    :               reduce using rule 46 (dictType -> ID .)
    PARFIN          reduce using rule 46 (dictType -> ID .)


state 245

    (92) assignOptions -> [ expresion ] . assignMatrix init
    (93) assignMatrix -> . [ expresion ] errorAssignMatrix
    (94) assignMatrix -> . empty
    (158) empty -> .

    [               shift and go to state 281
    ASGN            reduce using rule 158 (empty -> .)

    assignMatrix                   shift and go to state 280
    empty                          shift and go to state 282

state 246

    (115) cyExpresion -> AND saveOperator . expresion
    (113) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (118) sExp -> . exp errorOpSExp opSExp performRelational
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES saveConstantString
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED saveConstantInt
    (155) cte -> . CTEF saveConstantFloat
    (156) cte -> . TRUE saveConstantBool
    (157) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    sExp                           shift and go to state 141
    expresion                      shift and go to state 283
    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 144
    fact                           shift and go to state 137

state 247

    (116) cyExpresion -> OR saveOperator . expresion
    (113) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (118) sExp -> . exp errorOpSExp opSExp performRelational
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES saveConstantString
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED saveConstantInt
    (155) cte -> . CTEF saveConstantFloat
    (156) cte -> . TRUE saveConstantBool
    (157) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    sExp                           shift and go to state 141
    expresion                      shift and go to state 284
    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 144
    fact                           shift and go to state 137

state 248

    (113) expresion -> sExp performAndOr cyExpresion errorExpresion .

    ;               reduce using rule 113 (expresion -> sExp performAndOr cyExpresion errorExpresion .)
    PARFIN          reduce using rule 113 (expresion -> sExp performAndOr cyExpresion errorExpresion .)
    ,               reduce using rule 113 (expresion -> sExp performAndOr cyExpresion errorExpresion .)
    ]               reduce using rule 113 (expresion -> sExp performAndOr cyExpresion errorExpresion .)


state 249

    (99) cyParamCall -> , expresion cyParamCall .

    PARFIN          reduce using rule 99 (cyParamCall -> , expresion cyParamCall .)


state 250

    (123) opSExp -> GT saveOperator . exp
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES saveConstantString
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED saveConstantInt
    (155) cte -> . CTEF saveConstantFloat
    (156) cte -> . TRUE saveConstantBool
    (157) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 285
    fact                           shift and go to state 137

state 251

    (121) opSExp -> LTOEQ saveOperator . exp
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES saveConstantString
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED saveConstantInt
    (155) cte -> . CTEF saveConstantFloat
    (156) cte -> . TRUE saveConstantBool
    (157) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 286
    fact                           shift and go to state 137

state 252

    (120) opSExp -> DIF saveOperator . exp
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES saveConstantString
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED saveConstantInt
    (155) cte -> . CTEF saveConstantFloat
    (156) cte -> . TRUE saveConstantBool
    (157) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 287
    fact                           shift and go to state 137

state 253

    (124) opSExp -> LT saveOperator . exp
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES saveConstantString
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED saveConstantInt
    (155) cte -> . CTEF saveConstantFloat
    (156) cte -> . TRUE saveConstantBool
    (157) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 288
    fact                           shift and go to state 137

state 254

    (122) opSExp -> GTOEQ saveOperator . exp
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES saveConstantString
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED saveConstantInt
    (155) cte -> . CTEF saveConstantFloat
    (156) cte -> . TRUE saveConstantBool
    (157) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 289
    fact                           shift and go to state 137

state 255

    (119) opSExp -> EQ saveOperator . exp
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES saveConstantString
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED saveConstantInt
    (155) cte -> . CTEF saveConstantFloat
    (156) cte -> . TRUE saveConstantBool
    (157) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 290
    fact                           shift and go to state 137

state 256

    (118) sExp -> exp errorOpSExp opSExp performRelational .

    AND             reduce using rule 118 (sExp -> exp errorOpSExp opSExp performRelational .)
    OR              reduce using rule 118 (sExp -> exp errorOpSExp opSExp performRelational .)
    ;               reduce using rule 118 (sExp -> exp errorOpSExp opSExp performRelational .)
    PARFIN          reduce using rule 118 (sExp -> exp errorOpSExp opSExp performRelational .)
    ]               reduce using rule 118 (sExp -> exp errorOpSExp opSExp performRelational .)
    ,               reduce using rule 118 (sExp -> exp errorOpSExp opSExp performRelational .)


state 257

    (86) forCycle -> errorForCycle FOR PARINI assign ; expresion . ; assign PARFIN { body }

    ;               shift and go to state 291


state 258

    (106) condition -> errorCondition IF PARINI expresion PARFIN { . body } optionalElse
    (78) body -> . errorBody cyInstruction
    (79) body -> . empty
    (80) errorBody -> .
    (158) empty -> .

    ID              reduce using rule 80 (errorBody -> .)
    PRINT           reduce using rule 80 (errorBody -> .)
    READ            reduce using rule 80 (errorBody -> .)
    IF              reduce using rule 80 (errorBody -> .)
    FOR             reduce using rule 80 (errorBody -> .)
    WHILE           reduce using rule 80 (errorBody -> .)
    }               reduce using rule 158 (empty -> .)

    body                           shift and go to state 292
    errorBody                      shift and go to state 74
    empty                          shift and go to state 75

state 259

    (56) function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable .

    FUNC            reduce using rule 56 (function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable .)
    MAIN            reduce using rule 56 (function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable .)


state 260

    (66) opReturns -> errorOpReturns RETURNS type . saveReturnType { opVars body return
    (68) saveReturnType -> .

    {               reduce using rule 68 (saveReturnType -> .)

    saveReturnType                 shift and go to state 293

state 261

    (67) opReturns -> { opVars body .

    }               reduce using rule 67 (opReturns -> { opVars body .)


state 262

    (51) cyParam -> empty . saveID saveTypeParam
    (11) saveID -> .

    PARFIN          reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 294

state 263

    (50) cyParam -> errorCyParam . saveID saveTypeParam ; param
    (11) saveID -> .

    ;               reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 295

state 264

    (48) param -> saveType type errorParam ID cyTypeParam cyParam .

    PARFIN          reduce using rule 48 (param -> saveType type errorParam ID cyTypeParam cyParam .)


state 265

    (32) cyRead -> , fix ID . performRead cyRead
    (174) performRead -> .

    ,               reduce using rule 174 (performRead -> .)
    PARFIN          reduce using rule 174 (performRead -> .)

    performRead                    shift and go to state 296

state 266

    (139) fact -> PARINI putFondo expresion PARFIN takeFondo .

    MULT            reduce using rule 139 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    DIV             reduce using rule 139 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    PLUS            reduce using rule 139 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    MINUS           reduce using rule 139 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    AND             reduce using rule 139 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    OR              reduce using rule 139 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    ,               reduce using rule 139 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    PARFIN          reduce using rule 139 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    ]               reduce using rule 139 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    ;               reduce using rule 139 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    EQ              reduce using rule 139 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    DIF             reduce using rule 139 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    LTOEQ           reduce using rule 139 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    GTOEQ           reduce using rule 139 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    GT              reduce using rule 139 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    LT              reduce using rule 139 (fact -> PARINI putFondo expresion PARFIN takeFondo .)


state 267

    (146) opStruct -> errorOpStruct [ expresion . ] opMatrix

    ]               shift and go to state 297


state 268

    (128) cyExp -> PLUS saveOperator . exp
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES saveConstantString
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED saveConstantInt
    (155) cte -> . CTEF saveConstantFloat
    (156) cte -> . TRUE saveConstantBool
    (157) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 298
    fact                           shift and go to state 137

state 269

    (129) cyExp -> MINUS saveOperator . exp
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES saveConstantString
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED saveConstantInt
    (155) cte -> . CTEF saveConstantFloat
    (156) cte -> . TRUE saveConstantBool
    (157) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 299
    fact                           shift and go to state 137

state 270

    (29) cyPrint -> , fix exp . performPrint cyPrint
    (173) performPrint -> .

    ,               reduce using rule 173 (performPrint -> .)
    PARFIN          reduce using rule 173 (performPrint -> .)

    performPrint                   shift and go to state 300

state 271

    (134) cyTerm -> DIV saveOperator term .

    PLUS            reduce using rule 134 (cyTerm -> DIV saveOperator term .)
    MINUS           reduce using rule 134 (cyTerm -> DIV saveOperator term .)
    ,               reduce using rule 134 (cyTerm -> DIV saveOperator term .)
    PARFIN          reduce using rule 134 (cyTerm -> DIV saveOperator term .)
    EQ              reduce using rule 134 (cyTerm -> DIV saveOperator term .)
    DIF             reduce using rule 134 (cyTerm -> DIV saveOperator term .)
    LTOEQ           reduce using rule 134 (cyTerm -> DIV saveOperator term .)
    GTOEQ           reduce using rule 134 (cyTerm -> DIV saveOperator term .)
    GT              reduce using rule 134 (cyTerm -> DIV saveOperator term .)
    LT              reduce using rule 134 (cyTerm -> DIV saveOperator term .)
    AND             reduce using rule 134 (cyTerm -> DIV saveOperator term .)
    OR              reduce using rule 134 (cyTerm -> DIV saveOperator term .)
    ]               reduce using rule 134 (cyTerm -> DIV saveOperator term .)
    ;               reduce using rule 134 (cyTerm -> DIV saveOperator term .)


state 272

    (133) cyTerm -> MULT saveOperator errorFact . term
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES saveConstantString
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED saveConstantInt
    (155) cte -> . CTEF saveConstantFloat
    (156) cte -> . TRUE saveConstantBool
    (157) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    term                           shift and go to state 301
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    fact                           shift and go to state 137

state 273

    (84) whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body . }

    }               shift and go to state 302


state 274

    (38) init -> ASGN saveOperator errorInit initWith .

    ;               reduce using rule 38 (init -> ASGN saveOperator errorInit initWith .)
    PARFIN          reduce using rule 38 (init -> ASGN saveOperator errorInit initWith .)


state 275

    (96) funcCall -> ID . PARINI opParamCall PARFIN
    (140) fact -> ID . saveVariable opAccess errorOpAccess
    (164) saveVariable -> .

    PARINI          shift and go to state 115
    .               reduce using rule 164 (saveVariable -> .)
    [               reduce using rule 164 (saveVariable -> .)
    MULT            reduce using rule 164 (saveVariable -> .)
    DIV             reduce using rule 164 (saveVariable -> .)
    PLUS            reduce using rule 164 (saveVariable -> .)
    MINUS           reduce using rule 164 (saveVariable -> .)
    EQ              reduce using rule 164 (saveVariable -> .)
    DIF             reduce using rule 164 (saveVariable -> .)
    LTOEQ           reduce using rule 164 (saveVariable -> .)
    GTOEQ           reduce using rule 164 (saveVariable -> .)
    GT              reduce using rule 164 (saveVariable -> .)
    LT              reduce using rule 164 (saveVariable -> .)
    AND             reduce using rule 164 (saveVariable -> .)
    OR              reduce using rule 164 (saveVariable -> .)
    ;               reduce using rule 164 (saveVariable -> .)
    PARFIN          reduce using rule 164 (saveVariable -> .)

    saveVariable                   shift and go to state 155

state 276

    (40) initWith -> expresion .

    ;               reduce using rule 40 (initWith -> expresion .)
    PARFIN          reduce using rule 40 (initWith -> expresion .)


state 277

    (41) initWith -> funcCall .
    (138) fact -> funcCall .

  ! reduce/reduce conflict for ; resolved using rule 41 (initWith -> funcCall .)
  ! reduce/reduce conflict for PARFIN resolved using rule 41 (initWith -> funcCall .)
    ;               reduce using rule 41 (initWith -> funcCall .)
    PARFIN          reduce using rule 41 (initWith -> funcCall .)
    MULT            reduce using rule 138 (fact -> funcCall .)
    DIV             reduce using rule 138 (fact -> funcCall .)
    PLUS            reduce using rule 138 (fact -> funcCall .)
    MINUS           reduce using rule 138 (fact -> funcCall .)
    EQ              reduce using rule 138 (fact -> funcCall .)
    DIF             reduce using rule 138 (fact -> funcCall .)
    LTOEQ           reduce using rule 138 (fact -> funcCall .)
    GTOEQ           reduce using rule 138 (fact -> funcCall .)
    GT              reduce using rule 138 (fact -> funcCall .)
    LT              reduce using rule 138 (fact -> funcCall .)
    AND             reduce using rule 138 (fact -> funcCall .)
    OR              reduce using rule 138 (fact -> funcCall .)

  ! ;               [ reduce using rule 138 (fact -> funcCall .) ]
  ! PARFIN          [ reduce using rule 138 (fact -> funcCall .) ]


state 278

    (42) initDict -> ASGN PARINI dictType : . dictType PARFIN errorInitDict
    (44) dictType -> . errorDictType CTES
    (45) dictType -> . cte
    (46) dictType -> . ID
    (47) errorDictType -> .
    (154) cte -> . CTED saveConstantInt
    (155) cte -> . CTEF saveConstantFloat
    (156) cte -> . TRUE saveConstantBool
    (157) cte -> . FALSE saveConstantBool

    ID              shift and go to state 244
    CTES            reduce using rule 47 (errorDictType -> .)
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    dictType                       shift and go to state 303
    errorDictType                  shift and go to state 242
    cte                            shift and go to state 243

state 279

    (44) dictType -> errorDictType CTES .

    :               reduce using rule 44 (dictType -> errorDictType CTES .)
    PARFIN          reduce using rule 44 (dictType -> errorDictType CTES .)


state 280

    (92) assignOptions -> [ expresion ] assignMatrix . init
    (38) init -> . ASGN saveOperator errorInit initWith

    ASGN            shift and go to state 304

    init                           shift and go to state 305

state 281

    (93) assignMatrix -> [ . expresion ] errorAssignMatrix
    (113) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (118) sExp -> . exp errorOpSExp opSExp performRelational
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES saveConstantString
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED saveConstantInt
    (155) cte -> . CTEF saveConstantFloat
    (156) cte -> . TRUE saveConstantBool
    (157) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    sExp                           shift and go to state 141
    expresion                      shift and go to state 306
    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 144
    fact                           shift and go to state 137

state 282

    (94) assignMatrix -> empty .

    ASGN            reduce using rule 94 (assignMatrix -> empty .)


state 283

    (115) cyExpresion -> AND saveOperator expresion .

    ,               reduce using rule 115 (cyExpresion -> AND saveOperator expresion .)
    PARFIN          reduce using rule 115 (cyExpresion -> AND saveOperator expresion .)
    ]               reduce using rule 115 (cyExpresion -> AND saveOperator expresion .)
    ;               reduce using rule 115 (cyExpresion -> AND saveOperator expresion .)


state 284

    (116) cyExpresion -> OR saveOperator expresion .

    ,               reduce using rule 116 (cyExpresion -> OR saveOperator expresion .)
    PARFIN          reduce using rule 116 (cyExpresion -> OR saveOperator expresion .)
    ]               reduce using rule 116 (cyExpresion -> OR saveOperator expresion .)
    ;               reduce using rule 116 (cyExpresion -> OR saveOperator expresion .)


state 285

    (123) opSExp -> GT saveOperator exp .

    AND             reduce using rule 123 (opSExp -> GT saveOperator exp .)
    OR              reduce using rule 123 (opSExp -> GT saveOperator exp .)
    ,               reduce using rule 123 (opSExp -> GT saveOperator exp .)
    PARFIN          reduce using rule 123 (opSExp -> GT saveOperator exp .)
    ]               reduce using rule 123 (opSExp -> GT saveOperator exp .)
    ;               reduce using rule 123 (opSExp -> GT saveOperator exp .)


state 286

    (121) opSExp -> LTOEQ saveOperator exp .

    AND             reduce using rule 121 (opSExp -> LTOEQ saveOperator exp .)
    OR              reduce using rule 121 (opSExp -> LTOEQ saveOperator exp .)
    ,               reduce using rule 121 (opSExp -> LTOEQ saveOperator exp .)
    PARFIN          reduce using rule 121 (opSExp -> LTOEQ saveOperator exp .)
    ]               reduce using rule 121 (opSExp -> LTOEQ saveOperator exp .)
    ;               reduce using rule 121 (opSExp -> LTOEQ saveOperator exp .)


state 287

    (120) opSExp -> DIF saveOperator exp .

    AND             reduce using rule 120 (opSExp -> DIF saveOperator exp .)
    OR              reduce using rule 120 (opSExp -> DIF saveOperator exp .)
    ,               reduce using rule 120 (opSExp -> DIF saveOperator exp .)
    PARFIN          reduce using rule 120 (opSExp -> DIF saveOperator exp .)
    ]               reduce using rule 120 (opSExp -> DIF saveOperator exp .)
    ;               reduce using rule 120 (opSExp -> DIF saveOperator exp .)


state 288

    (124) opSExp -> LT saveOperator exp .

    AND             reduce using rule 124 (opSExp -> LT saveOperator exp .)
    OR              reduce using rule 124 (opSExp -> LT saveOperator exp .)
    ,               reduce using rule 124 (opSExp -> LT saveOperator exp .)
    PARFIN          reduce using rule 124 (opSExp -> LT saveOperator exp .)
    ]               reduce using rule 124 (opSExp -> LT saveOperator exp .)
    ;               reduce using rule 124 (opSExp -> LT saveOperator exp .)


state 289

    (122) opSExp -> GTOEQ saveOperator exp .

    AND             reduce using rule 122 (opSExp -> GTOEQ saveOperator exp .)
    OR              reduce using rule 122 (opSExp -> GTOEQ saveOperator exp .)
    ,               reduce using rule 122 (opSExp -> GTOEQ saveOperator exp .)
    PARFIN          reduce using rule 122 (opSExp -> GTOEQ saveOperator exp .)
    ]               reduce using rule 122 (opSExp -> GTOEQ saveOperator exp .)
    ;               reduce using rule 122 (opSExp -> GTOEQ saveOperator exp .)


state 290

    (119) opSExp -> EQ saveOperator exp .

    AND             reduce using rule 119 (opSExp -> EQ saveOperator exp .)
    OR              reduce using rule 119 (opSExp -> EQ saveOperator exp .)
    ,               reduce using rule 119 (opSExp -> EQ saveOperator exp .)
    PARFIN          reduce using rule 119 (opSExp -> EQ saveOperator exp .)
    ]               reduce using rule 119 (opSExp -> EQ saveOperator exp .)
    ;               reduce using rule 119 (opSExp -> EQ saveOperator exp .)


state 291

    (86) forCycle -> errorForCycle FOR PARINI assign ; expresion ; . assign PARFIN { body }
    (88) assign -> . ID saveVariable errorAssign assignOptions performAssign

    ID              shift and go to state 174

    assign                         shift and go to state 307

state 292

    (106) condition -> errorCondition IF PARINI expresion PARFIN { body . } optionalElse

    }               shift and go to state 308


state 293

    (66) opReturns -> errorOpReturns RETURNS type saveReturnType . { opVars body return

    {               shift and go to state 309


state 294

    (51) cyParam -> empty saveID . saveTypeParam
    (54) saveTypeParam -> .

    PARFIN          reduce using rule 54 (saveTypeParam -> .)

    saveTypeParam                  shift and go to state 310

state 295

    (50) cyParam -> errorCyParam saveID . saveTypeParam ; param
    (54) saveTypeParam -> .

    ;               reduce using rule 54 (saveTypeParam -> .)

    saveTypeParam                  shift and go to state 311

state 296

    (32) cyRead -> , fix ID performRead . cyRead
    (32) cyRead -> . , fix ID performRead cyRead
    (33) cyRead -> . empty
    (158) empty -> .

    ,               shift and go to state 181
    PARFIN          reduce using rule 158 (empty -> .)

    cyRead                         shift and go to state 312
    empty                          shift and go to state 183

state 297

    (146) opStruct -> errorOpStruct [ expresion ] . opMatrix
    (148) opMatrix -> . errorOpMatrix [ expresion ]
    (149) opMatrix -> . empty
    (150) errorOpMatrix -> .
    (158) empty -> .

    [               reduce using rule 150 (errorOpMatrix -> .)
    MULT            reduce using rule 158 (empty -> .)
    DIV             reduce using rule 158 (empty -> .)
    PLUS            reduce using rule 158 (empty -> .)
    MINUS           reduce using rule 158 (empty -> .)
    ,               reduce using rule 158 (empty -> .)
    PARFIN          reduce using rule 158 (empty -> .)
    EQ              reduce using rule 158 (empty -> .)
    DIF             reduce using rule 158 (empty -> .)
    LTOEQ           reduce using rule 158 (empty -> .)
    GTOEQ           reduce using rule 158 (empty -> .)
    GT              reduce using rule 158 (empty -> .)
    LT              reduce using rule 158 (empty -> .)
    AND             reduce using rule 158 (empty -> .)
    OR              reduce using rule 158 (empty -> .)
    ]               reduce using rule 158 (empty -> .)
    ;               reduce using rule 158 (empty -> .)

    empty                          shift and go to state 315
    errorOpMatrix                  shift and go to state 313
    opMatrix                       shift and go to state 314

state 298

    (128) cyExp -> PLUS saveOperator exp .

    ,               reduce using rule 128 (cyExp -> PLUS saveOperator exp .)
    PARFIN          reduce using rule 128 (cyExp -> PLUS saveOperator exp .)
    EQ              reduce using rule 128 (cyExp -> PLUS saveOperator exp .)
    DIF             reduce using rule 128 (cyExp -> PLUS saveOperator exp .)
    LTOEQ           reduce using rule 128 (cyExp -> PLUS saveOperator exp .)
    GTOEQ           reduce using rule 128 (cyExp -> PLUS saveOperator exp .)
    GT              reduce using rule 128 (cyExp -> PLUS saveOperator exp .)
    LT              reduce using rule 128 (cyExp -> PLUS saveOperator exp .)
    AND             reduce using rule 128 (cyExp -> PLUS saveOperator exp .)
    OR              reduce using rule 128 (cyExp -> PLUS saveOperator exp .)
    ]               reduce using rule 128 (cyExp -> PLUS saveOperator exp .)
    ;               reduce using rule 128 (cyExp -> PLUS saveOperator exp .)


state 299

    (129) cyExp -> MINUS saveOperator exp .

    ,               reduce using rule 129 (cyExp -> MINUS saveOperator exp .)
    PARFIN          reduce using rule 129 (cyExp -> MINUS saveOperator exp .)
    EQ              reduce using rule 129 (cyExp -> MINUS saveOperator exp .)
    DIF             reduce using rule 129 (cyExp -> MINUS saveOperator exp .)
    LTOEQ           reduce using rule 129 (cyExp -> MINUS saveOperator exp .)
    GTOEQ           reduce using rule 129 (cyExp -> MINUS saveOperator exp .)
    GT              reduce using rule 129 (cyExp -> MINUS saveOperator exp .)
    LT              reduce using rule 129 (cyExp -> MINUS saveOperator exp .)
    AND             reduce using rule 129 (cyExp -> MINUS saveOperator exp .)
    OR              reduce using rule 129 (cyExp -> MINUS saveOperator exp .)
    ]               reduce using rule 129 (cyExp -> MINUS saveOperator exp .)
    ;               reduce using rule 129 (cyExp -> MINUS saveOperator exp .)


state 300

    (29) cyPrint -> , fix exp performPrint . cyPrint
    (29) cyPrint -> . , fix exp performPrint cyPrint
    (30) cyPrint -> . empty
    (158) empty -> .

    ,               shift and go to state 193
    PARFIN          reduce using rule 158 (empty -> .)

    empty                          shift and go to state 194
    cyPrint                        shift and go to state 316

state 301

    (133) cyTerm -> MULT saveOperator errorFact term .

    PLUS            reduce using rule 133 (cyTerm -> MULT saveOperator errorFact term .)
    MINUS           reduce using rule 133 (cyTerm -> MULT saveOperator errorFact term .)
    ,               reduce using rule 133 (cyTerm -> MULT saveOperator errorFact term .)
    PARFIN          reduce using rule 133 (cyTerm -> MULT saveOperator errorFact term .)
    EQ              reduce using rule 133 (cyTerm -> MULT saveOperator errorFact term .)
    DIF             reduce using rule 133 (cyTerm -> MULT saveOperator errorFact term .)
    LTOEQ           reduce using rule 133 (cyTerm -> MULT saveOperator errorFact term .)
    GTOEQ           reduce using rule 133 (cyTerm -> MULT saveOperator errorFact term .)
    GT              reduce using rule 133 (cyTerm -> MULT saveOperator errorFact term .)
    LT              reduce using rule 133 (cyTerm -> MULT saveOperator errorFact term .)
    AND             reduce using rule 133 (cyTerm -> MULT saveOperator errorFact term .)
    OR              reduce using rule 133 (cyTerm -> MULT saveOperator errorFact term .)
    ]               reduce using rule 133 (cyTerm -> MULT saveOperator errorFact term .)
    ;               reduce using rule 133 (cyTerm -> MULT saveOperator errorFact term .)


state 302

    (84) whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body } .

    ID              reduce using rule 84 (whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body } .)
    PRINT           reduce using rule 84 (whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body } .)
    READ            reduce using rule 84 (whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body } .)
    IF              reduce using rule 84 (whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body } .)
    FOR             reduce using rule 84 (whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body } .)
    WHILE           reduce using rule 84 (whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body } .)
    }               reduce using rule 84 (whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body } .)
    RETURN          reduce using rule 84 (whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body } .)


state 303

    (42) initDict -> ASGN PARINI dictType : dictType . PARFIN errorInitDict

    PARFIN          shift and go to state 317


state 304

    (38) init -> ASGN . saveOperator errorInit initWith
    (165) saveOperator -> .

    ID              reduce using rule 165 (saveOperator -> .)
    CTES            reduce using rule 165 (saveOperator -> .)
    PARINI          reduce using rule 165 (saveOperator -> .)
    CTED            reduce using rule 165 (saveOperator -> .)
    CTEF            reduce using rule 165 (saveOperator -> .)
    TRUE            reduce using rule 165 (saveOperator -> .)
    FALSE           reduce using rule 165 (saveOperator -> .)

    saveOperator                   shift and go to state 201

state 305

    (92) assignOptions -> [ expresion ] assignMatrix init .

    ;               reduce using rule 92 (assignOptions -> [ expresion ] assignMatrix init .)
    PARFIN          reduce using rule 92 (assignOptions -> [ expresion ] assignMatrix init .)


state 306

    (93) assignMatrix -> [ expresion . ] errorAssignMatrix

    ]               shift and go to state 318


state 307

    (86) forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign . PARFIN { body }

    PARFIN          shift and go to state 319


state 308

    (106) condition -> errorCondition IF PARINI expresion PARFIN { body } . optionalElse
    (108) optionalElse -> . errorElse ELSE { body }
    (109) optionalElse -> . empty
    (110) errorElse -> .
    (158) empty -> .

    ELSE            reduce using rule 110 (errorElse -> .)
    ID              reduce using rule 158 (empty -> .)
    PRINT           reduce using rule 158 (empty -> .)
    READ            reduce using rule 158 (empty -> .)
    IF              reduce using rule 158 (empty -> .)
    FOR             reduce using rule 158 (empty -> .)
    WHILE           reduce using rule 158 (empty -> .)
    }               reduce using rule 158 (empty -> .)
    RETURN          reduce using rule 158 (empty -> .)

    errorElse                      shift and go to state 321
    optionalElse                   shift and go to state 320
    empty                          shift and go to state 322

state 309

    (66) opReturns -> errorOpReturns RETURNS type saveReturnType { . opVars body return
    (6) opVars -> . vars
    (7) opVars -> . empty
    (10) vars -> . errorVars VARS declare
    (158) empty -> .
    (12) errorVars -> .

    RETURN          reduce using rule 158 (empty -> .)
    ID              reduce using rule 158 (empty -> .)
    PRINT           reduce using rule 158 (empty -> .)
    READ            reduce using rule 158 (empty -> .)
    IF              reduce using rule 158 (empty -> .)
    FOR             reduce using rule 158 (empty -> .)
    WHILE           reduce using rule 158 (empty -> .)
    VARS            reduce using rule 12 (errorVars -> .)

    vars                           shift and go to state 8
    opVars                         shift and go to state 323
    errorVars                      shift and go to state 10
    empty                          shift and go to state 11

state 310

    (51) cyParam -> empty saveID saveTypeParam .

    PARFIN          reduce using rule 51 (cyParam -> empty saveID saveTypeParam .)


state 311

    (50) cyParam -> errorCyParam saveID saveTypeParam . ; param

    ;               shift and go to state 324


state 312

    (32) cyRead -> , fix ID performRead cyRead .

    PARFIN          reduce using rule 32 (cyRead -> , fix ID performRead cyRead .)


state 313

    (148) opMatrix -> errorOpMatrix . [ expresion ]

    [               shift and go to state 325


state 314

    (146) opStruct -> errorOpStruct [ expresion ] opMatrix .

    MULT            reduce using rule 146 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    DIV             reduce using rule 146 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    PLUS            reduce using rule 146 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    MINUS           reduce using rule 146 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    ,               reduce using rule 146 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    PARFIN          reduce using rule 146 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    EQ              reduce using rule 146 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    DIF             reduce using rule 146 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    LTOEQ           reduce using rule 146 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    GTOEQ           reduce using rule 146 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    GT              reduce using rule 146 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    LT              reduce using rule 146 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    AND             reduce using rule 146 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    OR              reduce using rule 146 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    ]               reduce using rule 146 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    ;               reduce using rule 146 (opStruct -> errorOpStruct [ expresion ] opMatrix .)


state 315

    (149) opMatrix -> empty .

    MULT            reduce using rule 149 (opMatrix -> empty .)
    DIV             reduce using rule 149 (opMatrix -> empty .)
    PLUS            reduce using rule 149 (opMatrix -> empty .)
    MINUS           reduce using rule 149 (opMatrix -> empty .)
    ,               reduce using rule 149 (opMatrix -> empty .)
    PARFIN          reduce using rule 149 (opMatrix -> empty .)
    EQ              reduce using rule 149 (opMatrix -> empty .)
    DIF             reduce using rule 149 (opMatrix -> empty .)
    LTOEQ           reduce using rule 149 (opMatrix -> empty .)
    GTOEQ           reduce using rule 149 (opMatrix -> empty .)
    GT              reduce using rule 149 (opMatrix -> empty .)
    LT              reduce using rule 149 (opMatrix -> empty .)
    AND             reduce using rule 149 (opMatrix -> empty .)
    OR              reduce using rule 149 (opMatrix -> empty .)
    ]               reduce using rule 149 (opMatrix -> empty .)
    ;               reduce using rule 149 (opMatrix -> empty .)


state 316

    (29) cyPrint -> , fix exp performPrint cyPrint .

    PARFIN          reduce using rule 29 (cyPrint -> , fix exp performPrint cyPrint .)


state 317

    (42) initDict -> ASGN PARINI dictType : dictType PARFIN . errorInitDict
    (43) errorInitDict -> .

    ;               reduce using rule 43 (errorInitDict -> .)
    PARFIN          reduce using rule 43 (errorInitDict -> .)

    errorInitDict                  shift and go to state 326

state 318

    (93) assignMatrix -> [ expresion ] . errorAssignMatrix
    (95) errorAssignMatrix -> .

    ASGN            reduce using rule 95 (errorAssignMatrix -> .)

    errorAssignMatrix              shift and go to state 327

state 319

    (86) forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN . { body }

    {               shift and go to state 328


state 320

    (106) condition -> errorCondition IF PARINI expresion PARFIN { body } optionalElse .

    ID              reduce using rule 106 (condition -> errorCondition IF PARINI expresion PARFIN { body } optionalElse .)
    PRINT           reduce using rule 106 (condition -> errorCondition IF PARINI expresion PARFIN { body } optionalElse .)
    READ            reduce using rule 106 (condition -> errorCondition IF PARINI expresion PARFIN { body } optionalElse .)
    IF              reduce using rule 106 (condition -> errorCondition IF PARINI expresion PARFIN { body } optionalElse .)
    FOR             reduce using rule 106 (condition -> errorCondition IF PARINI expresion PARFIN { body } optionalElse .)
    WHILE           reduce using rule 106 (condition -> errorCondition IF PARINI expresion PARFIN { body } optionalElse .)
    }               reduce using rule 106 (condition -> errorCondition IF PARINI expresion PARFIN { body } optionalElse .)
    RETURN          reduce using rule 106 (condition -> errorCondition IF PARINI expresion PARFIN { body } optionalElse .)


state 321

    (108) optionalElse -> errorElse . ELSE { body }

    ELSE            shift and go to state 329


state 322

    (109) optionalElse -> empty .

    ID              reduce using rule 109 (optionalElse -> empty .)
    PRINT           reduce using rule 109 (optionalElse -> empty .)
    READ            reduce using rule 109 (optionalElse -> empty .)
    IF              reduce using rule 109 (optionalElse -> empty .)
    FOR             reduce using rule 109 (optionalElse -> empty .)
    WHILE           reduce using rule 109 (optionalElse -> empty .)
    }               reduce using rule 109 (optionalElse -> empty .)
    RETURN          reduce using rule 109 (optionalElse -> empty .)


state 323

    (66) opReturns -> errorOpReturns RETURNS type saveReturnType { opVars . body return
    (78) body -> . errorBody cyInstruction
    (79) body -> . empty
    (80) errorBody -> .
    (158) empty -> .

    ID              reduce using rule 80 (errorBody -> .)
    PRINT           reduce using rule 80 (errorBody -> .)
    READ            reduce using rule 80 (errorBody -> .)
    IF              reduce using rule 80 (errorBody -> .)
    FOR             reduce using rule 80 (errorBody -> .)
    WHILE           reduce using rule 80 (errorBody -> .)
    RETURN          reduce using rule 158 (empty -> .)

    body                           shift and go to state 330
    errorBody                      shift and go to state 74
    empty                          shift and go to state 75

state 324

    (50) cyParam -> errorCyParam saveID saveTypeParam ; . param
    (48) param -> . saveType type errorParam ID cyTypeParam cyParam
    (3) saveType -> .

    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)

    param                          shift and go to state 331
    saveType                       shift and go to state 101

state 325

    (148) opMatrix -> errorOpMatrix [ . expresion ]
    (113) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (118) sExp -> . exp errorOpSExp opSExp performRelational
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES saveConstantString
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED saveConstantInt
    (155) cte -> . CTEF saveConstantFloat
    (156) cte -> . TRUE saveConstantBool
    (157) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    sExp                           shift and go to state 141
    expresion                      shift and go to state 332
    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 144
    fact                           shift and go to state 137

state 326

    (42) initDict -> ASGN PARINI dictType : dictType PARFIN errorInitDict .

    ;               reduce using rule 42 (initDict -> ASGN PARINI dictType : dictType PARFIN errorInitDict .)
    PARFIN          reduce using rule 42 (initDict -> ASGN PARINI dictType : dictType PARFIN errorInitDict .)


state 327

    (93) assignMatrix -> [ expresion ] errorAssignMatrix .

    ASGN            reduce using rule 93 (assignMatrix -> [ expresion ] errorAssignMatrix .)


state 328

    (86) forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { . body }
    (78) body -> . errorBody cyInstruction
    (79) body -> . empty
    (80) errorBody -> .
    (158) empty -> .

    ID              reduce using rule 80 (errorBody -> .)
    PRINT           reduce using rule 80 (errorBody -> .)
    READ            reduce using rule 80 (errorBody -> .)
    IF              reduce using rule 80 (errorBody -> .)
    FOR             reduce using rule 80 (errorBody -> .)
    WHILE           reduce using rule 80 (errorBody -> .)
    }               reduce using rule 158 (empty -> .)

    body                           shift and go to state 333
    errorBody                      shift and go to state 74
    empty                          shift and go to state 75

state 329

    (108) optionalElse -> errorElse ELSE . { body }

    {               shift and go to state 334


state 330

    (66) opReturns -> errorOpReturns RETURNS type saveReturnType { opVars body . return
    (59) return -> . errorReturn RETURN expresion ;
    (60) errorReturn -> .

    RETURN          reduce using rule 60 (errorReturn -> .)

    return                         shift and go to state 335
    errorReturn                    shift and go to state 336

state 331

    (50) cyParam -> errorCyParam saveID saveTypeParam ; param .

    PARFIN          reduce using rule 50 (cyParam -> errorCyParam saveID saveTypeParam ; param .)


state 332

    (148) opMatrix -> errorOpMatrix [ expresion . ]

    ]               shift and go to state 337


state 333

    (86) forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body . }

    }               shift and go to state 338


state 334

    (108) optionalElse -> errorElse ELSE { . body }
    (78) body -> . errorBody cyInstruction
    (79) body -> . empty
    (80) errorBody -> .
    (158) empty -> .

    ID              reduce using rule 80 (errorBody -> .)
    PRINT           reduce using rule 80 (errorBody -> .)
    READ            reduce using rule 80 (errorBody -> .)
    IF              reduce using rule 80 (errorBody -> .)
    FOR             reduce using rule 80 (errorBody -> .)
    WHILE           reduce using rule 80 (errorBody -> .)
    }               reduce using rule 158 (empty -> .)

    body                           shift and go to state 339
    empty                          shift and go to state 75
    errorBody                      shift and go to state 74

state 335

    (66) opReturns -> errorOpReturns RETURNS type saveReturnType { opVars body return .

    }               reduce using rule 66 (opReturns -> errorOpReturns RETURNS type saveReturnType { opVars body return .)


state 336

    (59) return -> errorReturn . RETURN expresion ;

    RETURN          shift and go to state 340


state 337

    (148) opMatrix -> errorOpMatrix [ expresion ] .

    MULT            reduce using rule 148 (opMatrix -> errorOpMatrix [ expresion ] .)
    DIV             reduce using rule 148 (opMatrix -> errorOpMatrix [ expresion ] .)
    PLUS            reduce using rule 148 (opMatrix -> errorOpMatrix [ expresion ] .)
    MINUS           reduce using rule 148 (opMatrix -> errorOpMatrix [ expresion ] .)
    ,               reduce using rule 148 (opMatrix -> errorOpMatrix [ expresion ] .)
    PARFIN          reduce using rule 148 (opMatrix -> errorOpMatrix [ expresion ] .)
    EQ              reduce using rule 148 (opMatrix -> errorOpMatrix [ expresion ] .)
    DIF             reduce using rule 148 (opMatrix -> errorOpMatrix [ expresion ] .)
    LTOEQ           reduce using rule 148 (opMatrix -> errorOpMatrix [ expresion ] .)
    GTOEQ           reduce using rule 148 (opMatrix -> errorOpMatrix [ expresion ] .)
    GT              reduce using rule 148 (opMatrix -> errorOpMatrix [ expresion ] .)
    LT              reduce using rule 148 (opMatrix -> errorOpMatrix [ expresion ] .)
    AND             reduce using rule 148 (opMatrix -> errorOpMatrix [ expresion ] .)
    OR              reduce using rule 148 (opMatrix -> errorOpMatrix [ expresion ] .)
    ]               reduce using rule 148 (opMatrix -> errorOpMatrix [ expresion ] .)
    ;               reduce using rule 148 (opMatrix -> errorOpMatrix [ expresion ] .)


state 338

    (86) forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body } .

    ID              reduce using rule 86 (forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body } .)
    PRINT           reduce using rule 86 (forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body } .)
    READ            reduce using rule 86 (forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body } .)
    IF              reduce using rule 86 (forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body } .)
    FOR             reduce using rule 86 (forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body } .)
    WHILE           reduce using rule 86 (forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body } .)
    }               reduce using rule 86 (forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body } .)
    RETURN          reduce using rule 86 (forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body } .)


state 339

    (108) optionalElse -> errorElse ELSE { body . }

    }               shift and go to state 341


state 340

    (59) return -> errorReturn RETURN . expresion ;
    (113) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (118) sExp -> . exp errorOpSExp opSExp performRelational
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES saveConstantString
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED saveConstantInt
    (155) cte -> . CTEF saveConstantFloat
    (156) cte -> . TRUE saveConstantBool
    (157) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    sExp                           shift and go to state 141
    expresion                      shift and go to state 342
    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 144
    fact                           shift and go to state 137

state 341

    (108) optionalElse -> errorElse ELSE { body } .

    ID              reduce using rule 108 (optionalElse -> errorElse ELSE { body } .)
    PRINT           reduce using rule 108 (optionalElse -> errorElse ELSE { body } .)
    READ            reduce using rule 108 (optionalElse -> errorElse ELSE { body } .)
    IF              reduce using rule 108 (optionalElse -> errorElse ELSE { body } .)
    FOR             reduce using rule 108 (optionalElse -> errorElse ELSE { body } .)
    WHILE           reduce using rule 108 (optionalElse -> errorElse ELSE { body } .)
    }               reduce using rule 108 (optionalElse -> errorElse ELSE { body } .)
    RETURN          reduce using rule 108 (optionalElse -> errorElse ELSE { body } .)


state 342

    (59) return -> errorReturn RETURN expresion . ;

    ;               shift and go to state 343


state 343

    (59) return -> errorReturn RETURN expresion ; .

    }               reduce using rule 59 (return -> errorReturn RETURN expresion ; .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PARINI in state 165 resolved as shift
WARNING: reduce/reduce conflict in state 277 resolved using rule (initWith -> funcCall)
WARNING: rejected rule (fact -> funcCall) in state 277
