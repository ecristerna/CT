Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables
Rule 2     changeCurrentScope -> <empty>
Rule 3     saveType -> <empty>
Rule 4     saveProc -> <empty>
Rule 5     errorProgram -> <empty>
Rule 6     opVars -> vars
Rule 7     opVars -> empty
Rule 8     opFunctions -> function opFunctions
Rule 9     opFunctions -> empty
Rule 10    vars -> errorVars VARS declare
Rule 11    saveID -> <empty>
Rule 12    errorVars -> <empty>
Rule 13    type -> errorType INT
Rule 14    type -> FLOAT
Rule 15    type -> STRING
Rule 16    type -> BOOL
Rule 17    errorType -> <empty>
Rule 18    main -> errorMain MAIN saveMain { opVars body } clearVarsTable
Rule 19    saveMain -> <empty>
Rule 20    errorMain -> <empty>
Rule 21    instr -> basicStatements prueba ;
Rule 22    instr -> condition
Rule 23    instr -> cycle
Rule 24    basicStatements -> assign
Rule 25    basicStatements -> funcCall
Rule 26    declare -> basicDeclare
Rule 27    declare -> structDeclare
Rule 28    declare -> dictDeclare
Rule 29    init -> ASGN saveOperator initWith errorInit
Rule 30    prueba -> <empty>
Rule 31    errorInit -> <empty>
Rule 32    initWith -> expresion performAssign
Rule 33    initWith -> funcCall
Rule 34    performAssign -> <empty>
Rule 35    initDict -> ASGN ( dictType : dictType ) errorInitDict
Rule 36    errorInitDict -> <empty>
Rule 37    dictType -> errorDictType CTES
Rule 38    dictType -> cte
Rule 39    dictType -> ID
Rule 40    errorDictType -> <empty>
Rule 41    param -> saveType type errorParam ID cyTypeParam cyParam
Rule 42    errorParam -> <empty>
Rule 43    cyParam -> errorCyParam saveID saveTypeParam ; param
Rule 44    cyParam -> empty saveID saveTypeParam
Rule 45    cyTypeParam -> , saveID saveTypeParam ID cyTypeParam
Rule 46    cyTypeParam -> empty
Rule 47    saveTypeParam -> <empty>
Rule 48    errorCyParam -> <empty>
Rule 49    function -> errorFunction FUNC saveType ID saveProc flagParameters ( opParameters ) flagParameters opReturns } clearVarsTable
Rule 50    errorFunction -> <empty>
Rule 51    clearVarsTable -> <empty>
Rule 52    return -> errorReturn RETURN expresion ;
Rule 53    errorReturn -> <empty>
Rule 54    opParameters -> param saveParamToDirProc errorOpParameters
Rule 55    opParameters -> empty
Rule 56    flagParameters -> <empty>
Rule 57    saveParamToDirProc -> <empty>
Rule 58    errorOpParameters -> <empty>
Rule 59    opReturns -> errorOpReturns RETURNS type saveReturnType { opVars body return
Rule 60    opReturns -> { opVars body
Rule 61    saveReturnType -> <empty>
Rule 62    errorOpReturns -> <empty>
Rule 63    basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
Rule 64    errorBasicDeclare -> <empty>
Rule 65    structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare
Rule 66    errorStructDeclare -> <empty>
Rule 67    dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare
Rule 68    errorDictDeclare -> <empty>
Rule 69    cyDeclare -> declare
Rule 70    cyDeclare -> empty
Rule 71    body -> errorBody cyInstruction
Rule 72    body -> empty
Rule 73    errorBody -> <empty>
Rule 74    cyInstruction -> instr body
Rule 75    cycle -> forCycle
Rule 76    cycle -> whileCycle
Rule 77    whileCycle -> errorWhileCycle WHILE ( expresion ) { body }
Rule 78    errorWhileCycle -> <empty>
Rule 79    forCycle -> errorForCycle FOR ( assign ; expresion ; assign ) { body }
Rule 80    errorForCycle -> <empty>
Rule 81    assign -> ID saveVariable errorAssign assignOptions
Rule 82    errorAssign -> <empty>
Rule 83    assignOptions -> init
Rule 84    assignOptions -> initDict
Rule 85    assignOptions -> [ expresion ] assignMatrix init
Rule 86    assignMatrix -> [ expresion ] errorAssignMatrix
Rule 87    assignMatrix -> empty
Rule 88    errorAssignMatrix -> <empty>
Rule 89    funcCall -> ID ( opParamCall )
Rule 90    opParamCall -> expresion cyParamCall
Rule 91    opParamCall -> empty
Rule 92    cyParamCall -> , expresion cyParamCall
Rule 93    cyParamCall -> empty
Rule 94    struct -> structType [ CTED ] optionalMatrix
Rule 95    structType -> type
Rule 96    structType -> DICT dict
Rule 97    optionalMatrix -> [ CTED ]
Rule 98    optionalMatrix -> empty
Rule 99    condition -> errorCondition IF ( expresion ) { body } optionalElse
Rule 100   errorCondition -> <empty>
Rule 101   optionalElse -> errorElse ELSE { body }
Rule 102   optionalElse -> empty
Rule 103   errorElse -> <empty>
Rule 104   dict -> errorDict ( type : type )
Rule 105   errorDict -> <empty>
Rule 106   expresion -> sExp cyExpresion errorExpresion
Rule 107   errorExpresion -> <empty>
Rule 108   cyExpresion -> AND expresion
Rule 109   cyExpresion -> OR expresion
Rule 110   cyExpresion -> empty
Rule 111   sExp -> exp errorOpSExp opSExp
Rule 112   opSExp -> EQ exp
Rule 113   opSExp -> DIF exp
Rule 114   opSExp -> LTOEQ exp
Rule 115   opSExp -> GTOEQ exp
Rule 116   opSExp -> GT exp
Rule 117   opSExp -> LT exp
Rule 118   opSExp -> empty
Rule 119   errorOpSExp -> <empty>
Rule 120   exp -> term performAddSub errorCyExp cyExp
Rule 121   performAddSub -> <empty>
Rule 122   cyExp -> PLUS saveOperator exp
Rule 123   cyExp -> MINUS saveOperator exp
Rule 124   cyExp -> empty
Rule 125   saveOperator -> <empty>
Rule 126   errorCyExp -> <empty>
Rule 127   term -> fact cyTerm
Rule 128   cyTerm -> MULT errorFact term
Rule 129   cyTerm -> DIV term
Rule 130   cyTerm -> empty
Rule 131   fact -> CTES
Rule 132   fact -> cte
Rule 133   fact -> funcCall
Rule 134   fact -> ( expresion )
Rule 135   fact -> ID saveVariable opAccess errorOpAccess
Rule 136   saveVariable -> <empty>
Rule 137   errorFact -> <empty>
Rule 138   opAccess -> opStruct
Rule 139   opAccess -> opDictionary
Rule 140   opAccess -> empty
Rule 141   errorOpAccess -> <empty>
Rule 142   opStruct -> errorOpStruct [ expresion ] opMatrix
Rule 143   errorOpStruct -> <empty>
Rule 144   opMatrix -> errorOpMatrix [ expresion ]
Rule 145   opMatrix -> empty
Rule 146   errorOpMatrix -> <empty>
Rule 147   opDictionary -> . dictIndex
Rule 148   dictIndex -> FIRST
Rule 149   dictIndex -> LAST
Rule 150   cte -> CTED
Rule 151   cte -> CTEF
Rule 152   cte -> TRUE
Rule 153   cte -> FALSE
Rule 154   empty -> <empty>
Rule 155   printTables -> <empty>

Terminals, with rules where they appear

(                    : 35 49 77 79 89 99 104 134
)                    : 35 49 77 79 89 99 104 134
,                    : 45 92
.                    : 147
:                    : 35 104
;                    : 21 43 52 63 65 67 79 79
AND                  : 108
ASGN                 : 29 35
BOOL                 : 16
CTED                 : 94 97 150
CTEF                 : 151
CTES                 : 37 131
DICT                 : 67 96
DIF                  : 113
DIV                  : 129
ELSE                 : 101
EQ                   : 112
FALSE                : 153
FIRST                : 148
FLOAT                : 14
FOR                  : 79
FUNC                 : 49
GT                   : 116
GTOEQ                : 115
ID                   : 1 39 41 45 49 63 65 67 81 89 135
IF                   : 99
INT                  : 13
LAST                 : 149
LT                   : 117
LTOEQ                : 114
MAIN                 : 18
MINUS                : 123
MULT                 : 128
OR                   : 109
PLUS                 : 122
PROGRAM              : 1
RETURN               : 52
RETURNS              : 59
STRING               : 15
STRUCT               : 65
TRUE                 : 152
VARS                 : 10
WHILE                : 77
[                    : 85 86 94 97 142 144
]                    : 85 86 94 97 142 144
error                : 
{                    : 1 18 59 60 77 79 99 101
}                    : 1 18 49 77 79 99 101

Nonterminals, with rules where they appear

assign               : 24 79 79
assignMatrix         : 85
assignOptions        : 81
basicDeclare         : 26
basicStatements      : 21
body                 : 18 59 60 74 77 79 99 101
changeCurrentScope   : 1
clearVarsTable       : 18 49
condition            : 22
cte                  : 38 132
cyDeclare            : 63 65 67
cyExp                : 120
cyExpresion          : 106
cyInstruction        : 71
cyParam              : 41
cyParamCall          : 90 92
cyTerm               : 127
cyTypeParam          : 41 45 63
cycle                : 23
declare              : 10 69
dict                 : 67 96
dictDeclare          : 28
dictIndex            : 147
dictType             : 35 35
empty                : 7 9 44 46 55 70 72 87 91 93 98 102 110 118 124 130 140 145
errorAssign          : 81
errorAssignMatrix    : 86
errorBasicDeclare    : 63
errorBody            : 71
errorCondition       : 99
errorCyExp           : 120
errorCyParam         : 43
errorDict            : 104
errorDictDeclare     : 67
errorDictType        : 37
errorElse            : 101
errorExpresion       : 106
errorFact            : 128
errorForCycle        : 79
errorFunction        : 49
errorInit            : 29
errorInitDict        : 35
errorMain            : 18
errorOpAccess        : 135
errorOpMatrix        : 144
errorOpParameters    : 54
errorOpReturns       : 59
errorOpSExp          : 111
errorOpStruct        : 142
errorParam           : 41
errorProgram         : 1
errorReturn          : 52
errorStructDeclare   : 65
errorType            : 13
errorVars            : 10
errorWhileCycle      : 77
exp                  : 111 112 113 114 115 116 117 122 123
expresion            : 32 52 77 79 85 86 90 92 99 108 109 134 142 144
fact                 : 127
flagParameters       : 49 49
forCycle             : 75
funcCall             : 25 33 133
function             : 8
init                 : 83 85
initDict             : 84
initWith             : 29
instr                : 74
main                 : 1
opAccess             : 135
opDictionary         : 139
opFunctions          : 1 8
opMatrix             : 142
opParamCall          : 89
opParameters         : 49
opReturns            : 49
opSExp               : 111
opStruct             : 138
opVars               : 1 18 59 60
optionalElse         : 99
optionalMatrix       : 94
param                : 43 54
performAddSub        : 120
performAssign        : 32
printTables          : 1
program              : 0
prueba               : 21
return               : 59
sExp                 : 106
saveID               : 43 44 45 63
saveMain             : 18
saveOperator         : 29 122 123
saveParamToDirProc   : 54
saveProc             : 1 49
saveReturnType       : 59
saveType             : 1 41 49 63
saveTypeParam        : 43 44 45
saveVariable         : 81 135
struct               : 65
structDeclare        : 27
structType           : 94
term                 : 120 128 129
type                 : 41 59 63 95 104 104
vars                 : 6
whileCycle           : 76

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables
    (5) errorProgram -> .

    PROGRAM         reduce using rule 5 (errorProgram -> .)

    errorProgram                   shift and go to state 2
    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> errorProgram . PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables

    PROGRAM         shift and go to state 3


state 3

    (1) program -> errorProgram PROGRAM . saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables
    (3) saveType -> .

    ID              reduce using rule 3 (saveType -> .)

    saveType                       shift and go to state 4

state 4

    (1) program -> errorProgram PROGRAM saveType . ID saveProc { opVars changeCurrentScope opFunctions main } printTables

    ID              shift and go to state 5


state 5

    (1) program -> errorProgram PROGRAM saveType ID . saveProc { opVars changeCurrentScope opFunctions main } printTables
    (4) saveProc -> .

    {               reduce using rule 4 (saveProc -> .)

    saveProc                       shift and go to state 6

state 6

    (1) program -> errorProgram PROGRAM saveType ID saveProc . { opVars changeCurrentScope opFunctions main } printTables

    {               shift and go to state 7


state 7

    (1) program -> errorProgram PROGRAM saveType ID saveProc { . opVars changeCurrentScope opFunctions main } printTables
    (6) opVars -> . vars
    (7) opVars -> . empty
    (10) vars -> . errorVars VARS declare
    (154) empty -> .
    (12) errorVars -> .

    MAIN            reduce using rule 154 (empty -> .)
    FUNC            reduce using rule 154 (empty -> .)
    VARS            reduce using rule 12 (errorVars -> .)

    vars                           shift and go to state 8
    opVars                         shift and go to state 9
    errorVars                      shift and go to state 10
    empty                          shift and go to state 11

state 8

    (6) opVars -> vars .

    ID              reduce using rule 6 (opVars -> vars .)
    IF              reduce using rule 6 (opVars -> vars .)
    FOR             reduce using rule 6 (opVars -> vars .)
    WHILE           reduce using rule 6 (opVars -> vars .)
    }               reduce using rule 6 (opVars -> vars .)
    MAIN            reduce using rule 6 (opVars -> vars .)
    FUNC            reduce using rule 6 (opVars -> vars .)
    RETURN          reduce using rule 6 (opVars -> vars .)


state 9

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars . changeCurrentScope opFunctions main } printTables
    (2) changeCurrentScope -> .

    MAIN            reduce using rule 2 (changeCurrentScope -> .)
    FUNC            reduce using rule 2 (changeCurrentScope -> .)

    changeCurrentScope             shift and go to state 12

state 10

    (10) vars -> errorVars . VARS declare

    VARS            shift and go to state 13


state 11

    (7) opVars -> empty .

    ID              reduce using rule 7 (opVars -> empty .)
    IF              reduce using rule 7 (opVars -> empty .)
    FOR             reduce using rule 7 (opVars -> empty .)
    WHILE           reduce using rule 7 (opVars -> empty .)
    }               reduce using rule 7 (opVars -> empty .)
    MAIN            reduce using rule 7 (opVars -> empty .)
    FUNC            reduce using rule 7 (opVars -> empty .)
    RETURN          reduce using rule 7 (opVars -> empty .)


state 12

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope . opFunctions main } printTables
    (8) opFunctions -> . function opFunctions
    (9) opFunctions -> . empty
    (49) function -> . errorFunction FUNC saveType ID saveProc flagParameters ( opParameters ) flagParameters opReturns } clearVarsTable
    (154) empty -> .
    (50) errorFunction -> .

    MAIN            reduce using rule 154 (empty -> .)
    FUNC            reduce using rule 50 (errorFunction -> .)

    function                       shift and go to state 16
    errorFunction                  shift and go to state 17
    empty                          shift and go to state 15
    opFunctions                    shift and go to state 14

state 13

    (10) vars -> errorVars VARS . declare
    (26) declare -> . basicDeclare
    (27) declare -> . structDeclare
    (28) declare -> . dictDeclare
    (63) basicDeclare -> . saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (65) structDeclare -> . errorStructDeclare STRUCT ID struct ; cyDeclare
    (67) dictDeclare -> . errorDictDeclare DICT ID dict ; cyDeclare
    (3) saveType -> .
    (66) errorStructDeclare -> .
    (68) errorDictDeclare -> .

    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)
    STRUCT          reduce using rule 66 (errorStructDeclare -> .)
    DICT            reduce using rule 68 (errorDictDeclare -> .)

    dictDeclare                    shift and go to state 18
    saveType                       shift and go to state 19
    errorDictDeclare               shift and go to state 20
    structDeclare                  shift and go to state 21
    errorStructDeclare             shift and go to state 22
    basicDeclare                   shift and go to state 23
    declare                        shift and go to state 24

state 14

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions . main } printTables
    (18) main -> . errorMain MAIN saveMain { opVars body } clearVarsTable
    (20) errorMain -> .

    MAIN            reduce using rule 20 (errorMain -> .)

    main                           shift and go to state 25
    errorMain                      shift and go to state 26

state 15

    (9) opFunctions -> empty .

    MAIN            reduce using rule 9 (opFunctions -> empty .)


state 16

    (8) opFunctions -> function . opFunctions
    (8) opFunctions -> . function opFunctions
    (9) opFunctions -> . empty
    (49) function -> . errorFunction FUNC saveType ID saveProc flagParameters ( opParameters ) flagParameters opReturns } clearVarsTable
    (154) empty -> .
    (50) errorFunction -> .

    MAIN            reduce using rule 154 (empty -> .)
    FUNC            reduce using rule 50 (errorFunction -> .)

    function                       shift and go to state 16
    errorFunction                  shift and go to state 17
    empty                          shift and go to state 15
    opFunctions                    shift and go to state 27

state 17

    (49) function -> errorFunction . FUNC saveType ID saveProc flagParameters ( opParameters ) flagParameters opReturns } clearVarsTable

    FUNC            shift and go to state 28


state 18

    (28) declare -> dictDeclare .

    MAIN            reduce using rule 28 (declare -> dictDeclare .)
    FUNC            reduce using rule 28 (declare -> dictDeclare .)
    }               reduce using rule 28 (declare -> dictDeclare .)
    ID              reduce using rule 28 (declare -> dictDeclare .)
    IF              reduce using rule 28 (declare -> dictDeclare .)
    FOR             reduce using rule 28 (declare -> dictDeclare .)
    WHILE           reduce using rule 28 (declare -> dictDeclare .)
    RETURN          reduce using rule 28 (declare -> dictDeclare .)


state 19

    (63) basicDeclare -> saveType . type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    errorType                      shift and go to state 31
    type                           shift and go to state 33

state 20

    (67) dictDeclare -> errorDictDeclare . DICT ID dict ; cyDeclare

    DICT            shift and go to state 34


state 21

    (27) declare -> structDeclare .

    MAIN            reduce using rule 27 (declare -> structDeclare .)
    FUNC            reduce using rule 27 (declare -> structDeclare .)
    }               reduce using rule 27 (declare -> structDeclare .)
    ID              reduce using rule 27 (declare -> structDeclare .)
    IF              reduce using rule 27 (declare -> structDeclare .)
    FOR             reduce using rule 27 (declare -> structDeclare .)
    WHILE           reduce using rule 27 (declare -> structDeclare .)
    RETURN          reduce using rule 27 (declare -> structDeclare .)


state 22

    (65) structDeclare -> errorStructDeclare . STRUCT ID struct ; cyDeclare

    STRUCT          shift and go to state 35


state 23

    (26) declare -> basicDeclare .

    MAIN            reduce using rule 26 (declare -> basicDeclare .)
    FUNC            reduce using rule 26 (declare -> basicDeclare .)
    }               reduce using rule 26 (declare -> basicDeclare .)
    ID              reduce using rule 26 (declare -> basicDeclare .)
    IF              reduce using rule 26 (declare -> basicDeclare .)
    FOR             reduce using rule 26 (declare -> basicDeclare .)
    WHILE           reduce using rule 26 (declare -> basicDeclare .)
    RETURN          reduce using rule 26 (declare -> basicDeclare .)


state 24

    (10) vars -> errorVars VARS declare .

    ID              reduce using rule 10 (vars -> errorVars VARS declare .)
    IF              reduce using rule 10 (vars -> errorVars VARS declare .)
    FOR             reduce using rule 10 (vars -> errorVars VARS declare .)
    WHILE           reduce using rule 10 (vars -> errorVars VARS declare .)
    }               reduce using rule 10 (vars -> errorVars VARS declare .)
    RETURN          reduce using rule 10 (vars -> errorVars VARS declare .)
    MAIN            reduce using rule 10 (vars -> errorVars VARS declare .)
    FUNC            reduce using rule 10 (vars -> errorVars VARS declare .)


state 25

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main . } printTables

    }               shift and go to state 36


state 26

    (18) main -> errorMain . MAIN saveMain { opVars body } clearVarsTable

    MAIN            shift and go to state 37


state 27

    (8) opFunctions -> function opFunctions .

    MAIN            reduce using rule 8 (opFunctions -> function opFunctions .)


state 28

    (49) function -> errorFunction FUNC . saveType ID saveProc flagParameters ( opParameters ) flagParameters opReturns } clearVarsTable
    (3) saveType -> .

    ID              reduce using rule 3 (saveType -> .)

    saveType                       shift and go to state 38

state 29

    (14) type -> FLOAT .

    ID              reduce using rule 14 (type -> FLOAT .)
    )               reduce using rule 14 (type -> FLOAT .)
    [               reduce using rule 14 (type -> FLOAT .)
    :               reduce using rule 14 (type -> FLOAT .)
    {               reduce using rule 14 (type -> FLOAT .)


state 30

    (15) type -> STRING .

    ID              reduce using rule 15 (type -> STRING .)
    )               reduce using rule 15 (type -> STRING .)
    [               reduce using rule 15 (type -> STRING .)
    :               reduce using rule 15 (type -> STRING .)
    {               reduce using rule 15 (type -> STRING .)


state 31

    (13) type -> errorType . INT

    INT             shift and go to state 39


state 32

    (16) type -> BOOL .

    ID              reduce using rule 16 (type -> BOOL .)
    )               reduce using rule 16 (type -> BOOL .)
    [               reduce using rule 16 (type -> BOOL .)
    :               reduce using rule 16 (type -> BOOL .)
    {               reduce using rule 16 (type -> BOOL .)


state 33

    (63) basicDeclare -> saveType type . errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (64) errorBasicDeclare -> .

    ID              reduce using rule 64 (errorBasicDeclare -> .)

    errorBasicDeclare              shift and go to state 40

state 34

    (67) dictDeclare -> errorDictDeclare DICT . ID dict ; cyDeclare

    ID              shift and go to state 41


state 35

    (65) structDeclare -> errorStructDeclare STRUCT . ID struct ; cyDeclare

    ID              shift and go to state 42


state 36

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } . printTables
    (155) printTables -> .

    $end            reduce using rule 155 (printTables -> .)

    printTables                    shift and go to state 43

state 37

    (18) main -> errorMain MAIN . saveMain { opVars body } clearVarsTable
    (19) saveMain -> .

    {               reduce using rule 19 (saveMain -> .)

    saveMain                       shift and go to state 44

state 38

    (49) function -> errorFunction FUNC saveType . ID saveProc flagParameters ( opParameters ) flagParameters opReturns } clearVarsTable

    ID              shift and go to state 45


state 39

    (13) type -> errorType INT .

    ID              reduce using rule 13 (type -> errorType INT .)
    )               reduce using rule 13 (type -> errorType INT .)
    [               reduce using rule 13 (type -> errorType INT .)
    :               reduce using rule 13 (type -> errorType INT .)
    {               reduce using rule 13 (type -> errorType INT .)


state 40

    (63) basicDeclare -> saveType type errorBasicDeclare . ID cyTypeParam saveID ; cyDeclare

    ID              shift and go to state 46


state 41

    (67) dictDeclare -> errorDictDeclare DICT ID . dict ; cyDeclare
    (104) dict -> . errorDict ( type : type )
    (105) errorDict -> .

    (               reduce using rule 105 (errorDict -> .)

    dict                           shift and go to state 48
    errorDict                      shift and go to state 47

state 42

    (65) structDeclare -> errorStructDeclare STRUCT ID . struct ; cyDeclare
    (94) struct -> . structType [ CTED ] optionalMatrix
    (95) structType -> . type
    (96) structType -> . DICT dict
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    DICT            shift and go to state 51
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    structType                     shift and go to state 49
    struct                         shift and go to state 50
    errorType                      shift and go to state 31
    type                           shift and go to state 52

state 43

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables .

    $end            reduce using rule 1 (program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables .)


state 44

    (18) main -> errorMain MAIN saveMain . { opVars body } clearVarsTable

    {               shift and go to state 53


state 45

    (49) function -> errorFunction FUNC saveType ID . saveProc flagParameters ( opParameters ) flagParameters opReturns } clearVarsTable
    (4) saveProc -> .

    (               reduce using rule 4 (saveProc -> .)

    saveProc                       shift and go to state 54

state 46

    (63) basicDeclare -> saveType type errorBasicDeclare ID . cyTypeParam saveID ; cyDeclare
    (45) cyTypeParam -> . , saveID saveTypeParam ID cyTypeParam
    (46) cyTypeParam -> . empty
    (154) empty -> .

    ,               shift and go to state 55
    ;               reduce using rule 154 (empty -> .)

    empty                          shift and go to state 56
    cyTypeParam                    shift and go to state 57

state 47

    (104) dict -> errorDict . ( type : type )

    (               shift and go to state 58


state 48

    (67) dictDeclare -> errorDictDeclare DICT ID dict . ; cyDeclare

    ;               shift and go to state 59


state 49

    (94) struct -> structType . [ CTED ] optionalMatrix

    [               shift and go to state 60


state 50

    (65) structDeclare -> errorStructDeclare STRUCT ID struct . ; cyDeclare

    ;               shift and go to state 61


state 51

    (96) structType -> DICT . dict
    (104) dict -> . errorDict ( type : type )
    (105) errorDict -> .

    (               reduce using rule 105 (errorDict -> .)

    dict                           shift and go to state 62
    errorDict                      shift and go to state 47

state 52

    (95) structType -> type .

    [               reduce using rule 95 (structType -> type .)


state 53

    (18) main -> errorMain MAIN saveMain { . opVars body } clearVarsTable
    (6) opVars -> . vars
    (7) opVars -> . empty
    (10) vars -> . errorVars VARS declare
    (154) empty -> .
    (12) errorVars -> .

    }               reduce using rule 154 (empty -> .)
    ID              reduce using rule 154 (empty -> .)
    IF              reduce using rule 154 (empty -> .)
    FOR             reduce using rule 154 (empty -> .)
    WHILE           reduce using rule 154 (empty -> .)
    VARS            reduce using rule 12 (errorVars -> .)

    vars                           shift and go to state 8
    opVars                         shift and go to state 63
    errorVars                      shift and go to state 10
    empty                          shift and go to state 11

state 54

    (49) function -> errorFunction FUNC saveType ID saveProc . flagParameters ( opParameters ) flagParameters opReturns } clearVarsTable
    (56) flagParameters -> .

    (               reduce using rule 56 (flagParameters -> .)

    flagParameters                 shift and go to state 64

state 55

    (45) cyTypeParam -> , . saveID saveTypeParam ID cyTypeParam
    (11) saveID -> .

    ID              reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 65

state 56

    (46) cyTypeParam -> empty .

    ;               reduce using rule 46 (cyTypeParam -> empty .)
    )               reduce using rule 46 (cyTypeParam -> empty .)


state 57

    (63) basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam . saveID ; cyDeclare
    (11) saveID -> .

    ;               reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 66

state 58

    (104) dict -> errorDict ( . type : type )
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    errorType                      shift and go to state 31
    type                           shift and go to state 67

state 59

    (67) dictDeclare -> errorDictDeclare DICT ID dict ; . cyDeclare
    (69) cyDeclare -> . declare
    (70) cyDeclare -> . empty
    (26) declare -> . basicDeclare
    (27) declare -> . structDeclare
    (28) declare -> . dictDeclare
    (154) empty -> .
    (63) basicDeclare -> . saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (65) structDeclare -> . errorStructDeclare STRUCT ID struct ; cyDeclare
    (67) dictDeclare -> . errorDictDeclare DICT ID dict ; cyDeclare
    (3) saveType -> .
    (66) errorStructDeclare -> .
    (68) errorDictDeclare -> .

    MAIN            reduce using rule 154 (empty -> .)
    FUNC            reduce using rule 154 (empty -> .)
    }               reduce using rule 154 (empty -> .)
    ID              reduce using rule 154 (empty -> .)
    IF              reduce using rule 154 (empty -> .)
    FOR             reduce using rule 154 (empty -> .)
    WHILE           reduce using rule 154 (empty -> .)
    RETURN          reduce using rule 154 (empty -> .)
    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)
    STRUCT          reduce using rule 66 (errorStructDeclare -> .)
    DICT            reduce using rule 68 (errorDictDeclare -> .)

    dictDeclare                    shift and go to state 18
    cyDeclare                      shift and go to state 68
    saveType                       shift and go to state 19
    structDeclare                  shift and go to state 21
    errorDictDeclare               shift and go to state 20
    errorStructDeclare             shift and go to state 22
    basicDeclare                   shift and go to state 23
    declare                        shift and go to state 69
    empty                          shift and go to state 70

state 60

    (94) struct -> structType [ . CTED ] optionalMatrix

    CTED            shift and go to state 71


state 61

    (65) structDeclare -> errorStructDeclare STRUCT ID struct ; . cyDeclare
    (69) cyDeclare -> . declare
    (70) cyDeclare -> . empty
    (26) declare -> . basicDeclare
    (27) declare -> . structDeclare
    (28) declare -> . dictDeclare
    (154) empty -> .
    (63) basicDeclare -> . saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (65) structDeclare -> . errorStructDeclare STRUCT ID struct ; cyDeclare
    (67) dictDeclare -> . errorDictDeclare DICT ID dict ; cyDeclare
    (3) saveType -> .
    (66) errorStructDeclare -> .
    (68) errorDictDeclare -> .

    MAIN            reduce using rule 154 (empty -> .)
    FUNC            reduce using rule 154 (empty -> .)
    }               reduce using rule 154 (empty -> .)
    ID              reduce using rule 154 (empty -> .)
    IF              reduce using rule 154 (empty -> .)
    FOR             reduce using rule 154 (empty -> .)
    WHILE           reduce using rule 154 (empty -> .)
    RETURN          reduce using rule 154 (empty -> .)
    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)
    STRUCT          reduce using rule 66 (errorStructDeclare -> .)
    DICT            reduce using rule 68 (errorDictDeclare -> .)

    dictDeclare                    shift and go to state 18
    cyDeclare                      shift and go to state 72
    saveType                       shift and go to state 19
    errorDictDeclare               shift and go to state 20
    structDeclare                  shift and go to state 21
    basicDeclare                   shift and go to state 23
    declare                        shift and go to state 69
    empty                          shift and go to state 70
    errorStructDeclare             shift and go to state 22

state 62

    (96) structType -> DICT dict .

    [               reduce using rule 96 (structType -> DICT dict .)


state 63

    (18) main -> errorMain MAIN saveMain { opVars . body } clearVarsTable
    (71) body -> . errorBody cyInstruction
    (72) body -> . empty
    (73) errorBody -> .
    (154) empty -> .

    ID              reduce using rule 73 (errorBody -> .)
    IF              reduce using rule 73 (errorBody -> .)
    FOR             reduce using rule 73 (errorBody -> .)
    WHILE           reduce using rule 73 (errorBody -> .)
    }               reduce using rule 154 (empty -> .)

    body                           shift and go to state 73
    errorBody                      shift and go to state 74
    empty                          shift and go to state 75

state 64

    (49) function -> errorFunction FUNC saveType ID saveProc flagParameters . ( opParameters ) flagParameters opReturns } clearVarsTable

    (               shift and go to state 76


state 65

    (45) cyTypeParam -> , saveID . saveTypeParam ID cyTypeParam
    (47) saveTypeParam -> .

    ID              reduce using rule 47 (saveTypeParam -> .)

    saveTypeParam                  shift and go to state 77

state 66

    (63) basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID . ; cyDeclare

    ;               shift and go to state 78


state 67

    (104) dict -> errorDict ( type . : type )

    :               shift and go to state 79


state 68

    (67) dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .

    MAIN            reduce using rule 67 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    FUNC            reduce using rule 67 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    }               reduce using rule 67 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    ID              reduce using rule 67 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    IF              reduce using rule 67 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    FOR             reduce using rule 67 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    WHILE           reduce using rule 67 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    RETURN          reduce using rule 67 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)


state 69

    (69) cyDeclare -> declare .

    MAIN            reduce using rule 69 (cyDeclare -> declare .)
    FUNC            reduce using rule 69 (cyDeclare -> declare .)
    }               reduce using rule 69 (cyDeclare -> declare .)
    ID              reduce using rule 69 (cyDeclare -> declare .)
    IF              reduce using rule 69 (cyDeclare -> declare .)
    FOR             reduce using rule 69 (cyDeclare -> declare .)
    WHILE           reduce using rule 69 (cyDeclare -> declare .)
    RETURN          reduce using rule 69 (cyDeclare -> declare .)


state 70

    (70) cyDeclare -> empty .

    MAIN            reduce using rule 70 (cyDeclare -> empty .)
    FUNC            reduce using rule 70 (cyDeclare -> empty .)
    }               reduce using rule 70 (cyDeclare -> empty .)
    ID              reduce using rule 70 (cyDeclare -> empty .)
    IF              reduce using rule 70 (cyDeclare -> empty .)
    FOR             reduce using rule 70 (cyDeclare -> empty .)
    WHILE           reduce using rule 70 (cyDeclare -> empty .)
    RETURN          reduce using rule 70 (cyDeclare -> empty .)


state 71

    (94) struct -> structType [ CTED . ] optionalMatrix

    ]               shift and go to state 80


state 72

    (65) structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .

    MAIN            reduce using rule 65 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    FUNC            reduce using rule 65 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    }               reduce using rule 65 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    ID              reduce using rule 65 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    IF              reduce using rule 65 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    FOR             reduce using rule 65 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    WHILE           reduce using rule 65 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    RETURN          reduce using rule 65 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)


state 73

    (18) main -> errorMain MAIN saveMain { opVars body . } clearVarsTable

    }               shift and go to state 81


state 74

    (71) body -> errorBody . cyInstruction
    (74) cyInstruction -> . instr body
    (21) instr -> . basicStatements prueba ;
    (22) instr -> . condition
    (23) instr -> . cycle
    (24) basicStatements -> . assign
    (25) basicStatements -> . funcCall
    (99) condition -> . errorCondition IF ( expresion ) { body } optionalElse
    (75) cycle -> . forCycle
    (76) cycle -> . whileCycle
    (81) assign -> . ID saveVariable errorAssign assignOptions
    (89) funcCall -> . ID ( opParamCall )
    (100) errorCondition -> .
    (79) forCycle -> . errorForCycle FOR ( assign ; expresion ; assign ) { body }
    (77) whileCycle -> . errorWhileCycle WHILE ( expresion ) { body }
    (80) errorForCycle -> .
    (78) errorWhileCycle -> .

    ID              shift and go to state 90
    IF              reduce using rule 100 (errorCondition -> .)
    FOR             reduce using rule 80 (errorForCycle -> .)
    WHILE           reduce using rule 78 (errorWhileCycle -> .)

    errorWhileCycle                shift and go to state 85
    funcCall                       shift and go to state 92
    instr                          shift and go to state 82
    forCycle                       shift and go to state 84
    assign                         shift and go to state 94
    whileCycle                     shift and go to state 83
    basicStatements                shift and go to state 88
    errorForCycle                  shift and go to state 89
    errorCondition                 shift and go to state 93
    cyInstruction                  shift and go to state 86
    condition                      shift and go to state 91
    cycle                          shift and go to state 87

state 75

    (72) body -> empty .

    }               reduce using rule 72 (body -> empty .)
    RETURN          reduce using rule 72 (body -> empty .)


state 76

    (49) function -> errorFunction FUNC saveType ID saveProc flagParameters ( . opParameters ) flagParameters opReturns } clearVarsTable
    (54) opParameters -> . param saveParamToDirProc errorOpParameters
    (55) opParameters -> . empty
    (41) param -> . saveType type errorParam ID cyTypeParam cyParam
    (154) empty -> .
    (3) saveType -> .

    )               reduce using rule 154 (empty -> .)
    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)

    opParameters                   shift and go to state 97
    param                          shift and go to state 95
    saveType                       shift and go to state 96
    empty                          shift and go to state 98

state 77

    (45) cyTypeParam -> , saveID saveTypeParam . ID cyTypeParam

    ID              shift and go to state 99


state 78

    (63) basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; . cyDeclare
    (69) cyDeclare -> . declare
    (70) cyDeclare -> . empty
    (26) declare -> . basicDeclare
    (27) declare -> . structDeclare
    (28) declare -> . dictDeclare
    (154) empty -> .
    (63) basicDeclare -> . saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (65) structDeclare -> . errorStructDeclare STRUCT ID struct ; cyDeclare
    (67) dictDeclare -> . errorDictDeclare DICT ID dict ; cyDeclare
    (3) saveType -> .
    (66) errorStructDeclare -> .
    (68) errorDictDeclare -> .

    MAIN            reduce using rule 154 (empty -> .)
    FUNC            reduce using rule 154 (empty -> .)
    }               reduce using rule 154 (empty -> .)
    ID              reduce using rule 154 (empty -> .)
    IF              reduce using rule 154 (empty -> .)
    FOR             reduce using rule 154 (empty -> .)
    WHILE           reduce using rule 154 (empty -> .)
    RETURN          reduce using rule 154 (empty -> .)
    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)
    STRUCT          reduce using rule 66 (errorStructDeclare -> .)
    DICT            reduce using rule 68 (errorDictDeclare -> .)

    dictDeclare                    shift and go to state 18
    cyDeclare                      shift and go to state 100
    basicDeclare                   shift and go to state 23
    saveType                       shift and go to state 19
    errorDictDeclare               shift and go to state 20
    empty                          shift and go to state 70
    structDeclare                  shift and go to state 21
    errorStructDeclare             shift and go to state 22
    declare                        shift and go to state 69

state 79

    (104) dict -> errorDict ( type : . type )
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    errorType                      shift and go to state 31
    type                           shift and go to state 101

state 80

    (94) struct -> structType [ CTED ] . optionalMatrix
    (97) optionalMatrix -> . [ CTED ]
    (98) optionalMatrix -> . empty
    (154) empty -> .

    [               shift and go to state 103
    ;               reduce using rule 154 (empty -> .)

    empty                          shift and go to state 104
    optionalMatrix                 shift and go to state 102

state 81

    (18) main -> errorMain MAIN saveMain { opVars body } . clearVarsTable
    (51) clearVarsTable -> .

    }               reduce using rule 51 (clearVarsTable -> .)

    clearVarsTable                 shift and go to state 105

state 82

    (74) cyInstruction -> instr . body
    (71) body -> . errorBody cyInstruction
    (72) body -> . empty
    (73) errorBody -> .
    (154) empty -> .

    ID              reduce using rule 73 (errorBody -> .)
    IF              reduce using rule 73 (errorBody -> .)
    FOR             reduce using rule 73 (errorBody -> .)
    WHILE           reduce using rule 73 (errorBody -> .)
    }               reduce using rule 154 (empty -> .)
    RETURN          reduce using rule 154 (empty -> .)

    body                           shift and go to state 106
    errorBody                      shift and go to state 74
    empty                          shift and go to state 75

state 83

    (76) cycle -> whileCycle .

    ID              reduce using rule 76 (cycle -> whileCycle .)
    IF              reduce using rule 76 (cycle -> whileCycle .)
    FOR             reduce using rule 76 (cycle -> whileCycle .)
    WHILE           reduce using rule 76 (cycle -> whileCycle .)
    }               reduce using rule 76 (cycle -> whileCycle .)
    RETURN          reduce using rule 76 (cycle -> whileCycle .)


state 84

    (75) cycle -> forCycle .

    ID              reduce using rule 75 (cycle -> forCycle .)
    IF              reduce using rule 75 (cycle -> forCycle .)
    FOR             reduce using rule 75 (cycle -> forCycle .)
    WHILE           reduce using rule 75 (cycle -> forCycle .)
    }               reduce using rule 75 (cycle -> forCycle .)
    RETURN          reduce using rule 75 (cycle -> forCycle .)


state 85

    (77) whileCycle -> errorWhileCycle . WHILE ( expresion ) { body }

    WHILE           shift and go to state 107


state 86

    (71) body -> errorBody cyInstruction .

    }               reduce using rule 71 (body -> errorBody cyInstruction .)
    RETURN          reduce using rule 71 (body -> errorBody cyInstruction .)


state 87

    (23) instr -> cycle .

    ID              reduce using rule 23 (instr -> cycle .)
    IF              reduce using rule 23 (instr -> cycle .)
    FOR             reduce using rule 23 (instr -> cycle .)
    WHILE           reduce using rule 23 (instr -> cycle .)
    }               reduce using rule 23 (instr -> cycle .)
    RETURN          reduce using rule 23 (instr -> cycle .)


state 88

    (21) instr -> basicStatements . prueba ;
    (30) prueba -> .

    ;               reduce using rule 30 (prueba -> .)

    prueba                         shift and go to state 108

state 89

    (79) forCycle -> errorForCycle . FOR ( assign ; expresion ; assign ) { body }

    FOR             shift and go to state 109


state 90

    (81) assign -> ID . saveVariable errorAssign assignOptions
    (89) funcCall -> ID . ( opParamCall )
    (136) saveVariable -> .

    (               shift and go to state 111
    [               reduce using rule 136 (saveVariable -> .)
    ASGN            reduce using rule 136 (saveVariable -> .)

    saveVariable                   shift and go to state 110

state 91

    (22) instr -> condition .

    ID              reduce using rule 22 (instr -> condition .)
    IF              reduce using rule 22 (instr -> condition .)
    FOR             reduce using rule 22 (instr -> condition .)
    WHILE           reduce using rule 22 (instr -> condition .)
    }               reduce using rule 22 (instr -> condition .)
    RETURN          reduce using rule 22 (instr -> condition .)


state 92

    (25) basicStatements -> funcCall .

    ;               reduce using rule 25 (basicStatements -> funcCall .)


state 93

    (99) condition -> errorCondition . IF ( expresion ) { body } optionalElse

    IF              shift and go to state 112


state 94

    (24) basicStatements -> assign .

    ;               reduce using rule 24 (basicStatements -> assign .)


state 95

    (54) opParameters -> param . saveParamToDirProc errorOpParameters
    (57) saveParamToDirProc -> .

    )               reduce using rule 57 (saveParamToDirProc -> .)

    saveParamToDirProc             shift and go to state 113

state 96

    (41) param -> saveType . type errorParam ID cyTypeParam cyParam
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    type                           shift and go to state 114
    errorType                      shift and go to state 31

state 97

    (49) function -> errorFunction FUNC saveType ID saveProc flagParameters ( opParameters . ) flagParameters opReturns } clearVarsTable

    )               shift and go to state 115


state 98

    (55) opParameters -> empty .

    )               reduce using rule 55 (opParameters -> empty .)


state 99

    (45) cyTypeParam -> , saveID saveTypeParam ID . cyTypeParam
    (45) cyTypeParam -> . , saveID saveTypeParam ID cyTypeParam
    (46) cyTypeParam -> . empty
    (154) empty -> .

    ,               shift and go to state 55
    ;               reduce using rule 154 (empty -> .)
    )               reduce using rule 154 (empty -> .)

    cyTypeParam                    shift and go to state 116
    empty                          shift and go to state 56

state 100

    (63) basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .

    MAIN            reduce using rule 63 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    FUNC            reduce using rule 63 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    }               reduce using rule 63 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    ID              reduce using rule 63 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    IF              reduce using rule 63 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    FOR             reduce using rule 63 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    WHILE           reduce using rule 63 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    RETURN          reduce using rule 63 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)


state 101

    (104) dict -> errorDict ( type : type . )

    )               shift and go to state 117


state 102

    (94) struct -> structType [ CTED ] optionalMatrix .

    ;               reduce using rule 94 (struct -> structType [ CTED ] optionalMatrix .)


state 103

    (97) optionalMatrix -> [ . CTED ]

    CTED            shift and go to state 118


state 104

    (98) optionalMatrix -> empty .

    ;               reduce using rule 98 (optionalMatrix -> empty .)


state 105

    (18) main -> errorMain MAIN saveMain { opVars body } clearVarsTable .

    }               reduce using rule 18 (main -> errorMain MAIN saveMain { opVars body } clearVarsTable .)


state 106

    (74) cyInstruction -> instr body .

    }               reduce using rule 74 (cyInstruction -> instr body .)
    RETURN          reduce using rule 74 (cyInstruction -> instr body .)


state 107

    (77) whileCycle -> errorWhileCycle WHILE . ( expresion ) { body }

    (               shift and go to state 119


state 108

    (21) instr -> basicStatements prueba . ;

    ;               shift and go to state 120


state 109

    (79) forCycle -> errorForCycle FOR . ( assign ; expresion ; assign ) { body }

    (               shift and go to state 121


state 110

    (81) assign -> ID saveVariable . errorAssign assignOptions
    (82) errorAssign -> .

    [               reduce using rule 82 (errorAssign -> .)
    ASGN            reduce using rule 82 (errorAssign -> .)

    errorAssign                    shift and go to state 122

state 111

    (89) funcCall -> ID ( . opParamCall )
    (90) opParamCall -> . expresion cyParamCall
    (91) opParamCall -> . empty
    (106) expresion -> . sExp cyExpresion errorExpresion
    (154) empty -> .
    (111) sExp -> . exp errorOpSExp opSExp
    (120) exp -> . term performAddSub errorCyExp cyExp
    (127) term -> . fact cyTerm
    (131) fact -> . CTES
    (132) fact -> . cte
    (133) fact -> . funcCall
    (134) fact -> . ( expresion )
    (135) fact -> . ID saveVariable opAccess errorOpAccess
    (150) cte -> . CTED
    (151) cte -> . CTEF
    (152) cte -> . TRUE
    (153) cte -> . FALSE
    (89) funcCall -> . ID ( opParamCall )

    )               reduce using rule 154 (empty -> .)
    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    expresion                      shift and go to state 130
    term                           shift and go to state 132
    funcCall                       shift and go to state 134
    sExp                           shift and go to state 126
    cte                            shift and go to state 135
    fact                           shift and go to state 138
    exp                            shift and go to state 137
    opParamCall                    shift and go to state 123
    empty                          shift and go to state 127

state 112

    (99) condition -> errorCondition IF . ( expresion ) { body } optionalElse

    (               shift and go to state 139


state 113

    (54) opParameters -> param saveParamToDirProc . errorOpParameters
    (58) errorOpParameters -> .

    )               reduce using rule 58 (errorOpParameters -> .)

    errorOpParameters              shift and go to state 140

state 114

    (41) param -> saveType type . errorParam ID cyTypeParam cyParam
    (42) errorParam -> .

    ID              reduce using rule 42 (errorParam -> .)

    errorParam                     shift and go to state 141

state 115

    (49) function -> errorFunction FUNC saveType ID saveProc flagParameters ( opParameters ) . flagParameters opReturns } clearVarsTable
    (56) flagParameters -> .

    {               reduce using rule 56 (flagParameters -> .)
    RETURNS         reduce using rule 56 (flagParameters -> .)

    flagParameters                 shift and go to state 142

state 116

    (45) cyTypeParam -> , saveID saveTypeParam ID cyTypeParam .

    ;               reduce using rule 45 (cyTypeParam -> , saveID saveTypeParam ID cyTypeParam .)
    )               reduce using rule 45 (cyTypeParam -> , saveID saveTypeParam ID cyTypeParam .)


state 117

    (104) dict -> errorDict ( type : type ) .

    [               reduce using rule 104 (dict -> errorDict ( type : type ) .)
    ;               reduce using rule 104 (dict -> errorDict ( type : type ) .)


state 118

    (97) optionalMatrix -> [ CTED . ]

    ]               shift and go to state 143


state 119

    (77) whileCycle -> errorWhileCycle WHILE ( . expresion ) { body }
    (106) expresion -> . sExp cyExpresion errorExpresion
    (111) sExp -> . exp errorOpSExp opSExp
    (120) exp -> . term performAddSub errorCyExp cyExp
    (127) term -> . fact cyTerm
    (131) fact -> . CTES
    (132) fact -> . cte
    (133) fact -> . funcCall
    (134) fact -> . ( expresion )
    (135) fact -> . ID saveVariable opAccess errorOpAccess
    (150) cte -> . CTED
    (151) cte -> . CTEF
    (152) cte -> . TRUE
    (153) cte -> . FALSE
    (89) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    expresion                      shift and go to state 144
    term                           shift and go to state 132
    funcCall                       shift and go to state 134
    sExp                           shift and go to state 126
    cte                            shift and go to state 135
    exp                            shift and go to state 137
    fact                           shift and go to state 138

state 120

    (21) instr -> basicStatements prueba ; .

    ID              reduce using rule 21 (instr -> basicStatements prueba ; .)
    IF              reduce using rule 21 (instr -> basicStatements prueba ; .)
    FOR             reduce using rule 21 (instr -> basicStatements prueba ; .)
    WHILE           reduce using rule 21 (instr -> basicStatements prueba ; .)
    }               reduce using rule 21 (instr -> basicStatements prueba ; .)
    RETURN          reduce using rule 21 (instr -> basicStatements prueba ; .)


state 121

    (79) forCycle -> errorForCycle FOR ( . assign ; expresion ; assign ) { body }
    (81) assign -> . ID saveVariable errorAssign assignOptions

    ID              shift and go to state 145

    assign                         shift and go to state 146

state 122

    (81) assign -> ID saveVariable errorAssign . assignOptions
    (83) assignOptions -> . init
    (84) assignOptions -> . initDict
    (85) assignOptions -> . [ expresion ] assignMatrix init
    (29) init -> . ASGN saveOperator initWith errorInit
    (35) initDict -> . ASGN ( dictType : dictType ) errorInitDict

    [               shift and go to state 151
    ASGN            shift and go to state 149

    initDict                       shift and go to state 147
    assignOptions                  shift and go to state 148
    init                           shift and go to state 150

state 123

    (89) funcCall -> ID ( opParamCall . )

    )               shift and go to state 152


state 124

    (152) cte -> TRUE .

    MULT            reduce using rule 152 (cte -> TRUE .)
    DIV             reduce using rule 152 (cte -> TRUE .)
    PLUS            reduce using rule 152 (cte -> TRUE .)
    MINUS           reduce using rule 152 (cte -> TRUE .)
    AND             reduce using rule 152 (cte -> TRUE .)
    OR              reduce using rule 152 (cte -> TRUE .)
    ,               reduce using rule 152 (cte -> TRUE .)
    )               reduce using rule 152 (cte -> TRUE .)
    ]               reduce using rule 152 (cte -> TRUE .)
    ;               reduce using rule 152 (cte -> TRUE .)
    EQ              reduce using rule 152 (cte -> TRUE .)
    DIF             reduce using rule 152 (cte -> TRUE .)
    LTOEQ           reduce using rule 152 (cte -> TRUE .)
    GTOEQ           reduce using rule 152 (cte -> TRUE .)
    GT              reduce using rule 152 (cte -> TRUE .)
    LT              reduce using rule 152 (cte -> TRUE .)
    :               reduce using rule 152 (cte -> TRUE .)


state 125

    (134) fact -> ( . expresion )
    (106) expresion -> . sExp cyExpresion errorExpresion
    (111) sExp -> . exp errorOpSExp opSExp
    (120) exp -> . term performAddSub errorCyExp cyExp
    (127) term -> . fact cyTerm
    (131) fact -> . CTES
    (132) fact -> . cte
    (133) fact -> . funcCall
    (134) fact -> . ( expresion )
    (135) fact -> . ID saveVariable opAccess errorOpAccess
    (150) cte -> . CTED
    (151) cte -> . CTEF
    (152) cte -> . TRUE
    (153) cte -> . FALSE
    (89) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    expresion                      shift and go to state 153
    term                           shift and go to state 132
    funcCall                       shift and go to state 134
    sExp                           shift and go to state 126
    cte                            shift and go to state 135
    exp                            shift and go to state 137
    fact                           shift and go to state 138

state 126

    (106) expresion -> sExp . cyExpresion errorExpresion
    (108) cyExpresion -> . AND expresion
    (109) cyExpresion -> . OR expresion
    (110) cyExpresion -> . empty
    (154) empty -> .

    AND             shift and go to state 154
    OR              shift and go to state 156
    ,               reduce using rule 154 (empty -> .)
    )               reduce using rule 154 (empty -> .)
    ]               reduce using rule 154 (empty -> .)
    ;               reduce using rule 154 (empty -> .)

    cyExpresion                    shift and go to state 155
    empty                          shift and go to state 157

state 127

    (91) opParamCall -> empty .

    )               reduce using rule 91 (opParamCall -> empty .)


state 128

    (150) cte -> CTED .

    MULT            reduce using rule 150 (cte -> CTED .)
    DIV             reduce using rule 150 (cte -> CTED .)
    PLUS            reduce using rule 150 (cte -> CTED .)
    MINUS           reduce using rule 150 (cte -> CTED .)
    AND             reduce using rule 150 (cte -> CTED .)
    OR              reduce using rule 150 (cte -> CTED .)
    ,               reduce using rule 150 (cte -> CTED .)
    )               reduce using rule 150 (cte -> CTED .)
    ]               reduce using rule 150 (cte -> CTED .)
    ;               reduce using rule 150 (cte -> CTED .)
    EQ              reduce using rule 150 (cte -> CTED .)
    DIF             reduce using rule 150 (cte -> CTED .)
    LTOEQ           reduce using rule 150 (cte -> CTED .)
    GTOEQ           reduce using rule 150 (cte -> CTED .)
    GT              reduce using rule 150 (cte -> CTED .)
    LT              reduce using rule 150 (cte -> CTED .)
    :               reduce using rule 150 (cte -> CTED .)


state 129

    (135) fact -> ID . saveVariable opAccess errorOpAccess
    (89) funcCall -> ID . ( opParamCall )
    (136) saveVariable -> .

    (               shift and go to state 111
    .               reduce using rule 136 (saveVariable -> .)
    [               reduce using rule 136 (saveVariable -> .)
    MULT            reduce using rule 136 (saveVariable -> .)
    DIV             reduce using rule 136 (saveVariable -> .)
    PLUS            reduce using rule 136 (saveVariable -> .)
    MINUS           reduce using rule 136 (saveVariable -> .)
    EQ              reduce using rule 136 (saveVariable -> .)
    DIF             reduce using rule 136 (saveVariable -> .)
    LTOEQ           reduce using rule 136 (saveVariable -> .)
    GTOEQ           reduce using rule 136 (saveVariable -> .)
    GT              reduce using rule 136 (saveVariable -> .)
    LT              reduce using rule 136 (saveVariable -> .)
    AND             reduce using rule 136 (saveVariable -> .)
    OR              reduce using rule 136 (saveVariable -> .)
    ,               reduce using rule 136 (saveVariable -> .)
    )               reduce using rule 136 (saveVariable -> .)
    ]               reduce using rule 136 (saveVariable -> .)
    ;               reduce using rule 136 (saveVariable -> .)

    saveVariable                   shift and go to state 158

state 130

    (90) opParamCall -> expresion . cyParamCall
    (92) cyParamCall -> . , expresion cyParamCall
    (93) cyParamCall -> . empty
    (154) empty -> .

    ,               shift and go to state 160
    )               reduce using rule 154 (empty -> .)

    cyParamCall                    shift and go to state 159
    empty                          shift and go to state 161

state 131

    (131) fact -> CTES .

    MULT            reduce using rule 131 (fact -> CTES .)
    DIV             reduce using rule 131 (fact -> CTES .)
    PLUS            reduce using rule 131 (fact -> CTES .)
    MINUS           reduce using rule 131 (fact -> CTES .)
    EQ              reduce using rule 131 (fact -> CTES .)
    DIF             reduce using rule 131 (fact -> CTES .)
    LTOEQ           reduce using rule 131 (fact -> CTES .)
    GTOEQ           reduce using rule 131 (fact -> CTES .)
    GT              reduce using rule 131 (fact -> CTES .)
    LT              reduce using rule 131 (fact -> CTES .)
    AND             reduce using rule 131 (fact -> CTES .)
    OR              reduce using rule 131 (fact -> CTES .)
    ]               reduce using rule 131 (fact -> CTES .)
    ;               reduce using rule 131 (fact -> CTES .)
    )               reduce using rule 131 (fact -> CTES .)
    ,               reduce using rule 131 (fact -> CTES .)


state 132

    (120) exp -> term . performAddSub errorCyExp cyExp
    (121) performAddSub -> .

    PLUS            reduce using rule 121 (performAddSub -> .)
    MINUS           reduce using rule 121 (performAddSub -> .)
    EQ              reduce using rule 121 (performAddSub -> .)
    DIF             reduce using rule 121 (performAddSub -> .)
    LTOEQ           reduce using rule 121 (performAddSub -> .)
    GTOEQ           reduce using rule 121 (performAddSub -> .)
    GT              reduce using rule 121 (performAddSub -> .)
    LT              reduce using rule 121 (performAddSub -> .)
    AND             reduce using rule 121 (performAddSub -> .)
    OR              reduce using rule 121 (performAddSub -> .)
    ,               reduce using rule 121 (performAddSub -> .)
    )               reduce using rule 121 (performAddSub -> .)
    ]               reduce using rule 121 (performAddSub -> .)
    ;               reduce using rule 121 (performAddSub -> .)

    performAddSub                  shift and go to state 162

state 133

    (153) cte -> FALSE .

    MULT            reduce using rule 153 (cte -> FALSE .)
    DIV             reduce using rule 153 (cte -> FALSE .)
    PLUS            reduce using rule 153 (cte -> FALSE .)
    MINUS           reduce using rule 153 (cte -> FALSE .)
    AND             reduce using rule 153 (cte -> FALSE .)
    OR              reduce using rule 153 (cte -> FALSE .)
    ,               reduce using rule 153 (cte -> FALSE .)
    )               reduce using rule 153 (cte -> FALSE .)
    ]               reduce using rule 153 (cte -> FALSE .)
    ;               reduce using rule 153 (cte -> FALSE .)
    EQ              reduce using rule 153 (cte -> FALSE .)
    DIF             reduce using rule 153 (cte -> FALSE .)
    LTOEQ           reduce using rule 153 (cte -> FALSE .)
    GTOEQ           reduce using rule 153 (cte -> FALSE .)
    GT              reduce using rule 153 (cte -> FALSE .)
    LT              reduce using rule 153 (cte -> FALSE .)
    :               reduce using rule 153 (cte -> FALSE .)


state 134

    (133) fact -> funcCall .

    MULT            reduce using rule 133 (fact -> funcCall .)
    DIV             reduce using rule 133 (fact -> funcCall .)
    PLUS            reduce using rule 133 (fact -> funcCall .)
    MINUS           reduce using rule 133 (fact -> funcCall .)
    EQ              reduce using rule 133 (fact -> funcCall .)
    DIF             reduce using rule 133 (fact -> funcCall .)
    LTOEQ           reduce using rule 133 (fact -> funcCall .)
    GTOEQ           reduce using rule 133 (fact -> funcCall .)
    GT              reduce using rule 133 (fact -> funcCall .)
    LT              reduce using rule 133 (fact -> funcCall .)
    AND             reduce using rule 133 (fact -> funcCall .)
    OR              reduce using rule 133 (fact -> funcCall .)
    ]               reduce using rule 133 (fact -> funcCall .)
    ;               reduce using rule 133 (fact -> funcCall .)
    )               reduce using rule 133 (fact -> funcCall .)
    ,               reduce using rule 133 (fact -> funcCall .)


state 135

    (132) fact -> cte .

    MULT            reduce using rule 132 (fact -> cte .)
    DIV             reduce using rule 132 (fact -> cte .)
    PLUS            reduce using rule 132 (fact -> cte .)
    MINUS           reduce using rule 132 (fact -> cte .)
    EQ              reduce using rule 132 (fact -> cte .)
    DIF             reduce using rule 132 (fact -> cte .)
    LTOEQ           reduce using rule 132 (fact -> cte .)
    GTOEQ           reduce using rule 132 (fact -> cte .)
    GT              reduce using rule 132 (fact -> cte .)
    LT              reduce using rule 132 (fact -> cte .)
    AND             reduce using rule 132 (fact -> cte .)
    OR              reduce using rule 132 (fact -> cte .)
    ]               reduce using rule 132 (fact -> cte .)
    ;               reduce using rule 132 (fact -> cte .)
    )               reduce using rule 132 (fact -> cte .)
    ,               reduce using rule 132 (fact -> cte .)


state 136

    (151) cte -> CTEF .

    MULT            reduce using rule 151 (cte -> CTEF .)
    DIV             reduce using rule 151 (cte -> CTEF .)
    PLUS            reduce using rule 151 (cte -> CTEF .)
    MINUS           reduce using rule 151 (cte -> CTEF .)
    AND             reduce using rule 151 (cte -> CTEF .)
    OR              reduce using rule 151 (cte -> CTEF .)
    ,               reduce using rule 151 (cte -> CTEF .)
    )               reduce using rule 151 (cte -> CTEF .)
    ]               reduce using rule 151 (cte -> CTEF .)
    ;               reduce using rule 151 (cte -> CTEF .)
    EQ              reduce using rule 151 (cte -> CTEF .)
    DIF             reduce using rule 151 (cte -> CTEF .)
    LTOEQ           reduce using rule 151 (cte -> CTEF .)
    GTOEQ           reduce using rule 151 (cte -> CTEF .)
    GT              reduce using rule 151 (cte -> CTEF .)
    LT              reduce using rule 151 (cte -> CTEF .)
    :               reduce using rule 151 (cte -> CTEF .)


state 137

    (111) sExp -> exp . errorOpSExp opSExp
    (119) errorOpSExp -> .

    EQ              reduce using rule 119 (errorOpSExp -> .)
    DIF             reduce using rule 119 (errorOpSExp -> .)
    LTOEQ           reduce using rule 119 (errorOpSExp -> .)
    GTOEQ           reduce using rule 119 (errorOpSExp -> .)
    GT              reduce using rule 119 (errorOpSExp -> .)
    LT              reduce using rule 119 (errorOpSExp -> .)
    AND             reduce using rule 119 (errorOpSExp -> .)
    OR              reduce using rule 119 (errorOpSExp -> .)
    ,               reduce using rule 119 (errorOpSExp -> .)
    )               reduce using rule 119 (errorOpSExp -> .)
    ]               reduce using rule 119 (errorOpSExp -> .)
    ;               reduce using rule 119 (errorOpSExp -> .)

    errorOpSExp                    shift and go to state 163

state 138

    (127) term -> fact . cyTerm
    (128) cyTerm -> . MULT errorFact term
    (129) cyTerm -> . DIV term
    (130) cyTerm -> . empty
    (154) empty -> .

    MULT            shift and go to state 167
    DIV             shift and go to state 166
    PLUS            reduce using rule 154 (empty -> .)
    MINUS           reduce using rule 154 (empty -> .)
    EQ              reduce using rule 154 (empty -> .)
    DIF             reduce using rule 154 (empty -> .)
    LTOEQ           reduce using rule 154 (empty -> .)
    GTOEQ           reduce using rule 154 (empty -> .)
    GT              reduce using rule 154 (empty -> .)
    LT              reduce using rule 154 (empty -> .)
    AND             reduce using rule 154 (empty -> .)
    OR              reduce using rule 154 (empty -> .)
    ,               reduce using rule 154 (empty -> .)
    )               reduce using rule 154 (empty -> .)
    ]               reduce using rule 154 (empty -> .)
    ;               reduce using rule 154 (empty -> .)

    cyTerm                         shift and go to state 164
    empty                          shift and go to state 165

state 139

    (99) condition -> errorCondition IF ( . expresion ) { body } optionalElse
    (106) expresion -> . sExp cyExpresion errorExpresion
    (111) sExp -> . exp errorOpSExp opSExp
    (120) exp -> . term performAddSub errorCyExp cyExp
    (127) term -> . fact cyTerm
    (131) fact -> . CTES
    (132) fact -> . cte
    (133) fact -> . funcCall
    (134) fact -> . ( expresion )
    (135) fact -> . ID saveVariable opAccess errorOpAccess
    (150) cte -> . CTED
    (151) cte -> . CTEF
    (152) cte -> . TRUE
    (153) cte -> . FALSE
    (89) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    sExp                           shift and go to state 126
    expresion                      shift and go to state 168
    term                           shift and go to state 132
    funcCall                       shift and go to state 134
    cte                            shift and go to state 135
    exp                            shift and go to state 137
    fact                           shift and go to state 138

state 140

    (54) opParameters -> param saveParamToDirProc errorOpParameters .

    )               reduce using rule 54 (opParameters -> param saveParamToDirProc errorOpParameters .)


state 141

    (41) param -> saveType type errorParam . ID cyTypeParam cyParam

    ID              shift and go to state 169


state 142

    (49) function -> errorFunction FUNC saveType ID saveProc flagParameters ( opParameters ) flagParameters . opReturns } clearVarsTable
    (59) opReturns -> . errorOpReturns RETURNS type saveReturnType { opVars body return
    (60) opReturns -> . { opVars body
    (62) errorOpReturns -> .

    {               shift and go to state 171
    RETURNS         reduce using rule 62 (errorOpReturns -> .)

    errorOpReturns                 shift and go to state 170
    opReturns                      shift and go to state 172

state 143

    (97) optionalMatrix -> [ CTED ] .

    ;               reduce using rule 97 (optionalMatrix -> [ CTED ] .)


state 144

    (77) whileCycle -> errorWhileCycle WHILE ( expresion . ) { body }

    )               shift and go to state 173


state 145

    (81) assign -> ID . saveVariable errorAssign assignOptions
    (136) saveVariable -> .

    [               reduce using rule 136 (saveVariable -> .)
    ASGN            reduce using rule 136 (saveVariable -> .)

    saveVariable                   shift and go to state 110

state 146

    (79) forCycle -> errorForCycle FOR ( assign . ; expresion ; assign ) { body }

    ;               shift and go to state 174


state 147

    (84) assignOptions -> initDict .

    ;               reduce using rule 84 (assignOptions -> initDict .)
    )               reduce using rule 84 (assignOptions -> initDict .)


state 148

    (81) assign -> ID saveVariable errorAssign assignOptions .

    )               reduce using rule 81 (assign -> ID saveVariable errorAssign assignOptions .)
    ;               reduce using rule 81 (assign -> ID saveVariable errorAssign assignOptions .)


state 149

    (29) init -> ASGN . saveOperator initWith errorInit
    (35) initDict -> ASGN . ( dictType : dictType ) errorInitDict
    (125) saveOperator -> .

  ! shift/reduce conflict for ( resolved as shift
    (               shift and go to state 175
    ID              reduce using rule 125 (saveOperator -> .)
    CTES            reduce using rule 125 (saveOperator -> .)
    CTED            reduce using rule 125 (saveOperator -> .)
    CTEF            reduce using rule 125 (saveOperator -> .)
    TRUE            reduce using rule 125 (saveOperator -> .)
    FALSE           reduce using rule 125 (saveOperator -> .)

  ! (               [ reduce using rule 125 (saveOperator -> .) ]

    saveOperator                   shift and go to state 176

state 150

    (83) assignOptions -> init .

    ;               reduce using rule 83 (assignOptions -> init .)
    )               reduce using rule 83 (assignOptions -> init .)


state 151

    (85) assignOptions -> [ . expresion ] assignMatrix init
    (106) expresion -> . sExp cyExpresion errorExpresion
    (111) sExp -> . exp errorOpSExp opSExp
    (120) exp -> . term performAddSub errorCyExp cyExp
    (127) term -> . fact cyTerm
    (131) fact -> . CTES
    (132) fact -> . cte
    (133) fact -> . funcCall
    (134) fact -> . ( expresion )
    (135) fact -> . ID saveVariable opAccess errorOpAccess
    (150) cte -> . CTED
    (151) cte -> . CTEF
    (152) cte -> . TRUE
    (153) cte -> . FALSE
    (89) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    expresion                      shift and go to state 177
    term                           shift and go to state 132
    funcCall                       shift and go to state 134
    sExp                           shift and go to state 126
    cte                            shift and go to state 135
    exp                            shift and go to state 137
    fact                           shift and go to state 138

state 152

    (89) funcCall -> ID ( opParamCall ) .

    MULT            reduce using rule 89 (funcCall -> ID ( opParamCall ) .)
    DIV             reduce using rule 89 (funcCall -> ID ( opParamCall ) .)
    PLUS            reduce using rule 89 (funcCall -> ID ( opParamCall ) .)
    MINUS           reduce using rule 89 (funcCall -> ID ( opParamCall ) .)
    EQ              reduce using rule 89 (funcCall -> ID ( opParamCall ) .)
    DIF             reduce using rule 89 (funcCall -> ID ( opParamCall ) .)
    LTOEQ           reduce using rule 89 (funcCall -> ID ( opParamCall ) .)
    GTOEQ           reduce using rule 89 (funcCall -> ID ( opParamCall ) .)
    GT              reduce using rule 89 (funcCall -> ID ( opParamCall ) .)
    LT              reduce using rule 89 (funcCall -> ID ( opParamCall ) .)
    AND             reduce using rule 89 (funcCall -> ID ( opParamCall ) .)
    OR              reduce using rule 89 (funcCall -> ID ( opParamCall ) .)
    ]               reduce using rule 89 (funcCall -> ID ( opParamCall ) .)
    ;               reduce using rule 89 (funcCall -> ID ( opParamCall ) .)
    ,               reduce using rule 89 (funcCall -> ID ( opParamCall ) .)
    )               reduce using rule 89 (funcCall -> ID ( opParamCall ) .)


state 153

    (134) fact -> ( expresion . )

    )               shift and go to state 178


state 154

    (108) cyExpresion -> AND . expresion
    (106) expresion -> . sExp cyExpresion errorExpresion
    (111) sExp -> . exp errorOpSExp opSExp
    (120) exp -> . term performAddSub errorCyExp cyExp
    (127) term -> . fact cyTerm
    (131) fact -> . CTES
    (132) fact -> . cte
    (133) fact -> . funcCall
    (134) fact -> . ( expresion )
    (135) fact -> . ID saveVariable opAccess errorOpAccess
    (150) cte -> . CTED
    (151) cte -> . CTEF
    (152) cte -> . TRUE
    (153) cte -> . FALSE
    (89) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    expresion                      shift and go to state 179
    term                           shift and go to state 132
    funcCall                       shift and go to state 134
    sExp                           shift and go to state 126
    cte                            shift and go to state 135
    exp                            shift and go to state 137
    fact                           shift and go to state 138

state 155

    (106) expresion -> sExp cyExpresion . errorExpresion
    (107) errorExpresion -> .

    ,               reduce using rule 107 (errorExpresion -> .)
    )               reduce using rule 107 (errorExpresion -> .)
    ]               reduce using rule 107 (errorExpresion -> .)
    ;               reduce using rule 107 (errorExpresion -> .)

    errorExpresion                 shift and go to state 180

state 156

    (109) cyExpresion -> OR . expresion
    (106) expresion -> . sExp cyExpresion errorExpresion
    (111) sExp -> . exp errorOpSExp opSExp
    (120) exp -> . term performAddSub errorCyExp cyExp
    (127) term -> . fact cyTerm
    (131) fact -> . CTES
    (132) fact -> . cte
    (133) fact -> . funcCall
    (134) fact -> . ( expresion )
    (135) fact -> . ID saveVariable opAccess errorOpAccess
    (150) cte -> . CTED
    (151) cte -> . CTEF
    (152) cte -> . TRUE
    (153) cte -> . FALSE
    (89) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    expresion                      shift and go to state 181
    term                           shift and go to state 132
    funcCall                       shift and go to state 134
    sExp                           shift and go to state 126
    cte                            shift and go to state 135
    exp                            shift and go to state 137
    fact                           shift and go to state 138

state 157

    (110) cyExpresion -> empty .

    ,               reduce using rule 110 (cyExpresion -> empty .)
    )               reduce using rule 110 (cyExpresion -> empty .)
    ]               reduce using rule 110 (cyExpresion -> empty .)
    ;               reduce using rule 110 (cyExpresion -> empty .)


state 158

    (135) fact -> ID saveVariable . opAccess errorOpAccess
    (138) opAccess -> . opStruct
    (139) opAccess -> . opDictionary
    (140) opAccess -> . empty
    (142) opStruct -> . errorOpStruct [ expresion ] opMatrix
    (147) opDictionary -> . . dictIndex
    (154) empty -> .
    (143) errorOpStruct -> .

    .               shift and go to state 186
    MULT            reduce using rule 154 (empty -> .)
    DIV             reduce using rule 154 (empty -> .)
    PLUS            reduce using rule 154 (empty -> .)
    MINUS           reduce using rule 154 (empty -> .)
    EQ              reduce using rule 154 (empty -> .)
    DIF             reduce using rule 154 (empty -> .)
    LTOEQ           reduce using rule 154 (empty -> .)
    GTOEQ           reduce using rule 154 (empty -> .)
    GT              reduce using rule 154 (empty -> .)
    LT              reduce using rule 154 (empty -> .)
    AND             reduce using rule 154 (empty -> .)
    OR              reduce using rule 154 (empty -> .)
    ,               reduce using rule 154 (empty -> .)
    )               reduce using rule 154 (empty -> .)
    ]               reduce using rule 154 (empty -> .)
    ;               reduce using rule 154 (empty -> .)
    [               reduce using rule 143 (errorOpStruct -> .)

    errorOpStruct                  shift and go to state 182
    opDictionary                   shift and go to state 183
    opStruct                       shift and go to state 184
    opAccess                       shift and go to state 185
    empty                          shift and go to state 187

state 159

    (90) opParamCall -> expresion cyParamCall .

    )               reduce using rule 90 (opParamCall -> expresion cyParamCall .)


state 160

    (92) cyParamCall -> , . expresion cyParamCall
    (106) expresion -> . sExp cyExpresion errorExpresion
    (111) sExp -> . exp errorOpSExp opSExp
    (120) exp -> . term performAddSub errorCyExp cyExp
    (127) term -> . fact cyTerm
    (131) fact -> . CTES
    (132) fact -> . cte
    (133) fact -> . funcCall
    (134) fact -> . ( expresion )
    (135) fact -> . ID saveVariable opAccess errorOpAccess
    (150) cte -> . CTED
    (151) cte -> . CTEF
    (152) cte -> . TRUE
    (153) cte -> . FALSE
    (89) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    expresion                      shift and go to state 188
    term                           shift and go to state 132
    funcCall                       shift and go to state 134
    sExp                           shift and go to state 126
    cte                            shift and go to state 135
    exp                            shift and go to state 137
    fact                           shift and go to state 138

state 161

    (93) cyParamCall -> empty .

    )               reduce using rule 93 (cyParamCall -> empty .)


state 162

    (120) exp -> term performAddSub . errorCyExp cyExp
    (126) errorCyExp -> .

    PLUS            reduce using rule 126 (errorCyExp -> .)
    MINUS           reduce using rule 126 (errorCyExp -> .)
    EQ              reduce using rule 126 (errorCyExp -> .)
    DIF             reduce using rule 126 (errorCyExp -> .)
    LTOEQ           reduce using rule 126 (errorCyExp -> .)
    GTOEQ           reduce using rule 126 (errorCyExp -> .)
    GT              reduce using rule 126 (errorCyExp -> .)
    LT              reduce using rule 126 (errorCyExp -> .)
    AND             reduce using rule 126 (errorCyExp -> .)
    OR              reduce using rule 126 (errorCyExp -> .)
    ,               reduce using rule 126 (errorCyExp -> .)
    )               reduce using rule 126 (errorCyExp -> .)
    ]               reduce using rule 126 (errorCyExp -> .)
    ;               reduce using rule 126 (errorCyExp -> .)

    errorCyExp                     shift and go to state 189

state 163

    (111) sExp -> exp errorOpSExp . opSExp
    (112) opSExp -> . EQ exp
    (113) opSExp -> . DIF exp
    (114) opSExp -> . LTOEQ exp
    (115) opSExp -> . GTOEQ exp
    (116) opSExp -> . GT exp
    (117) opSExp -> . LT exp
    (118) opSExp -> . empty
    (154) empty -> .

    EQ              shift and go to state 191
    DIF             shift and go to state 192
    LTOEQ           shift and go to state 195
    GTOEQ           shift and go to state 194
    GT              shift and go to state 190
    LT              shift and go to state 193
    AND             reduce using rule 154 (empty -> .)
    OR              reduce using rule 154 (empty -> .)
    ,               reduce using rule 154 (empty -> .)
    )               reduce using rule 154 (empty -> .)
    ]               reduce using rule 154 (empty -> .)
    ;               reduce using rule 154 (empty -> .)

    empty                          shift and go to state 196
    opSExp                         shift and go to state 197

state 164

    (127) term -> fact cyTerm .

    PLUS            reduce using rule 127 (term -> fact cyTerm .)
    MINUS           reduce using rule 127 (term -> fact cyTerm .)
    EQ              reduce using rule 127 (term -> fact cyTerm .)
    DIF             reduce using rule 127 (term -> fact cyTerm .)
    LTOEQ           reduce using rule 127 (term -> fact cyTerm .)
    GTOEQ           reduce using rule 127 (term -> fact cyTerm .)
    GT              reduce using rule 127 (term -> fact cyTerm .)
    LT              reduce using rule 127 (term -> fact cyTerm .)
    AND             reduce using rule 127 (term -> fact cyTerm .)
    OR              reduce using rule 127 (term -> fact cyTerm .)
    ,               reduce using rule 127 (term -> fact cyTerm .)
    )               reduce using rule 127 (term -> fact cyTerm .)
    ]               reduce using rule 127 (term -> fact cyTerm .)
    ;               reduce using rule 127 (term -> fact cyTerm .)


state 165

    (130) cyTerm -> empty .

    PLUS            reduce using rule 130 (cyTerm -> empty .)
    MINUS           reduce using rule 130 (cyTerm -> empty .)
    EQ              reduce using rule 130 (cyTerm -> empty .)
    DIF             reduce using rule 130 (cyTerm -> empty .)
    LTOEQ           reduce using rule 130 (cyTerm -> empty .)
    GTOEQ           reduce using rule 130 (cyTerm -> empty .)
    GT              reduce using rule 130 (cyTerm -> empty .)
    LT              reduce using rule 130 (cyTerm -> empty .)
    AND             reduce using rule 130 (cyTerm -> empty .)
    OR              reduce using rule 130 (cyTerm -> empty .)
    ,               reduce using rule 130 (cyTerm -> empty .)
    )               reduce using rule 130 (cyTerm -> empty .)
    ]               reduce using rule 130 (cyTerm -> empty .)
    ;               reduce using rule 130 (cyTerm -> empty .)


state 166

    (129) cyTerm -> DIV . term
    (127) term -> . fact cyTerm
    (131) fact -> . CTES
    (132) fact -> . cte
    (133) fact -> . funcCall
    (134) fact -> . ( expresion )
    (135) fact -> . ID saveVariable opAccess errorOpAccess
    (150) cte -> . CTED
    (151) cte -> . CTEF
    (152) cte -> . TRUE
    (153) cte -> . FALSE
    (89) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    term                           shift and go to state 198
    funcCall                       shift and go to state 134
    cte                            shift and go to state 135
    fact                           shift and go to state 138

state 167

    (128) cyTerm -> MULT . errorFact term
    (137) errorFact -> .

    CTES            reduce using rule 137 (errorFact -> .)
    (               reduce using rule 137 (errorFact -> .)
    ID              reduce using rule 137 (errorFact -> .)
    CTED            reduce using rule 137 (errorFact -> .)
    CTEF            reduce using rule 137 (errorFact -> .)
    TRUE            reduce using rule 137 (errorFact -> .)
    FALSE           reduce using rule 137 (errorFact -> .)

    errorFact                      shift and go to state 199

state 168

    (99) condition -> errorCondition IF ( expresion . ) { body } optionalElse

    )               shift and go to state 200


state 169

    (41) param -> saveType type errorParam ID . cyTypeParam cyParam
    (45) cyTypeParam -> . , saveID saveTypeParam ID cyTypeParam
    (46) cyTypeParam -> . empty
    (154) empty -> .

    ,               shift and go to state 55
    ;               reduce using rule 154 (empty -> .)
    )               reduce using rule 154 (empty -> .)

    empty                          shift and go to state 56
    cyTypeParam                    shift and go to state 201

state 170

    (59) opReturns -> errorOpReturns . RETURNS type saveReturnType { opVars body return

    RETURNS         shift and go to state 202


state 171

    (60) opReturns -> { . opVars body
    (6) opVars -> . vars
    (7) opVars -> . empty
    (10) vars -> . errorVars VARS declare
    (154) empty -> .
    (12) errorVars -> .

    ID              reduce using rule 154 (empty -> .)
    IF              reduce using rule 154 (empty -> .)
    FOR             reduce using rule 154 (empty -> .)
    WHILE           reduce using rule 154 (empty -> .)
    }               reduce using rule 154 (empty -> .)
    VARS            reduce using rule 12 (errorVars -> .)

    vars                           shift and go to state 8
    opVars                         shift and go to state 203
    errorVars                      shift and go to state 10
    empty                          shift and go to state 11

state 172

    (49) function -> errorFunction FUNC saveType ID saveProc flagParameters ( opParameters ) flagParameters opReturns . } clearVarsTable

    }               shift and go to state 204


state 173

    (77) whileCycle -> errorWhileCycle WHILE ( expresion ) . { body }

    {               shift and go to state 205


state 174

    (79) forCycle -> errorForCycle FOR ( assign ; . expresion ; assign ) { body }
    (106) expresion -> . sExp cyExpresion errorExpresion
    (111) sExp -> . exp errorOpSExp opSExp
    (120) exp -> . term performAddSub errorCyExp cyExp
    (127) term -> . fact cyTerm
    (131) fact -> . CTES
    (132) fact -> . cte
    (133) fact -> . funcCall
    (134) fact -> . ( expresion )
    (135) fact -> . ID saveVariable opAccess errorOpAccess
    (150) cte -> . CTED
    (151) cte -> . CTEF
    (152) cte -> . TRUE
    (153) cte -> . FALSE
    (89) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    sExp                           shift and go to state 126
    expresion                      shift and go to state 206
    term                           shift and go to state 132
    funcCall                       shift and go to state 134
    cte                            shift and go to state 135
    exp                            shift and go to state 137
    fact                           shift and go to state 138

state 175

    (35) initDict -> ASGN ( . dictType : dictType ) errorInitDict
    (37) dictType -> . errorDictType CTES
    (38) dictType -> . cte
    (39) dictType -> . ID
    (40) errorDictType -> .
    (150) cte -> . CTED
    (151) cte -> . CTEF
    (152) cte -> . TRUE
    (153) cte -> . FALSE

    ID              shift and go to state 210
    CTES            reduce using rule 40 (errorDictType -> .)
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    dictType                       shift and go to state 207
    errorDictType                  shift and go to state 208
    cte                            shift and go to state 209

state 176

    (29) init -> ASGN saveOperator . initWith errorInit
    (32) initWith -> . expresion performAssign
    (33) initWith -> . funcCall
    (106) expresion -> . sExp cyExpresion errorExpresion
    (89) funcCall -> . ID ( opParamCall )
    (111) sExp -> . exp errorOpSExp opSExp
    (120) exp -> . term performAddSub errorCyExp cyExp
    (127) term -> . fact cyTerm
    (131) fact -> . CTES
    (132) fact -> . cte
    (133) fact -> . funcCall
    (134) fact -> . ( expresion )
    (135) fact -> . ID saveVariable opAccess errorOpAccess
    (150) cte -> . CTED
    (151) cte -> . CTEF
    (152) cte -> . TRUE
    (153) cte -> . FALSE

    ID              shift and go to state 212
    CTES            shift and go to state 131
    (               shift and go to state 125
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    initWith                       shift and go to state 211
    sExp                           shift and go to state 126
    expresion                      shift and go to state 213
    term                           shift and go to state 132
    funcCall                       shift and go to state 214
    cte                            shift and go to state 135
    exp                            shift and go to state 137
    fact                           shift and go to state 138

state 177

    (85) assignOptions -> [ expresion . ] assignMatrix init

    ]               shift and go to state 215


state 178

    (134) fact -> ( expresion ) .

    MULT            reduce using rule 134 (fact -> ( expresion ) .)
    DIV             reduce using rule 134 (fact -> ( expresion ) .)
    PLUS            reduce using rule 134 (fact -> ( expresion ) .)
    MINUS           reduce using rule 134 (fact -> ( expresion ) .)
    EQ              reduce using rule 134 (fact -> ( expresion ) .)
    DIF             reduce using rule 134 (fact -> ( expresion ) .)
    LTOEQ           reduce using rule 134 (fact -> ( expresion ) .)
    GTOEQ           reduce using rule 134 (fact -> ( expresion ) .)
    GT              reduce using rule 134 (fact -> ( expresion ) .)
    LT              reduce using rule 134 (fact -> ( expresion ) .)
    AND             reduce using rule 134 (fact -> ( expresion ) .)
    OR              reduce using rule 134 (fact -> ( expresion ) .)
    ]               reduce using rule 134 (fact -> ( expresion ) .)
    ;               reduce using rule 134 (fact -> ( expresion ) .)
    )               reduce using rule 134 (fact -> ( expresion ) .)
    ,               reduce using rule 134 (fact -> ( expresion ) .)


state 179

    (108) cyExpresion -> AND expresion .

    ,               reduce using rule 108 (cyExpresion -> AND expresion .)
    )               reduce using rule 108 (cyExpresion -> AND expresion .)
    ]               reduce using rule 108 (cyExpresion -> AND expresion .)
    ;               reduce using rule 108 (cyExpresion -> AND expresion .)


state 180

    (106) expresion -> sExp cyExpresion errorExpresion .

    ]               reduce using rule 106 (expresion -> sExp cyExpresion errorExpresion .)
    )               reduce using rule 106 (expresion -> sExp cyExpresion errorExpresion .)
    ;               reduce using rule 106 (expresion -> sExp cyExpresion errorExpresion .)
    ,               reduce using rule 106 (expresion -> sExp cyExpresion errorExpresion .)


state 181

    (109) cyExpresion -> OR expresion .

    ,               reduce using rule 109 (cyExpresion -> OR expresion .)
    )               reduce using rule 109 (cyExpresion -> OR expresion .)
    ]               reduce using rule 109 (cyExpresion -> OR expresion .)
    ;               reduce using rule 109 (cyExpresion -> OR expresion .)


state 182

    (142) opStruct -> errorOpStruct . [ expresion ] opMatrix

    [               shift and go to state 216


state 183

    (139) opAccess -> opDictionary .

    MULT            reduce using rule 139 (opAccess -> opDictionary .)
    DIV             reduce using rule 139 (opAccess -> opDictionary .)
    PLUS            reduce using rule 139 (opAccess -> opDictionary .)
    MINUS           reduce using rule 139 (opAccess -> opDictionary .)
    EQ              reduce using rule 139 (opAccess -> opDictionary .)
    DIF             reduce using rule 139 (opAccess -> opDictionary .)
    LTOEQ           reduce using rule 139 (opAccess -> opDictionary .)
    GTOEQ           reduce using rule 139 (opAccess -> opDictionary .)
    GT              reduce using rule 139 (opAccess -> opDictionary .)
    LT              reduce using rule 139 (opAccess -> opDictionary .)
    AND             reduce using rule 139 (opAccess -> opDictionary .)
    OR              reduce using rule 139 (opAccess -> opDictionary .)
    ,               reduce using rule 139 (opAccess -> opDictionary .)
    )               reduce using rule 139 (opAccess -> opDictionary .)
    ]               reduce using rule 139 (opAccess -> opDictionary .)
    ;               reduce using rule 139 (opAccess -> opDictionary .)


state 184

    (138) opAccess -> opStruct .

    MULT            reduce using rule 138 (opAccess -> opStruct .)
    DIV             reduce using rule 138 (opAccess -> opStruct .)
    PLUS            reduce using rule 138 (opAccess -> opStruct .)
    MINUS           reduce using rule 138 (opAccess -> opStruct .)
    EQ              reduce using rule 138 (opAccess -> opStruct .)
    DIF             reduce using rule 138 (opAccess -> opStruct .)
    LTOEQ           reduce using rule 138 (opAccess -> opStruct .)
    GTOEQ           reduce using rule 138 (opAccess -> opStruct .)
    GT              reduce using rule 138 (opAccess -> opStruct .)
    LT              reduce using rule 138 (opAccess -> opStruct .)
    AND             reduce using rule 138 (opAccess -> opStruct .)
    OR              reduce using rule 138 (opAccess -> opStruct .)
    ,               reduce using rule 138 (opAccess -> opStruct .)
    )               reduce using rule 138 (opAccess -> opStruct .)
    ]               reduce using rule 138 (opAccess -> opStruct .)
    ;               reduce using rule 138 (opAccess -> opStruct .)


state 185

    (135) fact -> ID saveVariable opAccess . errorOpAccess
    (141) errorOpAccess -> .

    MULT            reduce using rule 141 (errorOpAccess -> .)
    DIV             reduce using rule 141 (errorOpAccess -> .)
    PLUS            reduce using rule 141 (errorOpAccess -> .)
    MINUS           reduce using rule 141 (errorOpAccess -> .)
    EQ              reduce using rule 141 (errorOpAccess -> .)
    DIF             reduce using rule 141 (errorOpAccess -> .)
    LTOEQ           reduce using rule 141 (errorOpAccess -> .)
    GTOEQ           reduce using rule 141 (errorOpAccess -> .)
    GT              reduce using rule 141 (errorOpAccess -> .)
    LT              reduce using rule 141 (errorOpAccess -> .)
    AND             reduce using rule 141 (errorOpAccess -> .)
    OR              reduce using rule 141 (errorOpAccess -> .)
    ,               reduce using rule 141 (errorOpAccess -> .)
    )               reduce using rule 141 (errorOpAccess -> .)
    ]               reduce using rule 141 (errorOpAccess -> .)
    ;               reduce using rule 141 (errorOpAccess -> .)

    errorOpAccess                  shift and go to state 217

state 186

    (147) opDictionary -> . . dictIndex
    (148) dictIndex -> . FIRST
    (149) dictIndex -> . LAST

    FIRST           shift and go to state 218
    LAST            shift and go to state 219

    dictIndex                      shift and go to state 220

state 187

    (140) opAccess -> empty .

    MULT            reduce using rule 140 (opAccess -> empty .)
    DIV             reduce using rule 140 (opAccess -> empty .)
    PLUS            reduce using rule 140 (opAccess -> empty .)
    MINUS           reduce using rule 140 (opAccess -> empty .)
    EQ              reduce using rule 140 (opAccess -> empty .)
    DIF             reduce using rule 140 (opAccess -> empty .)
    LTOEQ           reduce using rule 140 (opAccess -> empty .)
    GTOEQ           reduce using rule 140 (opAccess -> empty .)
    GT              reduce using rule 140 (opAccess -> empty .)
    LT              reduce using rule 140 (opAccess -> empty .)
    AND             reduce using rule 140 (opAccess -> empty .)
    OR              reduce using rule 140 (opAccess -> empty .)
    ,               reduce using rule 140 (opAccess -> empty .)
    )               reduce using rule 140 (opAccess -> empty .)
    ]               reduce using rule 140 (opAccess -> empty .)
    ;               reduce using rule 140 (opAccess -> empty .)


state 188

    (92) cyParamCall -> , expresion . cyParamCall
    (92) cyParamCall -> . , expresion cyParamCall
    (93) cyParamCall -> . empty
    (154) empty -> .

    ,               shift and go to state 160
    )               reduce using rule 154 (empty -> .)

    cyParamCall                    shift and go to state 221
    empty                          shift and go to state 161

state 189

    (120) exp -> term performAddSub errorCyExp . cyExp
    (122) cyExp -> . PLUS saveOperator exp
    (123) cyExp -> . MINUS saveOperator exp
    (124) cyExp -> . empty
    (154) empty -> .

    PLUS            shift and go to state 223
    MINUS           shift and go to state 224
    EQ              reduce using rule 154 (empty -> .)
    DIF             reduce using rule 154 (empty -> .)
    LTOEQ           reduce using rule 154 (empty -> .)
    GTOEQ           reduce using rule 154 (empty -> .)
    GT              reduce using rule 154 (empty -> .)
    LT              reduce using rule 154 (empty -> .)
    AND             reduce using rule 154 (empty -> .)
    OR              reduce using rule 154 (empty -> .)
    ,               reduce using rule 154 (empty -> .)
    )               reduce using rule 154 (empty -> .)
    ]               reduce using rule 154 (empty -> .)
    ;               reduce using rule 154 (empty -> .)

    cyExp                          shift and go to state 222
    empty                          shift and go to state 225

state 190

    (116) opSExp -> GT . exp
    (120) exp -> . term performAddSub errorCyExp cyExp
    (127) term -> . fact cyTerm
    (131) fact -> . CTES
    (132) fact -> . cte
    (133) fact -> . funcCall
    (134) fact -> . ( expresion )
    (135) fact -> . ID saveVariable opAccess errorOpAccess
    (150) cte -> . CTED
    (151) cte -> . CTEF
    (152) cte -> . TRUE
    (153) cte -> . FALSE
    (89) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    term                           shift and go to state 132
    funcCall                       shift and go to state 134
    cte                            shift and go to state 135
    exp                            shift and go to state 226
    fact                           shift and go to state 138

state 191

    (112) opSExp -> EQ . exp
    (120) exp -> . term performAddSub errorCyExp cyExp
    (127) term -> . fact cyTerm
    (131) fact -> . CTES
    (132) fact -> . cte
    (133) fact -> . funcCall
    (134) fact -> . ( expresion )
    (135) fact -> . ID saveVariable opAccess errorOpAccess
    (150) cte -> . CTED
    (151) cte -> . CTEF
    (152) cte -> . TRUE
    (153) cte -> . FALSE
    (89) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    term                           shift and go to state 132
    funcCall                       shift and go to state 134
    cte                            shift and go to state 135
    exp                            shift and go to state 227
    fact                           shift and go to state 138

state 192

    (113) opSExp -> DIF . exp
    (120) exp -> . term performAddSub errorCyExp cyExp
    (127) term -> . fact cyTerm
    (131) fact -> . CTES
    (132) fact -> . cte
    (133) fact -> . funcCall
    (134) fact -> . ( expresion )
    (135) fact -> . ID saveVariable opAccess errorOpAccess
    (150) cte -> . CTED
    (151) cte -> . CTEF
    (152) cte -> . TRUE
    (153) cte -> . FALSE
    (89) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    term                           shift and go to state 132
    funcCall                       shift and go to state 134
    cte                            shift and go to state 135
    exp                            shift and go to state 228
    fact                           shift and go to state 138

state 193

    (117) opSExp -> LT . exp
    (120) exp -> . term performAddSub errorCyExp cyExp
    (127) term -> . fact cyTerm
    (131) fact -> . CTES
    (132) fact -> . cte
    (133) fact -> . funcCall
    (134) fact -> . ( expresion )
    (135) fact -> . ID saveVariable opAccess errorOpAccess
    (150) cte -> . CTED
    (151) cte -> . CTEF
    (152) cte -> . TRUE
    (153) cte -> . FALSE
    (89) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    term                           shift and go to state 132
    funcCall                       shift and go to state 134
    cte                            shift and go to state 135
    exp                            shift and go to state 229
    fact                           shift and go to state 138

state 194

    (115) opSExp -> GTOEQ . exp
    (120) exp -> . term performAddSub errorCyExp cyExp
    (127) term -> . fact cyTerm
    (131) fact -> . CTES
    (132) fact -> . cte
    (133) fact -> . funcCall
    (134) fact -> . ( expresion )
    (135) fact -> . ID saveVariable opAccess errorOpAccess
    (150) cte -> . CTED
    (151) cte -> . CTEF
    (152) cte -> . TRUE
    (153) cte -> . FALSE
    (89) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    term                           shift and go to state 132
    funcCall                       shift and go to state 134
    cte                            shift and go to state 135
    exp                            shift and go to state 230
    fact                           shift and go to state 138

state 195

    (114) opSExp -> LTOEQ . exp
    (120) exp -> . term performAddSub errorCyExp cyExp
    (127) term -> . fact cyTerm
    (131) fact -> . CTES
    (132) fact -> . cte
    (133) fact -> . funcCall
    (134) fact -> . ( expresion )
    (135) fact -> . ID saveVariable opAccess errorOpAccess
    (150) cte -> . CTED
    (151) cte -> . CTEF
    (152) cte -> . TRUE
    (153) cte -> . FALSE
    (89) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    term                           shift and go to state 132
    funcCall                       shift and go to state 134
    cte                            shift and go to state 135
    exp                            shift and go to state 231
    fact                           shift and go to state 138

state 196

    (118) opSExp -> empty .

    AND             reduce using rule 118 (opSExp -> empty .)
    OR              reduce using rule 118 (opSExp -> empty .)
    ,               reduce using rule 118 (opSExp -> empty .)
    )               reduce using rule 118 (opSExp -> empty .)
    ]               reduce using rule 118 (opSExp -> empty .)
    ;               reduce using rule 118 (opSExp -> empty .)


state 197

    (111) sExp -> exp errorOpSExp opSExp .

    AND             reduce using rule 111 (sExp -> exp errorOpSExp opSExp .)
    OR              reduce using rule 111 (sExp -> exp errorOpSExp opSExp .)
    )               reduce using rule 111 (sExp -> exp errorOpSExp opSExp .)
    ]               reduce using rule 111 (sExp -> exp errorOpSExp opSExp .)
    ,               reduce using rule 111 (sExp -> exp errorOpSExp opSExp .)
    ;               reduce using rule 111 (sExp -> exp errorOpSExp opSExp .)


state 198

    (129) cyTerm -> DIV term .

    PLUS            reduce using rule 129 (cyTerm -> DIV term .)
    MINUS           reduce using rule 129 (cyTerm -> DIV term .)
    EQ              reduce using rule 129 (cyTerm -> DIV term .)
    DIF             reduce using rule 129 (cyTerm -> DIV term .)
    LTOEQ           reduce using rule 129 (cyTerm -> DIV term .)
    GTOEQ           reduce using rule 129 (cyTerm -> DIV term .)
    GT              reduce using rule 129 (cyTerm -> DIV term .)
    LT              reduce using rule 129 (cyTerm -> DIV term .)
    AND             reduce using rule 129 (cyTerm -> DIV term .)
    OR              reduce using rule 129 (cyTerm -> DIV term .)
    ,               reduce using rule 129 (cyTerm -> DIV term .)
    )               reduce using rule 129 (cyTerm -> DIV term .)
    ]               reduce using rule 129 (cyTerm -> DIV term .)
    ;               reduce using rule 129 (cyTerm -> DIV term .)


state 199

    (128) cyTerm -> MULT errorFact . term
    (127) term -> . fact cyTerm
    (131) fact -> . CTES
    (132) fact -> . cte
    (133) fact -> . funcCall
    (134) fact -> . ( expresion )
    (135) fact -> . ID saveVariable opAccess errorOpAccess
    (150) cte -> . CTED
    (151) cte -> . CTEF
    (152) cte -> . TRUE
    (153) cte -> . FALSE
    (89) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    term                           shift and go to state 232
    funcCall                       shift and go to state 134
    cte                            shift and go to state 135
    fact                           shift and go to state 138

state 200

    (99) condition -> errorCondition IF ( expresion ) . { body } optionalElse

    {               shift and go to state 233


state 201

    (41) param -> saveType type errorParam ID cyTypeParam . cyParam
    (43) cyParam -> . errorCyParam saveID saveTypeParam ; param
    (44) cyParam -> . empty saveID saveTypeParam
    (48) errorCyParam -> .
    (154) empty -> .

    ;               reduce using rule 48 (errorCyParam -> .)
    )               reduce using rule 154 (empty -> .)

    empty                          shift and go to state 234
    cyParam                        shift and go to state 236
    errorCyParam                   shift and go to state 235

state 202

    (59) opReturns -> errorOpReturns RETURNS . type saveReturnType { opVars body return
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    errorType                      shift and go to state 31
    type                           shift and go to state 237

state 203

    (60) opReturns -> { opVars . body
    (71) body -> . errorBody cyInstruction
    (72) body -> . empty
    (73) errorBody -> .
    (154) empty -> .

    ID              reduce using rule 73 (errorBody -> .)
    IF              reduce using rule 73 (errorBody -> .)
    FOR             reduce using rule 73 (errorBody -> .)
    WHILE           reduce using rule 73 (errorBody -> .)
    }               reduce using rule 154 (empty -> .)

    body                           shift and go to state 238
    empty                          shift and go to state 75
    errorBody                      shift and go to state 74

state 204

    (49) function -> errorFunction FUNC saveType ID saveProc flagParameters ( opParameters ) flagParameters opReturns } . clearVarsTable
    (51) clearVarsTable -> .

    FUNC            reduce using rule 51 (clearVarsTable -> .)
    MAIN            reduce using rule 51 (clearVarsTable -> .)

    clearVarsTable                 shift and go to state 239

state 205

    (77) whileCycle -> errorWhileCycle WHILE ( expresion ) { . body }
    (71) body -> . errorBody cyInstruction
    (72) body -> . empty
    (73) errorBody -> .
    (154) empty -> .

    ID              reduce using rule 73 (errorBody -> .)
    IF              reduce using rule 73 (errorBody -> .)
    FOR             reduce using rule 73 (errorBody -> .)
    WHILE           reduce using rule 73 (errorBody -> .)
    }               reduce using rule 154 (empty -> .)

    body                           shift and go to state 240
    errorBody                      shift and go to state 74
    empty                          shift and go to state 75

state 206

    (79) forCycle -> errorForCycle FOR ( assign ; expresion . ; assign ) { body }

    ;               shift and go to state 241


state 207

    (35) initDict -> ASGN ( dictType . : dictType ) errorInitDict

    :               shift and go to state 242


state 208

    (37) dictType -> errorDictType . CTES

    CTES            shift and go to state 243


state 209

    (38) dictType -> cte .

    :               reduce using rule 38 (dictType -> cte .)
    )               reduce using rule 38 (dictType -> cte .)


state 210

    (39) dictType -> ID .

    :               reduce using rule 39 (dictType -> ID .)
    )               reduce using rule 39 (dictType -> ID .)


state 211

    (29) init -> ASGN saveOperator initWith . errorInit
    (31) errorInit -> .

    ;               reduce using rule 31 (errorInit -> .)
    )               reduce using rule 31 (errorInit -> .)

    errorInit                      shift and go to state 244

state 212

    (89) funcCall -> ID . ( opParamCall )
    (135) fact -> ID . saveVariable opAccess errorOpAccess
    (136) saveVariable -> .

    (               shift and go to state 111
    .               reduce using rule 136 (saveVariable -> .)
    [               reduce using rule 136 (saveVariable -> .)
    MULT            reduce using rule 136 (saveVariable -> .)
    DIV             reduce using rule 136 (saveVariable -> .)
    PLUS            reduce using rule 136 (saveVariable -> .)
    MINUS           reduce using rule 136 (saveVariable -> .)
    EQ              reduce using rule 136 (saveVariable -> .)
    DIF             reduce using rule 136 (saveVariable -> .)
    LTOEQ           reduce using rule 136 (saveVariable -> .)
    GTOEQ           reduce using rule 136 (saveVariable -> .)
    GT              reduce using rule 136 (saveVariable -> .)
    LT              reduce using rule 136 (saveVariable -> .)
    AND             reduce using rule 136 (saveVariable -> .)
    OR              reduce using rule 136 (saveVariable -> .)
    ;               reduce using rule 136 (saveVariable -> .)
    )               reduce using rule 136 (saveVariable -> .)

    saveVariable                   shift and go to state 158

state 213

    (32) initWith -> expresion . performAssign
    (34) performAssign -> .

    ;               reduce using rule 34 (performAssign -> .)
    )               reduce using rule 34 (performAssign -> .)

    performAssign                  shift and go to state 245

state 214

    (33) initWith -> funcCall .
    (133) fact -> funcCall .

  ! reduce/reduce conflict for ; resolved using rule 33 (initWith -> funcCall .)
  ! reduce/reduce conflict for ) resolved using rule 33 (initWith -> funcCall .)
    ;               reduce using rule 33 (initWith -> funcCall .)
    )               reduce using rule 33 (initWith -> funcCall .)
    MULT            reduce using rule 133 (fact -> funcCall .)
    DIV             reduce using rule 133 (fact -> funcCall .)
    PLUS            reduce using rule 133 (fact -> funcCall .)
    MINUS           reduce using rule 133 (fact -> funcCall .)
    EQ              reduce using rule 133 (fact -> funcCall .)
    DIF             reduce using rule 133 (fact -> funcCall .)
    LTOEQ           reduce using rule 133 (fact -> funcCall .)
    GTOEQ           reduce using rule 133 (fact -> funcCall .)
    GT              reduce using rule 133 (fact -> funcCall .)
    LT              reduce using rule 133 (fact -> funcCall .)
    AND             reduce using rule 133 (fact -> funcCall .)
    OR              reduce using rule 133 (fact -> funcCall .)

  ! ;               [ reduce using rule 133 (fact -> funcCall .) ]
  ! )               [ reduce using rule 133 (fact -> funcCall .) ]


state 215

    (85) assignOptions -> [ expresion ] . assignMatrix init
    (86) assignMatrix -> . [ expresion ] errorAssignMatrix
    (87) assignMatrix -> . empty
    (154) empty -> .

    [               shift and go to state 247
    ASGN            reduce using rule 154 (empty -> .)

    assignMatrix                   shift and go to state 246
    empty                          shift and go to state 248

state 216

    (142) opStruct -> errorOpStruct [ . expresion ] opMatrix
    (106) expresion -> . sExp cyExpresion errorExpresion
    (111) sExp -> . exp errorOpSExp opSExp
    (120) exp -> . term performAddSub errorCyExp cyExp
    (127) term -> . fact cyTerm
    (131) fact -> . CTES
    (132) fact -> . cte
    (133) fact -> . funcCall
    (134) fact -> . ( expresion )
    (135) fact -> . ID saveVariable opAccess errorOpAccess
    (150) cte -> . CTED
    (151) cte -> . CTEF
    (152) cte -> . TRUE
    (153) cte -> . FALSE
    (89) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    expresion                      shift and go to state 249
    term                           shift and go to state 132
    exp                            shift and go to state 137
    funcCall                       shift and go to state 134
    sExp                           shift and go to state 126
    cte                            shift and go to state 135
    fact                           shift and go to state 138

state 217

    (135) fact -> ID saveVariable opAccess errorOpAccess .

    MULT            reduce using rule 135 (fact -> ID saveVariable opAccess errorOpAccess .)
    DIV             reduce using rule 135 (fact -> ID saveVariable opAccess errorOpAccess .)
    PLUS            reduce using rule 135 (fact -> ID saveVariable opAccess errorOpAccess .)
    MINUS           reduce using rule 135 (fact -> ID saveVariable opAccess errorOpAccess .)
    EQ              reduce using rule 135 (fact -> ID saveVariable opAccess errorOpAccess .)
    DIF             reduce using rule 135 (fact -> ID saveVariable opAccess errorOpAccess .)
    LTOEQ           reduce using rule 135 (fact -> ID saveVariable opAccess errorOpAccess .)
    GTOEQ           reduce using rule 135 (fact -> ID saveVariable opAccess errorOpAccess .)
    GT              reduce using rule 135 (fact -> ID saveVariable opAccess errorOpAccess .)
    LT              reduce using rule 135 (fact -> ID saveVariable opAccess errorOpAccess .)
    AND             reduce using rule 135 (fact -> ID saveVariable opAccess errorOpAccess .)
    OR              reduce using rule 135 (fact -> ID saveVariable opAccess errorOpAccess .)
    ]               reduce using rule 135 (fact -> ID saveVariable opAccess errorOpAccess .)
    ;               reduce using rule 135 (fact -> ID saveVariable opAccess errorOpAccess .)
    )               reduce using rule 135 (fact -> ID saveVariable opAccess errorOpAccess .)
    ,               reduce using rule 135 (fact -> ID saveVariable opAccess errorOpAccess .)


state 218

    (148) dictIndex -> FIRST .

    MULT            reduce using rule 148 (dictIndex -> FIRST .)
    DIV             reduce using rule 148 (dictIndex -> FIRST .)
    PLUS            reduce using rule 148 (dictIndex -> FIRST .)
    MINUS           reduce using rule 148 (dictIndex -> FIRST .)
    EQ              reduce using rule 148 (dictIndex -> FIRST .)
    DIF             reduce using rule 148 (dictIndex -> FIRST .)
    LTOEQ           reduce using rule 148 (dictIndex -> FIRST .)
    GTOEQ           reduce using rule 148 (dictIndex -> FIRST .)
    GT              reduce using rule 148 (dictIndex -> FIRST .)
    LT              reduce using rule 148 (dictIndex -> FIRST .)
    AND             reduce using rule 148 (dictIndex -> FIRST .)
    OR              reduce using rule 148 (dictIndex -> FIRST .)
    ,               reduce using rule 148 (dictIndex -> FIRST .)
    )               reduce using rule 148 (dictIndex -> FIRST .)
    ]               reduce using rule 148 (dictIndex -> FIRST .)
    ;               reduce using rule 148 (dictIndex -> FIRST .)


state 219

    (149) dictIndex -> LAST .

    MULT            reduce using rule 149 (dictIndex -> LAST .)
    DIV             reduce using rule 149 (dictIndex -> LAST .)
    PLUS            reduce using rule 149 (dictIndex -> LAST .)
    MINUS           reduce using rule 149 (dictIndex -> LAST .)
    EQ              reduce using rule 149 (dictIndex -> LAST .)
    DIF             reduce using rule 149 (dictIndex -> LAST .)
    LTOEQ           reduce using rule 149 (dictIndex -> LAST .)
    GTOEQ           reduce using rule 149 (dictIndex -> LAST .)
    GT              reduce using rule 149 (dictIndex -> LAST .)
    LT              reduce using rule 149 (dictIndex -> LAST .)
    AND             reduce using rule 149 (dictIndex -> LAST .)
    OR              reduce using rule 149 (dictIndex -> LAST .)
    ,               reduce using rule 149 (dictIndex -> LAST .)
    )               reduce using rule 149 (dictIndex -> LAST .)
    ]               reduce using rule 149 (dictIndex -> LAST .)
    ;               reduce using rule 149 (dictIndex -> LAST .)


state 220

    (147) opDictionary -> . dictIndex .

    MULT            reduce using rule 147 (opDictionary -> . dictIndex .)
    DIV             reduce using rule 147 (opDictionary -> . dictIndex .)
    PLUS            reduce using rule 147 (opDictionary -> . dictIndex .)
    MINUS           reduce using rule 147 (opDictionary -> . dictIndex .)
    EQ              reduce using rule 147 (opDictionary -> . dictIndex .)
    DIF             reduce using rule 147 (opDictionary -> . dictIndex .)
    LTOEQ           reduce using rule 147 (opDictionary -> . dictIndex .)
    GTOEQ           reduce using rule 147 (opDictionary -> . dictIndex .)
    GT              reduce using rule 147 (opDictionary -> . dictIndex .)
    LT              reduce using rule 147 (opDictionary -> . dictIndex .)
    AND             reduce using rule 147 (opDictionary -> . dictIndex .)
    OR              reduce using rule 147 (opDictionary -> . dictIndex .)
    ,               reduce using rule 147 (opDictionary -> . dictIndex .)
    )               reduce using rule 147 (opDictionary -> . dictIndex .)
    ]               reduce using rule 147 (opDictionary -> . dictIndex .)
    ;               reduce using rule 147 (opDictionary -> . dictIndex .)


state 221

    (92) cyParamCall -> , expresion cyParamCall .

    )               reduce using rule 92 (cyParamCall -> , expresion cyParamCall .)


state 222

    (120) exp -> term performAddSub errorCyExp cyExp .

    EQ              reduce using rule 120 (exp -> term performAddSub errorCyExp cyExp .)
    DIF             reduce using rule 120 (exp -> term performAddSub errorCyExp cyExp .)
    LTOEQ           reduce using rule 120 (exp -> term performAddSub errorCyExp cyExp .)
    GTOEQ           reduce using rule 120 (exp -> term performAddSub errorCyExp cyExp .)
    GT              reduce using rule 120 (exp -> term performAddSub errorCyExp cyExp .)
    LT              reduce using rule 120 (exp -> term performAddSub errorCyExp cyExp .)
    AND             reduce using rule 120 (exp -> term performAddSub errorCyExp cyExp .)
    OR              reduce using rule 120 (exp -> term performAddSub errorCyExp cyExp .)
    )               reduce using rule 120 (exp -> term performAddSub errorCyExp cyExp .)
    ;               reduce using rule 120 (exp -> term performAddSub errorCyExp cyExp .)
    ,               reduce using rule 120 (exp -> term performAddSub errorCyExp cyExp .)
    ]               reduce using rule 120 (exp -> term performAddSub errorCyExp cyExp .)


state 223

    (122) cyExp -> PLUS . saveOperator exp
    (125) saveOperator -> .

    CTES            reduce using rule 125 (saveOperator -> .)
    (               reduce using rule 125 (saveOperator -> .)
    ID              reduce using rule 125 (saveOperator -> .)
    CTED            reduce using rule 125 (saveOperator -> .)
    CTEF            reduce using rule 125 (saveOperator -> .)
    TRUE            reduce using rule 125 (saveOperator -> .)
    FALSE           reduce using rule 125 (saveOperator -> .)

    saveOperator                   shift and go to state 250

state 224

    (123) cyExp -> MINUS . saveOperator exp
    (125) saveOperator -> .

    CTES            reduce using rule 125 (saveOperator -> .)
    (               reduce using rule 125 (saveOperator -> .)
    ID              reduce using rule 125 (saveOperator -> .)
    CTED            reduce using rule 125 (saveOperator -> .)
    CTEF            reduce using rule 125 (saveOperator -> .)
    TRUE            reduce using rule 125 (saveOperator -> .)
    FALSE           reduce using rule 125 (saveOperator -> .)

    saveOperator                   shift and go to state 251

state 225

    (124) cyExp -> empty .

    EQ              reduce using rule 124 (cyExp -> empty .)
    DIF             reduce using rule 124 (cyExp -> empty .)
    LTOEQ           reduce using rule 124 (cyExp -> empty .)
    GTOEQ           reduce using rule 124 (cyExp -> empty .)
    GT              reduce using rule 124 (cyExp -> empty .)
    LT              reduce using rule 124 (cyExp -> empty .)
    AND             reduce using rule 124 (cyExp -> empty .)
    OR              reduce using rule 124 (cyExp -> empty .)
    ,               reduce using rule 124 (cyExp -> empty .)
    )               reduce using rule 124 (cyExp -> empty .)
    ]               reduce using rule 124 (cyExp -> empty .)
    ;               reduce using rule 124 (cyExp -> empty .)


state 226

    (116) opSExp -> GT exp .

    AND             reduce using rule 116 (opSExp -> GT exp .)
    OR              reduce using rule 116 (opSExp -> GT exp .)
    ,               reduce using rule 116 (opSExp -> GT exp .)
    )               reduce using rule 116 (opSExp -> GT exp .)
    ]               reduce using rule 116 (opSExp -> GT exp .)
    ;               reduce using rule 116 (opSExp -> GT exp .)


state 227

    (112) opSExp -> EQ exp .

    AND             reduce using rule 112 (opSExp -> EQ exp .)
    OR              reduce using rule 112 (opSExp -> EQ exp .)
    ,               reduce using rule 112 (opSExp -> EQ exp .)
    )               reduce using rule 112 (opSExp -> EQ exp .)
    ]               reduce using rule 112 (opSExp -> EQ exp .)
    ;               reduce using rule 112 (opSExp -> EQ exp .)


state 228

    (113) opSExp -> DIF exp .

    AND             reduce using rule 113 (opSExp -> DIF exp .)
    OR              reduce using rule 113 (opSExp -> DIF exp .)
    ,               reduce using rule 113 (opSExp -> DIF exp .)
    )               reduce using rule 113 (opSExp -> DIF exp .)
    ]               reduce using rule 113 (opSExp -> DIF exp .)
    ;               reduce using rule 113 (opSExp -> DIF exp .)


state 229

    (117) opSExp -> LT exp .

    AND             reduce using rule 117 (opSExp -> LT exp .)
    OR              reduce using rule 117 (opSExp -> LT exp .)
    ,               reduce using rule 117 (opSExp -> LT exp .)
    )               reduce using rule 117 (opSExp -> LT exp .)
    ]               reduce using rule 117 (opSExp -> LT exp .)
    ;               reduce using rule 117 (opSExp -> LT exp .)


state 230

    (115) opSExp -> GTOEQ exp .

    AND             reduce using rule 115 (opSExp -> GTOEQ exp .)
    OR              reduce using rule 115 (opSExp -> GTOEQ exp .)
    ,               reduce using rule 115 (opSExp -> GTOEQ exp .)
    )               reduce using rule 115 (opSExp -> GTOEQ exp .)
    ]               reduce using rule 115 (opSExp -> GTOEQ exp .)
    ;               reduce using rule 115 (opSExp -> GTOEQ exp .)


state 231

    (114) opSExp -> LTOEQ exp .

    AND             reduce using rule 114 (opSExp -> LTOEQ exp .)
    OR              reduce using rule 114 (opSExp -> LTOEQ exp .)
    ,               reduce using rule 114 (opSExp -> LTOEQ exp .)
    )               reduce using rule 114 (opSExp -> LTOEQ exp .)
    ]               reduce using rule 114 (opSExp -> LTOEQ exp .)
    ;               reduce using rule 114 (opSExp -> LTOEQ exp .)


state 232

    (128) cyTerm -> MULT errorFact term .

    PLUS            reduce using rule 128 (cyTerm -> MULT errorFact term .)
    MINUS           reduce using rule 128 (cyTerm -> MULT errorFact term .)
    EQ              reduce using rule 128 (cyTerm -> MULT errorFact term .)
    DIF             reduce using rule 128 (cyTerm -> MULT errorFact term .)
    LTOEQ           reduce using rule 128 (cyTerm -> MULT errorFact term .)
    GTOEQ           reduce using rule 128 (cyTerm -> MULT errorFact term .)
    GT              reduce using rule 128 (cyTerm -> MULT errorFact term .)
    LT              reduce using rule 128 (cyTerm -> MULT errorFact term .)
    AND             reduce using rule 128 (cyTerm -> MULT errorFact term .)
    OR              reduce using rule 128 (cyTerm -> MULT errorFact term .)
    ,               reduce using rule 128 (cyTerm -> MULT errorFact term .)
    )               reduce using rule 128 (cyTerm -> MULT errorFact term .)
    ]               reduce using rule 128 (cyTerm -> MULT errorFact term .)
    ;               reduce using rule 128 (cyTerm -> MULT errorFact term .)


state 233

    (99) condition -> errorCondition IF ( expresion ) { . body } optionalElse
    (71) body -> . errorBody cyInstruction
    (72) body -> . empty
    (73) errorBody -> .
    (154) empty -> .

    ID              reduce using rule 73 (errorBody -> .)
    IF              reduce using rule 73 (errorBody -> .)
    FOR             reduce using rule 73 (errorBody -> .)
    WHILE           reduce using rule 73 (errorBody -> .)
    }               reduce using rule 154 (empty -> .)

    body                           shift and go to state 252
    errorBody                      shift and go to state 74
    empty                          shift and go to state 75

state 234

    (44) cyParam -> empty . saveID saveTypeParam
    (11) saveID -> .

    )               reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 253

state 235

    (43) cyParam -> errorCyParam . saveID saveTypeParam ; param
    (11) saveID -> .

    ;               reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 254

state 236

    (41) param -> saveType type errorParam ID cyTypeParam cyParam .

    )               reduce using rule 41 (param -> saveType type errorParam ID cyTypeParam cyParam .)


state 237

    (59) opReturns -> errorOpReturns RETURNS type . saveReturnType { opVars body return
    (61) saveReturnType -> .

    {               reduce using rule 61 (saveReturnType -> .)

    saveReturnType                 shift and go to state 255

state 238

    (60) opReturns -> { opVars body .

    }               reduce using rule 60 (opReturns -> { opVars body .)


state 239

    (49) function -> errorFunction FUNC saveType ID saveProc flagParameters ( opParameters ) flagParameters opReturns } clearVarsTable .

    FUNC            reduce using rule 49 (function -> errorFunction FUNC saveType ID saveProc flagParameters ( opParameters ) flagParameters opReturns } clearVarsTable .)
    MAIN            reduce using rule 49 (function -> errorFunction FUNC saveType ID saveProc flagParameters ( opParameters ) flagParameters opReturns } clearVarsTable .)


state 240

    (77) whileCycle -> errorWhileCycle WHILE ( expresion ) { body . }

    }               shift and go to state 256


state 241

    (79) forCycle -> errorForCycle FOR ( assign ; expresion ; . assign ) { body }
    (81) assign -> . ID saveVariable errorAssign assignOptions

    ID              shift and go to state 145

    assign                         shift and go to state 257

state 242

    (35) initDict -> ASGN ( dictType : . dictType ) errorInitDict
    (37) dictType -> . errorDictType CTES
    (38) dictType -> . cte
    (39) dictType -> . ID
    (40) errorDictType -> .
    (150) cte -> . CTED
    (151) cte -> . CTEF
    (152) cte -> . TRUE
    (153) cte -> . FALSE

    ID              shift and go to state 210
    CTES            reduce using rule 40 (errorDictType -> .)
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    dictType                       shift and go to state 258
    errorDictType                  shift and go to state 208
    cte                            shift and go to state 209

state 243

    (37) dictType -> errorDictType CTES .

    :               reduce using rule 37 (dictType -> errorDictType CTES .)
    )               reduce using rule 37 (dictType -> errorDictType CTES .)


state 244

    (29) init -> ASGN saveOperator initWith errorInit .

    ;               reduce using rule 29 (init -> ASGN saveOperator initWith errorInit .)
    )               reduce using rule 29 (init -> ASGN saveOperator initWith errorInit .)


state 245

    (32) initWith -> expresion performAssign .

    ;               reduce using rule 32 (initWith -> expresion performAssign .)
    )               reduce using rule 32 (initWith -> expresion performAssign .)


state 246

    (85) assignOptions -> [ expresion ] assignMatrix . init
    (29) init -> . ASGN saveOperator initWith errorInit

    ASGN            shift and go to state 259

    init                           shift and go to state 260

state 247

    (86) assignMatrix -> [ . expresion ] errorAssignMatrix
    (106) expresion -> . sExp cyExpresion errorExpresion
    (111) sExp -> . exp errorOpSExp opSExp
    (120) exp -> . term performAddSub errorCyExp cyExp
    (127) term -> . fact cyTerm
    (131) fact -> . CTES
    (132) fact -> . cte
    (133) fact -> . funcCall
    (134) fact -> . ( expresion )
    (135) fact -> . ID saveVariable opAccess errorOpAccess
    (150) cte -> . CTED
    (151) cte -> . CTEF
    (152) cte -> . TRUE
    (153) cte -> . FALSE
    (89) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    expresion                      shift and go to state 261
    term                           shift and go to state 132
    funcCall                       shift and go to state 134
    sExp                           shift and go to state 126
    cte                            shift and go to state 135
    exp                            shift and go to state 137
    fact                           shift and go to state 138

state 248

    (87) assignMatrix -> empty .

    ASGN            reduce using rule 87 (assignMatrix -> empty .)


state 249

    (142) opStruct -> errorOpStruct [ expresion . ] opMatrix

    ]               shift and go to state 262


state 250

    (122) cyExp -> PLUS saveOperator . exp
    (120) exp -> . term performAddSub errorCyExp cyExp
    (127) term -> . fact cyTerm
    (131) fact -> . CTES
    (132) fact -> . cte
    (133) fact -> . funcCall
    (134) fact -> . ( expresion )
    (135) fact -> . ID saveVariable opAccess errorOpAccess
    (150) cte -> . CTED
    (151) cte -> . CTEF
    (152) cte -> . TRUE
    (153) cte -> . FALSE
    (89) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    term                           shift and go to state 132
    funcCall                       shift and go to state 134
    cte                            shift and go to state 135
    exp                            shift and go to state 263
    fact                           shift and go to state 138

state 251

    (123) cyExp -> MINUS saveOperator . exp
    (120) exp -> . term performAddSub errorCyExp cyExp
    (127) term -> . fact cyTerm
    (131) fact -> . CTES
    (132) fact -> . cte
    (133) fact -> . funcCall
    (134) fact -> . ( expresion )
    (135) fact -> . ID saveVariable opAccess errorOpAccess
    (150) cte -> . CTED
    (151) cte -> . CTEF
    (152) cte -> . TRUE
    (153) cte -> . FALSE
    (89) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    term                           shift and go to state 132
    funcCall                       shift and go to state 134
    cte                            shift and go to state 135
    exp                            shift and go to state 264
    fact                           shift and go to state 138

state 252

    (99) condition -> errorCondition IF ( expresion ) { body . } optionalElse

    }               shift and go to state 265


state 253

    (44) cyParam -> empty saveID . saveTypeParam
    (47) saveTypeParam -> .

    )               reduce using rule 47 (saveTypeParam -> .)

    saveTypeParam                  shift and go to state 266

state 254

    (43) cyParam -> errorCyParam saveID . saveTypeParam ; param
    (47) saveTypeParam -> .

    ;               reduce using rule 47 (saveTypeParam -> .)

    saveTypeParam                  shift and go to state 267

state 255

    (59) opReturns -> errorOpReturns RETURNS type saveReturnType . { opVars body return

    {               shift and go to state 268


state 256

    (77) whileCycle -> errorWhileCycle WHILE ( expresion ) { body } .

    ID              reduce using rule 77 (whileCycle -> errorWhileCycle WHILE ( expresion ) { body } .)
    IF              reduce using rule 77 (whileCycle -> errorWhileCycle WHILE ( expresion ) { body } .)
    FOR             reduce using rule 77 (whileCycle -> errorWhileCycle WHILE ( expresion ) { body } .)
    WHILE           reduce using rule 77 (whileCycle -> errorWhileCycle WHILE ( expresion ) { body } .)
    }               reduce using rule 77 (whileCycle -> errorWhileCycle WHILE ( expresion ) { body } .)
    RETURN          reduce using rule 77 (whileCycle -> errorWhileCycle WHILE ( expresion ) { body } .)


state 257

    (79) forCycle -> errorForCycle FOR ( assign ; expresion ; assign . ) { body }

    )               shift and go to state 269


state 258

    (35) initDict -> ASGN ( dictType : dictType . ) errorInitDict

    )               shift and go to state 270


state 259

    (29) init -> ASGN . saveOperator initWith errorInit
    (125) saveOperator -> .

    ID              reduce using rule 125 (saveOperator -> .)
    CTES            reduce using rule 125 (saveOperator -> .)
    (               reduce using rule 125 (saveOperator -> .)
    CTED            reduce using rule 125 (saveOperator -> .)
    CTEF            reduce using rule 125 (saveOperator -> .)
    TRUE            reduce using rule 125 (saveOperator -> .)
    FALSE           reduce using rule 125 (saveOperator -> .)

    saveOperator                   shift and go to state 176

state 260

    (85) assignOptions -> [ expresion ] assignMatrix init .

    ;               reduce using rule 85 (assignOptions -> [ expresion ] assignMatrix init .)
    )               reduce using rule 85 (assignOptions -> [ expresion ] assignMatrix init .)


state 261

    (86) assignMatrix -> [ expresion . ] errorAssignMatrix

    ]               shift and go to state 271


state 262

    (142) opStruct -> errorOpStruct [ expresion ] . opMatrix
    (144) opMatrix -> . errorOpMatrix [ expresion ]
    (145) opMatrix -> . empty
    (146) errorOpMatrix -> .
    (154) empty -> .

    [               reduce using rule 146 (errorOpMatrix -> .)
    MULT            reduce using rule 154 (empty -> .)
    DIV             reduce using rule 154 (empty -> .)
    PLUS            reduce using rule 154 (empty -> .)
    MINUS           reduce using rule 154 (empty -> .)
    EQ              reduce using rule 154 (empty -> .)
    DIF             reduce using rule 154 (empty -> .)
    LTOEQ           reduce using rule 154 (empty -> .)
    GTOEQ           reduce using rule 154 (empty -> .)
    GT              reduce using rule 154 (empty -> .)
    LT              reduce using rule 154 (empty -> .)
    AND             reduce using rule 154 (empty -> .)
    OR              reduce using rule 154 (empty -> .)
    ,               reduce using rule 154 (empty -> .)
    )               reduce using rule 154 (empty -> .)
    ]               reduce using rule 154 (empty -> .)
    ;               reduce using rule 154 (empty -> .)

    empty                          shift and go to state 274
    errorOpMatrix                  shift and go to state 272
    opMatrix                       shift and go to state 273

state 263

    (122) cyExp -> PLUS saveOperator exp .

    EQ              reduce using rule 122 (cyExp -> PLUS saveOperator exp .)
    DIF             reduce using rule 122 (cyExp -> PLUS saveOperator exp .)
    LTOEQ           reduce using rule 122 (cyExp -> PLUS saveOperator exp .)
    GTOEQ           reduce using rule 122 (cyExp -> PLUS saveOperator exp .)
    GT              reduce using rule 122 (cyExp -> PLUS saveOperator exp .)
    LT              reduce using rule 122 (cyExp -> PLUS saveOperator exp .)
    AND             reduce using rule 122 (cyExp -> PLUS saveOperator exp .)
    OR              reduce using rule 122 (cyExp -> PLUS saveOperator exp .)
    ,               reduce using rule 122 (cyExp -> PLUS saveOperator exp .)
    )               reduce using rule 122 (cyExp -> PLUS saveOperator exp .)
    ]               reduce using rule 122 (cyExp -> PLUS saveOperator exp .)
    ;               reduce using rule 122 (cyExp -> PLUS saveOperator exp .)


state 264

    (123) cyExp -> MINUS saveOperator exp .

    EQ              reduce using rule 123 (cyExp -> MINUS saveOperator exp .)
    DIF             reduce using rule 123 (cyExp -> MINUS saveOperator exp .)
    LTOEQ           reduce using rule 123 (cyExp -> MINUS saveOperator exp .)
    GTOEQ           reduce using rule 123 (cyExp -> MINUS saveOperator exp .)
    GT              reduce using rule 123 (cyExp -> MINUS saveOperator exp .)
    LT              reduce using rule 123 (cyExp -> MINUS saveOperator exp .)
    AND             reduce using rule 123 (cyExp -> MINUS saveOperator exp .)
    OR              reduce using rule 123 (cyExp -> MINUS saveOperator exp .)
    ,               reduce using rule 123 (cyExp -> MINUS saveOperator exp .)
    )               reduce using rule 123 (cyExp -> MINUS saveOperator exp .)
    ]               reduce using rule 123 (cyExp -> MINUS saveOperator exp .)
    ;               reduce using rule 123 (cyExp -> MINUS saveOperator exp .)


state 265

    (99) condition -> errorCondition IF ( expresion ) { body } . optionalElse
    (101) optionalElse -> . errorElse ELSE { body }
    (102) optionalElse -> . empty
    (103) errorElse -> .
    (154) empty -> .

    ELSE            reduce using rule 103 (errorElse -> .)
    ID              reduce using rule 154 (empty -> .)
    IF              reduce using rule 154 (empty -> .)
    FOR             reduce using rule 154 (empty -> .)
    WHILE           reduce using rule 154 (empty -> .)
    }               reduce using rule 154 (empty -> .)
    RETURN          reduce using rule 154 (empty -> .)

    errorElse                      shift and go to state 275
    optionalElse                   shift and go to state 276
    empty                          shift and go to state 277

state 266

    (44) cyParam -> empty saveID saveTypeParam .

    )               reduce using rule 44 (cyParam -> empty saveID saveTypeParam .)


state 267

    (43) cyParam -> errorCyParam saveID saveTypeParam . ; param

    ;               shift and go to state 278


state 268

    (59) opReturns -> errorOpReturns RETURNS type saveReturnType { . opVars body return
    (6) opVars -> . vars
    (7) opVars -> . empty
    (10) vars -> . errorVars VARS declare
    (154) empty -> .
    (12) errorVars -> .

    RETURN          reduce using rule 154 (empty -> .)
    ID              reduce using rule 154 (empty -> .)
    IF              reduce using rule 154 (empty -> .)
    FOR             reduce using rule 154 (empty -> .)
    WHILE           reduce using rule 154 (empty -> .)
    VARS            reduce using rule 12 (errorVars -> .)

    vars                           shift and go to state 8
    opVars                         shift and go to state 279
    errorVars                      shift and go to state 10
    empty                          shift and go to state 11

state 269

    (79) forCycle -> errorForCycle FOR ( assign ; expresion ; assign ) . { body }

    {               shift and go to state 280


state 270

    (35) initDict -> ASGN ( dictType : dictType ) . errorInitDict
    (36) errorInitDict -> .

    ;               reduce using rule 36 (errorInitDict -> .)
    )               reduce using rule 36 (errorInitDict -> .)

    errorInitDict                  shift and go to state 281

state 271

    (86) assignMatrix -> [ expresion ] . errorAssignMatrix
    (88) errorAssignMatrix -> .

    ASGN            reduce using rule 88 (errorAssignMatrix -> .)

    errorAssignMatrix              shift and go to state 282

state 272

    (144) opMatrix -> errorOpMatrix . [ expresion ]

    [               shift and go to state 283


state 273

    (142) opStruct -> errorOpStruct [ expresion ] opMatrix .

    MULT            reduce using rule 142 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    DIV             reduce using rule 142 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    PLUS            reduce using rule 142 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    MINUS           reduce using rule 142 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    EQ              reduce using rule 142 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    DIF             reduce using rule 142 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    LTOEQ           reduce using rule 142 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    GTOEQ           reduce using rule 142 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    GT              reduce using rule 142 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    LT              reduce using rule 142 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    AND             reduce using rule 142 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    OR              reduce using rule 142 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    ,               reduce using rule 142 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    )               reduce using rule 142 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    ]               reduce using rule 142 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    ;               reduce using rule 142 (opStruct -> errorOpStruct [ expresion ] opMatrix .)


state 274

    (145) opMatrix -> empty .

    MULT            reduce using rule 145 (opMatrix -> empty .)
    DIV             reduce using rule 145 (opMatrix -> empty .)
    PLUS            reduce using rule 145 (opMatrix -> empty .)
    MINUS           reduce using rule 145 (opMatrix -> empty .)
    EQ              reduce using rule 145 (opMatrix -> empty .)
    DIF             reduce using rule 145 (opMatrix -> empty .)
    LTOEQ           reduce using rule 145 (opMatrix -> empty .)
    GTOEQ           reduce using rule 145 (opMatrix -> empty .)
    GT              reduce using rule 145 (opMatrix -> empty .)
    LT              reduce using rule 145 (opMatrix -> empty .)
    AND             reduce using rule 145 (opMatrix -> empty .)
    OR              reduce using rule 145 (opMatrix -> empty .)
    ,               reduce using rule 145 (opMatrix -> empty .)
    )               reduce using rule 145 (opMatrix -> empty .)
    ]               reduce using rule 145 (opMatrix -> empty .)
    ;               reduce using rule 145 (opMatrix -> empty .)


state 275

    (101) optionalElse -> errorElse . ELSE { body }

    ELSE            shift and go to state 284


state 276

    (99) condition -> errorCondition IF ( expresion ) { body } optionalElse .

    ID              reduce using rule 99 (condition -> errorCondition IF ( expresion ) { body } optionalElse .)
    IF              reduce using rule 99 (condition -> errorCondition IF ( expresion ) { body } optionalElse .)
    FOR             reduce using rule 99 (condition -> errorCondition IF ( expresion ) { body } optionalElse .)
    WHILE           reduce using rule 99 (condition -> errorCondition IF ( expresion ) { body } optionalElse .)
    }               reduce using rule 99 (condition -> errorCondition IF ( expresion ) { body } optionalElse .)
    RETURN          reduce using rule 99 (condition -> errorCondition IF ( expresion ) { body } optionalElse .)


state 277

    (102) optionalElse -> empty .

    ID              reduce using rule 102 (optionalElse -> empty .)
    IF              reduce using rule 102 (optionalElse -> empty .)
    FOR             reduce using rule 102 (optionalElse -> empty .)
    WHILE           reduce using rule 102 (optionalElse -> empty .)
    }               reduce using rule 102 (optionalElse -> empty .)
    RETURN          reduce using rule 102 (optionalElse -> empty .)


state 278

    (43) cyParam -> errorCyParam saveID saveTypeParam ; . param
    (41) param -> . saveType type errorParam ID cyTypeParam cyParam
    (3) saveType -> .

    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)

    param                          shift and go to state 285
    saveType                       shift and go to state 96

state 279

    (59) opReturns -> errorOpReturns RETURNS type saveReturnType { opVars . body return
    (71) body -> . errorBody cyInstruction
    (72) body -> . empty
    (73) errorBody -> .
    (154) empty -> .

    ID              reduce using rule 73 (errorBody -> .)
    IF              reduce using rule 73 (errorBody -> .)
    FOR             reduce using rule 73 (errorBody -> .)
    WHILE           reduce using rule 73 (errorBody -> .)
    RETURN          reduce using rule 154 (empty -> .)

    body                           shift and go to state 286
    errorBody                      shift and go to state 74
    empty                          shift and go to state 75

state 280

    (79) forCycle -> errorForCycle FOR ( assign ; expresion ; assign ) { . body }
    (71) body -> . errorBody cyInstruction
    (72) body -> . empty
    (73) errorBody -> .
    (154) empty -> .

    ID              reduce using rule 73 (errorBody -> .)
    IF              reduce using rule 73 (errorBody -> .)
    FOR             reduce using rule 73 (errorBody -> .)
    WHILE           reduce using rule 73 (errorBody -> .)
    }               reduce using rule 154 (empty -> .)

    body                           shift and go to state 287
    errorBody                      shift and go to state 74
    empty                          shift and go to state 75

state 281

    (35) initDict -> ASGN ( dictType : dictType ) errorInitDict .

    ;               reduce using rule 35 (initDict -> ASGN ( dictType : dictType ) errorInitDict .)
    )               reduce using rule 35 (initDict -> ASGN ( dictType : dictType ) errorInitDict .)


state 282

    (86) assignMatrix -> [ expresion ] errorAssignMatrix .

    ASGN            reduce using rule 86 (assignMatrix -> [ expresion ] errorAssignMatrix .)


state 283

    (144) opMatrix -> errorOpMatrix [ . expresion ]
    (106) expresion -> . sExp cyExpresion errorExpresion
    (111) sExp -> . exp errorOpSExp opSExp
    (120) exp -> . term performAddSub errorCyExp cyExp
    (127) term -> . fact cyTerm
    (131) fact -> . CTES
    (132) fact -> . cte
    (133) fact -> . funcCall
    (134) fact -> . ( expresion )
    (135) fact -> . ID saveVariable opAccess errorOpAccess
    (150) cte -> . CTED
    (151) cte -> . CTEF
    (152) cte -> . TRUE
    (153) cte -> . FALSE
    (89) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    expresion                      shift and go to state 288
    term                           shift and go to state 132
    funcCall                       shift and go to state 134
    sExp                           shift and go to state 126
    cte                            shift and go to state 135
    exp                            shift and go to state 137
    fact                           shift and go to state 138

state 284

    (101) optionalElse -> errorElse ELSE . { body }

    {               shift and go to state 289


state 285

    (43) cyParam -> errorCyParam saveID saveTypeParam ; param .

    )               reduce using rule 43 (cyParam -> errorCyParam saveID saveTypeParam ; param .)


state 286

    (59) opReturns -> errorOpReturns RETURNS type saveReturnType { opVars body . return
    (52) return -> . errorReturn RETURN expresion ;
    (53) errorReturn -> .

    RETURN          reduce using rule 53 (errorReturn -> .)

    return                         shift and go to state 290
    errorReturn                    shift and go to state 291

state 287

    (79) forCycle -> errorForCycle FOR ( assign ; expresion ; assign ) { body . }

    }               shift and go to state 292


state 288

    (144) opMatrix -> errorOpMatrix [ expresion . ]

    ]               shift and go to state 293


state 289

    (101) optionalElse -> errorElse ELSE { . body }
    (71) body -> . errorBody cyInstruction
    (72) body -> . empty
    (73) errorBody -> .
    (154) empty -> .

    ID              reduce using rule 73 (errorBody -> .)
    IF              reduce using rule 73 (errorBody -> .)
    FOR             reduce using rule 73 (errorBody -> .)
    WHILE           reduce using rule 73 (errorBody -> .)
    }               reduce using rule 154 (empty -> .)

    body                           shift and go to state 294
    empty                          shift and go to state 75
    errorBody                      shift and go to state 74

state 290

    (59) opReturns -> errorOpReturns RETURNS type saveReturnType { opVars body return .

    }               reduce using rule 59 (opReturns -> errorOpReturns RETURNS type saveReturnType { opVars body return .)


state 291

    (52) return -> errorReturn . RETURN expresion ;

    RETURN          shift and go to state 295


state 292

    (79) forCycle -> errorForCycle FOR ( assign ; expresion ; assign ) { body } .

    ID              reduce using rule 79 (forCycle -> errorForCycle FOR ( assign ; expresion ; assign ) { body } .)
    IF              reduce using rule 79 (forCycle -> errorForCycle FOR ( assign ; expresion ; assign ) { body } .)
    FOR             reduce using rule 79 (forCycle -> errorForCycle FOR ( assign ; expresion ; assign ) { body } .)
    WHILE           reduce using rule 79 (forCycle -> errorForCycle FOR ( assign ; expresion ; assign ) { body } .)
    }               reduce using rule 79 (forCycle -> errorForCycle FOR ( assign ; expresion ; assign ) { body } .)
    RETURN          reduce using rule 79 (forCycle -> errorForCycle FOR ( assign ; expresion ; assign ) { body } .)


state 293

    (144) opMatrix -> errorOpMatrix [ expresion ] .

    MULT            reduce using rule 144 (opMatrix -> errorOpMatrix [ expresion ] .)
    DIV             reduce using rule 144 (opMatrix -> errorOpMatrix [ expresion ] .)
    PLUS            reduce using rule 144 (opMatrix -> errorOpMatrix [ expresion ] .)
    MINUS           reduce using rule 144 (opMatrix -> errorOpMatrix [ expresion ] .)
    EQ              reduce using rule 144 (opMatrix -> errorOpMatrix [ expresion ] .)
    DIF             reduce using rule 144 (opMatrix -> errorOpMatrix [ expresion ] .)
    LTOEQ           reduce using rule 144 (opMatrix -> errorOpMatrix [ expresion ] .)
    GTOEQ           reduce using rule 144 (opMatrix -> errorOpMatrix [ expresion ] .)
    GT              reduce using rule 144 (opMatrix -> errorOpMatrix [ expresion ] .)
    LT              reduce using rule 144 (opMatrix -> errorOpMatrix [ expresion ] .)
    AND             reduce using rule 144 (opMatrix -> errorOpMatrix [ expresion ] .)
    OR              reduce using rule 144 (opMatrix -> errorOpMatrix [ expresion ] .)
    ,               reduce using rule 144 (opMatrix -> errorOpMatrix [ expresion ] .)
    )               reduce using rule 144 (opMatrix -> errorOpMatrix [ expresion ] .)
    ]               reduce using rule 144 (opMatrix -> errorOpMatrix [ expresion ] .)
    ;               reduce using rule 144 (opMatrix -> errorOpMatrix [ expresion ] .)


state 294

    (101) optionalElse -> errorElse ELSE { body . }

    }               shift and go to state 296


state 295

    (52) return -> errorReturn RETURN . expresion ;
    (106) expresion -> . sExp cyExpresion errorExpresion
    (111) sExp -> . exp errorOpSExp opSExp
    (120) exp -> . term performAddSub errorCyExp cyExp
    (127) term -> . fact cyTerm
    (131) fact -> . CTES
    (132) fact -> . cte
    (133) fact -> . funcCall
    (134) fact -> . ( expresion )
    (135) fact -> . ID saveVariable opAccess errorOpAccess
    (150) cte -> . CTED
    (151) cte -> . CTEF
    (152) cte -> . TRUE
    (153) cte -> . FALSE
    (89) funcCall -> . ID ( opParamCall )

    CTES            shift and go to state 131
    (               shift and go to state 125
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 136
    TRUE            shift and go to state 124
    FALSE           shift and go to state 133

    expresion                      shift and go to state 297
    term                           shift and go to state 132
    funcCall                       shift and go to state 134
    sExp                           shift and go to state 126
    cte                            shift and go to state 135
    exp                            shift and go to state 137
    fact                           shift and go to state 138

state 296

    (101) optionalElse -> errorElse ELSE { body } .

    ID              reduce using rule 101 (optionalElse -> errorElse ELSE { body } .)
    IF              reduce using rule 101 (optionalElse -> errorElse ELSE { body } .)
    FOR             reduce using rule 101 (optionalElse -> errorElse ELSE { body } .)
    WHILE           reduce using rule 101 (optionalElse -> errorElse ELSE { body } .)
    }               reduce using rule 101 (optionalElse -> errorElse ELSE { body } .)
    RETURN          reduce using rule 101 (optionalElse -> errorElse ELSE { body } .)


state 297

    (52) return -> errorReturn RETURN expresion . ;

    ;               shift and go to state 298


state 298

    (52) return -> errorReturn RETURN expresion ; .

    }               reduce using rule 52 (return -> errorReturn RETURN expresion ; .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ( in state 149 resolved as shift
WARNING: reduce/reduce conflict in state 214 resolved using rule (initWith -> funcCall)
WARNING: rejected rule (fact -> funcCall) in state 214
