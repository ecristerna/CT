Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables
Rule 2     changeCurrentScope -> <empty>
Rule 3     saveType -> <empty>
Rule 4     saveProc -> <empty>
Rule 5     errorProgram -> <empty>
Rule 6     opVars -> vars
Rule 7     opVars -> empty
Rule 8     opFunctions -> function opFunctions
Rule 9     opFunctions -> empty
Rule 10    vars -> errorVars VARS declare
Rule 11    saveID -> <empty>
Rule 12    errorVars -> <empty>
Rule 13    type -> errorType INT
Rule 14    type -> FLOAT
Rule 15    type -> STRING
Rule 16    type -> BOOL
Rule 17    errorType -> <empty>
Rule 18    main -> errorMain MAIN saveMain { opVars body } clearVarsTable
Rule 19    saveMain -> <empty>
Rule 20    errorMain -> <empty>
Rule 21    instr -> basicStatements ;
Rule 22    instr -> condition
Rule 23    instr -> cycle
Rule 24    basicStatements -> assign
Rule 25    basicStatements -> funcCall
Rule 26    basicStatements -> print
Rule 27    basicStatements -> read
Rule 28    print -> PRINT PARINI exp performPrint cyPrint PARFIN
Rule 29    cyPrint -> , exp performPrint cyPrint
Rule 30    cyPrint -> empty
Rule 31    read -> READ PARINI ID cyRead PARFIN
Rule 32    cyRead -> , ID cyRead
Rule 33    cyRead -> empty
Rule 34    declare -> basicDeclare
Rule 35    declare -> structDeclare
Rule 36    declare -> dictDeclare
Rule 37    init -> ASGN saveOperator errorInit initWith
Rule 38    errorInit -> <empty>
Rule 39    initWith -> expresion
Rule 40    initWith -> fact
Rule 41    initWith -> funcCall
Rule 42    initDict -> ASGN PARINI dictType : dictType PARFIN errorInitDict
Rule 43    errorInitDict -> <empty>
Rule 44    dictType -> errorDictType CTES
Rule 45    dictType -> cte
Rule 46    dictType -> ID
Rule 47    errorDictType -> <empty>
Rule 48    param -> saveType type errorParam ID cyTypeParam cyParam
Rule 49    errorParam -> <empty>
Rule 50    cyParam -> errorCyParam saveID saveTypeParam ; param
Rule 51    cyParam -> empty saveID saveTypeParam
Rule 52    cyTypeParam -> , saveID saveTypeParam ID cyTypeParam
Rule 53    cyTypeParam -> empty
Rule 54    saveTypeParam -> <empty>
Rule 55    errorCyParam -> <empty>
Rule 56    function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
Rule 57    errorFunction -> <empty>
Rule 58    clearVarsTable -> <empty>
Rule 59    return -> errorReturn RETURN expresion ;
Rule 60    errorReturn -> <empty>
Rule 61    opParameters -> param saveParamToDirProc errorOpParameters
Rule 62    opParameters -> empty
Rule 63    flagParameters -> <empty>
Rule 64    saveParamToDirProc -> <empty>
Rule 65    errorOpParameters -> <empty>
Rule 66    opReturns -> errorOpReturns RETURNS type saveReturnType { opVars body return
Rule 67    opReturns -> { opVars body
Rule 68    saveReturnType -> <empty>
Rule 69    errorOpReturns -> <empty>
Rule 70    basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
Rule 71    errorBasicDeclare -> <empty>
Rule 72    structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare
Rule 73    errorStructDeclare -> <empty>
Rule 74    dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare
Rule 75    errorDictDeclare -> <empty>
Rule 76    cyDeclare -> declare
Rule 77    cyDeclare -> empty
Rule 78    body -> errorBody cyInstruction
Rule 79    body -> empty
Rule 80    errorBody -> <empty>
Rule 81    cyInstruction -> instr body
Rule 82    cycle -> forCycle
Rule 83    cycle -> whileCycle
Rule 84    whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body }
Rule 85    errorWhileCycle -> <empty>
Rule 86    forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body }
Rule 87    errorForCycle -> <empty>
Rule 88    assign -> ID saveVariable errorAssign assignOptions performAssign
Rule 89    errorAssign -> <empty>
Rule 90    assignOptions -> init
Rule 91    assignOptions -> initDict
Rule 92    assignOptions -> [ expresion ] assignMatrix init
Rule 93    assignMatrix -> [ expresion ] errorAssignMatrix
Rule 94    assignMatrix -> empty
Rule 95    errorAssignMatrix -> <empty>
Rule 96    funcCall -> ID PARINI opParamCall PARFIN
Rule 97    opParamCall -> expresion cyParamCall
Rule 98    opParamCall -> empty
Rule 99    cyParamCall -> , expresion cyParamCall
Rule 100   cyParamCall -> empty
Rule 101   struct -> structType [ CTED ] optionalMatrix
Rule 102   structType -> type
Rule 103   structType -> DICT dict
Rule 104   optionalMatrix -> [ CTED ]
Rule 105   optionalMatrix -> empty
Rule 106   condition -> errorCondition IF PARINI expresion PARFIN { body } optionalElse
Rule 107   errorCondition -> <empty>
Rule 108   optionalElse -> errorElse ELSE { body }
Rule 109   optionalElse -> empty
Rule 110   errorElse -> <empty>
Rule 111   dict -> errorDict PARINI type : type PARFIN
Rule 112   errorDict -> <empty>
Rule 113   expresion -> sExp performAndOr cyExpresion errorExpresion
Rule 114   errorExpresion -> <empty>
Rule 115   cyExpresion -> AND saveOperator expresion
Rule 116   cyExpresion -> OR saveOperator expresion
Rule 117   cyExpresion -> empty
Rule 118   sExp -> exp errorOpSExp opSExp performRelational
Rule 119   opSExp -> EQ saveOperator exp
Rule 120   opSExp -> DIF saveOperator exp
Rule 121   opSExp -> LTOEQ saveOperator exp
Rule 122   opSExp -> GTOEQ saveOperator exp
Rule 123   opSExp -> GT saveOperator exp
Rule 124   opSExp -> LT saveOperator exp
Rule 125   opSExp -> empty
Rule 126   errorOpSExp -> <empty>
Rule 127   exp -> term performAddSub errorCyExp cyExp
Rule 128   cyExp -> PLUS saveOperator exp
Rule 129   cyExp -> MINUS saveOperator exp
Rule 130   cyExp -> empty
Rule 131   errorCyExp -> <empty>
Rule 132   term -> fact performMulDiv cyTerm
Rule 133   cyTerm -> MULT saveOperator errorFact term
Rule 134   cyTerm -> DIV saveOperator term
Rule 135   cyTerm -> empty
Rule 136   fact -> CTES
Rule 137   fact -> cte
Rule 138   fact -> funcCall
Rule 139   fact -> PARINI putFondo expresion PARFIN takeFondo
Rule 140   fact -> ID saveVariable opAccess errorOpAccess
Rule 141   errorFact -> <empty>
Rule 142   opAccess -> opStruct
Rule 143   opAccess -> opDictionary
Rule 144   opAccess -> empty
Rule 145   errorOpAccess -> <empty>
Rule 146   opStruct -> errorOpStruct [ expresion ] opMatrix
Rule 147   errorOpStruct -> <empty>
Rule 148   opMatrix -> errorOpMatrix [ expresion ]
Rule 149   opMatrix -> empty
Rule 150   errorOpMatrix -> <empty>
Rule 151   opDictionary -> . dictIndex
Rule 152   dictIndex -> FIRST
Rule 153   dictIndex -> LAST
Rule 154   cte -> CTED
Rule 155   cte -> CTEF
Rule 156   cte -> TRUE
Rule 157   cte -> FALSE
Rule 158   empty -> <empty>
Rule 159   printTables -> <empty>
Rule 160   saveVariable -> <empty>
Rule 161   saveOperator -> <empty>
Rule 162   putFondo -> <empty>
Rule 163   takeFondo -> <empty>
Rule 164   performAssign -> <empty>
Rule 165   performMulDiv -> <empty>
Rule 166   performAddSub -> <empty>
Rule 167   performRelational -> <empty>
Rule 168   performAndOr -> <empty>
Rule 169   performPrint -> <empty>

Terminals, with rules where they appear

,                    : 29 32 52 99
.                    : 151
:                    : 42 111
;                    : 21 50 59 70 72 74 86 86
AND                  : 115
ASGN                 : 37 42
BOOL                 : 16
CTED                 : 101 104 154
CTEF                 : 155
CTES                 : 44 136
DICT                 : 74 103
DIF                  : 120
DIV                  : 134
ELSE                 : 108
EQ                   : 119
FALSE                : 157
FIRST                : 152
FLOAT                : 14
FOR                  : 86
FUNC                 : 56
GT                   : 123
GTOEQ                : 122
ID                   : 1 31 32 46 48 52 56 70 72 74 88 96 140
IF                   : 106
INT                  : 13
LAST                 : 153
LT                   : 124
LTOEQ                : 121
MAIN                 : 18
MINUS                : 129
MULT                 : 133
OR                   : 116
PARFIN               : 28 31 42 56 84 86 96 106 111 139
PARINI               : 28 31 42 56 84 86 96 106 111 139
PLUS                 : 128
PRINT                : 28
PROGRAM              : 1
READ                 : 31
RETURN               : 59
RETURNS              : 66
STRING               : 15
STRUCT               : 72
TRUE                 : 156
VARS                 : 10
WHILE                : 84
[                    : 92 93 101 104 146 148
]                    : 92 93 101 104 146 148
error                : 
{                    : 1 18 66 67 84 86 106 108
}                    : 1 18 56 84 86 106 108

Nonterminals, with rules where they appear

assign               : 24 86 86
assignMatrix         : 92
assignOptions        : 88
basicDeclare         : 34
basicStatements      : 21
body                 : 18 66 67 81 84 86 106 108
changeCurrentScope   : 1
clearVarsTable       : 18 56
condition            : 22
cte                  : 45 137
cyDeclare            : 70 72 74
cyExp                : 127
cyExpresion          : 113
cyInstruction        : 78
cyParam              : 48
cyParamCall          : 97 99
cyPrint              : 28 29
cyRead               : 31 32
cyTerm               : 132
cyTypeParam          : 48 52 70
cycle                : 23
declare              : 10 76
dict                 : 74 103
dictDeclare          : 36
dictIndex            : 151
dictType             : 42 42
empty                : 7 9 30 33 51 53 62 77 79 94 98 100 105 109 117 125 130 135 144 149
errorAssign          : 88
errorAssignMatrix    : 93
errorBasicDeclare    : 70
errorBody            : 78
errorCondition       : 106
errorCyExp           : 127
errorCyParam         : 50
errorDict            : 111
errorDictDeclare     : 74
errorDictType        : 44
errorElse            : 108
errorExpresion       : 113
errorFact            : 133
errorForCycle        : 86
errorFunction        : 56
errorInit            : 37
errorInitDict        : 42
errorMain            : 18
errorOpAccess        : 140
errorOpMatrix        : 148
errorOpParameters    : 61
errorOpReturns       : 66
errorOpSExp          : 118
errorOpStruct        : 146
errorParam           : 48
errorProgram         : 1
errorReturn          : 59
errorStructDeclare   : 72
errorType            : 13
errorVars            : 10
errorWhileCycle      : 84
exp                  : 28 29 118 119 120 121 122 123 124 128 129
expresion            : 39 59 84 86 92 93 97 99 106 115 116 139 146 148
fact                 : 40 132
flagParameters       : 56 56
forCycle             : 82
funcCall             : 25 41 138
function             : 8
init                 : 90 92
initDict             : 91
initWith             : 37
instr                : 81
main                 : 1
opAccess             : 140
opDictionary         : 143
opFunctions          : 1 8
opMatrix             : 146
opParamCall          : 96
opParameters         : 56
opReturns            : 56
opSExp               : 118
opStruct             : 142
opVars               : 1 18 66 67
optionalElse         : 106
optionalMatrix       : 101
param                : 50 61
performAddSub        : 127
performAndOr         : 113
performAssign        : 88
performMulDiv        : 132
performPrint         : 28 29
performRelational    : 118
print                : 26
printTables          : 1
program              : 0
putFondo             : 139
read                 : 27
return               : 66
sExp                 : 113
saveID               : 50 51 52 70
saveMain             : 18
saveOperator         : 37 115 116 119 120 121 122 123 124 128 129 133 134
saveParamToDirProc   : 61
saveProc             : 1 56
saveReturnType       : 66
saveType             : 1 48 56 70
saveTypeParam        : 50 51 52
saveVariable         : 88 140
struct               : 72
structDeclare        : 35
structType           : 101
takeFondo            : 139
term                 : 127 133 134
type                 : 48 66 70 102 111 111
vars                 : 6
whileCycle           : 83

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables
    (5) errorProgram -> .

    PROGRAM         reduce using rule 5 (errorProgram -> .)

    errorProgram                   shift and go to state 2
    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> errorProgram . PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables

    PROGRAM         shift and go to state 3


state 3

    (1) program -> errorProgram PROGRAM . saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables
    (3) saveType -> .

    ID              reduce using rule 3 (saveType -> .)

    saveType                       shift and go to state 4

state 4

    (1) program -> errorProgram PROGRAM saveType . ID saveProc { opVars changeCurrentScope opFunctions main } printTables

    ID              shift and go to state 5


state 5

    (1) program -> errorProgram PROGRAM saveType ID . saveProc { opVars changeCurrentScope opFunctions main } printTables
    (4) saveProc -> .

    {               reduce using rule 4 (saveProc -> .)

    saveProc                       shift and go to state 6

state 6

    (1) program -> errorProgram PROGRAM saveType ID saveProc . { opVars changeCurrentScope opFunctions main } printTables

    {               shift and go to state 7


state 7

    (1) program -> errorProgram PROGRAM saveType ID saveProc { . opVars changeCurrentScope opFunctions main } printTables
    (6) opVars -> . vars
    (7) opVars -> . empty
    (10) vars -> . errorVars VARS declare
    (158) empty -> .
    (12) errorVars -> .

    MAIN            reduce using rule 158 (empty -> .)
    FUNC            reduce using rule 158 (empty -> .)
    VARS            reduce using rule 12 (errorVars -> .)

    vars                           shift and go to state 8
    opVars                         shift and go to state 9
    errorVars                      shift and go to state 10
    empty                          shift and go to state 11

state 8

    (6) opVars -> vars .

    ID              reduce using rule 6 (opVars -> vars .)
    PRINT           reduce using rule 6 (opVars -> vars .)
    READ            reduce using rule 6 (opVars -> vars .)
    IF              reduce using rule 6 (opVars -> vars .)
    FOR             reduce using rule 6 (opVars -> vars .)
    WHILE           reduce using rule 6 (opVars -> vars .)
    }               reduce using rule 6 (opVars -> vars .)
    MAIN            reduce using rule 6 (opVars -> vars .)
    FUNC            reduce using rule 6 (opVars -> vars .)
    RETURN          reduce using rule 6 (opVars -> vars .)


state 9

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars . changeCurrentScope opFunctions main } printTables
    (2) changeCurrentScope -> .

    MAIN            reduce using rule 2 (changeCurrentScope -> .)
    FUNC            reduce using rule 2 (changeCurrentScope -> .)

    changeCurrentScope             shift and go to state 12

state 10

    (10) vars -> errorVars . VARS declare

    VARS            shift and go to state 13


state 11

    (7) opVars -> empty .

    ID              reduce using rule 7 (opVars -> empty .)
    PRINT           reduce using rule 7 (opVars -> empty .)
    READ            reduce using rule 7 (opVars -> empty .)
    IF              reduce using rule 7 (opVars -> empty .)
    FOR             reduce using rule 7 (opVars -> empty .)
    WHILE           reduce using rule 7 (opVars -> empty .)
    }               reduce using rule 7 (opVars -> empty .)
    MAIN            reduce using rule 7 (opVars -> empty .)
    FUNC            reduce using rule 7 (opVars -> empty .)
    RETURN          reduce using rule 7 (opVars -> empty .)


state 12

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope . opFunctions main } printTables
    (8) opFunctions -> . function opFunctions
    (9) opFunctions -> . empty
    (56) function -> . errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (158) empty -> .
    (57) errorFunction -> .

    MAIN            reduce using rule 158 (empty -> .)
    FUNC            reduce using rule 57 (errorFunction -> .)

    function                       shift and go to state 16
    errorFunction                  shift and go to state 17
    empty                          shift and go to state 15
    opFunctions                    shift and go to state 14

state 13

    (10) vars -> errorVars VARS . declare
    (34) declare -> . basicDeclare
    (35) declare -> . structDeclare
    (36) declare -> . dictDeclare
    (70) basicDeclare -> . saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (72) structDeclare -> . errorStructDeclare STRUCT ID struct ; cyDeclare
    (74) dictDeclare -> . errorDictDeclare DICT ID dict ; cyDeclare
    (3) saveType -> .
    (73) errorStructDeclare -> .
    (75) errorDictDeclare -> .

    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)
    STRUCT          reduce using rule 73 (errorStructDeclare -> .)
    DICT            reduce using rule 75 (errorDictDeclare -> .)

    dictDeclare                    shift and go to state 18
    saveType                       shift and go to state 19
    errorDictDeclare               shift and go to state 20
    structDeclare                  shift and go to state 21
    errorStructDeclare             shift and go to state 22
    basicDeclare                   shift and go to state 23
    declare                        shift and go to state 24

state 14

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions . main } printTables
    (18) main -> . errorMain MAIN saveMain { opVars body } clearVarsTable
    (20) errorMain -> .

    MAIN            reduce using rule 20 (errorMain -> .)

    main                           shift and go to state 25
    errorMain                      shift and go to state 26

state 15

    (9) opFunctions -> empty .

    MAIN            reduce using rule 9 (opFunctions -> empty .)


state 16

    (8) opFunctions -> function . opFunctions
    (8) opFunctions -> . function opFunctions
    (9) opFunctions -> . empty
    (56) function -> . errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (158) empty -> .
    (57) errorFunction -> .

    MAIN            reduce using rule 158 (empty -> .)
    FUNC            reduce using rule 57 (errorFunction -> .)

    function                       shift and go to state 16
    errorFunction                  shift and go to state 17
    empty                          shift and go to state 15
    opFunctions                    shift and go to state 27

state 17

    (56) function -> errorFunction . FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable

    FUNC            shift and go to state 28


state 18

    (36) declare -> dictDeclare .

    MAIN            reduce using rule 36 (declare -> dictDeclare .)
    FUNC            reduce using rule 36 (declare -> dictDeclare .)
    }               reduce using rule 36 (declare -> dictDeclare .)
    ID              reduce using rule 36 (declare -> dictDeclare .)
    PRINT           reduce using rule 36 (declare -> dictDeclare .)
    READ            reduce using rule 36 (declare -> dictDeclare .)
    IF              reduce using rule 36 (declare -> dictDeclare .)
    FOR             reduce using rule 36 (declare -> dictDeclare .)
    WHILE           reduce using rule 36 (declare -> dictDeclare .)
    RETURN          reduce using rule 36 (declare -> dictDeclare .)


state 19

    (70) basicDeclare -> saveType . type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    errorType                      shift and go to state 31
    type                           shift and go to state 33

state 20

    (74) dictDeclare -> errorDictDeclare . DICT ID dict ; cyDeclare

    DICT            shift and go to state 34


state 21

    (35) declare -> structDeclare .

    MAIN            reduce using rule 35 (declare -> structDeclare .)
    FUNC            reduce using rule 35 (declare -> structDeclare .)
    }               reduce using rule 35 (declare -> structDeclare .)
    ID              reduce using rule 35 (declare -> structDeclare .)
    PRINT           reduce using rule 35 (declare -> structDeclare .)
    READ            reduce using rule 35 (declare -> structDeclare .)
    IF              reduce using rule 35 (declare -> structDeclare .)
    FOR             reduce using rule 35 (declare -> structDeclare .)
    WHILE           reduce using rule 35 (declare -> structDeclare .)
    RETURN          reduce using rule 35 (declare -> structDeclare .)


state 22

    (72) structDeclare -> errorStructDeclare . STRUCT ID struct ; cyDeclare

    STRUCT          shift and go to state 35


state 23

    (34) declare -> basicDeclare .

    MAIN            reduce using rule 34 (declare -> basicDeclare .)
    FUNC            reduce using rule 34 (declare -> basicDeclare .)
    }               reduce using rule 34 (declare -> basicDeclare .)
    ID              reduce using rule 34 (declare -> basicDeclare .)
    PRINT           reduce using rule 34 (declare -> basicDeclare .)
    READ            reduce using rule 34 (declare -> basicDeclare .)
    IF              reduce using rule 34 (declare -> basicDeclare .)
    FOR             reduce using rule 34 (declare -> basicDeclare .)
    WHILE           reduce using rule 34 (declare -> basicDeclare .)
    RETURN          reduce using rule 34 (declare -> basicDeclare .)


state 24

    (10) vars -> errorVars VARS declare .

    ID              reduce using rule 10 (vars -> errorVars VARS declare .)
    PRINT           reduce using rule 10 (vars -> errorVars VARS declare .)
    READ            reduce using rule 10 (vars -> errorVars VARS declare .)
    IF              reduce using rule 10 (vars -> errorVars VARS declare .)
    FOR             reduce using rule 10 (vars -> errorVars VARS declare .)
    WHILE           reduce using rule 10 (vars -> errorVars VARS declare .)
    }               reduce using rule 10 (vars -> errorVars VARS declare .)
    MAIN            reduce using rule 10 (vars -> errorVars VARS declare .)
    FUNC            reduce using rule 10 (vars -> errorVars VARS declare .)
    RETURN          reduce using rule 10 (vars -> errorVars VARS declare .)


state 25

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main . } printTables

    }               shift and go to state 36


state 26

    (18) main -> errorMain . MAIN saveMain { opVars body } clearVarsTable

    MAIN            shift and go to state 37


state 27

    (8) opFunctions -> function opFunctions .

    MAIN            reduce using rule 8 (opFunctions -> function opFunctions .)


state 28

    (56) function -> errorFunction FUNC . saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (3) saveType -> .

    ID              reduce using rule 3 (saveType -> .)

    saveType                       shift and go to state 38

state 29

    (14) type -> FLOAT .

    PARFIN          reduce using rule 14 (type -> FLOAT .)
    :               reduce using rule 14 (type -> FLOAT .)
    [               reduce using rule 14 (type -> FLOAT .)
    {               reduce using rule 14 (type -> FLOAT .)
    ID              reduce using rule 14 (type -> FLOAT .)


state 30

    (15) type -> STRING .

    PARFIN          reduce using rule 15 (type -> STRING .)
    :               reduce using rule 15 (type -> STRING .)
    [               reduce using rule 15 (type -> STRING .)
    {               reduce using rule 15 (type -> STRING .)
    ID              reduce using rule 15 (type -> STRING .)


state 31

    (13) type -> errorType . INT

    INT             shift and go to state 39


state 32

    (16) type -> BOOL .

    PARFIN          reduce using rule 16 (type -> BOOL .)
    :               reduce using rule 16 (type -> BOOL .)
    [               reduce using rule 16 (type -> BOOL .)
    {               reduce using rule 16 (type -> BOOL .)
    ID              reduce using rule 16 (type -> BOOL .)


state 33

    (70) basicDeclare -> saveType type . errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (71) errorBasicDeclare -> .

    ID              reduce using rule 71 (errorBasicDeclare -> .)

    errorBasicDeclare              shift and go to state 40

state 34

    (74) dictDeclare -> errorDictDeclare DICT . ID dict ; cyDeclare

    ID              shift and go to state 41


state 35

    (72) structDeclare -> errorStructDeclare STRUCT . ID struct ; cyDeclare

    ID              shift and go to state 42


state 36

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } . printTables
    (159) printTables -> .

    $end            reduce using rule 159 (printTables -> .)

    printTables                    shift and go to state 43

state 37

    (18) main -> errorMain MAIN . saveMain { opVars body } clearVarsTable
    (19) saveMain -> .

    {               reduce using rule 19 (saveMain -> .)

    saveMain                       shift and go to state 44

state 38

    (56) function -> errorFunction FUNC saveType . ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable

    ID              shift and go to state 45


state 39

    (13) type -> errorType INT .

    PARFIN          reduce using rule 13 (type -> errorType INT .)
    :               reduce using rule 13 (type -> errorType INT .)
    [               reduce using rule 13 (type -> errorType INT .)
    {               reduce using rule 13 (type -> errorType INT .)
    ID              reduce using rule 13 (type -> errorType INT .)


state 40

    (70) basicDeclare -> saveType type errorBasicDeclare . ID cyTypeParam saveID ; cyDeclare

    ID              shift and go to state 46


state 41

    (74) dictDeclare -> errorDictDeclare DICT ID . dict ; cyDeclare
    (111) dict -> . errorDict PARINI type : type PARFIN
    (112) errorDict -> .

    PARINI          reduce using rule 112 (errorDict -> .)

    dict                           shift and go to state 48
    errorDict                      shift and go to state 47

state 42

    (72) structDeclare -> errorStructDeclare STRUCT ID . struct ; cyDeclare
    (101) struct -> . structType [ CTED ] optionalMatrix
    (102) structType -> . type
    (103) structType -> . DICT dict
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    DICT            shift and go to state 51
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    structType                     shift and go to state 49
    struct                         shift and go to state 50
    errorType                      shift and go to state 31
    type                           shift and go to state 52

state 43

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables .

    $end            reduce using rule 1 (program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables .)


state 44

    (18) main -> errorMain MAIN saveMain . { opVars body } clearVarsTable

    {               shift and go to state 53


state 45

    (56) function -> errorFunction FUNC saveType ID . saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (4) saveProc -> .

    PARINI          reduce using rule 4 (saveProc -> .)

    saveProc                       shift and go to state 54

state 46

    (70) basicDeclare -> saveType type errorBasicDeclare ID . cyTypeParam saveID ; cyDeclare
    (52) cyTypeParam -> . , saveID saveTypeParam ID cyTypeParam
    (53) cyTypeParam -> . empty
    (158) empty -> .

    ,               shift and go to state 55
    ;               reduce using rule 158 (empty -> .)

    empty                          shift and go to state 56
    cyTypeParam                    shift and go to state 57

state 47

    (111) dict -> errorDict . PARINI type : type PARFIN

    PARINI          shift and go to state 58


state 48

    (74) dictDeclare -> errorDictDeclare DICT ID dict . ; cyDeclare

    ;               shift and go to state 59


state 49

    (101) struct -> structType . [ CTED ] optionalMatrix

    [               shift and go to state 60


state 50

    (72) structDeclare -> errorStructDeclare STRUCT ID struct . ; cyDeclare

    ;               shift and go to state 61


state 51

    (103) structType -> DICT . dict
    (111) dict -> . errorDict PARINI type : type PARFIN
    (112) errorDict -> .

    PARINI          reduce using rule 112 (errorDict -> .)

    dict                           shift and go to state 62
    errorDict                      shift and go to state 47

state 52

    (102) structType -> type .

    [               reduce using rule 102 (structType -> type .)


state 53

    (18) main -> errorMain MAIN saveMain { . opVars body } clearVarsTable
    (6) opVars -> . vars
    (7) opVars -> . empty
    (10) vars -> . errorVars VARS declare
    (158) empty -> .
    (12) errorVars -> .

    }               reduce using rule 158 (empty -> .)
    ID              reduce using rule 158 (empty -> .)
    PRINT           reduce using rule 158 (empty -> .)
    READ            reduce using rule 158 (empty -> .)
    IF              reduce using rule 158 (empty -> .)
    FOR             reduce using rule 158 (empty -> .)
    WHILE           reduce using rule 158 (empty -> .)
    VARS            reduce using rule 12 (errorVars -> .)

    vars                           shift and go to state 8
    opVars                         shift and go to state 63
    errorVars                      shift and go to state 10
    empty                          shift and go to state 11

state 54

    (56) function -> errorFunction FUNC saveType ID saveProc . flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (63) flagParameters -> .

    PARINI          reduce using rule 63 (flagParameters -> .)

    flagParameters                 shift and go to state 64

state 55

    (52) cyTypeParam -> , . saveID saveTypeParam ID cyTypeParam
    (11) saveID -> .

    ID              reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 65

state 56

    (53) cyTypeParam -> empty .

    ;               reduce using rule 53 (cyTypeParam -> empty .)
    PARFIN          reduce using rule 53 (cyTypeParam -> empty .)


state 57

    (70) basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam . saveID ; cyDeclare
    (11) saveID -> .

    ;               reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 66

state 58

    (111) dict -> errorDict PARINI . type : type PARFIN
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    errorType                      shift and go to state 31
    type                           shift and go to state 67

state 59

    (74) dictDeclare -> errorDictDeclare DICT ID dict ; . cyDeclare
    (76) cyDeclare -> . declare
    (77) cyDeclare -> . empty
    (34) declare -> . basicDeclare
    (35) declare -> . structDeclare
    (36) declare -> . dictDeclare
    (158) empty -> .
    (70) basicDeclare -> . saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (72) structDeclare -> . errorStructDeclare STRUCT ID struct ; cyDeclare
    (74) dictDeclare -> . errorDictDeclare DICT ID dict ; cyDeclare
    (3) saveType -> .
    (73) errorStructDeclare -> .
    (75) errorDictDeclare -> .

    MAIN            reduce using rule 158 (empty -> .)
    FUNC            reduce using rule 158 (empty -> .)
    }               reduce using rule 158 (empty -> .)
    ID              reduce using rule 158 (empty -> .)
    PRINT           reduce using rule 158 (empty -> .)
    READ            reduce using rule 158 (empty -> .)
    IF              reduce using rule 158 (empty -> .)
    FOR             reduce using rule 158 (empty -> .)
    WHILE           reduce using rule 158 (empty -> .)
    RETURN          reduce using rule 158 (empty -> .)
    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)
    STRUCT          reduce using rule 73 (errorStructDeclare -> .)
    DICT            reduce using rule 75 (errorDictDeclare -> .)

    dictDeclare                    shift and go to state 18
    cyDeclare                      shift and go to state 68
    saveType                       shift and go to state 19
    structDeclare                  shift and go to state 21
    errorDictDeclare               shift and go to state 20
    errorStructDeclare             shift and go to state 22
    basicDeclare                   shift and go to state 23
    declare                        shift and go to state 69
    empty                          shift and go to state 70

state 60

    (101) struct -> structType [ . CTED ] optionalMatrix

    CTED            shift and go to state 71


state 61

    (72) structDeclare -> errorStructDeclare STRUCT ID struct ; . cyDeclare
    (76) cyDeclare -> . declare
    (77) cyDeclare -> . empty
    (34) declare -> . basicDeclare
    (35) declare -> . structDeclare
    (36) declare -> . dictDeclare
    (158) empty -> .
    (70) basicDeclare -> . saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (72) structDeclare -> . errorStructDeclare STRUCT ID struct ; cyDeclare
    (74) dictDeclare -> . errorDictDeclare DICT ID dict ; cyDeclare
    (3) saveType -> .
    (73) errorStructDeclare -> .
    (75) errorDictDeclare -> .

    MAIN            reduce using rule 158 (empty -> .)
    FUNC            reduce using rule 158 (empty -> .)
    }               reduce using rule 158 (empty -> .)
    ID              reduce using rule 158 (empty -> .)
    PRINT           reduce using rule 158 (empty -> .)
    READ            reduce using rule 158 (empty -> .)
    IF              reduce using rule 158 (empty -> .)
    FOR             reduce using rule 158 (empty -> .)
    WHILE           reduce using rule 158 (empty -> .)
    RETURN          reduce using rule 158 (empty -> .)
    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)
    STRUCT          reduce using rule 73 (errorStructDeclare -> .)
    DICT            reduce using rule 75 (errorDictDeclare -> .)

    dictDeclare                    shift and go to state 18
    cyDeclare                      shift and go to state 72
    saveType                       shift and go to state 19
    errorDictDeclare               shift and go to state 20
    structDeclare                  shift and go to state 21
    basicDeclare                   shift and go to state 23
    declare                        shift and go to state 69
    empty                          shift and go to state 70
    errorStructDeclare             shift and go to state 22

state 62

    (103) structType -> DICT dict .

    [               reduce using rule 103 (structType -> DICT dict .)


state 63

    (18) main -> errorMain MAIN saveMain { opVars . body } clearVarsTable
    (78) body -> . errorBody cyInstruction
    (79) body -> . empty
    (80) errorBody -> .
    (158) empty -> .

    ID              reduce using rule 80 (errorBody -> .)
    PRINT           reduce using rule 80 (errorBody -> .)
    READ            reduce using rule 80 (errorBody -> .)
    IF              reduce using rule 80 (errorBody -> .)
    FOR             reduce using rule 80 (errorBody -> .)
    WHILE           reduce using rule 80 (errorBody -> .)
    }               reduce using rule 158 (empty -> .)

    body                           shift and go to state 73
    errorBody                      shift and go to state 74
    empty                          shift and go to state 75

state 64

    (56) function -> errorFunction FUNC saveType ID saveProc flagParameters . PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable

    PARINI          shift and go to state 76


state 65

    (52) cyTypeParam -> , saveID . saveTypeParam ID cyTypeParam
    (54) saveTypeParam -> .

    ID              reduce using rule 54 (saveTypeParam -> .)

    saveTypeParam                  shift and go to state 77

state 66

    (70) basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID . ; cyDeclare

    ;               shift and go to state 78


state 67

    (111) dict -> errorDict PARINI type . : type PARFIN

    :               shift and go to state 79


state 68

    (74) dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .

    MAIN            reduce using rule 74 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    FUNC            reduce using rule 74 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    }               reduce using rule 74 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    ID              reduce using rule 74 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    PRINT           reduce using rule 74 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    READ            reduce using rule 74 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    IF              reduce using rule 74 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    FOR             reduce using rule 74 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    WHILE           reduce using rule 74 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    RETURN          reduce using rule 74 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)


state 69

    (76) cyDeclare -> declare .

    MAIN            reduce using rule 76 (cyDeclare -> declare .)
    FUNC            reduce using rule 76 (cyDeclare -> declare .)
    }               reduce using rule 76 (cyDeclare -> declare .)
    ID              reduce using rule 76 (cyDeclare -> declare .)
    PRINT           reduce using rule 76 (cyDeclare -> declare .)
    READ            reduce using rule 76 (cyDeclare -> declare .)
    IF              reduce using rule 76 (cyDeclare -> declare .)
    FOR             reduce using rule 76 (cyDeclare -> declare .)
    WHILE           reduce using rule 76 (cyDeclare -> declare .)
    RETURN          reduce using rule 76 (cyDeclare -> declare .)


state 70

    (77) cyDeclare -> empty .

    MAIN            reduce using rule 77 (cyDeclare -> empty .)
    FUNC            reduce using rule 77 (cyDeclare -> empty .)
    }               reduce using rule 77 (cyDeclare -> empty .)
    ID              reduce using rule 77 (cyDeclare -> empty .)
    PRINT           reduce using rule 77 (cyDeclare -> empty .)
    READ            reduce using rule 77 (cyDeclare -> empty .)
    IF              reduce using rule 77 (cyDeclare -> empty .)
    FOR             reduce using rule 77 (cyDeclare -> empty .)
    WHILE           reduce using rule 77 (cyDeclare -> empty .)
    RETURN          reduce using rule 77 (cyDeclare -> empty .)


state 71

    (101) struct -> structType [ CTED . ] optionalMatrix

    ]               shift and go to state 80


state 72

    (72) structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .

    MAIN            reduce using rule 72 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    FUNC            reduce using rule 72 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    }               reduce using rule 72 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    ID              reduce using rule 72 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    PRINT           reduce using rule 72 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    READ            reduce using rule 72 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    IF              reduce using rule 72 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    FOR             reduce using rule 72 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    WHILE           reduce using rule 72 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    RETURN          reduce using rule 72 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)


state 73

    (18) main -> errorMain MAIN saveMain { opVars body . } clearVarsTable

    }               shift and go to state 81


state 74

    (78) body -> errorBody . cyInstruction
    (81) cyInstruction -> . instr body
    (21) instr -> . basicStatements ;
    (22) instr -> . condition
    (23) instr -> . cycle
    (24) basicStatements -> . assign
    (25) basicStatements -> . funcCall
    (26) basicStatements -> . print
    (27) basicStatements -> . read
    (106) condition -> . errorCondition IF PARINI expresion PARFIN { body } optionalElse
    (82) cycle -> . forCycle
    (83) cycle -> . whileCycle
    (88) assign -> . ID saveVariable errorAssign assignOptions performAssign
    (96) funcCall -> . ID PARINI opParamCall PARFIN
    (28) print -> . PRINT PARINI exp performPrint cyPrint PARFIN
    (31) read -> . READ PARINI ID cyRead PARFIN
    (107) errorCondition -> .
    (86) forCycle -> . errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body }
    (84) whileCycle -> . errorWhileCycle WHILE PARINI expresion PARFIN { body }
    (87) errorForCycle -> .
    (85) errorWhileCycle -> .

    ID              shift and go to state 88
    PRINT           shift and go to state 85
    READ            shift and go to state 83
    IF              reduce using rule 107 (errorCondition -> .)
    FOR             reduce using rule 87 (errorForCycle -> .)
    WHILE           reduce using rule 85 (errorWhileCycle -> .)

    instr                          shift and go to state 82
    whileCycle                     shift and go to state 84
    forCycle                       shift and go to state 86
    errorWhileCycle                shift and go to state 87
    condition                      shift and go to state 95
    print                          shift and go to state 89
    read                           shift and go to state 91
    basicStatements                shift and go to state 92
    errorForCycle                  shift and go to state 93
    cyInstruction                  shift and go to state 94
    cycle                          shift and go to state 90
    funcCall                       shift and go to state 96
    errorCondition                 shift and go to state 97
    assign                         shift and go to state 98

state 75

    (79) body -> empty .

    }               reduce using rule 79 (body -> empty .)
    RETURN          reduce using rule 79 (body -> empty .)


state 76

    (56) function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI . opParameters PARFIN flagParameters opReturns } clearVarsTable
    (61) opParameters -> . param saveParamToDirProc errorOpParameters
    (62) opParameters -> . empty
    (48) param -> . saveType type errorParam ID cyTypeParam cyParam
    (158) empty -> .
    (3) saveType -> .

    PARFIN          reduce using rule 158 (empty -> .)
    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)

    opParameters                   shift and go to state 99
    param                          shift and go to state 100
    saveType                       shift and go to state 101
    empty                          shift and go to state 102

state 77

    (52) cyTypeParam -> , saveID saveTypeParam . ID cyTypeParam

    ID              shift and go to state 103


state 78

    (70) basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; . cyDeclare
    (76) cyDeclare -> . declare
    (77) cyDeclare -> . empty
    (34) declare -> . basicDeclare
    (35) declare -> . structDeclare
    (36) declare -> . dictDeclare
    (158) empty -> .
    (70) basicDeclare -> . saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (72) structDeclare -> . errorStructDeclare STRUCT ID struct ; cyDeclare
    (74) dictDeclare -> . errorDictDeclare DICT ID dict ; cyDeclare
    (3) saveType -> .
    (73) errorStructDeclare -> .
    (75) errorDictDeclare -> .

    MAIN            reduce using rule 158 (empty -> .)
    FUNC            reduce using rule 158 (empty -> .)
    }               reduce using rule 158 (empty -> .)
    ID              reduce using rule 158 (empty -> .)
    PRINT           reduce using rule 158 (empty -> .)
    READ            reduce using rule 158 (empty -> .)
    IF              reduce using rule 158 (empty -> .)
    FOR             reduce using rule 158 (empty -> .)
    WHILE           reduce using rule 158 (empty -> .)
    RETURN          reduce using rule 158 (empty -> .)
    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)
    STRUCT          reduce using rule 73 (errorStructDeclare -> .)
    DICT            reduce using rule 75 (errorDictDeclare -> .)

    dictDeclare                    shift and go to state 18
    cyDeclare                      shift and go to state 104
    basicDeclare                   shift and go to state 23
    saveType                       shift and go to state 19
    errorDictDeclare               shift and go to state 20
    empty                          shift and go to state 70
    structDeclare                  shift and go to state 21
    errorStructDeclare             shift and go to state 22
    declare                        shift and go to state 69

state 79

    (111) dict -> errorDict PARINI type : . type PARFIN
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    errorType                      shift and go to state 31
    type                           shift and go to state 105

state 80

    (101) struct -> structType [ CTED ] . optionalMatrix
    (104) optionalMatrix -> . [ CTED ]
    (105) optionalMatrix -> . empty
    (158) empty -> .

    [               shift and go to state 107
    ;               reduce using rule 158 (empty -> .)

    empty                          shift and go to state 108
    optionalMatrix                 shift and go to state 106

state 81

    (18) main -> errorMain MAIN saveMain { opVars body } . clearVarsTable
    (58) clearVarsTable -> .

    }               reduce using rule 58 (clearVarsTable -> .)

    clearVarsTable                 shift and go to state 109

state 82

    (81) cyInstruction -> instr . body
    (78) body -> . errorBody cyInstruction
    (79) body -> . empty
    (80) errorBody -> .
    (158) empty -> .

    ID              reduce using rule 80 (errorBody -> .)
    PRINT           reduce using rule 80 (errorBody -> .)
    READ            reduce using rule 80 (errorBody -> .)
    IF              reduce using rule 80 (errorBody -> .)
    FOR             reduce using rule 80 (errorBody -> .)
    WHILE           reduce using rule 80 (errorBody -> .)
    }               reduce using rule 158 (empty -> .)
    RETURN          reduce using rule 158 (empty -> .)

    body                           shift and go to state 110
    errorBody                      shift and go to state 74
    empty                          shift and go to state 75

state 83

    (31) read -> READ . PARINI ID cyRead PARFIN

    PARINI          shift and go to state 111


state 84

    (83) cycle -> whileCycle .

    ID              reduce using rule 83 (cycle -> whileCycle .)
    PRINT           reduce using rule 83 (cycle -> whileCycle .)
    READ            reduce using rule 83 (cycle -> whileCycle .)
    IF              reduce using rule 83 (cycle -> whileCycle .)
    FOR             reduce using rule 83 (cycle -> whileCycle .)
    WHILE           reduce using rule 83 (cycle -> whileCycle .)
    }               reduce using rule 83 (cycle -> whileCycle .)
    RETURN          reduce using rule 83 (cycle -> whileCycle .)


state 85

    (28) print -> PRINT . PARINI exp performPrint cyPrint PARFIN

    PARINI          shift and go to state 112


state 86

    (82) cycle -> forCycle .

    ID              reduce using rule 82 (cycle -> forCycle .)
    PRINT           reduce using rule 82 (cycle -> forCycle .)
    READ            reduce using rule 82 (cycle -> forCycle .)
    IF              reduce using rule 82 (cycle -> forCycle .)
    FOR             reduce using rule 82 (cycle -> forCycle .)
    WHILE           reduce using rule 82 (cycle -> forCycle .)
    }               reduce using rule 82 (cycle -> forCycle .)
    RETURN          reduce using rule 82 (cycle -> forCycle .)


state 87

    (84) whileCycle -> errorWhileCycle . WHILE PARINI expresion PARFIN { body }

    WHILE           shift and go to state 113


state 88

    (88) assign -> ID . saveVariable errorAssign assignOptions performAssign
    (96) funcCall -> ID . PARINI opParamCall PARFIN
    (160) saveVariable -> .

    PARINI          shift and go to state 115
    [               reduce using rule 160 (saveVariable -> .)
    ASGN            reduce using rule 160 (saveVariable -> .)

    saveVariable                   shift and go to state 114

state 89

    (26) basicStatements -> print .

    ;               reduce using rule 26 (basicStatements -> print .)


state 90

    (23) instr -> cycle .

    ID              reduce using rule 23 (instr -> cycle .)
    PRINT           reduce using rule 23 (instr -> cycle .)
    READ            reduce using rule 23 (instr -> cycle .)
    IF              reduce using rule 23 (instr -> cycle .)
    FOR             reduce using rule 23 (instr -> cycle .)
    WHILE           reduce using rule 23 (instr -> cycle .)
    }               reduce using rule 23 (instr -> cycle .)
    RETURN          reduce using rule 23 (instr -> cycle .)


state 91

    (27) basicStatements -> read .

    ;               reduce using rule 27 (basicStatements -> read .)


state 92

    (21) instr -> basicStatements . ;

    ;               shift and go to state 116


state 93

    (86) forCycle -> errorForCycle . FOR PARINI assign ; expresion ; assign PARFIN { body }

    FOR             shift and go to state 117


state 94

    (78) body -> errorBody cyInstruction .

    }               reduce using rule 78 (body -> errorBody cyInstruction .)
    RETURN          reduce using rule 78 (body -> errorBody cyInstruction .)


state 95

    (22) instr -> condition .

    ID              reduce using rule 22 (instr -> condition .)
    PRINT           reduce using rule 22 (instr -> condition .)
    READ            reduce using rule 22 (instr -> condition .)
    IF              reduce using rule 22 (instr -> condition .)
    FOR             reduce using rule 22 (instr -> condition .)
    WHILE           reduce using rule 22 (instr -> condition .)
    }               reduce using rule 22 (instr -> condition .)
    RETURN          reduce using rule 22 (instr -> condition .)


state 96

    (25) basicStatements -> funcCall .

    ;               reduce using rule 25 (basicStatements -> funcCall .)


state 97

    (106) condition -> errorCondition . IF PARINI expresion PARFIN { body } optionalElse

    IF              shift and go to state 118


state 98

    (24) basicStatements -> assign .

    ;               reduce using rule 24 (basicStatements -> assign .)


state 99

    (56) function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters . PARFIN flagParameters opReturns } clearVarsTable

    PARFIN          shift and go to state 119


state 100

    (61) opParameters -> param . saveParamToDirProc errorOpParameters
    (64) saveParamToDirProc -> .

    PARFIN          reduce using rule 64 (saveParamToDirProc -> .)

    saveParamToDirProc             shift and go to state 120

state 101

    (48) param -> saveType . type errorParam ID cyTypeParam cyParam
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    type                           shift and go to state 121
    errorType                      shift and go to state 31

state 102

    (62) opParameters -> empty .

    PARFIN          reduce using rule 62 (opParameters -> empty .)


state 103

    (52) cyTypeParam -> , saveID saveTypeParam ID . cyTypeParam
    (52) cyTypeParam -> . , saveID saveTypeParam ID cyTypeParam
    (53) cyTypeParam -> . empty
    (158) empty -> .

    ,               shift and go to state 55
    ;               reduce using rule 158 (empty -> .)
    PARFIN          reduce using rule 158 (empty -> .)

    cyTypeParam                    shift and go to state 122
    empty                          shift and go to state 56

state 104

    (70) basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .

    MAIN            reduce using rule 70 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    FUNC            reduce using rule 70 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    }               reduce using rule 70 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    ID              reduce using rule 70 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    PRINT           reduce using rule 70 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    READ            reduce using rule 70 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    IF              reduce using rule 70 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    FOR             reduce using rule 70 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    WHILE           reduce using rule 70 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    RETURN          reduce using rule 70 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)


state 105

    (111) dict -> errorDict PARINI type : type . PARFIN

    PARFIN          shift and go to state 123


state 106

    (101) struct -> structType [ CTED ] optionalMatrix .

    ;               reduce using rule 101 (struct -> structType [ CTED ] optionalMatrix .)


state 107

    (104) optionalMatrix -> [ . CTED ]

    CTED            shift and go to state 124


state 108

    (105) optionalMatrix -> empty .

    ;               reduce using rule 105 (optionalMatrix -> empty .)


state 109

    (18) main -> errorMain MAIN saveMain { opVars body } clearVarsTable .

    }               reduce using rule 18 (main -> errorMain MAIN saveMain { opVars body } clearVarsTable .)


state 110

    (81) cyInstruction -> instr body .

    }               reduce using rule 81 (cyInstruction -> instr body .)
    RETURN          reduce using rule 81 (cyInstruction -> instr body .)


state 111

    (31) read -> READ PARINI . ID cyRead PARFIN

    ID              shift and go to state 125


state 112

    (28) print -> PRINT PARINI . exp performPrint cyPrint PARFIN
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED
    (155) cte -> . CTEF
    (156) cte -> . TRUE
    (157) cte -> . FALSE
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 136
    fact                           shift and go to state 137

state 113

    (84) whileCycle -> errorWhileCycle WHILE . PARINI expresion PARFIN { body }

    PARINI          shift and go to state 138


state 114

    (88) assign -> ID saveVariable . errorAssign assignOptions performAssign
    (89) errorAssign -> .

    [               reduce using rule 89 (errorAssign -> .)
    ASGN            reduce using rule 89 (errorAssign -> .)

    errorAssign                    shift and go to state 139

state 115

    (96) funcCall -> ID PARINI . opParamCall PARFIN
    (97) opParamCall -> . expresion cyParamCall
    (98) opParamCall -> . empty
    (113) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (158) empty -> .
    (118) sExp -> . exp errorOpSExp opSExp performRelational
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED
    (155) cte -> . CTEF
    (156) cte -> . TRUE
    (157) cte -> . FALSE
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    PARFIN          reduce using rule 158 (empty -> .)
    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    opParamCall                    shift and go to state 140
    sExp                           shift and go to state 141
    empty                          shift and go to state 142
    expresion                      shift and go to state 143
    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 144
    fact                           shift and go to state 137

state 116

    (21) instr -> basicStatements ; .

    ID              reduce using rule 21 (instr -> basicStatements ; .)
    PRINT           reduce using rule 21 (instr -> basicStatements ; .)
    READ            reduce using rule 21 (instr -> basicStatements ; .)
    IF              reduce using rule 21 (instr -> basicStatements ; .)
    FOR             reduce using rule 21 (instr -> basicStatements ; .)
    WHILE           reduce using rule 21 (instr -> basicStatements ; .)
    }               reduce using rule 21 (instr -> basicStatements ; .)
    RETURN          reduce using rule 21 (instr -> basicStatements ; .)


state 117

    (86) forCycle -> errorForCycle FOR . PARINI assign ; expresion ; assign PARFIN { body }

    PARINI          shift and go to state 145


state 118

    (106) condition -> errorCondition IF . PARINI expresion PARFIN { body } optionalElse

    PARINI          shift and go to state 146


state 119

    (56) function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN . flagParameters opReturns } clearVarsTable
    (63) flagParameters -> .

    {               reduce using rule 63 (flagParameters -> .)
    RETURNS         reduce using rule 63 (flagParameters -> .)

    flagParameters                 shift and go to state 147

state 120

    (61) opParameters -> param saveParamToDirProc . errorOpParameters
    (65) errorOpParameters -> .

    PARFIN          reduce using rule 65 (errorOpParameters -> .)

    errorOpParameters              shift and go to state 148

state 121

    (48) param -> saveType type . errorParam ID cyTypeParam cyParam
    (49) errorParam -> .

    ID              reduce using rule 49 (errorParam -> .)

    errorParam                     shift and go to state 149

state 122

    (52) cyTypeParam -> , saveID saveTypeParam ID cyTypeParam .

    ;               reduce using rule 52 (cyTypeParam -> , saveID saveTypeParam ID cyTypeParam .)
    PARFIN          reduce using rule 52 (cyTypeParam -> , saveID saveTypeParam ID cyTypeParam .)


state 123

    (111) dict -> errorDict PARINI type : type PARFIN .

    ;               reduce using rule 111 (dict -> errorDict PARINI type : type PARFIN .)
    [               reduce using rule 111 (dict -> errorDict PARINI type : type PARFIN .)


state 124

    (104) optionalMatrix -> [ CTED . ]

    ]               shift and go to state 150


state 125

    (31) read -> READ PARINI ID . cyRead PARFIN
    (32) cyRead -> . , ID cyRead
    (33) cyRead -> . empty
    (158) empty -> .

    ,               shift and go to state 151
    PARFIN          reduce using rule 158 (empty -> .)

    cyRead                         shift and go to state 152
    empty                          shift and go to state 153

state 126

    (156) cte -> TRUE .

    MULT            reduce using rule 156 (cte -> TRUE .)
    DIV             reduce using rule 156 (cte -> TRUE .)
    PLUS            reduce using rule 156 (cte -> TRUE .)
    MINUS           reduce using rule 156 (cte -> TRUE .)
    EQ              reduce using rule 156 (cte -> TRUE .)
    DIF             reduce using rule 156 (cte -> TRUE .)
    LTOEQ           reduce using rule 156 (cte -> TRUE .)
    GTOEQ           reduce using rule 156 (cte -> TRUE .)
    GT              reduce using rule 156 (cte -> TRUE .)
    LT              reduce using rule 156 (cte -> TRUE .)
    AND             reduce using rule 156 (cte -> TRUE .)
    OR              reduce using rule 156 (cte -> TRUE .)
    ]               reduce using rule 156 (cte -> TRUE .)
    PARFIN          reduce using rule 156 (cte -> TRUE .)
    ,               reduce using rule 156 (cte -> TRUE .)
    ;               reduce using rule 156 (cte -> TRUE .)
    :               reduce using rule 156 (cte -> TRUE .)


state 127

    (139) fact -> PARINI . putFondo expresion PARFIN takeFondo
    (162) putFondo -> .

    CTES            reduce using rule 162 (putFondo -> .)
    PARINI          reduce using rule 162 (putFondo -> .)
    ID              reduce using rule 162 (putFondo -> .)
    CTED            reduce using rule 162 (putFondo -> .)
    CTEF            reduce using rule 162 (putFondo -> .)
    TRUE            reduce using rule 162 (putFondo -> .)
    FALSE           reduce using rule 162 (putFondo -> .)

    putFondo                       shift and go to state 154

state 128

    (154) cte -> CTED .

    MULT            reduce using rule 154 (cte -> CTED .)
    DIV             reduce using rule 154 (cte -> CTED .)
    PLUS            reduce using rule 154 (cte -> CTED .)
    MINUS           reduce using rule 154 (cte -> CTED .)
    EQ              reduce using rule 154 (cte -> CTED .)
    DIF             reduce using rule 154 (cte -> CTED .)
    LTOEQ           reduce using rule 154 (cte -> CTED .)
    GTOEQ           reduce using rule 154 (cte -> CTED .)
    GT              reduce using rule 154 (cte -> CTED .)
    LT              reduce using rule 154 (cte -> CTED .)
    AND             reduce using rule 154 (cte -> CTED .)
    OR              reduce using rule 154 (cte -> CTED .)
    ]               reduce using rule 154 (cte -> CTED .)
    PARFIN          reduce using rule 154 (cte -> CTED .)
    ,               reduce using rule 154 (cte -> CTED .)
    ;               reduce using rule 154 (cte -> CTED .)
    :               reduce using rule 154 (cte -> CTED .)


state 129

    (140) fact -> ID . saveVariable opAccess errorOpAccess
    (96) funcCall -> ID . PARINI opParamCall PARFIN
    (160) saveVariable -> .

    PARINI          shift and go to state 115
    .               reduce using rule 160 (saveVariable -> .)
    [               reduce using rule 160 (saveVariable -> .)
    MULT            reduce using rule 160 (saveVariable -> .)
    DIV             reduce using rule 160 (saveVariable -> .)
    PLUS            reduce using rule 160 (saveVariable -> .)
    MINUS           reduce using rule 160 (saveVariable -> .)
    ,               reduce using rule 160 (saveVariable -> .)
    PARFIN          reduce using rule 160 (saveVariable -> .)
    EQ              reduce using rule 160 (saveVariable -> .)
    DIF             reduce using rule 160 (saveVariable -> .)
    LTOEQ           reduce using rule 160 (saveVariable -> .)
    GTOEQ           reduce using rule 160 (saveVariable -> .)
    GT              reduce using rule 160 (saveVariable -> .)
    LT              reduce using rule 160 (saveVariable -> .)
    AND             reduce using rule 160 (saveVariable -> .)
    OR              reduce using rule 160 (saveVariable -> .)
    ]               reduce using rule 160 (saveVariable -> .)
    ;               reduce using rule 160 (saveVariable -> .)

    saveVariable                   shift and go to state 155

state 130

    (136) fact -> CTES .

    MULT            reduce using rule 136 (fact -> CTES .)
    DIV             reduce using rule 136 (fact -> CTES .)
    PLUS            reduce using rule 136 (fact -> CTES .)
    MINUS           reduce using rule 136 (fact -> CTES .)
    AND             reduce using rule 136 (fact -> CTES .)
    OR              reduce using rule 136 (fact -> CTES .)
    ,               reduce using rule 136 (fact -> CTES .)
    PARFIN          reduce using rule 136 (fact -> CTES .)
    ]               reduce using rule 136 (fact -> CTES .)
    ;               reduce using rule 136 (fact -> CTES .)
    EQ              reduce using rule 136 (fact -> CTES .)
    DIF             reduce using rule 136 (fact -> CTES .)
    LTOEQ           reduce using rule 136 (fact -> CTES .)
    GTOEQ           reduce using rule 136 (fact -> CTES .)
    GT              reduce using rule 136 (fact -> CTES .)
    LT              reduce using rule 136 (fact -> CTES .)


state 131

    (127) exp -> term . performAddSub errorCyExp cyExp
    (166) performAddSub -> .

    PLUS            reduce using rule 166 (performAddSub -> .)
    MINUS           reduce using rule 166 (performAddSub -> .)
    ,               reduce using rule 166 (performAddSub -> .)
    PARFIN          reduce using rule 166 (performAddSub -> .)
    EQ              reduce using rule 166 (performAddSub -> .)
    DIF             reduce using rule 166 (performAddSub -> .)
    LTOEQ           reduce using rule 166 (performAddSub -> .)
    GTOEQ           reduce using rule 166 (performAddSub -> .)
    GT              reduce using rule 166 (performAddSub -> .)
    LT              reduce using rule 166 (performAddSub -> .)
    AND             reduce using rule 166 (performAddSub -> .)
    OR              reduce using rule 166 (performAddSub -> .)
    ]               reduce using rule 166 (performAddSub -> .)
    ;               reduce using rule 166 (performAddSub -> .)

    performAddSub                  shift and go to state 156

state 132

    (157) cte -> FALSE .

    MULT            reduce using rule 157 (cte -> FALSE .)
    DIV             reduce using rule 157 (cte -> FALSE .)
    PLUS            reduce using rule 157 (cte -> FALSE .)
    MINUS           reduce using rule 157 (cte -> FALSE .)
    EQ              reduce using rule 157 (cte -> FALSE .)
    DIF             reduce using rule 157 (cte -> FALSE .)
    LTOEQ           reduce using rule 157 (cte -> FALSE .)
    GTOEQ           reduce using rule 157 (cte -> FALSE .)
    GT              reduce using rule 157 (cte -> FALSE .)
    LT              reduce using rule 157 (cte -> FALSE .)
    AND             reduce using rule 157 (cte -> FALSE .)
    OR              reduce using rule 157 (cte -> FALSE .)
    ]               reduce using rule 157 (cte -> FALSE .)
    PARFIN          reduce using rule 157 (cte -> FALSE .)
    ,               reduce using rule 157 (cte -> FALSE .)
    ;               reduce using rule 157 (cte -> FALSE .)
    :               reduce using rule 157 (cte -> FALSE .)


state 133

    (138) fact -> funcCall .

    MULT            reduce using rule 138 (fact -> funcCall .)
    DIV             reduce using rule 138 (fact -> funcCall .)
    PLUS            reduce using rule 138 (fact -> funcCall .)
    MINUS           reduce using rule 138 (fact -> funcCall .)
    AND             reduce using rule 138 (fact -> funcCall .)
    OR              reduce using rule 138 (fact -> funcCall .)
    ,               reduce using rule 138 (fact -> funcCall .)
    PARFIN          reduce using rule 138 (fact -> funcCall .)
    ]               reduce using rule 138 (fact -> funcCall .)
    ;               reduce using rule 138 (fact -> funcCall .)
    EQ              reduce using rule 138 (fact -> funcCall .)
    DIF             reduce using rule 138 (fact -> funcCall .)
    LTOEQ           reduce using rule 138 (fact -> funcCall .)
    GTOEQ           reduce using rule 138 (fact -> funcCall .)
    GT              reduce using rule 138 (fact -> funcCall .)
    LT              reduce using rule 138 (fact -> funcCall .)


state 134

    (137) fact -> cte .

    MULT            reduce using rule 137 (fact -> cte .)
    DIV             reduce using rule 137 (fact -> cte .)
    PLUS            reduce using rule 137 (fact -> cte .)
    MINUS           reduce using rule 137 (fact -> cte .)
    AND             reduce using rule 137 (fact -> cte .)
    OR              reduce using rule 137 (fact -> cte .)
    ,               reduce using rule 137 (fact -> cte .)
    PARFIN          reduce using rule 137 (fact -> cte .)
    ]               reduce using rule 137 (fact -> cte .)
    ;               reduce using rule 137 (fact -> cte .)
    EQ              reduce using rule 137 (fact -> cte .)
    DIF             reduce using rule 137 (fact -> cte .)
    LTOEQ           reduce using rule 137 (fact -> cte .)
    GTOEQ           reduce using rule 137 (fact -> cte .)
    GT              reduce using rule 137 (fact -> cte .)
    LT              reduce using rule 137 (fact -> cte .)


state 135

    (155) cte -> CTEF .

    MULT            reduce using rule 155 (cte -> CTEF .)
    DIV             reduce using rule 155 (cte -> CTEF .)
    PLUS            reduce using rule 155 (cte -> CTEF .)
    MINUS           reduce using rule 155 (cte -> CTEF .)
    EQ              reduce using rule 155 (cte -> CTEF .)
    DIF             reduce using rule 155 (cte -> CTEF .)
    LTOEQ           reduce using rule 155 (cte -> CTEF .)
    GTOEQ           reduce using rule 155 (cte -> CTEF .)
    GT              reduce using rule 155 (cte -> CTEF .)
    LT              reduce using rule 155 (cte -> CTEF .)
    AND             reduce using rule 155 (cte -> CTEF .)
    OR              reduce using rule 155 (cte -> CTEF .)
    ]               reduce using rule 155 (cte -> CTEF .)
    PARFIN          reduce using rule 155 (cte -> CTEF .)
    ,               reduce using rule 155 (cte -> CTEF .)
    ;               reduce using rule 155 (cte -> CTEF .)
    :               reduce using rule 155 (cte -> CTEF .)


state 136

    (28) print -> PRINT PARINI exp . performPrint cyPrint PARFIN
    (169) performPrint -> .

    ,               reduce using rule 169 (performPrint -> .)
    PARFIN          reduce using rule 169 (performPrint -> .)

    performPrint                   shift and go to state 157

state 137

    (132) term -> fact . performMulDiv cyTerm
    (165) performMulDiv -> .

    MULT            reduce using rule 165 (performMulDiv -> .)
    DIV             reduce using rule 165 (performMulDiv -> .)
    PLUS            reduce using rule 165 (performMulDiv -> .)
    MINUS           reduce using rule 165 (performMulDiv -> .)
    ,               reduce using rule 165 (performMulDiv -> .)
    PARFIN          reduce using rule 165 (performMulDiv -> .)
    EQ              reduce using rule 165 (performMulDiv -> .)
    DIF             reduce using rule 165 (performMulDiv -> .)
    LTOEQ           reduce using rule 165 (performMulDiv -> .)
    GTOEQ           reduce using rule 165 (performMulDiv -> .)
    GT              reduce using rule 165 (performMulDiv -> .)
    LT              reduce using rule 165 (performMulDiv -> .)
    AND             reduce using rule 165 (performMulDiv -> .)
    OR              reduce using rule 165 (performMulDiv -> .)
    ]               reduce using rule 165 (performMulDiv -> .)
    ;               reduce using rule 165 (performMulDiv -> .)

    performMulDiv                  shift and go to state 158

state 138

    (84) whileCycle -> errorWhileCycle WHILE PARINI . expresion PARFIN { body }
    (113) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (118) sExp -> . exp errorOpSExp opSExp performRelational
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED
    (155) cte -> . CTEF
    (156) cte -> . TRUE
    (157) cte -> . FALSE
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    sExp                           shift and go to state 141
    expresion                      shift and go to state 159
    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 144
    fact                           shift and go to state 137

state 139

    (88) assign -> ID saveVariable errorAssign . assignOptions performAssign
    (90) assignOptions -> . init
    (91) assignOptions -> . initDict
    (92) assignOptions -> . [ expresion ] assignMatrix init
    (37) init -> . ASGN saveOperator errorInit initWith
    (42) initDict -> . ASGN PARINI dictType : dictType PARFIN errorInitDict

    [               shift and go to state 164
    ASGN            shift and go to state 162

    initDict                       shift and go to state 160
    assignOptions                  shift and go to state 161
    init                           shift and go to state 163

state 140

    (96) funcCall -> ID PARINI opParamCall . PARFIN

    PARFIN          shift and go to state 165


state 141

    (113) expresion -> sExp . performAndOr cyExpresion errorExpresion
    (168) performAndOr -> .

    AND             reduce using rule 168 (performAndOr -> .)
    OR              reduce using rule 168 (performAndOr -> .)
    ,               reduce using rule 168 (performAndOr -> .)
    PARFIN          reduce using rule 168 (performAndOr -> .)
    ]               reduce using rule 168 (performAndOr -> .)
    ;               reduce using rule 168 (performAndOr -> .)

    performAndOr                   shift and go to state 166

state 142

    (98) opParamCall -> empty .

    PARFIN          reduce using rule 98 (opParamCall -> empty .)


state 143

    (97) opParamCall -> expresion . cyParamCall
    (99) cyParamCall -> . , expresion cyParamCall
    (100) cyParamCall -> . empty
    (158) empty -> .

    ,               shift and go to state 168
    PARFIN          reduce using rule 158 (empty -> .)

    cyParamCall                    shift and go to state 167
    empty                          shift and go to state 169

state 144

    (118) sExp -> exp . errorOpSExp opSExp performRelational
    (126) errorOpSExp -> .

    EQ              reduce using rule 126 (errorOpSExp -> .)
    DIF             reduce using rule 126 (errorOpSExp -> .)
    LTOEQ           reduce using rule 126 (errorOpSExp -> .)
    GTOEQ           reduce using rule 126 (errorOpSExp -> .)
    GT              reduce using rule 126 (errorOpSExp -> .)
    LT              reduce using rule 126 (errorOpSExp -> .)
    AND             reduce using rule 126 (errorOpSExp -> .)
    OR              reduce using rule 126 (errorOpSExp -> .)
    ,               reduce using rule 126 (errorOpSExp -> .)
    PARFIN          reduce using rule 126 (errorOpSExp -> .)
    ]               reduce using rule 126 (errorOpSExp -> .)
    ;               reduce using rule 126 (errorOpSExp -> .)

    errorOpSExp                    shift and go to state 170

state 145

    (86) forCycle -> errorForCycle FOR PARINI . assign ; expresion ; assign PARFIN { body }
    (88) assign -> . ID saveVariable errorAssign assignOptions performAssign

    ID              shift and go to state 171

    assign                         shift and go to state 172

state 146

    (106) condition -> errorCondition IF PARINI . expresion PARFIN { body } optionalElse
    (113) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (118) sExp -> . exp errorOpSExp opSExp performRelational
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED
    (155) cte -> . CTEF
    (156) cte -> . TRUE
    (157) cte -> . FALSE
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    sExp                           shift and go to state 141
    expresion                      shift and go to state 173
    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 144
    fact                           shift and go to state 137

state 147

    (56) function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters . opReturns } clearVarsTable
    (66) opReturns -> . errorOpReturns RETURNS type saveReturnType { opVars body return
    (67) opReturns -> . { opVars body
    (69) errorOpReturns -> .

    {               shift and go to state 176
    RETURNS         reduce using rule 69 (errorOpReturns -> .)

    errorOpReturns                 shift and go to state 175
    opReturns                      shift and go to state 174

state 148

    (61) opParameters -> param saveParamToDirProc errorOpParameters .

    PARFIN          reduce using rule 61 (opParameters -> param saveParamToDirProc errorOpParameters .)


state 149

    (48) param -> saveType type errorParam . ID cyTypeParam cyParam

    ID              shift and go to state 177


state 150

    (104) optionalMatrix -> [ CTED ] .

    ;               reduce using rule 104 (optionalMatrix -> [ CTED ] .)


state 151

    (32) cyRead -> , . ID cyRead

    ID              shift and go to state 178


state 152

    (31) read -> READ PARINI ID cyRead . PARFIN

    PARFIN          shift and go to state 179


state 153

    (33) cyRead -> empty .

    PARFIN          reduce using rule 33 (cyRead -> empty .)


state 154

    (139) fact -> PARINI putFondo . expresion PARFIN takeFondo
    (113) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (118) sExp -> . exp errorOpSExp opSExp performRelational
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED
    (155) cte -> . CTEF
    (156) cte -> . TRUE
    (157) cte -> . FALSE
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    sExp                           shift and go to state 141
    expresion                      shift and go to state 180
    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 144
    fact                           shift and go to state 137

state 155

    (140) fact -> ID saveVariable . opAccess errorOpAccess
    (142) opAccess -> . opStruct
    (143) opAccess -> . opDictionary
    (144) opAccess -> . empty
    (146) opStruct -> . errorOpStruct [ expresion ] opMatrix
    (151) opDictionary -> . . dictIndex
    (158) empty -> .
    (147) errorOpStruct -> .

    .               shift and go to state 185
    MULT            reduce using rule 158 (empty -> .)
    DIV             reduce using rule 158 (empty -> .)
    PLUS            reduce using rule 158 (empty -> .)
    MINUS           reduce using rule 158 (empty -> .)
    ,               reduce using rule 158 (empty -> .)
    PARFIN          reduce using rule 158 (empty -> .)
    EQ              reduce using rule 158 (empty -> .)
    DIF             reduce using rule 158 (empty -> .)
    LTOEQ           reduce using rule 158 (empty -> .)
    GTOEQ           reduce using rule 158 (empty -> .)
    GT              reduce using rule 158 (empty -> .)
    LT              reduce using rule 158 (empty -> .)
    AND             reduce using rule 158 (empty -> .)
    OR              reduce using rule 158 (empty -> .)
    ]               reduce using rule 158 (empty -> .)
    ;               reduce using rule 158 (empty -> .)
    [               reduce using rule 147 (errorOpStruct -> .)

    errorOpStruct                  shift and go to state 181
    opDictionary                   shift and go to state 182
    opStruct                       shift and go to state 183
    opAccess                       shift and go to state 184
    empty                          shift and go to state 186

state 156

    (127) exp -> term performAddSub . errorCyExp cyExp
    (131) errorCyExp -> .

    PLUS            reduce using rule 131 (errorCyExp -> .)
    MINUS           reduce using rule 131 (errorCyExp -> .)
    ,               reduce using rule 131 (errorCyExp -> .)
    PARFIN          reduce using rule 131 (errorCyExp -> .)
    EQ              reduce using rule 131 (errorCyExp -> .)
    DIF             reduce using rule 131 (errorCyExp -> .)
    LTOEQ           reduce using rule 131 (errorCyExp -> .)
    GTOEQ           reduce using rule 131 (errorCyExp -> .)
    GT              reduce using rule 131 (errorCyExp -> .)
    LT              reduce using rule 131 (errorCyExp -> .)
    AND             reduce using rule 131 (errorCyExp -> .)
    OR              reduce using rule 131 (errorCyExp -> .)
    ]               reduce using rule 131 (errorCyExp -> .)
    ;               reduce using rule 131 (errorCyExp -> .)

    errorCyExp                     shift and go to state 187

state 157

    (28) print -> PRINT PARINI exp performPrint . cyPrint PARFIN
    (29) cyPrint -> . , exp performPrint cyPrint
    (30) cyPrint -> . empty
    (158) empty -> .

    ,               shift and go to state 189
    PARFIN          reduce using rule 158 (empty -> .)

    cyPrint                        shift and go to state 188
    empty                          shift and go to state 190

state 158

    (132) term -> fact performMulDiv . cyTerm
    (133) cyTerm -> . MULT saveOperator errorFact term
    (134) cyTerm -> . DIV saveOperator term
    (135) cyTerm -> . empty
    (158) empty -> .

    MULT            shift and go to state 194
    DIV             shift and go to state 193
    PLUS            reduce using rule 158 (empty -> .)
    MINUS           reduce using rule 158 (empty -> .)
    ,               reduce using rule 158 (empty -> .)
    PARFIN          reduce using rule 158 (empty -> .)
    EQ              reduce using rule 158 (empty -> .)
    DIF             reduce using rule 158 (empty -> .)
    LTOEQ           reduce using rule 158 (empty -> .)
    GTOEQ           reduce using rule 158 (empty -> .)
    GT              reduce using rule 158 (empty -> .)
    LT              reduce using rule 158 (empty -> .)
    AND             reduce using rule 158 (empty -> .)
    OR              reduce using rule 158 (empty -> .)
    ]               reduce using rule 158 (empty -> .)
    ;               reduce using rule 158 (empty -> .)

    cyTerm                         shift and go to state 191
    empty                          shift and go to state 192

state 159

    (84) whileCycle -> errorWhileCycle WHILE PARINI expresion . PARFIN { body }

    PARFIN          shift and go to state 195


state 160

    (91) assignOptions -> initDict .

    ;               reduce using rule 91 (assignOptions -> initDict .)
    PARFIN          reduce using rule 91 (assignOptions -> initDict .)


state 161

    (88) assign -> ID saveVariable errorAssign assignOptions . performAssign
    (164) performAssign -> .

    ;               reduce using rule 164 (performAssign -> .)
    PARFIN          reduce using rule 164 (performAssign -> .)

    performAssign                  shift and go to state 196

state 162

    (37) init -> ASGN . saveOperator errorInit initWith
    (42) initDict -> ASGN . PARINI dictType : dictType PARFIN errorInitDict
    (161) saveOperator -> .

  ! shift/reduce conflict for PARINI resolved as shift
    PARINI          shift and go to state 198
    CTES            reduce using rule 161 (saveOperator -> .)
    ID              reduce using rule 161 (saveOperator -> .)
    CTED            reduce using rule 161 (saveOperator -> .)
    CTEF            reduce using rule 161 (saveOperator -> .)
    TRUE            reduce using rule 161 (saveOperator -> .)
    FALSE           reduce using rule 161 (saveOperator -> .)

  ! PARINI          [ reduce using rule 161 (saveOperator -> .) ]

    saveOperator                   shift and go to state 197

state 163

    (90) assignOptions -> init .

    ;               reduce using rule 90 (assignOptions -> init .)
    PARFIN          reduce using rule 90 (assignOptions -> init .)


state 164

    (92) assignOptions -> [ . expresion ] assignMatrix init
    (113) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (118) sExp -> . exp errorOpSExp opSExp performRelational
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED
    (155) cte -> . CTEF
    (156) cte -> . TRUE
    (157) cte -> . FALSE
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    sExp                           shift and go to state 141
    expresion                      shift and go to state 199
    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 144
    fact                           shift and go to state 137

state 165

    (96) funcCall -> ID PARINI opParamCall PARFIN .

    MULT            reduce using rule 96 (funcCall -> ID PARINI opParamCall PARFIN .)
    DIV             reduce using rule 96 (funcCall -> ID PARINI opParamCall PARFIN .)
    PLUS            reduce using rule 96 (funcCall -> ID PARINI opParamCall PARFIN .)
    MINUS           reduce using rule 96 (funcCall -> ID PARINI opParamCall PARFIN .)
    ,               reduce using rule 96 (funcCall -> ID PARINI opParamCall PARFIN .)
    PARFIN          reduce using rule 96 (funcCall -> ID PARINI opParamCall PARFIN .)
    AND             reduce using rule 96 (funcCall -> ID PARINI opParamCall PARFIN .)
    OR              reduce using rule 96 (funcCall -> ID PARINI opParamCall PARFIN .)
    ]               reduce using rule 96 (funcCall -> ID PARINI opParamCall PARFIN .)
    ;               reduce using rule 96 (funcCall -> ID PARINI opParamCall PARFIN .)
    EQ              reduce using rule 96 (funcCall -> ID PARINI opParamCall PARFIN .)
    DIF             reduce using rule 96 (funcCall -> ID PARINI opParamCall PARFIN .)
    LTOEQ           reduce using rule 96 (funcCall -> ID PARINI opParamCall PARFIN .)
    GTOEQ           reduce using rule 96 (funcCall -> ID PARINI opParamCall PARFIN .)
    GT              reduce using rule 96 (funcCall -> ID PARINI opParamCall PARFIN .)
    LT              reduce using rule 96 (funcCall -> ID PARINI opParamCall PARFIN .)


state 166

    (113) expresion -> sExp performAndOr . cyExpresion errorExpresion
    (115) cyExpresion -> . AND saveOperator expresion
    (116) cyExpresion -> . OR saveOperator expresion
    (117) cyExpresion -> . empty
    (158) empty -> .

    AND             shift and go to state 200
    OR              shift and go to state 201
    ,               reduce using rule 158 (empty -> .)
    PARFIN          reduce using rule 158 (empty -> .)
    ]               reduce using rule 158 (empty -> .)
    ;               reduce using rule 158 (empty -> .)

    cyExpresion                    shift and go to state 202
    empty                          shift and go to state 203

state 167

    (97) opParamCall -> expresion cyParamCall .

    PARFIN          reduce using rule 97 (opParamCall -> expresion cyParamCall .)


state 168

    (99) cyParamCall -> , . expresion cyParamCall
    (113) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (118) sExp -> . exp errorOpSExp opSExp performRelational
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED
    (155) cte -> . CTEF
    (156) cte -> . TRUE
    (157) cte -> . FALSE
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    sExp                           shift and go to state 141
    expresion                      shift and go to state 204
    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 144
    fact                           shift and go to state 137

state 169

    (100) cyParamCall -> empty .

    PARFIN          reduce using rule 100 (cyParamCall -> empty .)


state 170

    (118) sExp -> exp errorOpSExp . opSExp performRelational
    (119) opSExp -> . EQ saveOperator exp
    (120) opSExp -> . DIF saveOperator exp
    (121) opSExp -> . LTOEQ saveOperator exp
    (122) opSExp -> . GTOEQ saveOperator exp
    (123) opSExp -> . GT saveOperator exp
    (124) opSExp -> . LT saveOperator exp
    (125) opSExp -> . empty
    (158) empty -> .

    EQ              shift and go to state 210
    DIF             shift and go to state 207
    LTOEQ           shift and go to state 206
    GTOEQ           shift and go to state 209
    GT              shift and go to state 205
    LT              shift and go to state 208
    AND             reduce using rule 158 (empty -> .)
    OR              reduce using rule 158 (empty -> .)
    ,               reduce using rule 158 (empty -> .)
    PARFIN          reduce using rule 158 (empty -> .)
    ]               reduce using rule 158 (empty -> .)
    ;               reduce using rule 158 (empty -> .)

    empty                          shift and go to state 211
    opSExp                         shift and go to state 212

state 171

    (88) assign -> ID . saveVariable errorAssign assignOptions performAssign
    (160) saveVariable -> .

    [               reduce using rule 160 (saveVariable -> .)
    ASGN            reduce using rule 160 (saveVariable -> .)

    saveVariable                   shift and go to state 114

state 172

    (86) forCycle -> errorForCycle FOR PARINI assign . ; expresion ; assign PARFIN { body }

    ;               shift and go to state 213


state 173

    (106) condition -> errorCondition IF PARINI expresion . PARFIN { body } optionalElse

    PARFIN          shift and go to state 214


state 174

    (56) function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns . } clearVarsTable

    }               shift and go to state 215


state 175

    (66) opReturns -> errorOpReturns . RETURNS type saveReturnType { opVars body return

    RETURNS         shift and go to state 216


state 176

    (67) opReturns -> { . opVars body
    (6) opVars -> . vars
    (7) opVars -> . empty
    (10) vars -> . errorVars VARS declare
    (158) empty -> .
    (12) errorVars -> .

    ID              reduce using rule 158 (empty -> .)
    PRINT           reduce using rule 158 (empty -> .)
    READ            reduce using rule 158 (empty -> .)
    IF              reduce using rule 158 (empty -> .)
    FOR             reduce using rule 158 (empty -> .)
    WHILE           reduce using rule 158 (empty -> .)
    }               reduce using rule 158 (empty -> .)
    VARS            reduce using rule 12 (errorVars -> .)

    vars                           shift and go to state 8
    opVars                         shift and go to state 217
    errorVars                      shift and go to state 10
    empty                          shift and go to state 11

state 177

    (48) param -> saveType type errorParam ID . cyTypeParam cyParam
    (52) cyTypeParam -> . , saveID saveTypeParam ID cyTypeParam
    (53) cyTypeParam -> . empty
    (158) empty -> .

    ,               shift and go to state 55
    ;               reduce using rule 158 (empty -> .)
    PARFIN          reduce using rule 158 (empty -> .)

    empty                          shift and go to state 56
    cyTypeParam                    shift and go to state 218

state 178

    (32) cyRead -> , ID . cyRead
    (32) cyRead -> . , ID cyRead
    (33) cyRead -> . empty
    (158) empty -> .

    ,               shift and go to state 151
    PARFIN          reduce using rule 158 (empty -> .)

    cyRead                         shift and go to state 219
    empty                          shift and go to state 153

state 179

    (31) read -> READ PARINI ID cyRead PARFIN .

    ;               reduce using rule 31 (read -> READ PARINI ID cyRead PARFIN .)


state 180

    (139) fact -> PARINI putFondo expresion . PARFIN takeFondo

    PARFIN          shift and go to state 220


state 181

    (146) opStruct -> errorOpStruct . [ expresion ] opMatrix

    [               shift and go to state 221


state 182

    (143) opAccess -> opDictionary .

    MULT            reduce using rule 143 (opAccess -> opDictionary .)
    DIV             reduce using rule 143 (opAccess -> opDictionary .)
    PLUS            reduce using rule 143 (opAccess -> opDictionary .)
    MINUS           reduce using rule 143 (opAccess -> opDictionary .)
    ,               reduce using rule 143 (opAccess -> opDictionary .)
    PARFIN          reduce using rule 143 (opAccess -> opDictionary .)
    EQ              reduce using rule 143 (opAccess -> opDictionary .)
    DIF             reduce using rule 143 (opAccess -> opDictionary .)
    LTOEQ           reduce using rule 143 (opAccess -> opDictionary .)
    GTOEQ           reduce using rule 143 (opAccess -> opDictionary .)
    GT              reduce using rule 143 (opAccess -> opDictionary .)
    LT              reduce using rule 143 (opAccess -> opDictionary .)
    AND             reduce using rule 143 (opAccess -> opDictionary .)
    OR              reduce using rule 143 (opAccess -> opDictionary .)
    ]               reduce using rule 143 (opAccess -> opDictionary .)
    ;               reduce using rule 143 (opAccess -> opDictionary .)


state 183

    (142) opAccess -> opStruct .

    MULT            reduce using rule 142 (opAccess -> opStruct .)
    DIV             reduce using rule 142 (opAccess -> opStruct .)
    PLUS            reduce using rule 142 (opAccess -> opStruct .)
    MINUS           reduce using rule 142 (opAccess -> opStruct .)
    ,               reduce using rule 142 (opAccess -> opStruct .)
    PARFIN          reduce using rule 142 (opAccess -> opStruct .)
    EQ              reduce using rule 142 (opAccess -> opStruct .)
    DIF             reduce using rule 142 (opAccess -> opStruct .)
    LTOEQ           reduce using rule 142 (opAccess -> opStruct .)
    GTOEQ           reduce using rule 142 (opAccess -> opStruct .)
    GT              reduce using rule 142 (opAccess -> opStruct .)
    LT              reduce using rule 142 (opAccess -> opStruct .)
    AND             reduce using rule 142 (opAccess -> opStruct .)
    OR              reduce using rule 142 (opAccess -> opStruct .)
    ]               reduce using rule 142 (opAccess -> opStruct .)
    ;               reduce using rule 142 (opAccess -> opStruct .)


state 184

    (140) fact -> ID saveVariable opAccess . errorOpAccess
    (145) errorOpAccess -> .

    MULT            reduce using rule 145 (errorOpAccess -> .)
    DIV             reduce using rule 145 (errorOpAccess -> .)
    PLUS            reduce using rule 145 (errorOpAccess -> .)
    MINUS           reduce using rule 145 (errorOpAccess -> .)
    ,               reduce using rule 145 (errorOpAccess -> .)
    PARFIN          reduce using rule 145 (errorOpAccess -> .)
    EQ              reduce using rule 145 (errorOpAccess -> .)
    DIF             reduce using rule 145 (errorOpAccess -> .)
    LTOEQ           reduce using rule 145 (errorOpAccess -> .)
    GTOEQ           reduce using rule 145 (errorOpAccess -> .)
    GT              reduce using rule 145 (errorOpAccess -> .)
    LT              reduce using rule 145 (errorOpAccess -> .)
    AND             reduce using rule 145 (errorOpAccess -> .)
    OR              reduce using rule 145 (errorOpAccess -> .)
    ]               reduce using rule 145 (errorOpAccess -> .)
    ;               reduce using rule 145 (errorOpAccess -> .)

    errorOpAccess                  shift and go to state 222

state 185

    (151) opDictionary -> . . dictIndex
    (152) dictIndex -> . FIRST
    (153) dictIndex -> . LAST

    FIRST           shift and go to state 223
    LAST            shift and go to state 224

    dictIndex                      shift and go to state 225

state 186

    (144) opAccess -> empty .

    MULT            reduce using rule 144 (opAccess -> empty .)
    DIV             reduce using rule 144 (opAccess -> empty .)
    PLUS            reduce using rule 144 (opAccess -> empty .)
    MINUS           reduce using rule 144 (opAccess -> empty .)
    ,               reduce using rule 144 (opAccess -> empty .)
    PARFIN          reduce using rule 144 (opAccess -> empty .)
    EQ              reduce using rule 144 (opAccess -> empty .)
    DIF             reduce using rule 144 (opAccess -> empty .)
    LTOEQ           reduce using rule 144 (opAccess -> empty .)
    GTOEQ           reduce using rule 144 (opAccess -> empty .)
    GT              reduce using rule 144 (opAccess -> empty .)
    LT              reduce using rule 144 (opAccess -> empty .)
    AND             reduce using rule 144 (opAccess -> empty .)
    OR              reduce using rule 144 (opAccess -> empty .)
    ]               reduce using rule 144 (opAccess -> empty .)
    ;               reduce using rule 144 (opAccess -> empty .)


state 187

    (127) exp -> term performAddSub errorCyExp . cyExp
    (128) cyExp -> . PLUS saveOperator exp
    (129) cyExp -> . MINUS saveOperator exp
    (130) cyExp -> . empty
    (158) empty -> .

    PLUS            shift and go to state 227
    MINUS           shift and go to state 228
    ,               reduce using rule 158 (empty -> .)
    PARFIN          reduce using rule 158 (empty -> .)
    EQ              reduce using rule 158 (empty -> .)
    DIF             reduce using rule 158 (empty -> .)
    LTOEQ           reduce using rule 158 (empty -> .)
    GTOEQ           reduce using rule 158 (empty -> .)
    GT              reduce using rule 158 (empty -> .)
    LT              reduce using rule 158 (empty -> .)
    AND             reduce using rule 158 (empty -> .)
    OR              reduce using rule 158 (empty -> .)
    ]               reduce using rule 158 (empty -> .)
    ;               reduce using rule 158 (empty -> .)

    cyExp                          shift and go to state 226
    empty                          shift and go to state 229

state 188

    (28) print -> PRINT PARINI exp performPrint cyPrint . PARFIN

    PARFIN          shift and go to state 230


state 189

    (29) cyPrint -> , . exp performPrint cyPrint
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED
    (155) cte -> . CTEF
    (156) cte -> . TRUE
    (157) cte -> . FALSE
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 231
    fact                           shift and go to state 137

state 190

    (30) cyPrint -> empty .

    PARFIN          reduce using rule 30 (cyPrint -> empty .)


state 191

    (132) term -> fact performMulDiv cyTerm .

    PLUS            reduce using rule 132 (term -> fact performMulDiv cyTerm .)
    MINUS           reduce using rule 132 (term -> fact performMulDiv cyTerm .)
    EQ              reduce using rule 132 (term -> fact performMulDiv cyTerm .)
    DIF             reduce using rule 132 (term -> fact performMulDiv cyTerm .)
    LTOEQ           reduce using rule 132 (term -> fact performMulDiv cyTerm .)
    GTOEQ           reduce using rule 132 (term -> fact performMulDiv cyTerm .)
    GT              reduce using rule 132 (term -> fact performMulDiv cyTerm .)
    LT              reduce using rule 132 (term -> fact performMulDiv cyTerm .)
    AND             reduce using rule 132 (term -> fact performMulDiv cyTerm .)
    OR              reduce using rule 132 (term -> fact performMulDiv cyTerm .)
    ]               reduce using rule 132 (term -> fact performMulDiv cyTerm .)
    ,               reduce using rule 132 (term -> fact performMulDiv cyTerm .)
    PARFIN          reduce using rule 132 (term -> fact performMulDiv cyTerm .)
    ;               reduce using rule 132 (term -> fact performMulDiv cyTerm .)


state 192

    (135) cyTerm -> empty .

    PLUS            reduce using rule 135 (cyTerm -> empty .)
    MINUS           reduce using rule 135 (cyTerm -> empty .)
    ,               reduce using rule 135 (cyTerm -> empty .)
    PARFIN          reduce using rule 135 (cyTerm -> empty .)
    EQ              reduce using rule 135 (cyTerm -> empty .)
    DIF             reduce using rule 135 (cyTerm -> empty .)
    LTOEQ           reduce using rule 135 (cyTerm -> empty .)
    GTOEQ           reduce using rule 135 (cyTerm -> empty .)
    GT              reduce using rule 135 (cyTerm -> empty .)
    LT              reduce using rule 135 (cyTerm -> empty .)
    AND             reduce using rule 135 (cyTerm -> empty .)
    OR              reduce using rule 135 (cyTerm -> empty .)
    ]               reduce using rule 135 (cyTerm -> empty .)
    ;               reduce using rule 135 (cyTerm -> empty .)


state 193

    (134) cyTerm -> DIV . saveOperator term
    (161) saveOperator -> .

    CTES            reduce using rule 161 (saveOperator -> .)
    PARINI          reduce using rule 161 (saveOperator -> .)
    ID              reduce using rule 161 (saveOperator -> .)
    CTED            reduce using rule 161 (saveOperator -> .)
    CTEF            reduce using rule 161 (saveOperator -> .)
    TRUE            reduce using rule 161 (saveOperator -> .)
    FALSE           reduce using rule 161 (saveOperator -> .)

    saveOperator                   shift and go to state 232

state 194

    (133) cyTerm -> MULT . saveOperator errorFact term
    (161) saveOperator -> .

    CTES            reduce using rule 161 (saveOperator -> .)
    PARINI          reduce using rule 161 (saveOperator -> .)
    ID              reduce using rule 161 (saveOperator -> .)
    CTED            reduce using rule 161 (saveOperator -> .)
    CTEF            reduce using rule 161 (saveOperator -> .)
    TRUE            reduce using rule 161 (saveOperator -> .)
    FALSE           reduce using rule 161 (saveOperator -> .)

    saveOperator                   shift and go to state 233

state 195

    (84) whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN . { body }

    {               shift and go to state 234


state 196

    (88) assign -> ID saveVariable errorAssign assignOptions performAssign .

    ;               reduce using rule 88 (assign -> ID saveVariable errorAssign assignOptions performAssign .)
    PARFIN          reduce using rule 88 (assign -> ID saveVariable errorAssign assignOptions performAssign .)


state 197

    (37) init -> ASGN saveOperator . errorInit initWith
    (38) errorInit -> .

    CTES            reduce using rule 38 (errorInit -> .)
    PARINI          reduce using rule 38 (errorInit -> .)
    ID              reduce using rule 38 (errorInit -> .)
    CTED            reduce using rule 38 (errorInit -> .)
    CTEF            reduce using rule 38 (errorInit -> .)
    TRUE            reduce using rule 38 (errorInit -> .)
    FALSE           reduce using rule 38 (errorInit -> .)

    errorInit                      shift and go to state 235

state 198

    (42) initDict -> ASGN PARINI . dictType : dictType PARFIN errorInitDict
    (44) dictType -> . errorDictType CTES
    (45) dictType -> . cte
    (46) dictType -> . ID
    (47) errorDictType -> .
    (154) cte -> . CTED
    (155) cte -> . CTEF
    (156) cte -> . TRUE
    (157) cte -> . FALSE

    ID              shift and go to state 239
    CTES            reduce using rule 47 (errorDictType -> .)
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    dictType                       shift and go to state 236
    errorDictType                  shift and go to state 237
    cte                            shift and go to state 238

state 199

    (92) assignOptions -> [ expresion . ] assignMatrix init

    ]               shift and go to state 240


state 200

    (115) cyExpresion -> AND . saveOperator expresion
    (161) saveOperator -> .

    CTES            reduce using rule 161 (saveOperator -> .)
    PARINI          reduce using rule 161 (saveOperator -> .)
    ID              reduce using rule 161 (saveOperator -> .)
    CTED            reduce using rule 161 (saveOperator -> .)
    CTEF            reduce using rule 161 (saveOperator -> .)
    TRUE            reduce using rule 161 (saveOperator -> .)
    FALSE           reduce using rule 161 (saveOperator -> .)

    saveOperator                   shift and go to state 241

state 201

    (116) cyExpresion -> OR . saveOperator expresion
    (161) saveOperator -> .

    CTES            reduce using rule 161 (saveOperator -> .)
    PARINI          reduce using rule 161 (saveOperator -> .)
    ID              reduce using rule 161 (saveOperator -> .)
    CTED            reduce using rule 161 (saveOperator -> .)
    CTEF            reduce using rule 161 (saveOperator -> .)
    TRUE            reduce using rule 161 (saveOperator -> .)
    FALSE           reduce using rule 161 (saveOperator -> .)

    saveOperator                   shift and go to state 242

state 202

    (113) expresion -> sExp performAndOr cyExpresion . errorExpresion
    (114) errorExpresion -> .

    ,               reduce using rule 114 (errorExpresion -> .)
    PARFIN          reduce using rule 114 (errorExpresion -> .)
    ]               reduce using rule 114 (errorExpresion -> .)
    ;               reduce using rule 114 (errorExpresion -> .)

    errorExpresion                 shift and go to state 243

state 203

    (117) cyExpresion -> empty .

    ,               reduce using rule 117 (cyExpresion -> empty .)
    PARFIN          reduce using rule 117 (cyExpresion -> empty .)
    ]               reduce using rule 117 (cyExpresion -> empty .)
    ;               reduce using rule 117 (cyExpresion -> empty .)


state 204

    (99) cyParamCall -> , expresion . cyParamCall
    (99) cyParamCall -> . , expresion cyParamCall
    (100) cyParamCall -> . empty
    (158) empty -> .

    ,               shift and go to state 168
    PARFIN          reduce using rule 158 (empty -> .)

    cyParamCall                    shift and go to state 244
    empty                          shift and go to state 169

state 205

    (123) opSExp -> GT . saveOperator exp
    (161) saveOperator -> .

    CTES            reduce using rule 161 (saveOperator -> .)
    PARINI          reduce using rule 161 (saveOperator -> .)
    ID              reduce using rule 161 (saveOperator -> .)
    CTED            reduce using rule 161 (saveOperator -> .)
    CTEF            reduce using rule 161 (saveOperator -> .)
    TRUE            reduce using rule 161 (saveOperator -> .)
    FALSE           reduce using rule 161 (saveOperator -> .)

    saveOperator                   shift and go to state 245

state 206

    (121) opSExp -> LTOEQ . saveOperator exp
    (161) saveOperator -> .

    CTES            reduce using rule 161 (saveOperator -> .)
    PARINI          reduce using rule 161 (saveOperator -> .)
    ID              reduce using rule 161 (saveOperator -> .)
    CTED            reduce using rule 161 (saveOperator -> .)
    CTEF            reduce using rule 161 (saveOperator -> .)
    TRUE            reduce using rule 161 (saveOperator -> .)
    FALSE           reduce using rule 161 (saveOperator -> .)

    saveOperator                   shift and go to state 246

state 207

    (120) opSExp -> DIF . saveOperator exp
    (161) saveOperator -> .

    CTES            reduce using rule 161 (saveOperator -> .)
    PARINI          reduce using rule 161 (saveOperator -> .)
    ID              reduce using rule 161 (saveOperator -> .)
    CTED            reduce using rule 161 (saveOperator -> .)
    CTEF            reduce using rule 161 (saveOperator -> .)
    TRUE            reduce using rule 161 (saveOperator -> .)
    FALSE           reduce using rule 161 (saveOperator -> .)

    saveOperator                   shift and go to state 247

state 208

    (124) opSExp -> LT . saveOperator exp
    (161) saveOperator -> .

    CTES            reduce using rule 161 (saveOperator -> .)
    PARINI          reduce using rule 161 (saveOperator -> .)
    ID              reduce using rule 161 (saveOperator -> .)
    CTED            reduce using rule 161 (saveOperator -> .)
    CTEF            reduce using rule 161 (saveOperator -> .)
    TRUE            reduce using rule 161 (saveOperator -> .)
    FALSE           reduce using rule 161 (saveOperator -> .)

    saveOperator                   shift and go to state 248

state 209

    (122) opSExp -> GTOEQ . saveOperator exp
    (161) saveOperator -> .

    CTES            reduce using rule 161 (saveOperator -> .)
    PARINI          reduce using rule 161 (saveOperator -> .)
    ID              reduce using rule 161 (saveOperator -> .)
    CTED            reduce using rule 161 (saveOperator -> .)
    CTEF            reduce using rule 161 (saveOperator -> .)
    TRUE            reduce using rule 161 (saveOperator -> .)
    FALSE           reduce using rule 161 (saveOperator -> .)

    saveOperator                   shift and go to state 249

state 210

    (119) opSExp -> EQ . saveOperator exp
    (161) saveOperator -> .

    CTES            reduce using rule 161 (saveOperator -> .)
    PARINI          reduce using rule 161 (saveOperator -> .)
    ID              reduce using rule 161 (saveOperator -> .)
    CTED            reduce using rule 161 (saveOperator -> .)
    CTEF            reduce using rule 161 (saveOperator -> .)
    TRUE            reduce using rule 161 (saveOperator -> .)
    FALSE           reduce using rule 161 (saveOperator -> .)

    saveOperator                   shift and go to state 250

state 211

    (125) opSExp -> empty .

    AND             reduce using rule 125 (opSExp -> empty .)
    OR              reduce using rule 125 (opSExp -> empty .)
    ,               reduce using rule 125 (opSExp -> empty .)
    PARFIN          reduce using rule 125 (opSExp -> empty .)
    ]               reduce using rule 125 (opSExp -> empty .)
    ;               reduce using rule 125 (opSExp -> empty .)


state 212

    (118) sExp -> exp errorOpSExp opSExp . performRelational
    (167) performRelational -> .

    AND             reduce using rule 167 (performRelational -> .)
    OR              reduce using rule 167 (performRelational -> .)
    ,               reduce using rule 167 (performRelational -> .)
    PARFIN          reduce using rule 167 (performRelational -> .)
    ]               reduce using rule 167 (performRelational -> .)
    ;               reduce using rule 167 (performRelational -> .)

    performRelational              shift and go to state 251

state 213

    (86) forCycle -> errorForCycle FOR PARINI assign ; . expresion ; assign PARFIN { body }
    (113) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (118) sExp -> . exp errorOpSExp opSExp performRelational
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED
    (155) cte -> . CTEF
    (156) cte -> . TRUE
    (157) cte -> . FALSE
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    sExp                           shift and go to state 141
    expresion                      shift and go to state 252
    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 144
    fact                           shift and go to state 137

state 214

    (106) condition -> errorCondition IF PARINI expresion PARFIN . { body } optionalElse

    {               shift and go to state 253


state 215

    (56) function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } . clearVarsTable
    (58) clearVarsTable -> .

    FUNC            reduce using rule 58 (clearVarsTable -> .)
    MAIN            reduce using rule 58 (clearVarsTable -> .)

    clearVarsTable                 shift and go to state 254

state 216

    (66) opReturns -> errorOpReturns RETURNS . type saveReturnType { opVars body return
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    errorType                      shift and go to state 31
    type                           shift and go to state 255

state 217

    (67) opReturns -> { opVars . body
    (78) body -> . errorBody cyInstruction
    (79) body -> . empty
    (80) errorBody -> .
    (158) empty -> .

    ID              reduce using rule 80 (errorBody -> .)
    PRINT           reduce using rule 80 (errorBody -> .)
    READ            reduce using rule 80 (errorBody -> .)
    IF              reduce using rule 80 (errorBody -> .)
    FOR             reduce using rule 80 (errorBody -> .)
    WHILE           reduce using rule 80 (errorBody -> .)
    }               reduce using rule 158 (empty -> .)

    body                           shift and go to state 256
    empty                          shift and go to state 75
    errorBody                      shift and go to state 74

state 218

    (48) param -> saveType type errorParam ID cyTypeParam . cyParam
    (50) cyParam -> . errorCyParam saveID saveTypeParam ; param
    (51) cyParam -> . empty saveID saveTypeParam
    (55) errorCyParam -> .
    (158) empty -> .

    ;               reduce using rule 55 (errorCyParam -> .)
    PARFIN          reduce using rule 158 (empty -> .)

    empty                          shift and go to state 257
    cyParam                        shift and go to state 259
    errorCyParam                   shift and go to state 258

state 219

    (32) cyRead -> , ID cyRead .

    PARFIN          reduce using rule 32 (cyRead -> , ID cyRead .)


state 220

    (139) fact -> PARINI putFondo expresion PARFIN . takeFondo
    (163) takeFondo -> .

    MULT            reduce using rule 163 (takeFondo -> .)
    DIV             reduce using rule 163 (takeFondo -> .)
    PLUS            reduce using rule 163 (takeFondo -> .)
    MINUS           reduce using rule 163 (takeFondo -> .)
    ,               reduce using rule 163 (takeFondo -> .)
    PARFIN          reduce using rule 163 (takeFondo -> .)
    EQ              reduce using rule 163 (takeFondo -> .)
    DIF             reduce using rule 163 (takeFondo -> .)
    LTOEQ           reduce using rule 163 (takeFondo -> .)
    GTOEQ           reduce using rule 163 (takeFondo -> .)
    GT              reduce using rule 163 (takeFondo -> .)
    LT              reduce using rule 163 (takeFondo -> .)
    AND             reduce using rule 163 (takeFondo -> .)
    OR              reduce using rule 163 (takeFondo -> .)
    ]               reduce using rule 163 (takeFondo -> .)
    ;               reduce using rule 163 (takeFondo -> .)

    takeFondo                      shift and go to state 260

state 221

    (146) opStruct -> errorOpStruct [ . expresion ] opMatrix
    (113) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (118) sExp -> . exp errorOpSExp opSExp performRelational
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED
    (155) cte -> . CTEF
    (156) cte -> . TRUE
    (157) cte -> . FALSE
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    sExp                           shift and go to state 141
    expresion                      shift and go to state 261
    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 144
    fact                           shift and go to state 137

state 222

    (140) fact -> ID saveVariable opAccess errorOpAccess .

    MULT            reduce using rule 140 (fact -> ID saveVariable opAccess errorOpAccess .)
    DIV             reduce using rule 140 (fact -> ID saveVariable opAccess errorOpAccess .)
    PLUS            reduce using rule 140 (fact -> ID saveVariable opAccess errorOpAccess .)
    MINUS           reduce using rule 140 (fact -> ID saveVariable opAccess errorOpAccess .)
    AND             reduce using rule 140 (fact -> ID saveVariable opAccess errorOpAccess .)
    OR              reduce using rule 140 (fact -> ID saveVariable opAccess errorOpAccess .)
    ,               reduce using rule 140 (fact -> ID saveVariable opAccess errorOpAccess .)
    PARFIN          reduce using rule 140 (fact -> ID saveVariable opAccess errorOpAccess .)
    ]               reduce using rule 140 (fact -> ID saveVariable opAccess errorOpAccess .)
    ;               reduce using rule 140 (fact -> ID saveVariable opAccess errorOpAccess .)
    EQ              reduce using rule 140 (fact -> ID saveVariable opAccess errorOpAccess .)
    DIF             reduce using rule 140 (fact -> ID saveVariable opAccess errorOpAccess .)
    LTOEQ           reduce using rule 140 (fact -> ID saveVariable opAccess errorOpAccess .)
    GTOEQ           reduce using rule 140 (fact -> ID saveVariable opAccess errorOpAccess .)
    GT              reduce using rule 140 (fact -> ID saveVariable opAccess errorOpAccess .)
    LT              reduce using rule 140 (fact -> ID saveVariable opAccess errorOpAccess .)


state 223

    (152) dictIndex -> FIRST .

    MULT            reduce using rule 152 (dictIndex -> FIRST .)
    DIV             reduce using rule 152 (dictIndex -> FIRST .)
    PLUS            reduce using rule 152 (dictIndex -> FIRST .)
    MINUS           reduce using rule 152 (dictIndex -> FIRST .)
    ,               reduce using rule 152 (dictIndex -> FIRST .)
    PARFIN          reduce using rule 152 (dictIndex -> FIRST .)
    EQ              reduce using rule 152 (dictIndex -> FIRST .)
    DIF             reduce using rule 152 (dictIndex -> FIRST .)
    LTOEQ           reduce using rule 152 (dictIndex -> FIRST .)
    GTOEQ           reduce using rule 152 (dictIndex -> FIRST .)
    GT              reduce using rule 152 (dictIndex -> FIRST .)
    LT              reduce using rule 152 (dictIndex -> FIRST .)
    AND             reduce using rule 152 (dictIndex -> FIRST .)
    OR              reduce using rule 152 (dictIndex -> FIRST .)
    ]               reduce using rule 152 (dictIndex -> FIRST .)
    ;               reduce using rule 152 (dictIndex -> FIRST .)


state 224

    (153) dictIndex -> LAST .

    MULT            reduce using rule 153 (dictIndex -> LAST .)
    DIV             reduce using rule 153 (dictIndex -> LAST .)
    PLUS            reduce using rule 153 (dictIndex -> LAST .)
    MINUS           reduce using rule 153 (dictIndex -> LAST .)
    ,               reduce using rule 153 (dictIndex -> LAST .)
    PARFIN          reduce using rule 153 (dictIndex -> LAST .)
    EQ              reduce using rule 153 (dictIndex -> LAST .)
    DIF             reduce using rule 153 (dictIndex -> LAST .)
    LTOEQ           reduce using rule 153 (dictIndex -> LAST .)
    GTOEQ           reduce using rule 153 (dictIndex -> LAST .)
    GT              reduce using rule 153 (dictIndex -> LAST .)
    LT              reduce using rule 153 (dictIndex -> LAST .)
    AND             reduce using rule 153 (dictIndex -> LAST .)
    OR              reduce using rule 153 (dictIndex -> LAST .)
    ]               reduce using rule 153 (dictIndex -> LAST .)
    ;               reduce using rule 153 (dictIndex -> LAST .)


state 225

    (151) opDictionary -> . dictIndex .

    MULT            reduce using rule 151 (opDictionary -> . dictIndex .)
    DIV             reduce using rule 151 (opDictionary -> . dictIndex .)
    PLUS            reduce using rule 151 (opDictionary -> . dictIndex .)
    MINUS           reduce using rule 151 (opDictionary -> . dictIndex .)
    ,               reduce using rule 151 (opDictionary -> . dictIndex .)
    PARFIN          reduce using rule 151 (opDictionary -> . dictIndex .)
    EQ              reduce using rule 151 (opDictionary -> . dictIndex .)
    DIF             reduce using rule 151 (opDictionary -> . dictIndex .)
    LTOEQ           reduce using rule 151 (opDictionary -> . dictIndex .)
    GTOEQ           reduce using rule 151 (opDictionary -> . dictIndex .)
    GT              reduce using rule 151 (opDictionary -> . dictIndex .)
    LT              reduce using rule 151 (opDictionary -> . dictIndex .)
    AND             reduce using rule 151 (opDictionary -> . dictIndex .)
    OR              reduce using rule 151 (opDictionary -> . dictIndex .)
    ]               reduce using rule 151 (opDictionary -> . dictIndex .)
    ;               reduce using rule 151 (opDictionary -> . dictIndex .)


state 226

    (127) exp -> term performAddSub errorCyExp cyExp .

    EQ              reduce using rule 127 (exp -> term performAddSub errorCyExp cyExp .)
    DIF             reduce using rule 127 (exp -> term performAddSub errorCyExp cyExp .)
    LTOEQ           reduce using rule 127 (exp -> term performAddSub errorCyExp cyExp .)
    GTOEQ           reduce using rule 127 (exp -> term performAddSub errorCyExp cyExp .)
    GT              reduce using rule 127 (exp -> term performAddSub errorCyExp cyExp .)
    LT              reduce using rule 127 (exp -> term performAddSub errorCyExp cyExp .)
    AND             reduce using rule 127 (exp -> term performAddSub errorCyExp cyExp .)
    OR              reduce using rule 127 (exp -> term performAddSub errorCyExp cyExp .)
    ,               reduce using rule 127 (exp -> term performAddSub errorCyExp cyExp .)
    PARFIN          reduce using rule 127 (exp -> term performAddSub errorCyExp cyExp .)
    ]               reduce using rule 127 (exp -> term performAddSub errorCyExp cyExp .)
    ;               reduce using rule 127 (exp -> term performAddSub errorCyExp cyExp .)


state 227

    (128) cyExp -> PLUS . saveOperator exp
    (161) saveOperator -> .

    CTES            reduce using rule 161 (saveOperator -> .)
    PARINI          reduce using rule 161 (saveOperator -> .)
    ID              reduce using rule 161 (saveOperator -> .)
    CTED            reduce using rule 161 (saveOperator -> .)
    CTEF            reduce using rule 161 (saveOperator -> .)
    TRUE            reduce using rule 161 (saveOperator -> .)
    FALSE           reduce using rule 161 (saveOperator -> .)

    saveOperator                   shift and go to state 262

state 228

    (129) cyExp -> MINUS . saveOperator exp
    (161) saveOperator -> .

    CTES            reduce using rule 161 (saveOperator -> .)
    PARINI          reduce using rule 161 (saveOperator -> .)
    ID              reduce using rule 161 (saveOperator -> .)
    CTED            reduce using rule 161 (saveOperator -> .)
    CTEF            reduce using rule 161 (saveOperator -> .)
    TRUE            reduce using rule 161 (saveOperator -> .)
    FALSE           reduce using rule 161 (saveOperator -> .)

    saveOperator                   shift and go to state 263

state 229

    (130) cyExp -> empty .

    ,               reduce using rule 130 (cyExp -> empty .)
    PARFIN          reduce using rule 130 (cyExp -> empty .)
    EQ              reduce using rule 130 (cyExp -> empty .)
    DIF             reduce using rule 130 (cyExp -> empty .)
    LTOEQ           reduce using rule 130 (cyExp -> empty .)
    GTOEQ           reduce using rule 130 (cyExp -> empty .)
    GT              reduce using rule 130 (cyExp -> empty .)
    LT              reduce using rule 130 (cyExp -> empty .)
    AND             reduce using rule 130 (cyExp -> empty .)
    OR              reduce using rule 130 (cyExp -> empty .)
    ]               reduce using rule 130 (cyExp -> empty .)
    ;               reduce using rule 130 (cyExp -> empty .)


state 230

    (28) print -> PRINT PARINI exp performPrint cyPrint PARFIN .

    ;               reduce using rule 28 (print -> PRINT PARINI exp performPrint cyPrint PARFIN .)


state 231

    (29) cyPrint -> , exp . performPrint cyPrint
    (169) performPrint -> .

    ,               reduce using rule 169 (performPrint -> .)
    PARFIN          reduce using rule 169 (performPrint -> .)

    performPrint                   shift and go to state 264

state 232

    (134) cyTerm -> DIV saveOperator . term
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED
    (155) cte -> . CTEF
    (156) cte -> . TRUE
    (157) cte -> . FALSE
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    term                           shift and go to state 265
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    fact                           shift and go to state 137

state 233

    (133) cyTerm -> MULT saveOperator . errorFact term
    (141) errorFact -> .

    CTES            reduce using rule 141 (errorFact -> .)
    PARINI          reduce using rule 141 (errorFact -> .)
    ID              reduce using rule 141 (errorFact -> .)
    CTED            reduce using rule 141 (errorFact -> .)
    CTEF            reduce using rule 141 (errorFact -> .)
    TRUE            reduce using rule 141 (errorFact -> .)
    FALSE           reduce using rule 141 (errorFact -> .)

    errorFact                      shift and go to state 266

state 234

    (84) whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { . body }
    (78) body -> . errorBody cyInstruction
    (79) body -> . empty
    (80) errorBody -> .
    (158) empty -> .

    ID              reduce using rule 80 (errorBody -> .)
    PRINT           reduce using rule 80 (errorBody -> .)
    READ            reduce using rule 80 (errorBody -> .)
    IF              reduce using rule 80 (errorBody -> .)
    FOR             reduce using rule 80 (errorBody -> .)
    WHILE           reduce using rule 80 (errorBody -> .)
    }               reduce using rule 158 (empty -> .)

    body                           shift and go to state 267
    errorBody                      shift and go to state 74
    empty                          shift and go to state 75

state 235

    (37) init -> ASGN saveOperator errorInit . initWith
    (39) initWith -> . expresion
    (40) initWith -> . fact
    (41) initWith -> . funcCall
    (113) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (136) fact -> . CTES
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (96) funcCall -> . ID PARINI opParamCall PARFIN
    (118) sExp -> . exp errorOpSExp opSExp performRelational
    (154) cte -> . CTED
    (155) cte -> . CTEF
    (156) cte -> . TRUE
    (157) cte -> . FALSE
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    initWith                       shift and go to state 268
    sExp                           shift and go to state 141
    expresion                      shift and go to state 269
    term                           shift and go to state 131
    funcCall                       shift and go to state 270
    cte                            shift and go to state 134
    exp                            shift and go to state 144
    fact                           shift and go to state 271

state 236

    (42) initDict -> ASGN PARINI dictType . : dictType PARFIN errorInitDict

    :               shift and go to state 272


state 237

    (44) dictType -> errorDictType . CTES

    CTES            shift and go to state 273


state 238

    (45) dictType -> cte .

    :               reduce using rule 45 (dictType -> cte .)
    PARFIN          reduce using rule 45 (dictType -> cte .)


state 239

    (46) dictType -> ID .

    :               reduce using rule 46 (dictType -> ID .)
    PARFIN          reduce using rule 46 (dictType -> ID .)


state 240

    (92) assignOptions -> [ expresion ] . assignMatrix init
    (93) assignMatrix -> . [ expresion ] errorAssignMatrix
    (94) assignMatrix -> . empty
    (158) empty -> .

    [               shift and go to state 275
    ASGN            reduce using rule 158 (empty -> .)

    assignMatrix                   shift and go to state 274
    empty                          shift and go to state 276

state 241

    (115) cyExpresion -> AND saveOperator . expresion
    (113) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (118) sExp -> . exp errorOpSExp opSExp performRelational
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED
    (155) cte -> . CTEF
    (156) cte -> . TRUE
    (157) cte -> . FALSE
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    sExp                           shift and go to state 141
    expresion                      shift and go to state 277
    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 144
    fact                           shift and go to state 137

state 242

    (116) cyExpresion -> OR saveOperator . expresion
    (113) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (118) sExp -> . exp errorOpSExp opSExp performRelational
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED
    (155) cte -> . CTEF
    (156) cte -> . TRUE
    (157) cte -> . FALSE
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    sExp                           shift and go to state 141
    expresion                      shift and go to state 278
    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 144
    fact                           shift and go to state 137

state 243

    (113) expresion -> sExp performAndOr cyExpresion errorExpresion .

    ,               reduce using rule 113 (expresion -> sExp performAndOr cyExpresion errorExpresion .)
    PARFIN          reduce using rule 113 (expresion -> sExp performAndOr cyExpresion errorExpresion .)
    ]               reduce using rule 113 (expresion -> sExp performAndOr cyExpresion errorExpresion .)
    ;               reduce using rule 113 (expresion -> sExp performAndOr cyExpresion errorExpresion .)


state 244

    (99) cyParamCall -> , expresion cyParamCall .

    PARFIN          reduce using rule 99 (cyParamCall -> , expresion cyParamCall .)


state 245

    (123) opSExp -> GT saveOperator . exp
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED
    (155) cte -> . CTEF
    (156) cte -> . TRUE
    (157) cte -> . FALSE
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 279
    fact                           shift and go to state 137

state 246

    (121) opSExp -> LTOEQ saveOperator . exp
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED
    (155) cte -> . CTEF
    (156) cte -> . TRUE
    (157) cte -> . FALSE
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 280
    fact                           shift and go to state 137

state 247

    (120) opSExp -> DIF saveOperator . exp
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED
    (155) cte -> . CTEF
    (156) cte -> . TRUE
    (157) cte -> . FALSE
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 281
    fact                           shift and go to state 137

state 248

    (124) opSExp -> LT saveOperator . exp
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED
    (155) cte -> . CTEF
    (156) cte -> . TRUE
    (157) cte -> . FALSE
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 282
    fact                           shift and go to state 137

state 249

    (122) opSExp -> GTOEQ saveOperator . exp
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED
    (155) cte -> . CTEF
    (156) cte -> . TRUE
    (157) cte -> . FALSE
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 283
    fact                           shift and go to state 137

state 250

    (119) opSExp -> EQ saveOperator . exp
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED
    (155) cte -> . CTEF
    (156) cte -> . TRUE
    (157) cte -> . FALSE
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 284
    fact                           shift and go to state 137

state 251

    (118) sExp -> exp errorOpSExp opSExp performRelational .

    AND             reduce using rule 118 (sExp -> exp errorOpSExp opSExp performRelational .)
    OR              reduce using rule 118 (sExp -> exp errorOpSExp opSExp performRelational .)
    ;               reduce using rule 118 (sExp -> exp errorOpSExp opSExp performRelational .)
    ]               reduce using rule 118 (sExp -> exp errorOpSExp opSExp performRelational .)
    ,               reduce using rule 118 (sExp -> exp errorOpSExp opSExp performRelational .)
    PARFIN          reduce using rule 118 (sExp -> exp errorOpSExp opSExp performRelational .)


state 252

    (86) forCycle -> errorForCycle FOR PARINI assign ; expresion . ; assign PARFIN { body }

    ;               shift and go to state 285


state 253

    (106) condition -> errorCondition IF PARINI expresion PARFIN { . body } optionalElse
    (78) body -> . errorBody cyInstruction
    (79) body -> . empty
    (80) errorBody -> .
    (158) empty -> .

    ID              reduce using rule 80 (errorBody -> .)
    PRINT           reduce using rule 80 (errorBody -> .)
    READ            reduce using rule 80 (errorBody -> .)
    IF              reduce using rule 80 (errorBody -> .)
    FOR             reduce using rule 80 (errorBody -> .)
    WHILE           reduce using rule 80 (errorBody -> .)
    }               reduce using rule 158 (empty -> .)

    body                           shift and go to state 286
    errorBody                      shift and go to state 74
    empty                          shift and go to state 75

state 254

    (56) function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable .

    FUNC            reduce using rule 56 (function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable .)
    MAIN            reduce using rule 56 (function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable .)


state 255

    (66) opReturns -> errorOpReturns RETURNS type . saveReturnType { opVars body return
    (68) saveReturnType -> .

    {               reduce using rule 68 (saveReturnType -> .)

    saveReturnType                 shift and go to state 287

state 256

    (67) opReturns -> { opVars body .

    }               reduce using rule 67 (opReturns -> { opVars body .)


state 257

    (51) cyParam -> empty . saveID saveTypeParam
    (11) saveID -> .

    PARFIN          reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 288

state 258

    (50) cyParam -> errorCyParam . saveID saveTypeParam ; param
    (11) saveID -> .

    ;               reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 289

state 259

    (48) param -> saveType type errorParam ID cyTypeParam cyParam .

    PARFIN          reduce using rule 48 (param -> saveType type errorParam ID cyTypeParam cyParam .)


state 260

    (139) fact -> PARINI putFondo expresion PARFIN takeFondo .

    MULT            reduce using rule 139 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    DIV             reduce using rule 139 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    PLUS            reduce using rule 139 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    MINUS           reduce using rule 139 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    AND             reduce using rule 139 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    OR              reduce using rule 139 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    ,               reduce using rule 139 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    PARFIN          reduce using rule 139 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    ]               reduce using rule 139 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    ;               reduce using rule 139 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    EQ              reduce using rule 139 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    DIF             reduce using rule 139 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    LTOEQ           reduce using rule 139 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    GTOEQ           reduce using rule 139 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    GT              reduce using rule 139 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    LT              reduce using rule 139 (fact -> PARINI putFondo expresion PARFIN takeFondo .)


state 261

    (146) opStruct -> errorOpStruct [ expresion . ] opMatrix

    ]               shift and go to state 290


state 262

    (128) cyExp -> PLUS saveOperator . exp
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED
    (155) cte -> . CTEF
    (156) cte -> . TRUE
    (157) cte -> . FALSE
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 291
    fact                           shift and go to state 137

state 263

    (129) cyExp -> MINUS saveOperator . exp
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED
    (155) cte -> . CTEF
    (156) cte -> . TRUE
    (157) cte -> . FALSE
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 292
    fact                           shift and go to state 137

state 264

    (29) cyPrint -> , exp performPrint . cyPrint
    (29) cyPrint -> . , exp performPrint cyPrint
    (30) cyPrint -> . empty
    (158) empty -> .

    ,               shift and go to state 189
    PARFIN          reduce using rule 158 (empty -> .)

    cyPrint                        shift and go to state 293
    empty                          shift and go to state 190

state 265

    (134) cyTerm -> DIV saveOperator term .

    PLUS            reduce using rule 134 (cyTerm -> DIV saveOperator term .)
    MINUS           reduce using rule 134 (cyTerm -> DIV saveOperator term .)
    ,               reduce using rule 134 (cyTerm -> DIV saveOperator term .)
    PARFIN          reduce using rule 134 (cyTerm -> DIV saveOperator term .)
    EQ              reduce using rule 134 (cyTerm -> DIV saveOperator term .)
    DIF             reduce using rule 134 (cyTerm -> DIV saveOperator term .)
    LTOEQ           reduce using rule 134 (cyTerm -> DIV saveOperator term .)
    GTOEQ           reduce using rule 134 (cyTerm -> DIV saveOperator term .)
    GT              reduce using rule 134 (cyTerm -> DIV saveOperator term .)
    LT              reduce using rule 134 (cyTerm -> DIV saveOperator term .)
    AND             reduce using rule 134 (cyTerm -> DIV saveOperator term .)
    OR              reduce using rule 134 (cyTerm -> DIV saveOperator term .)
    ]               reduce using rule 134 (cyTerm -> DIV saveOperator term .)
    ;               reduce using rule 134 (cyTerm -> DIV saveOperator term .)


state 266

    (133) cyTerm -> MULT saveOperator errorFact . term
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED
    (155) cte -> . CTEF
    (156) cte -> . TRUE
    (157) cte -> . FALSE
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    term                           shift and go to state 294
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    fact                           shift and go to state 137

state 267

    (84) whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body . }

    }               shift and go to state 295


state 268

    (37) init -> ASGN saveOperator errorInit initWith .

    ;               reduce using rule 37 (init -> ASGN saveOperator errorInit initWith .)
    PARFIN          reduce using rule 37 (init -> ASGN saveOperator errorInit initWith .)


state 269

    (39) initWith -> expresion .

    ;               reduce using rule 39 (initWith -> expresion .)
    PARFIN          reduce using rule 39 (initWith -> expresion .)


state 270

    (41) initWith -> funcCall .
    (138) fact -> funcCall .

  ! reduce/reduce conflict for ; resolved using rule 41 (initWith -> funcCall .)
  ! reduce/reduce conflict for PARFIN resolved using rule 41 (initWith -> funcCall .)
    ;               reduce using rule 41 (initWith -> funcCall .)
    PARFIN          reduce using rule 41 (initWith -> funcCall .)
    MULT            reduce using rule 138 (fact -> funcCall .)
    DIV             reduce using rule 138 (fact -> funcCall .)
    PLUS            reduce using rule 138 (fact -> funcCall .)
    MINUS           reduce using rule 138 (fact -> funcCall .)
    EQ              reduce using rule 138 (fact -> funcCall .)
    DIF             reduce using rule 138 (fact -> funcCall .)
    LTOEQ           reduce using rule 138 (fact -> funcCall .)
    GTOEQ           reduce using rule 138 (fact -> funcCall .)
    GT              reduce using rule 138 (fact -> funcCall .)
    LT              reduce using rule 138 (fact -> funcCall .)
    AND             reduce using rule 138 (fact -> funcCall .)
    OR              reduce using rule 138 (fact -> funcCall .)

  ! ;               [ reduce using rule 138 (fact -> funcCall .) ]
  ! PARFIN          [ reduce using rule 138 (fact -> funcCall .) ]


state 271

    (40) initWith -> fact .
    (132) term -> fact . performMulDiv cyTerm
    (165) performMulDiv -> .

  ! reduce/reduce conflict for ; resolved using rule 40 (initWith -> fact .)
  ! reduce/reduce conflict for PARFIN resolved using rule 40 (initWith -> fact .)
    ;               reduce using rule 40 (initWith -> fact .)
    PARFIN          reduce using rule 40 (initWith -> fact .)
    MULT            reduce using rule 165 (performMulDiv -> .)
    DIV             reduce using rule 165 (performMulDiv -> .)
    PLUS            reduce using rule 165 (performMulDiv -> .)
    MINUS           reduce using rule 165 (performMulDiv -> .)
    EQ              reduce using rule 165 (performMulDiv -> .)
    DIF             reduce using rule 165 (performMulDiv -> .)
    LTOEQ           reduce using rule 165 (performMulDiv -> .)
    GTOEQ           reduce using rule 165 (performMulDiv -> .)
    GT              reduce using rule 165 (performMulDiv -> .)
    LT              reduce using rule 165 (performMulDiv -> .)
    AND             reduce using rule 165 (performMulDiv -> .)
    OR              reduce using rule 165 (performMulDiv -> .)

  ! ;               [ reduce using rule 165 (performMulDiv -> .) ]
  ! PARFIN          [ reduce using rule 165 (performMulDiv -> .) ]

    performMulDiv                  shift and go to state 158

state 272

    (42) initDict -> ASGN PARINI dictType : . dictType PARFIN errorInitDict
    (44) dictType -> . errorDictType CTES
    (45) dictType -> . cte
    (46) dictType -> . ID
    (47) errorDictType -> .
    (154) cte -> . CTED
    (155) cte -> . CTEF
    (156) cte -> . TRUE
    (157) cte -> . FALSE

    ID              shift and go to state 239
    CTES            reduce using rule 47 (errorDictType -> .)
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    dictType                       shift and go to state 296
    errorDictType                  shift and go to state 237
    cte                            shift and go to state 238

state 273

    (44) dictType -> errorDictType CTES .

    :               reduce using rule 44 (dictType -> errorDictType CTES .)
    PARFIN          reduce using rule 44 (dictType -> errorDictType CTES .)


state 274

    (92) assignOptions -> [ expresion ] assignMatrix . init
    (37) init -> . ASGN saveOperator errorInit initWith

    ASGN            shift and go to state 297

    init                           shift and go to state 298

state 275

    (93) assignMatrix -> [ . expresion ] errorAssignMatrix
    (113) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (118) sExp -> . exp errorOpSExp opSExp performRelational
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED
    (155) cte -> . CTEF
    (156) cte -> . TRUE
    (157) cte -> . FALSE
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    sExp                           shift and go to state 141
    expresion                      shift and go to state 299
    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 144
    fact                           shift and go to state 137

state 276

    (94) assignMatrix -> empty .

    ASGN            reduce using rule 94 (assignMatrix -> empty .)


state 277

    (115) cyExpresion -> AND saveOperator expresion .

    ,               reduce using rule 115 (cyExpresion -> AND saveOperator expresion .)
    PARFIN          reduce using rule 115 (cyExpresion -> AND saveOperator expresion .)
    ]               reduce using rule 115 (cyExpresion -> AND saveOperator expresion .)
    ;               reduce using rule 115 (cyExpresion -> AND saveOperator expresion .)


state 278

    (116) cyExpresion -> OR saveOperator expresion .

    ,               reduce using rule 116 (cyExpresion -> OR saveOperator expresion .)
    PARFIN          reduce using rule 116 (cyExpresion -> OR saveOperator expresion .)
    ]               reduce using rule 116 (cyExpresion -> OR saveOperator expresion .)
    ;               reduce using rule 116 (cyExpresion -> OR saveOperator expresion .)


state 279

    (123) opSExp -> GT saveOperator exp .

    AND             reduce using rule 123 (opSExp -> GT saveOperator exp .)
    OR              reduce using rule 123 (opSExp -> GT saveOperator exp .)
    ,               reduce using rule 123 (opSExp -> GT saveOperator exp .)
    PARFIN          reduce using rule 123 (opSExp -> GT saveOperator exp .)
    ]               reduce using rule 123 (opSExp -> GT saveOperator exp .)
    ;               reduce using rule 123 (opSExp -> GT saveOperator exp .)


state 280

    (121) opSExp -> LTOEQ saveOperator exp .

    AND             reduce using rule 121 (opSExp -> LTOEQ saveOperator exp .)
    OR              reduce using rule 121 (opSExp -> LTOEQ saveOperator exp .)
    ,               reduce using rule 121 (opSExp -> LTOEQ saveOperator exp .)
    PARFIN          reduce using rule 121 (opSExp -> LTOEQ saveOperator exp .)
    ]               reduce using rule 121 (opSExp -> LTOEQ saveOperator exp .)
    ;               reduce using rule 121 (opSExp -> LTOEQ saveOperator exp .)


state 281

    (120) opSExp -> DIF saveOperator exp .

    AND             reduce using rule 120 (opSExp -> DIF saveOperator exp .)
    OR              reduce using rule 120 (opSExp -> DIF saveOperator exp .)
    ,               reduce using rule 120 (opSExp -> DIF saveOperator exp .)
    PARFIN          reduce using rule 120 (opSExp -> DIF saveOperator exp .)
    ]               reduce using rule 120 (opSExp -> DIF saveOperator exp .)
    ;               reduce using rule 120 (opSExp -> DIF saveOperator exp .)


state 282

    (124) opSExp -> LT saveOperator exp .

    AND             reduce using rule 124 (opSExp -> LT saveOperator exp .)
    OR              reduce using rule 124 (opSExp -> LT saveOperator exp .)
    ,               reduce using rule 124 (opSExp -> LT saveOperator exp .)
    PARFIN          reduce using rule 124 (opSExp -> LT saveOperator exp .)
    ]               reduce using rule 124 (opSExp -> LT saveOperator exp .)
    ;               reduce using rule 124 (opSExp -> LT saveOperator exp .)


state 283

    (122) opSExp -> GTOEQ saveOperator exp .

    AND             reduce using rule 122 (opSExp -> GTOEQ saveOperator exp .)
    OR              reduce using rule 122 (opSExp -> GTOEQ saveOperator exp .)
    ,               reduce using rule 122 (opSExp -> GTOEQ saveOperator exp .)
    PARFIN          reduce using rule 122 (opSExp -> GTOEQ saveOperator exp .)
    ]               reduce using rule 122 (opSExp -> GTOEQ saveOperator exp .)
    ;               reduce using rule 122 (opSExp -> GTOEQ saveOperator exp .)


state 284

    (119) opSExp -> EQ saveOperator exp .

    AND             reduce using rule 119 (opSExp -> EQ saveOperator exp .)
    OR              reduce using rule 119 (opSExp -> EQ saveOperator exp .)
    ,               reduce using rule 119 (opSExp -> EQ saveOperator exp .)
    PARFIN          reduce using rule 119 (opSExp -> EQ saveOperator exp .)
    ]               reduce using rule 119 (opSExp -> EQ saveOperator exp .)
    ;               reduce using rule 119 (opSExp -> EQ saveOperator exp .)


state 285

    (86) forCycle -> errorForCycle FOR PARINI assign ; expresion ; . assign PARFIN { body }
    (88) assign -> . ID saveVariable errorAssign assignOptions performAssign

    ID              shift and go to state 171

    assign                         shift and go to state 300

state 286

    (106) condition -> errorCondition IF PARINI expresion PARFIN { body . } optionalElse

    }               shift and go to state 301


state 287

    (66) opReturns -> errorOpReturns RETURNS type saveReturnType . { opVars body return

    {               shift and go to state 302


state 288

    (51) cyParam -> empty saveID . saveTypeParam
    (54) saveTypeParam -> .

    PARFIN          reduce using rule 54 (saveTypeParam -> .)

    saveTypeParam                  shift and go to state 303

state 289

    (50) cyParam -> errorCyParam saveID . saveTypeParam ; param
    (54) saveTypeParam -> .

    ;               reduce using rule 54 (saveTypeParam -> .)

    saveTypeParam                  shift and go to state 304

state 290

    (146) opStruct -> errorOpStruct [ expresion ] . opMatrix
    (148) opMatrix -> . errorOpMatrix [ expresion ]
    (149) opMatrix -> . empty
    (150) errorOpMatrix -> .
    (158) empty -> .

    [               reduce using rule 150 (errorOpMatrix -> .)
    MULT            reduce using rule 158 (empty -> .)
    DIV             reduce using rule 158 (empty -> .)
    PLUS            reduce using rule 158 (empty -> .)
    MINUS           reduce using rule 158 (empty -> .)
    ,               reduce using rule 158 (empty -> .)
    PARFIN          reduce using rule 158 (empty -> .)
    EQ              reduce using rule 158 (empty -> .)
    DIF             reduce using rule 158 (empty -> .)
    LTOEQ           reduce using rule 158 (empty -> .)
    GTOEQ           reduce using rule 158 (empty -> .)
    GT              reduce using rule 158 (empty -> .)
    LT              reduce using rule 158 (empty -> .)
    AND             reduce using rule 158 (empty -> .)
    OR              reduce using rule 158 (empty -> .)
    ]               reduce using rule 158 (empty -> .)
    ;               reduce using rule 158 (empty -> .)

    empty                          shift and go to state 307
    errorOpMatrix                  shift and go to state 305
    opMatrix                       shift and go to state 306

state 291

    (128) cyExp -> PLUS saveOperator exp .

    ,               reduce using rule 128 (cyExp -> PLUS saveOperator exp .)
    PARFIN          reduce using rule 128 (cyExp -> PLUS saveOperator exp .)
    EQ              reduce using rule 128 (cyExp -> PLUS saveOperator exp .)
    DIF             reduce using rule 128 (cyExp -> PLUS saveOperator exp .)
    LTOEQ           reduce using rule 128 (cyExp -> PLUS saveOperator exp .)
    GTOEQ           reduce using rule 128 (cyExp -> PLUS saveOperator exp .)
    GT              reduce using rule 128 (cyExp -> PLUS saveOperator exp .)
    LT              reduce using rule 128 (cyExp -> PLUS saveOperator exp .)
    AND             reduce using rule 128 (cyExp -> PLUS saveOperator exp .)
    OR              reduce using rule 128 (cyExp -> PLUS saveOperator exp .)
    ]               reduce using rule 128 (cyExp -> PLUS saveOperator exp .)
    ;               reduce using rule 128 (cyExp -> PLUS saveOperator exp .)


state 292

    (129) cyExp -> MINUS saveOperator exp .

    ,               reduce using rule 129 (cyExp -> MINUS saveOperator exp .)
    PARFIN          reduce using rule 129 (cyExp -> MINUS saveOperator exp .)
    EQ              reduce using rule 129 (cyExp -> MINUS saveOperator exp .)
    DIF             reduce using rule 129 (cyExp -> MINUS saveOperator exp .)
    LTOEQ           reduce using rule 129 (cyExp -> MINUS saveOperator exp .)
    GTOEQ           reduce using rule 129 (cyExp -> MINUS saveOperator exp .)
    GT              reduce using rule 129 (cyExp -> MINUS saveOperator exp .)
    LT              reduce using rule 129 (cyExp -> MINUS saveOperator exp .)
    AND             reduce using rule 129 (cyExp -> MINUS saveOperator exp .)
    OR              reduce using rule 129 (cyExp -> MINUS saveOperator exp .)
    ]               reduce using rule 129 (cyExp -> MINUS saveOperator exp .)
    ;               reduce using rule 129 (cyExp -> MINUS saveOperator exp .)


state 293

    (29) cyPrint -> , exp performPrint cyPrint .

    PARFIN          reduce using rule 29 (cyPrint -> , exp performPrint cyPrint .)


state 294

    (133) cyTerm -> MULT saveOperator errorFact term .

    PLUS            reduce using rule 133 (cyTerm -> MULT saveOperator errorFact term .)
    MINUS           reduce using rule 133 (cyTerm -> MULT saveOperator errorFact term .)
    ,               reduce using rule 133 (cyTerm -> MULT saveOperator errorFact term .)
    PARFIN          reduce using rule 133 (cyTerm -> MULT saveOperator errorFact term .)
    EQ              reduce using rule 133 (cyTerm -> MULT saveOperator errorFact term .)
    DIF             reduce using rule 133 (cyTerm -> MULT saveOperator errorFact term .)
    LTOEQ           reduce using rule 133 (cyTerm -> MULT saveOperator errorFact term .)
    GTOEQ           reduce using rule 133 (cyTerm -> MULT saveOperator errorFact term .)
    GT              reduce using rule 133 (cyTerm -> MULT saveOperator errorFact term .)
    LT              reduce using rule 133 (cyTerm -> MULT saveOperator errorFact term .)
    AND             reduce using rule 133 (cyTerm -> MULT saveOperator errorFact term .)
    OR              reduce using rule 133 (cyTerm -> MULT saveOperator errorFact term .)
    ]               reduce using rule 133 (cyTerm -> MULT saveOperator errorFact term .)
    ;               reduce using rule 133 (cyTerm -> MULT saveOperator errorFact term .)


state 295

    (84) whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body } .

    ID              reduce using rule 84 (whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body } .)
    PRINT           reduce using rule 84 (whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body } .)
    READ            reduce using rule 84 (whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body } .)
    IF              reduce using rule 84 (whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body } .)
    FOR             reduce using rule 84 (whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body } .)
    WHILE           reduce using rule 84 (whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body } .)
    }               reduce using rule 84 (whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body } .)
    RETURN          reduce using rule 84 (whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body } .)


state 296

    (42) initDict -> ASGN PARINI dictType : dictType . PARFIN errorInitDict

    PARFIN          shift and go to state 308


state 297

    (37) init -> ASGN . saveOperator errorInit initWith
    (161) saveOperator -> .

    CTES            reduce using rule 161 (saveOperator -> .)
    PARINI          reduce using rule 161 (saveOperator -> .)
    ID              reduce using rule 161 (saveOperator -> .)
    CTED            reduce using rule 161 (saveOperator -> .)
    CTEF            reduce using rule 161 (saveOperator -> .)
    TRUE            reduce using rule 161 (saveOperator -> .)
    FALSE           reduce using rule 161 (saveOperator -> .)

    saveOperator                   shift and go to state 197

state 298

    (92) assignOptions -> [ expresion ] assignMatrix init .

    ;               reduce using rule 92 (assignOptions -> [ expresion ] assignMatrix init .)
    PARFIN          reduce using rule 92 (assignOptions -> [ expresion ] assignMatrix init .)


state 299

    (93) assignMatrix -> [ expresion . ] errorAssignMatrix

    ]               shift and go to state 309


state 300

    (86) forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign . PARFIN { body }

    PARFIN          shift and go to state 310


state 301

    (106) condition -> errorCondition IF PARINI expresion PARFIN { body } . optionalElse
    (108) optionalElse -> . errorElse ELSE { body }
    (109) optionalElse -> . empty
    (110) errorElse -> .
    (158) empty -> .

    ELSE            reduce using rule 110 (errorElse -> .)
    ID              reduce using rule 158 (empty -> .)
    PRINT           reduce using rule 158 (empty -> .)
    READ            reduce using rule 158 (empty -> .)
    IF              reduce using rule 158 (empty -> .)
    FOR             reduce using rule 158 (empty -> .)
    WHILE           reduce using rule 158 (empty -> .)
    }               reduce using rule 158 (empty -> .)
    RETURN          reduce using rule 158 (empty -> .)

    errorElse                      shift and go to state 312
    optionalElse                   shift and go to state 311
    empty                          shift and go to state 313

state 302

    (66) opReturns -> errorOpReturns RETURNS type saveReturnType { . opVars body return
    (6) opVars -> . vars
    (7) opVars -> . empty
    (10) vars -> . errorVars VARS declare
    (158) empty -> .
    (12) errorVars -> .

    RETURN          reduce using rule 158 (empty -> .)
    ID              reduce using rule 158 (empty -> .)
    PRINT           reduce using rule 158 (empty -> .)
    READ            reduce using rule 158 (empty -> .)
    IF              reduce using rule 158 (empty -> .)
    FOR             reduce using rule 158 (empty -> .)
    WHILE           reduce using rule 158 (empty -> .)
    VARS            reduce using rule 12 (errorVars -> .)

    vars                           shift and go to state 8
    opVars                         shift and go to state 314
    errorVars                      shift and go to state 10
    empty                          shift and go to state 11

state 303

    (51) cyParam -> empty saveID saveTypeParam .

    PARFIN          reduce using rule 51 (cyParam -> empty saveID saveTypeParam .)


state 304

    (50) cyParam -> errorCyParam saveID saveTypeParam . ; param

    ;               shift and go to state 315


state 305

    (148) opMatrix -> errorOpMatrix . [ expresion ]

    [               shift and go to state 316


state 306

    (146) opStruct -> errorOpStruct [ expresion ] opMatrix .

    MULT            reduce using rule 146 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    DIV             reduce using rule 146 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    PLUS            reduce using rule 146 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    MINUS           reduce using rule 146 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    ,               reduce using rule 146 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    PARFIN          reduce using rule 146 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    EQ              reduce using rule 146 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    DIF             reduce using rule 146 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    LTOEQ           reduce using rule 146 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    GTOEQ           reduce using rule 146 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    GT              reduce using rule 146 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    LT              reduce using rule 146 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    AND             reduce using rule 146 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    OR              reduce using rule 146 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    ]               reduce using rule 146 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    ;               reduce using rule 146 (opStruct -> errorOpStruct [ expresion ] opMatrix .)


state 307

    (149) opMatrix -> empty .

    MULT            reduce using rule 149 (opMatrix -> empty .)
    DIV             reduce using rule 149 (opMatrix -> empty .)
    PLUS            reduce using rule 149 (opMatrix -> empty .)
    MINUS           reduce using rule 149 (opMatrix -> empty .)
    ,               reduce using rule 149 (opMatrix -> empty .)
    PARFIN          reduce using rule 149 (opMatrix -> empty .)
    EQ              reduce using rule 149 (opMatrix -> empty .)
    DIF             reduce using rule 149 (opMatrix -> empty .)
    LTOEQ           reduce using rule 149 (opMatrix -> empty .)
    GTOEQ           reduce using rule 149 (opMatrix -> empty .)
    GT              reduce using rule 149 (opMatrix -> empty .)
    LT              reduce using rule 149 (opMatrix -> empty .)
    AND             reduce using rule 149 (opMatrix -> empty .)
    OR              reduce using rule 149 (opMatrix -> empty .)
    ]               reduce using rule 149 (opMatrix -> empty .)
    ;               reduce using rule 149 (opMatrix -> empty .)


state 308

    (42) initDict -> ASGN PARINI dictType : dictType PARFIN . errorInitDict
    (43) errorInitDict -> .

    ;               reduce using rule 43 (errorInitDict -> .)
    PARFIN          reduce using rule 43 (errorInitDict -> .)

    errorInitDict                  shift and go to state 317

state 309

    (93) assignMatrix -> [ expresion ] . errorAssignMatrix
    (95) errorAssignMatrix -> .

    ASGN            reduce using rule 95 (errorAssignMatrix -> .)

    errorAssignMatrix              shift and go to state 318

state 310

    (86) forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN . { body }

    {               shift and go to state 319


state 311

    (106) condition -> errorCondition IF PARINI expresion PARFIN { body } optionalElse .

    ID              reduce using rule 106 (condition -> errorCondition IF PARINI expresion PARFIN { body } optionalElse .)
    PRINT           reduce using rule 106 (condition -> errorCondition IF PARINI expresion PARFIN { body } optionalElse .)
    READ            reduce using rule 106 (condition -> errorCondition IF PARINI expresion PARFIN { body } optionalElse .)
    IF              reduce using rule 106 (condition -> errorCondition IF PARINI expresion PARFIN { body } optionalElse .)
    FOR             reduce using rule 106 (condition -> errorCondition IF PARINI expresion PARFIN { body } optionalElse .)
    WHILE           reduce using rule 106 (condition -> errorCondition IF PARINI expresion PARFIN { body } optionalElse .)
    }               reduce using rule 106 (condition -> errorCondition IF PARINI expresion PARFIN { body } optionalElse .)
    RETURN          reduce using rule 106 (condition -> errorCondition IF PARINI expresion PARFIN { body } optionalElse .)


state 312

    (108) optionalElse -> errorElse . ELSE { body }

    ELSE            shift and go to state 320


state 313

    (109) optionalElse -> empty .

    ID              reduce using rule 109 (optionalElse -> empty .)
    PRINT           reduce using rule 109 (optionalElse -> empty .)
    READ            reduce using rule 109 (optionalElse -> empty .)
    IF              reduce using rule 109 (optionalElse -> empty .)
    FOR             reduce using rule 109 (optionalElse -> empty .)
    WHILE           reduce using rule 109 (optionalElse -> empty .)
    }               reduce using rule 109 (optionalElse -> empty .)
    RETURN          reduce using rule 109 (optionalElse -> empty .)


state 314

    (66) opReturns -> errorOpReturns RETURNS type saveReturnType { opVars . body return
    (78) body -> . errorBody cyInstruction
    (79) body -> . empty
    (80) errorBody -> .
    (158) empty -> .

    ID              reduce using rule 80 (errorBody -> .)
    PRINT           reduce using rule 80 (errorBody -> .)
    READ            reduce using rule 80 (errorBody -> .)
    IF              reduce using rule 80 (errorBody -> .)
    FOR             reduce using rule 80 (errorBody -> .)
    WHILE           reduce using rule 80 (errorBody -> .)
    RETURN          reduce using rule 158 (empty -> .)

    body                           shift and go to state 321
    errorBody                      shift and go to state 74
    empty                          shift and go to state 75

state 315

    (50) cyParam -> errorCyParam saveID saveTypeParam ; . param
    (48) param -> . saveType type errorParam ID cyTypeParam cyParam
    (3) saveType -> .

    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)

    param                          shift and go to state 322
    saveType                       shift and go to state 101

state 316

    (148) opMatrix -> errorOpMatrix [ . expresion ]
    (113) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (118) sExp -> . exp errorOpSExp opSExp performRelational
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED
    (155) cte -> . CTEF
    (156) cte -> . TRUE
    (157) cte -> . FALSE
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    sExp                           shift and go to state 141
    expresion                      shift and go to state 323
    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 144
    fact                           shift and go to state 137

state 317

    (42) initDict -> ASGN PARINI dictType : dictType PARFIN errorInitDict .

    ;               reduce using rule 42 (initDict -> ASGN PARINI dictType : dictType PARFIN errorInitDict .)
    PARFIN          reduce using rule 42 (initDict -> ASGN PARINI dictType : dictType PARFIN errorInitDict .)


state 318

    (93) assignMatrix -> [ expresion ] errorAssignMatrix .

    ASGN            reduce using rule 93 (assignMatrix -> [ expresion ] errorAssignMatrix .)


state 319

    (86) forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { . body }
    (78) body -> . errorBody cyInstruction
    (79) body -> . empty
    (80) errorBody -> .
    (158) empty -> .

    ID              reduce using rule 80 (errorBody -> .)
    PRINT           reduce using rule 80 (errorBody -> .)
    READ            reduce using rule 80 (errorBody -> .)
    IF              reduce using rule 80 (errorBody -> .)
    FOR             reduce using rule 80 (errorBody -> .)
    WHILE           reduce using rule 80 (errorBody -> .)
    }               reduce using rule 158 (empty -> .)

    body                           shift and go to state 324
    errorBody                      shift and go to state 74
    empty                          shift and go to state 75

state 320

    (108) optionalElse -> errorElse ELSE . { body }

    {               shift and go to state 325


state 321

    (66) opReturns -> errorOpReturns RETURNS type saveReturnType { opVars body . return
    (59) return -> . errorReturn RETURN expresion ;
    (60) errorReturn -> .

    RETURN          reduce using rule 60 (errorReturn -> .)

    return                         shift and go to state 326
    errorReturn                    shift and go to state 327

state 322

    (50) cyParam -> errorCyParam saveID saveTypeParam ; param .

    PARFIN          reduce using rule 50 (cyParam -> errorCyParam saveID saveTypeParam ; param .)


state 323

    (148) opMatrix -> errorOpMatrix [ expresion . ]

    ]               shift and go to state 328


state 324

    (86) forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body . }

    }               shift and go to state 329


state 325

    (108) optionalElse -> errorElse ELSE { . body }
    (78) body -> . errorBody cyInstruction
    (79) body -> . empty
    (80) errorBody -> .
    (158) empty -> .

    ID              reduce using rule 80 (errorBody -> .)
    PRINT           reduce using rule 80 (errorBody -> .)
    READ            reduce using rule 80 (errorBody -> .)
    IF              reduce using rule 80 (errorBody -> .)
    FOR             reduce using rule 80 (errorBody -> .)
    WHILE           reduce using rule 80 (errorBody -> .)
    }               reduce using rule 158 (empty -> .)

    body                           shift and go to state 330
    empty                          shift and go to state 75
    errorBody                      shift and go to state 74

state 326

    (66) opReturns -> errorOpReturns RETURNS type saveReturnType { opVars body return .

    }               reduce using rule 66 (opReturns -> errorOpReturns RETURNS type saveReturnType { opVars body return .)


state 327

    (59) return -> errorReturn . RETURN expresion ;

    RETURN          shift and go to state 331


state 328

    (148) opMatrix -> errorOpMatrix [ expresion ] .

    MULT            reduce using rule 148 (opMatrix -> errorOpMatrix [ expresion ] .)
    DIV             reduce using rule 148 (opMatrix -> errorOpMatrix [ expresion ] .)
    PLUS            reduce using rule 148 (opMatrix -> errorOpMatrix [ expresion ] .)
    MINUS           reduce using rule 148 (opMatrix -> errorOpMatrix [ expresion ] .)
    ,               reduce using rule 148 (opMatrix -> errorOpMatrix [ expresion ] .)
    PARFIN          reduce using rule 148 (opMatrix -> errorOpMatrix [ expresion ] .)
    EQ              reduce using rule 148 (opMatrix -> errorOpMatrix [ expresion ] .)
    DIF             reduce using rule 148 (opMatrix -> errorOpMatrix [ expresion ] .)
    LTOEQ           reduce using rule 148 (opMatrix -> errorOpMatrix [ expresion ] .)
    GTOEQ           reduce using rule 148 (opMatrix -> errorOpMatrix [ expresion ] .)
    GT              reduce using rule 148 (opMatrix -> errorOpMatrix [ expresion ] .)
    LT              reduce using rule 148 (opMatrix -> errorOpMatrix [ expresion ] .)
    AND             reduce using rule 148 (opMatrix -> errorOpMatrix [ expresion ] .)
    OR              reduce using rule 148 (opMatrix -> errorOpMatrix [ expresion ] .)
    ]               reduce using rule 148 (opMatrix -> errorOpMatrix [ expresion ] .)
    ;               reduce using rule 148 (opMatrix -> errorOpMatrix [ expresion ] .)


state 329

    (86) forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body } .

    ID              reduce using rule 86 (forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body } .)
    PRINT           reduce using rule 86 (forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body } .)
    READ            reduce using rule 86 (forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body } .)
    IF              reduce using rule 86 (forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body } .)
    FOR             reduce using rule 86 (forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body } .)
    WHILE           reduce using rule 86 (forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body } .)
    }               reduce using rule 86 (forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body } .)
    RETURN          reduce using rule 86 (forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body } .)


state 330

    (108) optionalElse -> errorElse ELSE { body . }

    }               shift and go to state 332


state 331

    (59) return -> errorReturn RETURN . expresion ;
    (113) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (118) sExp -> . exp errorOpSExp opSExp performRelational
    (127) exp -> . term performAddSub errorCyExp cyExp
    (132) term -> . fact performMulDiv cyTerm
    (136) fact -> . CTES
    (137) fact -> . cte
    (138) fact -> . funcCall
    (139) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (140) fact -> . ID saveVariable opAccess errorOpAccess
    (154) cte -> . CTED
    (155) cte -> . CTEF
    (156) cte -> . TRUE
    (157) cte -> . FALSE
    (96) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 130
    PARINI          shift and go to state 127
    ID              shift and go to state 129
    CTED            shift and go to state 128
    CTEF            shift and go to state 135
    TRUE            shift and go to state 126
    FALSE           shift and go to state 132

    sExp                           shift and go to state 141
    expresion                      shift and go to state 333
    term                           shift and go to state 131
    funcCall                       shift and go to state 133
    cte                            shift and go to state 134
    exp                            shift and go to state 144
    fact                           shift and go to state 137

state 332

    (108) optionalElse -> errorElse ELSE { body } .

    ID              reduce using rule 108 (optionalElse -> errorElse ELSE { body } .)
    PRINT           reduce using rule 108 (optionalElse -> errorElse ELSE { body } .)
    READ            reduce using rule 108 (optionalElse -> errorElse ELSE { body } .)
    IF              reduce using rule 108 (optionalElse -> errorElse ELSE { body } .)
    FOR             reduce using rule 108 (optionalElse -> errorElse ELSE { body } .)
    WHILE           reduce using rule 108 (optionalElse -> errorElse ELSE { body } .)
    }               reduce using rule 108 (optionalElse -> errorElse ELSE { body } .)
    RETURN          reduce using rule 108 (optionalElse -> errorElse ELSE { body } .)


state 333

    (59) return -> errorReturn RETURN expresion . ;

    ;               shift and go to state 334


state 334

    (59) return -> errorReturn RETURN expresion ; .

    }               reduce using rule 59 (return -> errorReturn RETURN expresion ; .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PARINI in state 162 resolved as shift
WARNING: reduce/reduce conflict in state 270 resolved using rule (initWith -> funcCall)
WARNING: rejected rule (fact -> funcCall) in state 270
WARNING: reduce/reduce conflict in state 271 resolved using rule (initWith -> fact)
WARNING: rejected rule (performMulDiv -> <empty>) in state 271
