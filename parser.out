Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables
Rule 2     changeCurrentScope -> <empty>
Rule 3     saveType -> <empty>
Rule 4     saveProc -> <empty>
Rule 5     errorProgram -> <empty>
Rule 6     opVars -> vars
Rule 7     opVars -> empty
Rule 8     opFunctions -> function opFunctions
Rule 9     opFunctions -> empty
Rule 10    vars -> errorVars VARS declare
Rule 11    saveID -> <empty>
Rule 12    errorVars -> <empty>
Rule 13    type -> errorType INT
Rule 14    type -> FLOAT
Rule 15    type -> STRING
Rule 16    type -> BOOL
Rule 17    errorType -> <empty>
Rule 18    main -> errorMain MAIN saveCurrentTemps saveMain { opVars generateInitialQuadruple body } clearVarsTable
Rule 19    generateInitialQuadruple -> <empty>
Rule 20    saveMain -> <empty>
Rule 21    errorMain -> <empty>
Rule 22    instr -> basicStatements ;
Rule 23    instr -> condition
Rule 24    instr -> cycle
Rule 25    basicStatements -> assign
Rule 26    basicStatements -> funcCall
Rule 27    basicStatements -> print
Rule 28    basicStatements -> read
Rule 29    print -> PRINT PARINI exp performPrint cyPrint PARFIN
Rule 30    cyPrint -> , fix exp performPrint cyPrint
Rule 31    cyPrint -> empty
Rule 32    read -> READ PARINI ID saveVariable performRead cyRead PARFIN
Rule 33    cyRead -> , fix ID saveVariable performRead cyRead
Rule 34    cyRead -> empty
Rule 35    fix -> <empty>
Rule 36    declare -> basicDeclare
Rule 37    declare -> structDeclare
Rule 38    init -> ASGN saveOperator errorInit initWith
Rule 39    errorInit -> <empty>
Rule 40    initWith -> expresion
Rule 41    initWith -> funcCall
Rule 42    param -> saveType type errorParam ID cyTypeParam cyParam
Rule 43    errorParam -> <empty>
Rule 44    cyParam -> errorCyParam saveTypeParam saveID ; param
Rule 45    cyParam -> empty saveTypeParam saveID
Rule 46    cyTypeParam -> , saveTypeParam saveID ID cyTypeParam
Rule 47    cyTypeParam -> empty
Rule 48    saveTypeParam -> <empty>
Rule 49    errorCyParam -> <empty>
Rule 50    function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
Rule 51    saveCurrentTemps -> <empty>
Rule 52    errorFunction -> <empty>
Rule 53    clearVarsTable -> <empty>
Rule 54    return -> errorReturn RETURN expresion saveReturnValue ;
Rule 55    saveReturnValue -> <empty>
Rule 56    errorReturn -> <empty>
Rule 57    opParameters -> param saveParamToDirProc errorOpParameters
Rule 58    opParameters -> empty
Rule 59    flagParameters -> <empty>
Rule 60    saveParamToDirProc -> <empty>
Rule 61    errorOpParameters -> <empty>
Rule 62    opReturns -> errorOpReturns RETURNS type saveReturnType { opVars saveQuadruple body return
Rule 63    opReturns -> { opVars saveQuadruple body
Rule 64    saveQuadruple -> <empty>
Rule 65    saveReturnType -> <empty>
Rule 66    errorOpReturns -> <empty>
Rule 67    basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
Rule 68    errorBasicDeclare -> <empty>
Rule 69    structDeclare -> errorStructDeclare STRUCT struct ; cyDeclare
Rule 70    errorStructDeclare -> <empty>
Rule 71    cyDeclare -> declare
Rule 72    cyDeclare -> empty
Rule 73    body -> errorBody cyInstruction
Rule 74    body -> empty
Rule 75    errorBody -> <empty>
Rule 76    cyInstruction -> instr body
Rule 77    cycle -> forCycle
Rule 78    cycle -> whileCycle
Rule 79    whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile
Rule 80    repeatWhile -> <empty>
Rule 81    saveReturn -> <empty>
Rule 82    errorWhileCycle -> <empty>
Rule 83    forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign
Rule 84    saltoBody -> <empty>
Rule 85    returnFor -> <empty>
Rule 86    rellenaBody -> <empty>
Rule 87    returnAssign -> <empty>
Rule 88    errorForCycle -> <empty>
Rule 89    assign -> ID saveVariable errorAssign assignOptions performAssign
Rule 90    errorAssign -> <empty>
Rule 91    assignOptions -> init
Rule 92    assignOptions -> saveToDimensionStacks [ expresion verifyIndex ] assignMatrix accessStruct init
Rule 93    assignMatrix -> updateDimension [ expresion verifyIndex ] errorAssignMatrix
Rule 94    assignMatrix -> empty
Rule 95    errorAssignMatrix -> <empty>
Rule 96    funcCall -> ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams
Rule 97    checkNumParams -> <empty>
Rule 98    checkFunction -> <empty>
Rule 99    opParamCall -> expresion checkParamType cyParamCall
Rule 100   opParamCall -> empty
Rule 101   cyParamCall -> , expresion checkParamType cyParamCall
Rule 102   cyParamCall -> empty
Rule 103   checkParamType -> <empty>
Rule 104   struct -> structType ID saveID createDimension [ CTED saveDimensionSize ] optionalMatrix secondLap
Rule 105   secondLap -> <empty>
Rule 106   saveDimensionSize -> <empty>
Rule 107   createDimension -> <empty>
Rule 108   structType -> saveType type
Rule 109   optionalMatrix -> createSecondDimension [ CTED saveSecondDimensionSize ]
Rule 110   optionalMatrix -> empty
Rule 111   saveSecondDimensionSize -> <empty>
Rule 112   createSecondDimension -> <empty>
Rule 113   condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso
Rule 114   errorCondition -> <empty>
Rule 115   optionalElse -> errorElse ELSE saveVerdadero { body }
Rule 116   optionalElse -> empty
Rule 117   errorElse -> <empty>
Rule 118   expresion -> sExp performAndOr cyExpresion errorExpresion
Rule 119   errorExpresion -> <empty>
Rule 120   cyExpresion -> AND saveOperator expresion
Rule 121   cyExpresion -> OR saveOperator expresion
Rule 122   cyExpresion -> empty
Rule 123   sExp -> exp errorOpSExp opSExp performRelational
Rule 124   opSExp -> EQ saveOperator exp
Rule 125   opSExp -> DIF saveOperator exp
Rule 126   opSExp -> LTOEQ saveOperator exp
Rule 127   opSExp -> GTOEQ saveOperator exp
Rule 128   opSExp -> GT saveOperator exp
Rule 129   opSExp -> LT saveOperator exp
Rule 130   opSExp -> empty
Rule 131   errorOpSExp -> <empty>
Rule 132   exp -> term performAddSub errorCyExp cyExp
Rule 133   cyExp -> PLUS saveOperator exp
Rule 134   cyExp -> MINUS saveOperator exp
Rule 135   cyExp -> empty
Rule 136   errorCyExp -> <empty>
Rule 137   term -> fact performMulDiv cyTerm
Rule 138   cyTerm -> MULT saveOperator errorFact term
Rule 139   cyTerm -> DIV saveOperator term
Rule 140   cyTerm -> RES saveOperator term
Rule 141   cyTerm -> empty
Rule 142   fact -> CTES saveConstantString
Rule 143   fact -> cte
Rule 144   fact -> funcCall
Rule 145   fact -> PARINI putFondo expresion PARFIN takeFondo
Rule 146   fact -> ID saveVariable opAccess errorOpAccess
Rule 147   errorFact -> <empty>
Rule 148   opAccess -> opStruct
Rule 149   opAccess -> empty
Rule 150   errorOpAccess -> <empty>
Rule 151   opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct
Rule 152   accessStruct -> <empty>
Rule 153   verifyIndex -> <empty>
Rule 154   saveToDimensionStacks -> <empty>
Rule 155   errorOpStruct -> <empty>
Rule 156   opMatrix -> errorOpMatrix updateDimension [ expresion verifyIndex ]
Rule 157   opMatrix -> empty
Rule 158   updateDimension -> <empty>
Rule 159   errorOpMatrix -> <empty>
Rule 160   cte -> CTED saveConstantInt
Rule 161   cte -> CTEF saveConstantFloat
Rule 162   cte -> TRUE saveConstantBool
Rule 163   cte -> FALSE saveConstantBool
Rule 164   empty -> <empty>
Rule 165   printTables -> <empty>
Rule 166   rellenaFalso -> <empty>
Rule 167   saveFalso -> <empty>
Rule 168   saveVerdadero -> <empty>
Rule 169   saveConstantInt -> <empty>
Rule 170   saveConstantFloat -> <empty>
Rule 171   saveConstantBool -> <empty>
Rule 172   saveConstantString -> <empty>
Rule 173   saveVariable -> <empty>
Rule 174   saveOperator -> <empty>
Rule 175   putFondo -> <empty>
Rule 176   takeFondo -> <empty>
Rule 177   performAssign -> <empty>
Rule 178   performMulDiv -> <empty>
Rule 179   performAddSub -> <empty>
Rule 180   performRelational -> <empty>
Rule 181   performAndOr -> <empty>
Rule 182   performPrint -> <empty>
Rule 183   performRead -> <empty>

Terminals, with rules where they appear

,                    : 30 33 46 101
;                    : 22 44 54 67 69 83 83
AND                  : 120
ASGN                 : 38
BOOL                 : 16
CTED                 : 104 109 160
CTEF                 : 161
CTES                 : 142
DIF                  : 125
DIV                  : 139
ELSE                 : 115
EQ                   : 124
FALSE                : 163
FLOAT                : 14
FOR                  : 83
FUNC                 : 50
GT                   : 128
GTOEQ                : 127
ID                   : 1 32 33 42 46 50 67 89 96 104 146
IF                   : 113
INT                  : 13
LT                   : 129
LTOEQ                : 126
MAIN                 : 18
MINUS                : 134
MULT                 : 138
OR                   : 121
PARFIN               : 29 32 50 79 83 96 113 145
PARINI               : 29 32 50 79 83 96 113 145
PLUS                 : 133
PRINT                : 29
PROGRAM              : 1
READ                 : 32
RES                  : 140
RETURN               : 54
RETURNS              : 62
STRING               : 15
STRUCT               : 69
TRUE                 : 162
VARS                 : 10
WHILE                : 79
[                    : 92 93 104 109 151 156
]                    : 92 93 104 109 151 156
error                : 
{                    : 1 18 62 63 79 83 113 115
}                    : 1 18 50 79 83 113 115

Nonterminals, with rules where they appear

accessStruct         : 92 151
assign               : 25 83 83
assignMatrix         : 92
assignOptions        : 89
basicDeclare         : 36
basicStatements      : 22
body                 : 18 62 63 76 79 83 113 115
changeCurrentScope   : 1
checkFunction        : 96
checkNumParams       : 96
checkParamType       : 99 101
clearVarsTable       : 18 50
condition            : 23
createDimension      : 104
createSecondDimension : 109
cte                  : 143
cyDeclare            : 67 69
cyExp                : 132
cyExpresion          : 118
cyInstruction        : 73
cyParam              : 42
cyParamCall          : 99 101
cyPrint              : 29 30
cyRead               : 32 33
cyTerm               : 137
cyTypeParam          : 42 46 67
cycle                : 24
declare              : 10 71
empty                : 7 9 31 34 45 47 58 72 74 94 100 102 110 116 122 130 135 141 149 157
errorAssign          : 89
errorAssignMatrix    : 93
errorBasicDeclare    : 67
errorBody            : 73
errorCondition       : 113
errorCyExp           : 132
errorCyParam         : 44
errorElse            : 115
errorExpresion       : 118
errorFact            : 138
errorForCycle        : 83
errorFunction        : 50
errorInit            : 38
errorMain            : 18
errorOpAccess        : 146
errorOpMatrix        : 156
errorOpParameters    : 57
errorOpReturns       : 62
errorOpSExp          : 123
errorOpStruct        : 151
errorParam           : 42
errorProgram         : 1
errorReturn          : 54
errorStructDeclare   : 69
errorType            : 13
errorVars            : 10
errorWhileCycle      : 79
exp                  : 29 30 123 124 125 126 127 128 129 133 134
expresion            : 40 54 79 83 92 93 99 101 113 120 121 145 151 156
fact                 : 137
fix                  : 30 33
flagParameters       : 50 50
forCycle             : 77
funcCall             : 26 41 144
function             : 8
generateInitialQuadruple : 18
init                 : 91 92
initWith             : 38
instr                : 76
main                 : 1
opAccess             : 146
opFunctions          : 1 8
opMatrix             : 151
opParamCall          : 96
opParameters         : 50
opReturns            : 50
opSExp               : 123
opStruct             : 148
opVars               : 1 18 62 63
optionalElse         : 113
optionalMatrix       : 104
param                : 44 57
performAddSub        : 132
performAndOr         : 118
performAssign        : 89
performMulDiv        : 137
performPrint         : 29 30
performRead          : 32 33
performRelational    : 123
print                : 27
printTables          : 1
program              : 0
putFondo             : 96 145
read                 : 28
rellenaBody          : 83
rellenaFalso         : 113
repeatWhile          : 79
return               : 62
returnAssign         : 83
returnFor            : 83
sExp                 : 118
saltoBody            : 83
saveConstantBool     : 162 163
saveConstantFloat    : 161
saveConstantInt      : 160
saveConstantString   : 142
saveCurrentTemps     : 18 50
saveDimensionSize    : 104
saveFalso            : 79 83 113
saveID               : 44 45 46 67 104
saveMain             : 18
saveOperator         : 38 120 121 124 125 126 127 128 129 133 134 138 139 140
saveParamToDirProc   : 57
saveProc             : 1 50
saveQuadruple        : 62 63
saveReturn           : 79 83
saveReturnType       : 62
saveReturnValue      : 54
saveSecondDimensionSize : 109
saveToDimensionStacks : 92 151
saveType             : 1 42 50 67 108
saveTypeParam        : 44 45 46
saveVariable         : 32 33 89 146
saveVerdadero        : 115
secondLap            : 104
struct               : 69
structDeclare        : 37
structType           : 104
takeFondo            : 96 145
term                 : 132 138 139 140
type                 : 42 62 67 108
updateDimension      : 93 156
vars                 : 6
verifyIndex          : 92 93 151 156
whileCycle           : 78

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables
    (5) errorProgram -> .

    PROGRAM         reduce using rule 5 (errorProgram -> .)

    errorProgram                   shift and go to state 2
    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> errorProgram . PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables

    PROGRAM         shift and go to state 3


state 3

    (1) program -> errorProgram PROGRAM . saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables
    (3) saveType -> .

    ID              reduce using rule 3 (saveType -> .)

    saveType                       shift and go to state 4

state 4

    (1) program -> errorProgram PROGRAM saveType . ID saveProc { opVars changeCurrentScope opFunctions main } printTables

    ID              shift and go to state 5


state 5

    (1) program -> errorProgram PROGRAM saveType ID . saveProc { opVars changeCurrentScope opFunctions main } printTables
    (4) saveProc -> .

    {               reduce using rule 4 (saveProc -> .)

    saveProc                       shift and go to state 6

state 6

    (1) program -> errorProgram PROGRAM saveType ID saveProc . { opVars changeCurrentScope opFunctions main } printTables

    {               shift and go to state 7


state 7

    (1) program -> errorProgram PROGRAM saveType ID saveProc { . opVars changeCurrentScope opFunctions main } printTables
    (6) opVars -> . vars
    (7) opVars -> . empty
    (10) vars -> . errorVars VARS declare
    (164) empty -> .
    (12) errorVars -> .

    MAIN            reduce using rule 164 (empty -> .)
    FUNC            reduce using rule 164 (empty -> .)
    VARS            reduce using rule 12 (errorVars -> .)

    vars                           shift and go to state 8
    opVars                         shift and go to state 9
    errorVars                      shift and go to state 10
    empty                          shift and go to state 11

state 8

    (6) opVars -> vars .

    RETURN          reduce using rule 6 (opVars -> vars .)
    ID              reduce using rule 6 (opVars -> vars .)
    PRINT           reduce using rule 6 (opVars -> vars .)
    READ            reduce using rule 6 (opVars -> vars .)
    IF              reduce using rule 6 (opVars -> vars .)
    FOR             reduce using rule 6 (opVars -> vars .)
    WHILE           reduce using rule 6 (opVars -> vars .)
    MAIN            reduce using rule 6 (opVars -> vars .)
    FUNC            reduce using rule 6 (opVars -> vars .)
    }               reduce using rule 6 (opVars -> vars .)


state 9

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars . changeCurrentScope opFunctions main } printTables
    (2) changeCurrentScope -> .

    MAIN            reduce using rule 2 (changeCurrentScope -> .)
    FUNC            reduce using rule 2 (changeCurrentScope -> .)

    changeCurrentScope             shift and go to state 12

state 10

    (10) vars -> errorVars . VARS declare

    VARS            shift and go to state 13


state 11

    (7) opVars -> empty .

    RETURN          reduce using rule 7 (opVars -> empty .)
    ID              reduce using rule 7 (opVars -> empty .)
    PRINT           reduce using rule 7 (opVars -> empty .)
    READ            reduce using rule 7 (opVars -> empty .)
    IF              reduce using rule 7 (opVars -> empty .)
    FOR             reduce using rule 7 (opVars -> empty .)
    WHILE           reduce using rule 7 (opVars -> empty .)
    MAIN            reduce using rule 7 (opVars -> empty .)
    FUNC            reduce using rule 7 (opVars -> empty .)
    }               reduce using rule 7 (opVars -> empty .)


state 12

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope . opFunctions main } printTables
    (8) opFunctions -> . function opFunctions
    (9) opFunctions -> . empty
    (50) function -> . errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (164) empty -> .
    (52) errorFunction -> .

    MAIN            reduce using rule 164 (empty -> .)
    FUNC            reduce using rule 52 (errorFunction -> .)

    function                       shift and go to state 16
    errorFunction                  shift and go to state 17
    empty                          shift and go to state 15
    opFunctions                    shift and go to state 14

state 13

    (10) vars -> errorVars VARS . declare
    (36) declare -> . basicDeclare
    (37) declare -> . structDeclare
    (67) basicDeclare -> . saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (69) structDeclare -> . errorStructDeclare STRUCT struct ; cyDeclare
    (3) saveType -> .
    (70) errorStructDeclare -> .

    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)
    STRUCT          reduce using rule 70 (errorStructDeclare -> .)

    saveType                       shift and go to state 18
    basicDeclare                   shift and go to state 21
    structDeclare                  shift and go to state 19
    errorStructDeclare             shift and go to state 20
    declare                        shift and go to state 22

state 14

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions . main } printTables
    (18) main -> . errorMain MAIN saveCurrentTemps saveMain { opVars generateInitialQuadruple body } clearVarsTable
    (21) errorMain -> .

    MAIN            reduce using rule 21 (errorMain -> .)

    main                           shift and go to state 23
    errorMain                      shift and go to state 24

state 15

    (9) opFunctions -> empty .

    MAIN            reduce using rule 9 (opFunctions -> empty .)


state 16

    (8) opFunctions -> function . opFunctions
    (8) opFunctions -> . function opFunctions
    (9) opFunctions -> . empty
    (50) function -> . errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (164) empty -> .
    (52) errorFunction -> .

    MAIN            reduce using rule 164 (empty -> .)
    FUNC            reduce using rule 52 (errorFunction -> .)

    function                       shift and go to state 16
    errorFunction                  shift and go to state 17
    empty                          shift and go to state 15
    opFunctions                    shift and go to state 25

state 17

    (50) function -> errorFunction . saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (51) saveCurrentTemps -> .

    FUNC            reduce using rule 51 (saveCurrentTemps -> .)

    saveCurrentTemps               shift and go to state 26

state 18

    (67) basicDeclare -> saveType . type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    BOOL            shift and go to state 30
    INT             reduce using rule 17 (errorType -> .)

    errorType                      shift and go to state 29
    type                           shift and go to state 31

state 19

    (37) declare -> structDeclare .

    MAIN            reduce using rule 37 (declare -> structDeclare .)
    FUNC            reduce using rule 37 (declare -> structDeclare .)
    }               reduce using rule 37 (declare -> structDeclare .)
    ID              reduce using rule 37 (declare -> structDeclare .)
    PRINT           reduce using rule 37 (declare -> structDeclare .)
    READ            reduce using rule 37 (declare -> structDeclare .)
    IF              reduce using rule 37 (declare -> structDeclare .)
    FOR             reduce using rule 37 (declare -> structDeclare .)
    WHILE           reduce using rule 37 (declare -> structDeclare .)
    RETURN          reduce using rule 37 (declare -> structDeclare .)


state 20

    (69) structDeclare -> errorStructDeclare . STRUCT struct ; cyDeclare

    STRUCT          shift and go to state 32


state 21

    (36) declare -> basicDeclare .

    MAIN            reduce using rule 36 (declare -> basicDeclare .)
    FUNC            reduce using rule 36 (declare -> basicDeclare .)
    }               reduce using rule 36 (declare -> basicDeclare .)
    ID              reduce using rule 36 (declare -> basicDeclare .)
    PRINT           reduce using rule 36 (declare -> basicDeclare .)
    READ            reduce using rule 36 (declare -> basicDeclare .)
    IF              reduce using rule 36 (declare -> basicDeclare .)
    FOR             reduce using rule 36 (declare -> basicDeclare .)
    WHILE           reduce using rule 36 (declare -> basicDeclare .)
    RETURN          reduce using rule 36 (declare -> basicDeclare .)


state 22

    (10) vars -> errorVars VARS declare .

    ID              reduce using rule 10 (vars -> errorVars VARS declare .)
    PRINT           reduce using rule 10 (vars -> errorVars VARS declare .)
    READ            reduce using rule 10 (vars -> errorVars VARS declare .)
    IF              reduce using rule 10 (vars -> errorVars VARS declare .)
    FOR             reduce using rule 10 (vars -> errorVars VARS declare .)
    WHILE           reduce using rule 10 (vars -> errorVars VARS declare .)
    }               reduce using rule 10 (vars -> errorVars VARS declare .)
    RETURN          reduce using rule 10 (vars -> errorVars VARS declare .)
    MAIN            reduce using rule 10 (vars -> errorVars VARS declare .)
    FUNC            reduce using rule 10 (vars -> errorVars VARS declare .)


state 23

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main . } printTables

    }               shift and go to state 33


state 24

    (18) main -> errorMain . MAIN saveCurrentTemps saveMain { opVars generateInitialQuadruple body } clearVarsTable

    MAIN            shift and go to state 34


state 25

    (8) opFunctions -> function opFunctions .

    MAIN            reduce using rule 8 (opFunctions -> function opFunctions .)


state 26

    (50) function -> errorFunction saveCurrentTemps . FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable

    FUNC            shift and go to state 35


state 27

    (14) type -> FLOAT .

    {               reduce using rule 14 (type -> FLOAT .)
    ID              reduce using rule 14 (type -> FLOAT .)


state 28

    (15) type -> STRING .

    {               reduce using rule 15 (type -> STRING .)
    ID              reduce using rule 15 (type -> STRING .)


state 29

    (13) type -> errorType . INT

    INT             shift and go to state 36


state 30

    (16) type -> BOOL .

    {               reduce using rule 16 (type -> BOOL .)
    ID              reduce using rule 16 (type -> BOOL .)


state 31

    (67) basicDeclare -> saveType type . errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (68) errorBasicDeclare -> .

    ID              reduce using rule 68 (errorBasicDeclare -> .)

    errorBasicDeclare              shift and go to state 37

state 32

    (69) structDeclare -> errorStructDeclare STRUCT . struct ; cyDeclare
    (104) struct -> . structType ID saveID createDimension [ CTED saveDimensionSize ] optionalMatrix secondLap
    (108) structType -> . saveType type
    (3) saveType -> .

    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)

    structType                     shift and go to state 38
    struct                         shift and go to state 39
    saveType                       shift and go to state 40

state 33

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } . printTables
    (165) printTables -> .

    $end            reduce using rule 165 (printTables -> .)

    printTables                    shift and go to state 41

state 34

    (18) main -> errorMain MAIN . saveCurrentTemps saveMain { opVars generateInitialQuadruple body } clearVarsTable
    (51) saveCurrentTemps -> .

    {               reduce using rule 51 (saveCurrentTemps -> .)

    saveCurrentTemps               shift and go to state 42

state 35

    (50) function -> errorFunction saveCurrentTemps FUNC . saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (3) saveType -> .

    ID              reduce using rule 3 (saveType -> .)

    saveType                       shift and go to state 43

state 36

    (13) type -> errorType INT .

    {               reduce using rule 13 (type -> errorType INT .)
    ID              reduce using rule 13 (type -> errorType INT .)


state 37

    (67) basicDeclare -> saveType type errorBasicDeclare . ID cyTypeParam saveID ; cyDeclare

    ID              shift and go to state 44


state 38

    (104) struct -> structType . ID saveID createDimension [ CTED saveDimensionSize ] optionalMatrix secondLap

    ID              shift and go to state 45


state 39

    (69) structDeclare -> errorStructDeclare STRUCT struct . ; cyDeclare

    ;               shift and go to state 46


state 40

    (108) structType -> saveType . type
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    BOOL            shift and go to state 30
    INT             reduce using rule 17 (errorType -> .)

    errorType                      shift and go to state 29
    type                           shift and go to state 47

state 41

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables .

    $end            reduce using rule 1 (program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables .)


state 42

    (18) main -> errorMain MAIN saveCurrentTemps . saveMain { opVars generateInitialQuadruple body } clearVarsTable
    (20) saveMain -> .

    {               reduce using rule 20 (saveMain -> .)

    saveMain                       shift and go to state 48

state 43

    (50) function -> errorFunction saveCurrentTemps FUNC saveType . ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable

    ID              shift and go to state 49


state 44

    (67) basicDeclare -> saveType type errorBasicDeclare ID . cyTypeParam saveID ; cyDeclare
    (46) cyTypeParam -> . , saveTypeParam saveID ID cyTypeParam
    (47) cyTypeParam -> . empty
    (164) empty -> .

    ,               shift and go to state 50
    ;               reduce using rule 164 (empty -> .)

    empty                          shift and go to state 51
    cyTypeParam                    shift and go to state 52

state 45

    (104) struct -> structType ID . saveID createDimension [ CTED saveDimensionSize ] optionalMatrix secondLap
    (11) saveID -> .

    [               reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 53

state 46

    (69) structDeclare -> errorStructDeclare STRUCT struct ; . cyDeclare
    (71) cyDeclare -> . declare
    (72) cyDeclare -> . empty
    (36) declare -> . basicDeclare
    (37) declare -> . structDeclare
    (164) empty -> .
    (67) basicDeclare -> . saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (69) structDeclare -> . errorStructDeclare STRUCT struct ; cyDeclare
    (3) saveType -> .
    (70) errorStructDeclare -> .

    MAIN            reduce using rule 164 (empty -> .)
    FUNC            reduce using rule 164 (empty -> .)
    }               reduce using rule 164 (empty -> .)
    ID              reduce using rule 164 (empty -> .)
    PRINT           reduce using rule 164 (empty -> .)
    READ            reduce using rule 164 (empty -> .)
    IF              reduce using rule 164 (empty -> .)
    FOR             reduce using rule 164 (empty -> .)
    WHILE           reduce using rule 164 (empty -> .)
    RETURN          reduce using rule 164 (empty -> .)
    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)
    STRUCT          reduce using rule 70 (errorStructDeclare -> .)

    cyDeclare                      shift and go to state 54
    saveType                       shift and go to state 18
    structDeclare                  shift and go to state 19
    basicDeclare                   shift and go to state 21
    declare                        shift and go to state 55
    empty                          shift and go to state 56
    errorStructDeclare             shift and go to state 20

state 47

    (108) structType -> saveType type .

    ID              reduce using rule 108 (structType -> saveType type .)


state 48

    (18) main -> errorMain MAIN saveCurrentTemps saveMain . { opVars generateInitialQuadruple body } clearVarsTable

    {               shift and go to state 57


state 49

    (50) function -> errorFunction saveCurrentTemps FUNC saveType ID . saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (4) saveProc -> .

    PARINI          reduce using rule 4 (saveProc -> .)

    saveProc                       shift and go to state 58

state 50

    (46) cyTypeParam -> , . saveTypeParam saveID ID cyTypeParam
    (48) saveTypeParam -> .

    ID              reduce using rule 48 (saveTypeParam -> .)

    saveTypeParam                  shift and go to state 59

state 51

    (47) cyTypeParam -> empty .

    ;               reduce using rule 47 (cyTypeParam -> empty .)
    PARFIN          reduce using rule 47 (cyTypeParam -> empty .)


state 52

    (67) basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam . saveID ; cyDeclare
    (11) saveID -> .

    ;               reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 60

state 53

    (104) struct -> structType ID saveID . createDimension [ CTED saveDimensionSize ] optionalMatrix secondLap
    (107) createDimension -> .

    [               reduce using rule 107 (createDimension -> .)

    createDimension                shift and go to state 61

state 54

    (69) structDeclare -> errorStructDeclare STRUCT struct ; cyDeclare .

    MAIN            reduce using rule 69 (structDeclare -> errorStructDeclare STRUCT struct ; cyDeclare .)
    FUNC            reduce using rule 69 (structDeclare -> errorStructDeclare STRUCT struct ; cyDeclare .)
    }               reduce using rule 69 (structDeclare -> errorStructDeclare STRUCT struct ; cyDeclare .)
    ID              reduce using rule 69 (structDeclare -> errorStructDeclare STRUCT struct ; cyDeclare .)
    PRINT           reduce using rule 69 (structDeclare -> errorStructDeclare STRUCT struct ; cyDeclare .)
    READ            reduce using rule 69 (structDeclare -> errorStructDeclare STRUCT struct ; cyDeclare .)
    IF              reduce using rule 69 (structDeclare -> errorStructDeclare STRUCT struct ; cyDeclare .)
    FOR             reduce using rule 69 (structDeclare -> errorStructDeclare STRUCT struct ; cyDeclare .)
    WHILE           reduce using rule 69 (structDeclare -> errorStructDeclare STRUCT struct ; cyDeclare .)
    RETURN          reduce using rule 69 (structDeclare -> errorStructDeclare STRUCT struct ; cyDeclare .)


state 55

    (71) cyDeclare -> declare .

    MAIN            reduce using rule 71 (cyDeclare -> declare .)
    FUNC            reduce using rule 71 (cyDeclare -> declare .)
    }               reduce using rule 71 (cyDeclare -> declare .)
    ID              reduce using rule 71 (cyDeclare -> declare .)
    PRINT           reduce using rule 71 (cyDeclare -> declare .)
    READ            reduce using rule 71 (cyDeclare -> declare .)
    IF              reduce using rule 71 (cyDeclare -> declare .)
    FOR             reduce using rule 71 (cyDeclare -> declare .)
    WHILE           reduce using rule 71 (cyDeclare -> declare .)
    RETURN          reduce using rule 71 (cyDeclare -> declare .)


state 56

    (72) cyDeclare -> empty .

    MAIN            reduce using rule 72 (cyDeclare -> empty .)
    FUNC            reduce using rule 72 (cyDeclare -> empty .)
    }               reduce using rule 72 (cyDeclare -> empty .)
    ID              reduce using rule 72 (cyDeclare -> empty .)
    PRINT           reduce using rule 72 (cyDeclare -> empty .)
    READ            reduce using rule 72 (cyDeclare -> empty .)
    IF              reduce using rule 72 (cyDeclare -> empty .)
    FOR             reduce using rule 72 (cyDeclare -> empty .)
    WHILE           reduce using rule 72 (cyDeclare -> empty .)
    RETURN          reduce using rule 72 (cyDeclare -> empty .)


state 57

    (18) main -> errorMain MAIN saveCurrentTemps saveMain { . opVars generateInitialQuadruple body } clearVarsTable
    (6) opVars -> . vars
    (7) opVars -> . empty
    (10) vars -> . errorVars VARS declare
    (164) empty -> .
    (12) errorVars -> .

    }               reduce using rule 164 (empty -> .)
    ID              reduce using rule 164 (empty -> .)
    PRINT           reduce using rule 164 (empty -> .)
    READ            reduce using rule 164 (empty -> .)
    IF              reduce using rule 164 (empty -> .)
    FOR             reduce using rule 164 (empty -> .)
    WHILE           reduce using rule 164 (empty -> .)
    VARS            reduce using rule 12 (errorVars -> .)

    vars                           shift and go to state 8
    opVars                         shift and go to state 62
    errorVars                      shift and go to state 10
    empty                          shift and go to state 11

state 58

    (50) function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc . flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (59) flagParameters -> .

    PARINI          reduce using rule 59 (flagParameters -> .)

    flagParameters                 shift and go to state 63

state 59

    (46) cyTypeParam -> , saveTypeParam . saveID ID cyTypeParam
    (11) saveID -> .

    ID              reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 64

state 60

    (67) basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID . ; cyDeclare

    ;               shift and go to state 65


state 61

    (104) struct -> structType ID saveID createDimension . [ CTED saveDimensionSize ] optionalMatrix secondLap

    [               shift and go to state 66


state 62

    (18) main -> errorMain MAIN saveCurrentTemps saveMain { opVars . generateInitialQuadruple body } clearVarsTable
    (19) generateInitialQuadruple -> .

    }               reduce using rule 19 (generateInitialQuadruple -> .)
    ID              reduce using rule 19 (generateInitialQuadruple -> .)
    PRINT           reduce using rule 19 (generateInitialQuadruple -> .)
    READ            reduce using rule 19 (generateInitialQuadruple -> .)
    IF              reduce using rule 19 (generateInitialQuadruple -> .)
    FOR             reduce using rule 19 (generateInitialQuadruple -> .)
    WHILE           reduce using rule 19 (generateInitialQuadruple -> .)

    generateInitialQuadruple       shift and go to state 67

state 63

    (50) function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters . PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable

    PARINI          shift and go to state 68


state 64

    (46) cyTypeParam -> , saveTypeParam saveID . ID cyTypeParam

    ID              shift and go to state 69


state 65

    (67) basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; . cyDeclare
    (71) cyDeclare -> . declare
    (72) cyDeclare -> . empty
    (36) declare -> . basicDeclare
    (37) declare -> . structDeclare
    (164) empty -> .
    (67) basicDeclare -> . saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (69) structDeclare -> . errorStructDeclare STRUCT struct ; cyDeclare
    (3) saveType -> .
    (70) errorStructDeclare -> .

    MAIN            reduce using rule 164 (empty -> .)
    FUNC            reduce using rule 164 (empty -> .)
    }               reduce using rule 164 (empty -> .)
    ID              reduce using rule 164 (empty -> .)
    PRINT           reduce using rule 164 (empty -> .)
    READ            reduce using rule 164 (empty -> .)
    IF              reduce using rule 164 (empty -> .)
    FOR             reduce using rule 164 (empty -> .)
    WHILE           reduce using rule 164 (empty -> .)
    RETURN          reduce using rule 164 (empty -> .)
    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)
    STRUCT          reduce using rule 70 (errorStructDeclare -> .)

    cyDeclare                      shift and go to state 70
    basicDeclare                   shift and go to state 21
    saveType                       shift and go to state 18
    empty                          shift and go to state 56
    structDeclare                  shift and go to state 19
    errorStructDeclare             shift and go to state 20
    declare                        shift and go to state 55

state 66

    (104) struct -> structType ID saveID createDimension [ . CTED saveDimensionSize ] optionalMatrix secondLap

    CTED            shift and go to state 71


state 67

    (18) main -> errorMain MAIN saveCurrentTemps saveMain { opVars generateInitialQuadruple . body } clearVarsTable
    (73) body -> . errorBody cyInstruction
    (74) body -> . empty
    (75) errorBody -> .
    (164) empty -> .

    ID              reduce using rule 75 (errorBody -> .)
    PRINT           reduce using rule 75 (errorBody -> .)
    READ            reduce using rule 75 (errorBody -> .)
    IF              reduce using rule 75 (errorBody -> .)
    FOR             reduce using rule 75 (errorBody -> .)
    WHILE           reduce using rule 75 (errorBody -> .)
    }               reduce using rule 164 (empty -> .)

    body                           shift and go to state 72
    errorBody                      shift and go to state 73
    empty                          shift and go to state 74

state 68

    (50) function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI . opParameters PARFIN flagParameters opReturns } clearVarsTable
    (57) opParameters -> . param saveParamToDirProc errorOpParameters
    (58) opParameters -> . empty
    (42) param -> . saveType type errorParam ID cyTypeParam cyParam
    (164) empty -> .
    (3) saveType -> .

    PARFIN          reduce using rule 164 (empty -> .)
    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)

    opParameters                   shift and go to state 75
    param                          shift and go to state 76
    saveType                       shift and go to state 77
    empty                          shift and go to state 78

state 69

    (46) cyTypeParam -> , saveTypeParam saveID ID . cyTypeParam
    (46) cyTypeParam -> . , saveTypeParam saveID ID cyTypeParam
    (47) cyTypeParam -> . empty
    (164) empty -> .

    ,               shift and go to state 50
    ;               reduce using rule 164 (empty -> .)
    PARFIN          reduce using rule 164 (empty -> .)

    cyTypeParam                    shift and go to state 79
    empty                          shift and go to state 51

state 70

    (67) basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .

    MAIN            reduce using rule 67 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    FUNC            reduce using rule 67 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    }               reduce using rule 67 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    ID              reduce using rule 67 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    PRINT           reduce using rule 67 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    READ            reduce using rule 67 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    IF              reduce using rule 67 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    FOR             reduce using rule 67 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    WHILE           reduce using rule 67 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    RETURN          reduce using rule 67 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)


state 71

    (104) struct -> structType ID saveID createDimension [ CTED . saveDimensionSize ] optionalMatrix secondLap
    (106) saveDimensionSize -> .

    ]               reduce using rule 106 (saveDimensionSize -> .)

    saveDimensionSize              shift and go to state 80

state 72

    (18) main -> errorMain MAIN saveCurrentTemps saveMain { opVars generateInitialQuadruple body . } clearVarsTable

    }               shift and go to state 81


state 73

    (73) body -> errorBody . cyInstruction
    (76) cyInstruction -> . instr body
    (22) instr -> . basicStatements ;
    (23) instr -> . condition
    (24) instr -> . cycle
    (25) basicStatements -> . assign
    (26) basicStatements -> . funcCall
    (27) basicStatements -> . print
    (28) basicStatements -> . read
    (113) condition -> . errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso
    (77) cycle -> . forCycle
    (78) cycle -> . whileCycle
    (89) assign -> . ID saveVariable errorAssign assignOptions performAssign
    (96) funcCall -> . ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams
    (29) print -> . PRINT PARINI exp performPrint cyPrint PARFIN
    (32) read -> . READ PARINI ID saveVariable performRead cyRead PARFIN
    (114) errorCondition -> .
    (83) forCycle -> . errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign
    (79) whileCycle -> . errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile
    (88) errorForCycle -> .
    (82) errorWhileCycle -> .

    ID              shift and go to state 88
    PRINT           shift and go to state 85
    READ            shift and go to state 83
    IF              reduce using rule 114 (errorCondition -> .)
    FOR             reduce using rule 88 (errorForCycle -> .)
    WHILE           reduce using rule 82 (errorWhileCycle -> .)

    instr                          shift and go to state 82
    whileCycle                     shift and go to state 84
    forCycle                       shift and go to state 86
    errorWhileCycle                shift and go to state 87
    condition                      shift and go to state 95
    print                          shift and go to state 89
    read                           shift and go to state 91
    basicStatements                shift and go to state 92
    errorForCycle                  shift and go to state 93
    cyInstruction                  shift and go to state 94
    cycle                          shift and go to state 90
    funcCall                       shift and go to state 96
    errorCondition                 shift and go to state 97
    assign                         shift and go to state 98

state 74

    (74) body -> empty .

    }               reduce using rule 74 (body -> empty .)
    RETURN          reduce using rule 74 (body -> empty .)


state 75

    (50) function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters . PARFIN flagParameters opReturns } clearVarsTable

    PARFIN          shift and go to state 99


state 76

    (57) opParameters -> param . saveParamToDirProc errorOpParameters
    (60) saveParamToDirProc -> .

    PARFIN          reduce using rule 60 (saveParamToDirProc -> .)

    saveParamToDirProc             shift and go to state 100

state 77

    (42) param -> saveType . type errorParam ID cyTypeParam cyParam
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    BOOL            shift and go to state 30
    INT             reduce using rule 17 (errorType -> .)

    type                           shift and go to state 101
    errorType                      shift and go to state 29

state 78

    (58) opParameters -> empty .

    PARFIN          reduce using rule 58 (opParameters -> empty .)


state 79

    (46) cyTypeParam -> , saveTypeParam saveID ID cyTypeParam .

    ;               reduce using rule 46 (cyTypeParam -> , saveTypeParam saveID ID cyTypeParam .)
    PARFIN          reduce using rule 46 (cyTypeParam -> , saveTypeParam saveID ID cyTypeParam .)


state 80

    (104) struct -> structType ID saveID createDimension [ CTED saveDimensionSize . ] optionalMatrix secondLap

    ]               shift and go to state 102


state 81

    (18) main -> errorMain MAIN saveCurrentTemps saveMain { opVars generateInitialQuadruple body } . clearVarsTable
    (53) clearVarsTable -> .

    }               reduce using rule 53 (clearVarsTable -> .)

    clearVarsTable                 shift and go to state 103

state 82

    (76) cyInstruction -> instr . body
    (73) body -> . errorBody cyInstruction
    (74) body -> . empty
    (75) errorBody -> .
    (164) empty -> .

    ID              reduce using rule 75 (errorBody -> .)
    PRINT           reduce using rule 75 (errorBody -> .)
    READ            reduce using rule 75 (errorBody -> .)
    IF              reduce using rule 75 (errorBody -> .)
    FOR             reduce using rule 75 (errorBody -> .)
    WHILE           reduce using rule 75 (errorBody -> .)
    }               reduce using rule 164 (empty -> .)
    RETURN          reduce using rule 164 (empty -> .)

    body                           shift and go to state 104
    errorBody                      shift and go to state 73
    empty                          shift and go to state 74

state 83

    (32) read -> READ . PARINI ID saveVariable performRead cyRead PARFIN

    PARINI          shift and go to state 105


state 84

    (78) cycle -> whileCycle .

    ID              reduce using rule 78 (cycle -> whileCycle .)
    PRINT           reduce using rule 78 (cycle -> whileCycle .)
    READ            reduce using rule 78 (cycle -> whileCycle .)
    IF              reduce using rule 78 (cycle -> whileCycle .)
    FOR             reduce using rule 78 (cycle -> whileCycle .)
    WHILE           reduce using rule 78 (cycle -> whileCycle .)
    }               reduce using rule 78 (cycle -> whileCycle .)
    RETURN          reduce using rule 78 (cycle -> whileCycle .)


state 85

    (29) print -> PRINT . PARINI exp performPrint cyPrint PARFIN

    PARINI          shift and go to state 106


state 86

    (77) cycle -> forCycle .

    ID              reduce using rule 77 (cycle -> forCycle .)
    PRINT           reduce using rule 77 (cycle -> forCycle .)
    READ            reduce using rule 77 (cycle -> forCycle .)
    IF              reduce using rule 77 (cycle -> forCycle .)
    FOR             reduce using rule 77 (cycle -> forCycle .)
    WHILE           reduce using rule 77 (cycle -> forCycle .)
    }               reduce using rule 77 (cycle -> forCycle .)
    RETURN          reduce using rule 77 (cycle -> forCycle .)


state 87

    (79) whileCycle -> errorWhileCycle . WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile

    WHILE           shift and go to state 107


state 88

    (89) assign -> ID . saveVariable errorAssign assignOptions performAssign
    (96) funcCall -> ID . checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams
    (173) saveVariable -> .
    (98) checkFunction -> .

    ASGN            reduce using rule 173 (saveVariable -> .)
    [               reduce using rule 173 (saveVariable -> .)
    PARINI          reduce using rule 98 (checkFunction -> .)

    saveVariable                   shift and go to state 108
    checkFunction                  shift and go to state 109

state 89

    (27) basicStatements -> print .

    ;               reduce using rule 27 (basicStatements -> print .)


state 90

    (24) instr -> cycle .

    ID              reduce using rule 24 (instr -> cycle .)
    PRINT           reduce using rule 24 (instr -> cycle .)
    READ            reduce using rule 24 (instr -> cycle .)
    IF              reduce using rule 24 (instr -> cycle .)
    FOR             reduce using rule 24 (instr -> cycle .)
    WHILE           reduce using rule 24 (instr -> cycle .)
    }               reduce using rule 24 (instr -> cycle .)
    RETURN          reduce using rule 24 (instr -> cycle .)


state 91

    (28) basicStatements -> read .

    ;               reduce using rule 28 (basicStatements -> read .)


state 92

    (22) instr -> basicStatements . ;

    ;               shift and go to state 110


state 93

    (83) forCycle -> errorForCycle . FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign

    FOR             shift and go to state 111


state 94

    (73) body -> errorBody cyInstruction .

    }               reduce using rule 73 (body -> errorBody cyInstruction .)
    RETURN          reduce using rule 73 (body -> errorBody cyInstruction .)


state 95

    (23) instr -> condition .

    ID              reduce using rule 23 (instr -> condition .)
    PRINT           reduce using rule 23 (instr -> condition .)
    READ            reduce using rule 23 (instr -> condition .)
    IF              reduce using rule 23 (instr -> condition .)
    FOR             reduce using rule 23 (instr -> condition .)
    WHILE           reduce using rule 23 (instr -> condition .)
    }               reduce using rule 23 (instr -> condition .)
    RETURN          reduce using rule 23 (instr -> condition .)


state 96

    (26) basicStatements -> funcCall .

    ;               reduce using rule 26 (basicStatements -> funcCall .)


state 97

    (113) condition -> errorCondition . IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso

    IF              shift and go to state 112


state 98

    (25) basicStatements -> assign .

    ;               reduce using rule 25 (basicStatements -> assign .)


state 99

    (50) function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN . flagParameters opReturns } clearVarsTable
    (59) flagParameters -> .

    {               reduce using rule 59 (flagParameters -> .)
    RETURNS         reduce using rule 59 (flagParameters -> .)

    flagParameters                 shift and go to state 113

state 100

    (57) opParameters -> param saveParamToDirProc . errorOpParameters
    (61) errorOpParameters -> .

    PARFIN          reduce using rule 61 (errorOpParameters -> .)

    errorOpParameters              shift and go to state 114

state 101

    (42) param -> saveType type . errorParam ID cyTypeParam cyParam
    (43) errorParam -> .

    ID              reduce using rule 43 (errorParam -> .)

    errorParam                     shift and go to state 115

state 102

    (104) struct -> structType ID saveID createDimension [ CTED saveDimensionSize ] . optionalMatrix secondLap
    (109) optionalMatrix -> . createSecondDimension [ CTED saveSecondDimensionSize ]
    (110) optionalMatrix -> . empty
    (112) createSecondDimension -> .
    (164) empty -> .

    [               reduce using rule 112 (createSecondDimension -> .)
    ;               reduce using rule 164 (empty -> .)

    optionalMatrix                 shift and go to state 116
    createSecondDimension          shift and go to state 117
    empty                          shift and go to state 118

state 103

    (18) main -> errorMain MAIN saveCurrentTemps saveMain { opVars generateInitialQuadruple body } clearVarsTable .

    }               reduce using rule 18 (main -> errorMain MAIN saveCurrentTemps saveMain { opVars generateInitialQuadruple body } clearVarsTable .)


state 104

    (76) cyInstruction -> instr body .

    }               reduce using rule 76 (cyInstruction -> instr body .)
    RETURN          reduce using rule 76 (cyInstruction -> instr body .)


state 105

    (32) read -> READ PARINI . ID saveVariable performRead cyRead PARFIN

    ID              shift and go to state 119


state 106

    (29) print -> PRINT PARINI . exp performPrint cyPrint PARFIN
    (132) exp -> . term performAddSub errorCyExp cyExp
    (137) term -> . fact performMulDiv cyTerm
    (142) fact -> . CTES saveConstantString
    (143) fact -> . cte
    (144) fact -> . funcCall
    (145) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (146) fact -> . ID saveVariable opAccess errorOpAccess
    (160) cte -> . CTED saveConstantInt
    (161) cte -> . CTEF saveConstantFloat
    (162) cte -> . TRUE saveConstantBool
    (163) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams

    CTES            shift and go to state 124
    PARINI          shift and go to state 121
    ID              shift and go to state 123
    CTED            shift and go to state 122
    CTEF            shift and go to state 129
    TRUE            shift and go to state 120
    FALSE           shift and go to state 126

    term                           shift and go to state 125
    funcCall                       shift and go to state 127
    cte                            shift and go to state 128
    exp                            shift and go to state 130
    fact                           shift and go to state 131

state 107

    (79) whileCycle -> errorWhileCycle WHILE . saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile
    (81) saveReturn -> .

    PARINI          reduce using rule 81 (saveReturn -> .)

    saveReturn                     shift and go to state 132

state 108

    (89) assign -> ID saveVariable . errorAssign assignOptions performAssign
    (90) errorAssign -> .

    ASGN            reduce using rule 90 (errorAssign -> .)
    [               reduce using rule 90 (errorAssign -> .)

    errorAssign                    shift and go to state 133

state 109

    (96) funcCall -> ID checkFunction . PARINI putFondo opParamCall takeFondo PARFIN checkNumParams

    PARINI          shift and go to state 134


state 110

    (22) instr -> basicStatements ; .

    ID              reduce using rule 22 (instr -> basicStatements ; .)
    PRINT           reduce using rule 22 (instr -> basicStatements ; .)
    READ            reduce using rule 22 (instr -> basicStatements ; .)
    IF              reduce using rule 22 (instr -> basicStatements ; .)
    FOR             reduce using rule 22 (instr -> basicStatements ; .)
    WHILE           reduce using rule 22 (instr -> basicStatements ; .)
    }               reduce using rule 22 (instr -> basicStatements ; .)
    RETURN          reduce using rule 22 (instr -> basicStatements ; .)


state 111

    (83) forCycle -> errorForCycle FOR . PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign

    PARINI          shift and go to state 135


state 112

    (113) condition -> errorCondition IF . PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso

    PARINI          shift and go to state 136


state 113

    (50) function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters . opReturns } clearVarsTable
    (62) opReturns -> . errorOpReturns RETURNS type saveReturnType { opVars saveQuadruple body return
    (63) opReturns -> . { opVars saveQuadruple body
    (66) errorOpReturns -> .

    {               shift and go to state 139
    RETURNS         reduce using rule 66 (errorOpReturns -> .)

    errorOpReturns                 shift and go to state 138
    opReturns                      shift and go to state 137

state 114

    (57) opParameters -> param saveParamToDirProc errorOpParameters .

    PARFIN          reduce using rule 57 (opParameters -> param saveParamToDirProc errorOpParameters .)


state 115

    (42) param -> saveType type errorParam . ID cyTypeParam cyParam

    ID              shift and go to state 140


state 116

    (104) struct -> structType ID saveID createDimension [ CTED saveDimensionSize ] optionalMatrix . secondLap
    (105) secondLap -> .

    ;               reduce using rule 105 (secondLap -> .)

    secondLap                      shift and go to state 141

state 117

    (109) optionalMatrix -> createSecondDimension . [ CTED saveSecondDimensionSize ]

    [               shift and go to state 142


state 118

    (110) optionalMatrix -> empty .

    ;               reduce using rule 110 (optionalMatrix -> empty .)


state 119

    (32) read -> READ PARINI ID . saveVariable performRead cyRead PARFIN
    (173) saveVariable -> .

    ,               reduce using rule 173 (saveVariable -> .)
    PARFIN          reduce using rule 173 (saveVariable -> .)

    saveVariable                   shift and go to state 143

state 120

    (162) cte -> TRUE . saveConstantBool
    (171) saveConstantBool -> .

    MULT            reduce using rule 171 (saveConstantBool -> .)
    DIV             reduce using rule 171 (saveConstantBool -> .)
    RES             reduce using rule 171 (saveConstantBool -> .)
    PLUS            reduce using rule 171 (saveConstantBool -> .)
    MINUS           reduce using rule 171 (saveConstantBool -> .)
    ,               reduce using rule 171 (saveConstantBool -> .)
    PARFIN          reduce using rule 171 (saveConstantBool -> .)
    EQ              reduce using rule 171 (saveConstantBool -> .)
    DIF             reduce using rule 171 (saveConstantBool -> .)
    LTOEQ           reduce using rule 171 (saveConstantBool -> .)
    GTOEQ           reduce using rule 171 (saveConstantBool -> .)
    GT              reduce using rule 171 (saveConstantBool -> .)
    LT              reduce using rule 171 (saveConstantBool -> .)
    AND             reduce using rule 171 (saveConstantBool -> .)
    OR              reduce using rule 171 (saveConstantBool -> .)
    ]               reduce using rule 171 (saveConstantBool -> .)
    ;               reduce using rule 171 (saveConstantBool -> .)

    saveConstantBool               shift and go to state 144

state 121

    (145) fact -> PARINI . putFondo expresion PARFIN takeFondo
    (175) putFondo -> .

    CTES            reduce using rule 175 (putFondo -> .)
    PARINI          reduce using rule 175 (putFondo -> .)
    ID              reduce using rule 175 (putFondo -> .)
    CTED            reduce using rule 175 (putFondo -> .)
    CTEF            reduce using rule 175 (putFondo -> .)
    TRUE            reduce using rule 175 (putFondo -> .)
    FALSE           reduce using rule 175 (putFondo -> .)

    putFondo                       shift and go to state 145

state 122

    (160) cte -> CTED . saveConstantInt
    (169) saveConstantInt -> .

    MULT            reduce using rule 169 (saveConstantInt -> .)
    DIV             reduce using rule 169 (saveConstantInt -> .)
    RES             reduce using rule 169 (saveConstantInt -> .)
    PLUS            reduce using rule 169 (saveConstantInt -> .)
    MINUS           reduce using rule 169 (saveConstantInt -> .)
    ,               reduce using rule 169 (saveConstantInt -> .)
    PARFIN          reduce using rule 169 (saveConstantInt -> .)
    EQ              reduce using rule 169 (saveConstantInt -> .)
    DIF             reduce using rule 169 (saveConstantInt -> .)
    LTOEQ           reduce using rule 169 (saveConstantInt -> .)
    GTOEQ           reduce using rule 169 (saveConstantInt -> .)
    GT              reduce using rule 169 (saveConstantInt -> .)
    LT              reduce using rule 169 (saveConstantInt -> .)
    AND             reduce using rule 169 (saveConstantInt -> .)
    OR              reduce using rule 169 (saveConstantInt -> .)
    ]               reduce using rule 169 (saveConstantInt -> .)
    ;               reduce using rule 169 (saveConstantInt -> .)

    saveConstantInt                shift and go to state 146

state 123

    (146) fact -> ID . saveVariable opAccess errorOpAccess
    (96) funcCall -> ID . checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams
    (173) saveVariable -> .
    (98) checkFunction -> .

    [               reduce using rule 173 (saveVariable -> .)
    MULT            reduce using rule 173 (saveVariable -> .)
    DIV             reduce using rule 173 (saveVariable -> .)
    RES             reduce using rule 173 (saveVariable -> .)
    PLUS            reduce using rule 173 (saveVariable -> .)
    MINUS           reduce using rule 173 (saveVariable -> .)
    ,               reduce using rule 173 (saveVariable -> .)
    PARFIN          reduce using rule 173 (saveVariable -> .)
    EQ              reduce using rule 173 (saveVariable -> .)
    DIF             reduce using rule 173 (saveVariable -> .)
    LTOEQ           reduce using rule 173 (saveVariable -> .)
    GTOEQ           reduce using rule 173 (saveVariable -> .)
    GT              reduce using rule 173 (saveVariable -> .)
    LT              reduce using rule 173 (saveVariable -> .)
    AND             reduce using rule 173 (saveVariable -> .)
    OR              reduce using rule 173 (saveVariable -> .)
    ]               reduce using rule 173 (saveVariable -> .)
    ;               reduce using rule 173 (saveVariable -> .)
    PARINI          reduce using rule 98 (checkFunction -> .)

    saveVariable                   shift and go to state 147
    checkFunction                  shift and go to state 109

state 124

    (142) fact -> CTES . saveConstantString
    (172) saveConstantString -> .

    MULT            reduce using rule 172 (saveConstantString -> .)
    DIV             reduce using rule 172 (saveConstantString -> .)
    RES             reduce using rule 172 (saveConstantString -> .)
    PLUS            reduce using rule 172 (saveConstantString -> .)
    MINUS           reduce using rule 172 (saveConstantString -> .)
    ,               reduce using rule 172 (saveConstantString -> .)
    PARFIN          reduce using rule 172 (saveConstantString -> .)
    EQ              reduce using rule 172 (saveConstantString -> .)
    DIF             reduce using rule 172 (saveConstantString -> .)
    LTOEQ           reduce using rule 172 (saveConstantString -> .)
    GTOEQ           reduce using rule 172 (saveConstantString -> .)
    GT              reduce using rule 172 (saveConstantString -> .)
    LT              reduce using rule 172 (saveConstantString -> .)
    AND             reduce using rule 172 (saveConstantString -> .)
    OR              reduce using rule 172 (saveConstantString -> .)
    ]               reduce using rule 172 (saveConstantString -> .)
    ;               reduce using rule 172 (saveConstantString -> .)

    saveConstantString             shift and go to state 148

state 125

    (132) exp -> term . performAddSub errorCyExp cyExp
    (179) performAddSub -> .

    PLUS            reduce using rule 179 (performAddSub -> .)
    MINUS           reduce using rule 179 (performAddSub -> .)
    ,               reduce using rule 179 (performAddSub -> .)
    PARFIN          reduce using rule 179 (performAddSub -> .)
    EQ              reduce using rule 179 (performAddSub -> .)
    DIF             reduce using rule 179 (performAddSub -> .)
    LTOEQ           reduce using rule 179 (performAddSub -> .)
    GTOEQ           reduce using rule 179 (performAddSub -> .)
    GT              reduce using rule 179 (performAddSub -> .)
    LT              reduce using rule 179 (performAddSub -> .)
    AND             reduce using rule 179 (performAddSub -> .)
    OR              reduce using rule 179 (performAddSub -> .)
    ]               reduce using rule 179 (performAddSub -> .)
    ;               reduce using rule 179 (performAddSub -> .)

    performAddSub                  shift and go to state 149

state 126

    (163) cte -> FALSE . saveConstantBool
    (171) saveConstantBool -> .

    MULT            reduce using rule 171 (saveConstantBool -> .)
    DIV             reduce using rule 171 (saveConstantBool -> .)
    RES             reduce using rule 171 (saveConstantBool -> .)
    PLUS            reduce using rule 171 (saveConstantBool -> .)
    MINUS           reduce using rule 171 (saveConstantBool -> .)
    ,               reduce using rule 171 (saveConstantBool -> .)
    PARFIN          reduce using rule 171 (saveConstantBool -> .)
    EQ              reduce using rule 171 (saveConstantBool -> .)
    DIF             reduce using rule 171 (saveConstantBool -> .)
    LTOEQ           reduce using rule 171 (saveConstantBool -> .)
    GTOEQ           reduce using rule 171 (saveConstantBool -> .)
    GT              reduce using rule 171 (saveConstantBool -> .)
    LT              reduce using rule 171 (saveConstantBool -> .)
    AND             reduce using rule 171 (saveConstantBool -> .)
    OR              reduce using rule 171 (saveConstantBool -> .)
    ]               reduce using rule 171 (saveConstantBool -> .)
    ;               reduce using rule 171 (saveConstantBool -> .)

    saveConstantBool               shift and go to state 150

state 127

    (144) fact -> funcCall .

    MULT            reduce using rule 144 (fact -> funcCall .)
    DIV             reduce using rule 144 (fact -> funcCall .)
    RES             reduce using rule 144 (fact -> funcCall .)
    PLUS            reduce using rule 144 (fact -> funcCall .)
    MINUS           reduce using rule 144 (fact -> funcCall .)
    EQ              reduce using rule 144 (fact -> funcCall .)
    DIF             reduce using rule 144 (fact -> funcCall .)
    LTOEQ           reduce using rule 144 (fact -> funcCall .)
    GTOEQ           reduce using rule 144 (fact -> funcCall .)
    GT              reduce using rule 144 (fact -> funcCall .)
    LT              reduce using rule 144 (fact -> funcCall .)
    AND             reduce using rule 144 (fact -> funcCall .)
    OR              reduce using rule 144 (fact -> funcCall .)
    ]               reduce using rule 144 (fact -> funcCall .)
    PARFIN          reduce using rule 144 (fact -> funcCall .)
    ,               reduce using rule 144 (fact -> funcCall .)
    ;               reduce using rule 144 (fact -> funcCall .)


state 128

    (143) fact -> cte .

    MULT            reduce using rule 143 (fact -> cte .)
    DIV             reduce using rule 143 (fact -> cte .)
    RES             reduce using rule 143 (fact -> cte .)
    PLUS            reduce using rule 143 (fact -> cte .)
    MINUS           reduce using rule 143 (fact -> cte .)
    EQ              reduce using rule 143 (fact -> cte .)
    DIF             reduce using rule 143 (fact -> cte .)
    LTOEQ           reduce using rule 143 (fact -> cte .)
    GTOEQ           reduce using rule 143 (fact -> cte .)
    GT              reduce using rule 143 (fact -> cte .)
    LT              reduce using rule 143 (fact -> cte .)
    AND             reduce using rule 143 (fact -> cte .)
    OR              reduce using rule 143 (fact -> cte .)
    ]               reduce using rule 143 (fact -> cte .)
    PARFIN          reduce using rule 143 (fact -> cte .)
    ,               reduce using rule 143 (fact -> cte .)
    ;               reduce using rule 143 (fact -> cte .)


state 129

    (161) cte -> CTEF . saveConstantFloat
    (170) saveConstantFloat -> .

    MULT            reduce using rule 170 (saveConstantFloat -> .)
    DIV             reduce using rule 170 (saveConstantFloat -> .)
    RES             reduce using rule 170 (saveConstantFloat -> .)
    PLUS            reduce using rule 170 (saveConstantFloat -> .)
    MINUS           reduce using rule 170 (saveConstantFloat -> .)
    ,               reduce using rule 170 (saveConstantFloat -> .)
    PARFIN          reduce using rule 170 (saveConstantFloat -> .)
    EQ              reduce using rule 170 (saveConstantFloat -> .)
    DIF             reduce using rule 170 (saveConstantFloat -> .)
    LTOEQ           reduce using rule 170 (saveConstantFloat -> .)
    GTOEQ           reduce using rule 170 (saveConstantFloat -> .)
    GT              reduce using rule 170 (saveConstantFloat -> .)
    LT              reduce using rule 170 (saveConstantFloat -> .)
    AND             reduce using rule 170 (saveConstantFloat -> .)
    OR              reduce using rule 170 (saveConstantFloat -> .)
    ]               reduce using rule 170 (saveConstantFloat -> .)
    ;               reduce using rule 170 (saveConstantFloat -> .)

    saveConstantFloat              shift and go to state 151

state 130

    (29) print -> PRINT PARINI exp . performPrint cyPrint PARFIN
    (182) performPrint -> .

    ,               reduce using rule 182 (performPrint -> .)
    PARFIN          reduce using rule 182 (performPrint -> .)

    performPrint                   shift and go to state 152

state 131

    (137) term -> fact . performMulDiv cyTerm
    (178) performMulDiv -> .

    MULT            reduce using rule 178 (performMulDiv -> .)
    DIV             reduce using rule 178 (performMulDiv -> .)
    RES             reduce using rule 178 (performMulDiv -> .)
    PLUS            reduce using rule 178 (performMulDiv -> .)
    MINUS           reduce using rule 178 (performMulDiv -> .)
    ,               reduce using rule 178 (performMulDiv -> .)
    PARFIN          reduce using rule 178 (performMulDiv -> .)
    EQ              reduce using rule 178 (performMulDiv -> .)
    DIF             reduce using rule 178 (performMulDiv -> .)
    LTOEQ           reduce using rule 178 (performMulDiv -> .)
    GTOEQ           reduce using rule 178 (performMulDiv -> .)
    GT              reduce using rule 178 (performMulDiv -> .)
    LT              reduce using rule 178 (performMulDiv -> .)
    AND             reduce using rule 178 (performMulDiv -> .)
    OR              reduce using rule 178 (performMulDiv -> .)
    ]               reduce using rule 178 (performMulDiv -> .)
    ;               reduce using rule 178 (performMulDiv -> .)

    performMulDiv                  shift and go to state 153

state 132

    (79) whileCycle -> errorWhileCycle WHILE saveReturn . PARINI expresion PARFIN saveFalso { body } repeatWhile

    PARINI          shift and go to state 154


state 133

    (89) assign -> ID saveVariable errorAssign . assignOptions performAssign
    (91) assignOptions -> . init
    (92) assignOptions -> . saveToDimensionStacks [ expresion verifyIndex ] assignMatrix accessStruct init
    (38) init -> . ASGN saveOperator errorInit initWith
    (154) saveToDimensionStacks -> .

    ASGN            shift and go to state 156
    [               reduce using rule 154 (saveToDimensionStacks -> .)

    assignOptions                  shift and go to state 155
    init                           shift and go to state 157
    saveToDimensionStacks          shift and go to state 158

state 134

    (96) funcCall -> ID checkFunction PARINI . putFondo opParamCall takeFondo PARFIN checkNumParams
    (175) putFondo -> .

    CTES            reduce using rule 175 (putFondo -> .)
    PARINI          reduce using rule 175 (putFondo -> .)
    ID              reduce using rule 175 (putFondo -> .)
    CTED            reduce using rule 175 (putFondo -> .)
    CTEF            reduce using rule 175 (putFondo -> .)
    TRUE            reduce using rule 175 (putFondo -> .)
    FALSE           reduce using rule 175 (putFondo -> .)
    PARFIN          reduce using rule 175 (putFondo -> .)

    putFondo                       shift and go to state 159

state 135

    (83) forCycle -> errorForCycle FOR PARINI . assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign
    (89) assign -> . ID saveVariable errorAssign assignOptions performAssign

    ID              shift and go to state 160

    assign                         shift and go to state 161

state 136

    (113) condition -> errorCondition IF PARINI . expresion PARFIN saveFalso { body } optionalElse rellenaFalso
    (118) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (123) sExp -> . exp errorOpSExp opSExp performRelational
    (132) exp -> . term performAddSub errorCyExp cyExp
    (137) term -> . fact performMulDiv cyTerm
    (142) fact -> . CTES saveConstantString
    (143) fact -> . cte
    (144) fact -> . funcCall
    (145) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (146) fact -> . ID saveVariable opAccess errorOpAccess
    (160) cte -> . CTED saveConstantInt
    (161) cte -> . CTEF saveConstantFloat
    (162) cte -> . TRUE saveConstantBool
    (163) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams

    CTES            shift and go to state 124
    PARINI          shift and go to state 121
    ID              shift and go to state 123
    CTED            shift and go to state 122
    CTEF            shift and go to state 129
    TRUE            shift and go to state 120
    FALSE           shift and go to state 126

    sExp                           shift and go to state 162
    expresion                      shift and go to state 163
    term                           shift and go to state 125
    funcCall                       shift and go to state 127
    cte                            shift and go to state 128
    exp                            shift and go to state 164
    fact                           shift and go to state 131

state 137

    (50) function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns . } clearVarsTable

    }               shift and go to state 165


state 138

    (62) opReturns -> errorOpReturns . RETURNS type saveReturnType { opVars saveQuadruple body return

    RETURNS         shift and go to state 166


state 139

    (63) opReturns -> { . opVars saveQuadruple body
    (6) opVars -> . vars
    (7) opVars -> . empty
    (10) vars -> . errorVars VARS declare
    (164) empty -> .
    (12) errorVars -> .

    ID              reduce using rule 164 (empty -> .)
    PRINT           reduce using rule 164 (empty -> .)
    READ            reduce using rule 164 (empty -> .)
    IF              reduce using rule 164 (empty -> .)
    FOR             reduce using rule 164 (empty -> .)
    WHILE           reduce using rule 164 (empty -> .)
    }               reduce using rule 164 (empty -> .)
    VARS            reduce using rule 12 (errorVars -> .)

    vars                           shift and go to state 8
    opVars                         shift and go to state 167
    errorVars                      shift and go to state 10
    empty                          shift and go to state 11

state 140

    (42) param -> saveType type errorParam ID . cyTypeParam cyParam
    (46) cyTypeParam -> . , saveTypeParam saveID ID cyTypeParam
    (47) cyTypeParam -> . empty
    (164) empty -> .

    ,               shift and go to state 50
    ;               reduce using rule 164 (empty -> .)
    PARFIN          reduce using rule 164 (empty -> .)

    empty                          shift and go to state 51
    cyTypeParam                    shift and go to state 168

state 141

    (104) struct -> structType ID saveID createDimension [ CTED saveDimensionSize ] optionalMatrix secondLap .

    ;               reduce using rule 104 (struct -> structType ID saveID createDimension [ CTED saveDimensionSize ] optionalMatrix secondLap .)


state 142

    (109) optionalMatrix -> createSecondDimension [ . CTED saveSecondDimensionSize ]

    CTED            shift and go to state 169


state 143

    (32) read -> READ PARINI ID saveVariable . performRead cyRead PARFIN
    (183) performRead -> .

    ,               reduce using rule 183 (performRead -> .)
    PARFIN          reduce using rule 183 (performRead -> .)

    performRead                    shift and go to state 170

state 144

    (162) cte -> TRUE saveConstantBool .

    MULT            reduce using rule 162 (cte -> TRUE saveConstantBool .)
    DIV             reduce using rule 162 (cte -> TRUE saveConstantBool .)
    RES             reduce using rule 162 (cte -> TRUE saveConstantBool .)
    PLUS            reduce using rule 162 (cte -> TRUE saveConstantBool .)
    MINUS           reduce using rule 162 (cte -> TRUE saveConstantBool .)
    AND             reduce using rule 162 (cte -> TRUE saveConstantBool .)
    OR              reduce using rule 162 (cte -> TRUE saveConstantBool .)
    PARFIN          reduce using rule 162 (cte -> TRUE saveConstantBool .)
    ,               reduce using rule 162 (cte -> TRUE saveConstantBool .)
    ]               reduce using rule 162 (cte -> TRUE saveConstantBool .)
    ;               reduce using rule 162 (cte -> TRUE saveConstantBool .)
    EQ              reduce using rule 162 (cte -> TRUE saveConstantBool .)
    DIF             reduce using rule 162 (cte -> TRUE saveConstantBool .)
    LTOEQ           reduce using rule 162 (cte -> TRUE saveConstantBool .)
    GTOEQ           reduce using rule 162 (cte -> TRUE saveConstantBool .)
    GT              reduce using rule 162 (cte -> TRUE saveConstantBool .)
    LT              reduce using rule 162 (cte -> TRUE saveConstantBool .)


state 145

    (145) fact -> PARINI putFondo . expresion PARFIN takeFondo
    (118) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (123) sExp -> . exp errorOpSExp opSExp performRelational
    (132) exp -> . term performAddSub errorCyExp cyExp
    (137) term -> . fact performMulDiv cyTerm
    (142) fact -> . CTES saveConstantString
    (143) fact -> . cte
    (144) fact -> . funcCall
    (145) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (146) fact -> . ID saveVariable opAccess errorOpAccess
    (160) cte -> . CTED saveConstantInt
    (161) cte -> . CTEF saveConstantFloat
    (162) cte -> . TRUE saveConstantBool
    (163) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams

    CTES            shift and go to state 124
    PARINI          shift and go to state 121
    ID              shift and go to state 123
    CTED            shift and go to state 122
    CTEF            shift and go to state 129
    TRUE            shift and go to state 120
    FALSE           shift and go to state 126

    sExp                           shift and go to state 162
    expresion                      shift and go to state 171
    term                           shift and go to state 125
    funcCall                       shift and go to state 127
    cte                            shift and go to state 128
    exp                            shift and go to state 164
    fact                           shift and go to state 131

state 146

    (160) cte -> CTED saveConstantInt .

    MULT            reduce using rule 160 (cte -> CTED saveConstantInt .)
    DIV             reduce using rule 160 (cte -> CTED saveConstantInt .)
    RES             reduce using rule 160 (cte -> CTED saveConstantInt .)
    PLUS            reduce using rule 160 (cte -> CTED saveConstantInt .)
    MINUS           reduce using rule 160 (cte -> CTED saveConstantInt .)
    AND             reduce using rule 160 (cte -> CTED saveConstantInt .)
    OR              reduce using rule 160 (cte -> CTED saveConstantInt .)
    PARFIN          reduce using rule 160 (cte -> CTED saveConstantInt .)
    ,               reduce using rule 160 (cte -> CTED saveConstantInt .)
    ]               reduce using rule 160 (cte -> CTED saveConstantInt .)
    ;               reduce using rule 160 (cte -> CTED saveConstantInt .)
    EQ              reduce using rule 160 (cte -> CTED saveConstantInt .)
    DIF             reduce using rule 160 (cte -> CTED saveConstantInt .)
    LTOEQ           reduce using rule 160 (cte -> CTED saveConstantInt .)
    GTOEQ           reduce using rule 160 (cte -> CTED saveConstantInt .)
    GT              reduce using rule 160 (cte -> CTED saveConstantInt .)
    LT              reduce using rule 160 (cte -> CTED saveConstantInt .)


state 147

    (146) fact -> ID saveVariable . opAccess errorOpAccess
    (148) opAccess -> . opStruct
    (149) opAccess -> . empty
    (151) opStruct -> . errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct
    (164) empty -> .
    (155) errorOpStruct -> .

    MULT            reduce using rule 164 (empty -> .)
    DIV             reduce using rule 164 (empty -> .)
    RES             reduce using rule 164 (empty -> .)
    PLUS            reduce using rule 164 (empty -> .)
    MINUS           reduce using rule 164 (empty -> .)
    ,               reduce using rule 164 (empty -> .)
    PARFIN          reduce using rule 164 (empty -> .)
    EQ              reduce using rule 164 (empty -> .)
    DIF             reduce using rule 164 (empty -> .)
    LTOEQ           reduce using rule 164 (empty -> .)
    GTOEQ           reduce using rule 164 (empty -> .)
    GT              reduce using rule 164 (empty -> .)
    LT              reduce using rule 164 (empty -> .)
    AND             reduce using rule 164 (empty -> .)
    OR              reduce using rule 164 (empty -> .)
    ]               reduce using rule 164 (empty -> .)
    ;               reduce using rule 164 (empty -> .)
    [               reduce using rule 155 (errorOpStruct -> .)

    errorOpStruct                  shift and go to state 172
    opStruct                       shift and go to state 173
    opAccess                       shift and go to state 174
    empty                          shift and go to state 175

state 148

    (142) fact -> CTES saveConstantString .

    MULT            reduce using rule 142 (fact -> CTES saveConstantString .)
    DIV             reduce using rule 142 (fact -> CTES saveConstantString .)
    RES             reduce using rule 142 (fact -> CTES saveConstantString .)
    PLUS            reduce using rule 142 (fact -> CTES saveConstantString .)
    MINUS           reduce using rule 142 (fact -> CTES saveConstantString .)
    EQ              reduce using rule 142 (fact -> CTES saveConstantString .)
    DIF             reduce using rule 142 (fact -> CTES saveConstantString .)
    LTOEQ           reduce using rule 142 (fact -> CTES saveConstantString .)
    GTOEQ           reduce using rule 142 (fact -> CTES saveConstantString .)
    GT              reduce using rule 142 (fact -> CTES saveConstantString .)
    LT              reduce using rule 142 (fact -> CTES saveConstantString .)
    AND             reduce using rule 142 (fact -> CTES saveConstantString .)
    OR              reduce using rule 142 (fact -> CTES saveConstantString .)
    ]               reduce using rule 142 (fact -> CTES saveConstantString .)
    PARFIN          reduce using rule 142 (fact -> CTES saveConstantString .)
    ,               reduce using rule 142 (fact -> CTES saveConstantString .)
    ;               reduce using rule 142 (fact -> CTES saveConstantString .)


state 149

    (132) exp -> term performAddSub . errorCyExp cyExp
    (136) errorCyExp -> .

    PLUS            reduce using rule 136 (errorCyExp -> .)
    MINUS           reduce using rule 136 (errorCyExp -> .)
    ,               reduce using rule 136 (errorCyExp -> .)
    PARFIN          reduce using rule 136 (errorCyExp -> .)
    EQ              reduce using rule 136 (errorCyExp -> .)
    DIF             reduce using rule 136 (errorCyExp -> .)
    LTOEQ           reduce using rule 136 (errorCyExp -> .)
    GTOEQ           reduce using rule 136 (errorCyExp -> .)
    GT              reduce using rule 136 (errorCyExp -> .)
    LT              reduce using rule 136 (errorCyExp -> .)
    AND             reduce using rule 136 (errorCyExp -> .)
    OR              reduce using rule 136 (errorCyExp -> .)
    ]               reduce using rule 136 (errorCyExp -> .)
    ;               reduce using rule 136 (errorCyExp -> .)

    errorCyExp                     shift and go to state 176

state 150

    (163) cte -> FALSE saveConstantBool .

    MULT            reduce using rule 163 (cte -> FALSE saveConstantBool .)
    DIV             reduce using rule 163 (cte -> FALSE saveConstantBool .)
    RES             reduce using rule 163 (cte -> FALSE saveConstantBool .)
    PLUS            reduce using rule 163 (cte -> FALSE saveConstantBool .)
    MINUS           reduce using rule 163 (cte -> FALSE saveConstantBool .)
    AND             reduce using rule 163 (cte -> FALSE saveConstantBool .)
    OR              reduce using rule 163 (cte -> FALSE saveConstantBool .)
    PARFIN          reduce using rule 163 (cte -> FALSE saveConstantBool .)
    ,               reduce using rule 163 (cte -> FALSE saveConstantBool .)
    ]               reduce using rule 163 (cte -> FALSE saveConstantBool .)
    ;               reduce using rule 163 (cte -> FALSE saveConstantBool .)
    EQ              reduce using rule 163 (cte -> FALSE saveConstantBool .)
    DIF             reduce using rule 163 (cte -> FALSE saveConstantBool .)
    LTOEQ           reduce using rule 163 (cte -> FALSE saveConstantBool .)
    GTOEQ           reduce using rule 163 (cte -> FALSE saveConstantBool .)
    GT              reduce using rule 163 (cte -> FALSE saveConstantBool .)
    LT              reduce using rule 163 (cte -> FALSE saveConstantBool .)


state 151

    (161) cte -> CTEF saveConstantFloat .

    MULT            reduce using rule 161 (cte -> CTEF saveConstantFloat .)
    DIV             reduce using rule 161 (cte -> CTEF saveConstantFloat .)
    RES             reduce using rule 161 (cte -> CTEF saveConstantFloat .)
    PLUS            reduce using rule 161 (cte -> CTEF saveConstantFloat .)
    MINUS           reduce using rule 161 (cte -> CTEF saveConstantFloat .)
    AND             reduce using rule 161 (cte -> CTEF saveConstantFloat .)
    OR              reduce using rule 161 (cte -> CTEF saveConstantFloat .)
    PARFIN          reduce using rule 161 (cte -> CTEF saveConstantFloat .)
    ,               reduce using rule 161 (cte -> CTEF saveConstantFloat .)
    ]               reduce using rule 161 (cte -> CTEF saveConstantFloat .)
    ;               reduce using rule 161 (cte -> CTEF saveConstantFloat .)
    EQ              reduce using rule 161 (cte -> CTEF saveConstantFloat .)
    DIF             reduce using rule 161 (cte -> CTEF saveConstantFloat .)
    LTOEQ           reduce using rule 161 (cte -> CTEF saveConstantFloat .)
    GTOEQ           reduce using rule 161 (cte -> CTEF saveConstantFloat .)
    GT              reduce using rule 161 (cte -> CTEF saveConstantFloat .)
    LT              reduce using rule 161 (cte -> CTEF saveConstantFloat .)


state 152

    (29) print -> PRINT PARINI exp performPrint . cyPrint PARFIN
    (30) cyPrint -> . , fix exp performPrint cyPrint
    (31) cyPrint -> . empty
    (164) empty -> .

    ,               shift and go to state 178
    PARFIN          reduce using rule 164 (empty -> .)

    cyPrint                        shift and go to state 177
    empty                          shift and go to state 179

state 153

    (137) term -> fact performMulDiv . cyTerm
    (138) cyTerm -> . MULT saveOperator errorFact term
    (139) cyTerm -> . DIV saveOperator term
    (140) cyTerm -> . RES saveOperator term
    (141) cyTerm -> . empty
    (164) empty -> .

    MULT            shift and go to state 184
    DIV             shift and go to state 183
    RES             shift and go to state 180
    PLUS            reduce using rule 164 (empty -> .)
    MINUS           reduce using rule 164 (empty -> .)
    ,               reduce using rule 164 (empty -> .)
    PARFIN          reduce using rule 164 (empty -> .)
    EQ              reduce using rule 164 (empty -> .)
    DIF             reduce using rule 164 (empty -> .)
    LTOEQ           reduce using rule 164 (empty -> .)
    GTOEQ           reduce using rule 164 (empty -> .)
    GT              reduce using rule 164 (empty -> .)
    LT              reduce using rule 164 (empty -> .)
    AND             reduce using rule 164 (empty -> .)
    OR              reduce using rule 164 (empty -> .)
    ]               reduce using rule 164 (empty -> .)
    ;               reduce using rule 164 (empty -> .)

    cyTerm                         shift and go to state 181
    empty                          shift and go to state 182

state 154

    (79) whileCycle -> errorWhileCycle WHILE saveReturn PARINI . expresion PARFIN saveFalso { body } repeatWhile
    (118) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (123) sExp -> . exp errorOpSExp opSExp performRelational
    (132) exp -> . term performAddSub errorCyExp cyExp
    (137) term -> . fact performMulDiv cyTerm
    (142) fact -> . CTES saveConstantString
    (143) fact -> . cte
    (144) fact -> . funcCall
    (145) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (146) fact -> . ID saveVariable opAccess errorOpAccess
    (160) cte -> . CTED saveConstantInt
    (161) cte -> . CTEF saveConstantFloat
    (162) cte -> . TRUE saveConstantBool
    (163) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams

    CTES            shift and go to state 124
    PARINI          shift and go to state 121
    ID              shift and go to state 123
    CTED            shift and go to state 122
    CTEF            shift and go to state 129
    TRUE            shift and go to state 120
    FALSE           shift and go to state 126

    sExp                           shift and go to state 162
    expresion                      shift and go to state 185
    term                           shift and go to state 125
    funcCall                       shift and go to state 127
    cte                            shift and go to state 128
    exp                            shift and go to state 164
    fact                           shift and go to state 131

state 155

    (89) assign -> ID saveVariable errorAssign assignOptions . performAssign
    (177) performAssign -> .

    ;               reduce using rule 177 (performAssign -> .)
    PARFIN          reduce using rule 177 (performAssign -> .)

    performAssign                  shift and go to state 186

state 156

    (38) init -> ASGN . saveOperator errorInit initWith
    (174) saveOperator -> .

    ID              reduce using rule 174 (saveOperator -> .)
    CTES            reduce using rule 174 (saveOperator -> .)
    PARINI          reduce using rule 174 (saveOperator -> .)
    CTED            reduce using rule 174 (saveOperator -> .)
    CTEF            reduce using rule 174 (saveOperator -> .)
    TRUE            reduce using rule 174 (saveOperator -> .)
    FALSE           reduce using rule 174 (saveOperator -> .)

    saveOperator                   shift and go to state 187

state 157

    (91) assignOptions -> init .

    ;               reduce using rule 91 (assignOptions -> init .)
    PARFIN          reduce using rule 91 (assignOptions -> init .)


state 158

    (92) assignOptions -> saveToDimensionStacks . [ expresion verifyIndex ] assignMatrix accessStruct init

    [               shift and go to state 188


state 159

    (96) funcCall -> ID checkFunction PARINI putFondo . opParamCall takeFondo PARFIN checkNumParams
    (99) opParamCall -> . expresion checkParamType cyParamCall
    (100) opParamCall -> . empty
    (118) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (164) empty -> .
    (123) sExp -> . exp errorOpSExp opSExp performRelational
    (132) exp -> . term performAddSub errorCyExp cyExp
    (137) term -> . fact performMulDiv cyTerm
    (142) fact -> . CTES saveConstantString
    (143) fact -> . cte
    (144) fact -> . funcCall
    (145) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (146) fact -> . ID saveVariable opAccess errorOpAccess
    (160) cte -> . CTED saveConstantInt
    (161) cte -> . CTEF saveConstantFloat
    (162) cte -> . TRUE saveConstantBool
    (163) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams

    PARFIN          reduce using rule 164 (empty -> .)
    CTES            shift and go to state 124
    PARINI          shift and go to state 121
    ID              shift and go to state 123
    CTED            shift and go to state 122
    CTEF            shift and go to state 129
    TRUE            shift and go to state 120
    FALSE           shift and go to state 126

    opParamCall                    shift and go to state 189
    sExp                           shift and go to state 162
    empty                          shift and go to state 190
    expresion                      shift and go to state 191
    term                           shift and go to state 125
    funcCall                       shift and go to state 127
    cte                            shift and go to state 128
    exp                            shift and go to state 164
    fact                           shift and go to state 131

state 160

    (89) assign -> ID . saveVariable errorAssign assignOptions performAssign
    (173) saveVariable -> .

    ASGN            reduce using rule 173 (saveVariable -> .)
    [               reduce using rule 173 (saveVariable -> .)

    saveVariable                   shift and go to state 108

state 161

    (83) forCycle -> errorForCycle FOR PARINI assign . ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign

    ;               shift and go to state 192


state 162

    (118) expresion -> sExp . performAndOr cyExpresion errorExpresion
    (181) performAndOr -> .

    AND             reduce using rule 181 (performAndOr -> .)
    OR              reduce using rule 181 (performAndOr -> .)
    PARFIN          reduce using rule 181 (performAndOr -> .)
    ,               reduce using rule 181 (performAndOr -> .)
    ]               reduce using rule 181 (performAndOr -> .)
    ;               reduce using rule 181 (performAndOr -> .)

    performAndOr                   shift and go to state 193

state 163

    (113) condition -> errorCondition IF PARINI expresion . PARFIN saveFalso { body } optionalElse rellenaFalso

    PARFIN          shift and go to state 194


state 164

    (123) sExp -> exp . errorOpSExp opSExp performRelational
    (131) errorOpSExp -> .

    EQ              reduce using rule 131 (errorOpSExp -> .)
    DIF             reduce using rule 131 (errorOpSExp -> .)
    LTOEQ           reduce using rule 131 (errorOpSExp -> .)
    GTOEQ           reduce using rule 131 (errorOpSExp -> .)
    GT              reduce using rule 131 (errorOpSExp -> .)
    LT              reduce using rule 131 (errorOpSExp -> .)
    AND             reduce using rule 131 (errorOpSExp -> .)
    OR              reduce using rule 131 (errorOpSExp -> .)
    PARFIN          reduce using rule 131 (errorOpSExp -> .)
    ,               reduce using rule 131 (errorOpSExp -> .)
    ]               reduce using rule 131 (errorOpSExp -> .)
    ;               reduce using rule 131 (errorOpSExp -> .)

    errorOpSExp                    shift and go to state 195

state 165

    (50) function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } . clearVarsTable
    (53) clearVarsTable -> .

    FUNC            reduce using rule 53 (clearVarsTable -> .)
    MAIN            reduce using rule 53 (clearVarsTable -> .)

    clearVarsTable                 shift and go to state 196

state 166

    (62) opReturns -> errorOpReturns RETURNS . type saveReturnType { opVars saveQuadruple body return
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    BOOL            shift and go to state 30
    INT             reduce using rule 17 (errorType -> .)

    errorType                      shift and go to state 29
    type                           shift and go to state 197

state 167

    (63) opReturns -> { opVars . saveQuadruple body
    (64) saveQuadruple -> .

    ID              reduce using rule 64 (saveQuadruple -> .)
    PRINT           reduce using rule 64 (saveQuadruple -> .)
    READ            reduce using rule 64 (saveQuadruple -> .)
    IF              reduce using rule 64 (saveQuadruple -> .)
    FOR             reduce using rule 64 (saveQuadruple -> .)
    WHILE           reduce using rule 64 (saveQuadruple -> .)
    }               reduce using rule 64 (saveQuadruple -> .)

    saveQuadruple                  shift and go to state 198

state 168

    (42) param -> saveType type errorParam ID cyTypeParam . cyParam
    (44) cyParam -> . errorCyParam saveTypeParam saveID ; param
    (45) cyParam -> . empty saveTypeParam saveID
    (49) errorCyParam -> .
    (164) empty -> .

    ;               reduce using rule 49 (errorCyParam -> .)
    PARFIN          reduce using rule 164 (empty -> .)

    empty                          shift and go to state 199
    cyParam                        shift and go to state 201
    errorCyParam                   shift and go to state 200

state 169

    (109) optionalMatrix -> createSecondDimension [ CTED . saveSecondDimensionSize ]
    (111) saveSecondDimensionSize -> .

    ]               reduce using rule 111 (saveSecondDimensionSize -> .)

    saveSecondDimensionSize        shift and go to state 202

state 170

    (32) read -> READ PARINI ID saveVariable performRead . cyRead PARFIN
    (33) cyRead -> . , fix ID saveVariable performRead cyRead
    (34) cyRead -> . empty
    (164) empty -> .

    ,               shift and go to state 203
    PARFIN          reduce using rule 164 (empty -> .)

    cyRead                         shift and go to state 204
    empty                          shift and go to state 205

state 171

    (145) fact -> PARINI putFondo expresion . PARFIN takeFondo

    PARFIN          shift and go to state 206


state 172

    (151) opStruct -> errorOpStruct . saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct
    (154) saveToDimensionStacks -> .

    [               reduce using rule 154 (saveToDimensionStacks -> .)

    saveToDimensionStacks          shift and go to state 207

state 173

    (148) opAccess -> opStruct .

    MULT            reduce using rule 148 (opAccess -> opStruct .)
    DIV             reduce using rule 148 (opAccess -> opStruct .)
    RES             reduce using rule 148 (opAccess -> opStruct .)
    PLUS            reduce using rule 148 (opAccess -> opStruct .)
    MINUS           reduce using rule 148 (opAccess -> opStruct .)
    ,               reduce using rule 148 (opAccess -> opStruct .)
    PARFIN          reduce using rule 148 (opAccess -> opStruct .)
    EQ              reduce using rule 148 (opAccess -> opStruct .)
    DIF             reduce using rule 148 (opAccess -> opStruct .)
    LTOEQ           reduce using rule 148 (opAccess -> opStruct .)
    GTOEQ           reduce using rule 148 (opAccess -> opStruct .)
    GT              reduce using rule 148 (opAccess -> opStruct .)
    LT              reduce using rule 148 (opAccess -> opStruct .)
    AND             reduce using rule 148 (opAccess -> opStruct .)
    OR              reduce using rule 148 (opAccess -> opStruct .)
    ]               reduce using rule 148 (opAccess -> opStruct .)
    ;               reduce using rule 148 (opAccess -> opStruct .)


state 174

    (146) fact -> ID saveVariable opAccess . errorOpAccess
    (150) errorOpAccess -> .

    MULT            reduce using rule 150 (errorOpAccess -> .)
    DIV             reduce using rule 150 (errorOpAccess -> .)
    RES             reduce using rule 150 (errorOpAccess -> .)
    PLUS            reduce using rule 150 (errorOpAccess -> .)
    MINUS           reduce using rule 150 (errorOpAccess -> .)
    ,               reduce using rule 150 (errorOpAccess -> .)
    PARFIN          reduce using rule 150 (errorOpAccess -> .)
    EQ              reduce using rule 150 (errorOpAccess -> .)
    DIF             reduce using rule 150 (errorOpAccess -> .)
    LTOEQ           reduce using rule 150 (errorOpAccess -> .)
    GTOEQ           reduce using rule 150 (errorOpAccess -> .)
    GT              reduce using rule 150 (errorOpAccess -> .)
    LT              reduce using rule 150 (errorOpAccess -> .)
    AND             reduce using rule 150 (errorOpAccess -> .)
    OR              reduce using rule 150 (errorOpAccess -> .)
    ]               reduce using rule 150 (errorOpAccess -> .)
    ;               reduce using rule 150 (errorOpAccess -> .)

    errorOpAccess                  shift and go to state 208

state 175

    (149) opAccess -> empty .

    MULT            reduce using rule 149 (opAccess -> empty .)
    DIV             reduce using rule 149 (opAccess -> empty .)
    RES             reduce using rule 149 (opAccess -> empty .)
    PLUS            reduce using rule 149 (opAccess -> empty .)
    MINUS           reduce using rule 149 (opAccess -> empty .)
    ,               reduce using rule 149 (opAccess -> empty .)
    PARFIN          reduce using rule 149 (opAccess -> empty .)
    EQ              reduce using rule 149 (opAccess -> empty .)
    DIF             reduce using rule 149 (opAccess -> empty .)
    LTOEQ           reduce using rule 149 (opAccess -> empty .)
    GTOEQ           reduce using rule 149 (opAccess -> empty .)
    GT              reduce using rule 149 (opAccess -> empty .)
    LT              reduce using rule 149 (opAccess -> empty .)
    AND             reduce using rule 149 (opAccess -> empty .)
    OR              reduce using rule 149 (opAccess -> empty .)
    ]               reduce using rule 149 (opAccess -> empty .)
    ;               reduce using rule 149 (opAccess -> empty .)


state 176

    (132) exp -> term performAddSub errorCyExp . cyExp
    (133) cyExp -> . PLUS saveOperator exp
    (134) cyExp -> . MINUS saveOperator exp
    (135) cyExp -> . empty
    (164) empty -> .

    PLUS            shift and go to state 210
    MINUS           shift and go to state 211
    ,               reduce using rule 164 (empty -> .)
    PARFIN          reduce using rule 164 (empty -> .)
    EQ              reduce using rule 164 (empty -> .)
    DIF             reduce using rule 164 (empty -> .)
    LTOEQ           reduce using rule 164 (empty -> .)
    GTOEQ           reduce using rule 164 (empty -> .)
    GT              reduce using rule 164 (empty -> .)
    LT              reduce using rule 164 (empty -> .)
    AND             reduce using rule 164 (empty -> .)
    OR              reduce using rule 164 (empty -> .)
    ]               reduce using rule 164 (empty -> .)
    ;               reduce using rule 164 (empty -> .)

    cyExp                          shift and go to state 209
    empty                          shift and go to state 212

state 177

    (29) print -> PRINT PARINI exp performPrint cyPrint . PARFIN

    PARFIN          shift and go to state 213


state 178

    (30) cyPrint -> , . fix exp performPrint cyPrint
    (35) fix -> .

    CTES            reduce using rule 35 (fix -> .)
    PARINI          reduce using rule 35 (fix -> .)
    ID              reduce using rule 35 (fix -> .)
    CTED            reduce using rule 35 (fix -> .)
    CTEF            reduce using rule 35 (fix -> .)
    TRUE            reduce using rule 35 (fix -> .)
    FALSE           reduce using rule 35 (fix -> .)

    fix                            shift and go to state 214

state 179

    (31) cyPrint -> empty .

    PARFIN          reduce using rule 31 (cyPrint -> empty .)


state 180

    (140) cyTerm -> RES . saveOperator term
    (174) saveOperator -> .

    CTES            reduce using rule 174 (saveOperator -> .)
    PARINI          reduce using rule 174 (saveOperator -> .)
    ID              reduce using rule 174 (saveOperator -> .)
    CTED            reduce using rule 174 (saveOperator -> .)
    CTEF            reduce using rule 174 (saveOperator -> .)
    TRUE            reduce using rule 174 (saveOperator -> .)
    FALSE           reduce using rule 174 (saveOperator -> .)

    saveOperator                   shift and go to state 215

state 181

    (137) term -> fact performMulDiv cyTerm .

    PLUS            reduce using rule 137 (term -> fact performMulDiv cyTerm .)
    MINUS           reduce using rule 137 (term -> fact performMulDiv cyTerm .)
    AND             reduce using rule 137 (term -> fact performMulDiv cyTerm .)
    OR              reduce using rule 137 (term -> fact performMulDiv cyTerm .)
    PARFIN          reduce using rule 137 (term -> fact performMulDiv cyTerm .)
    ,               reduce using rule 137 (term -> fact performMulDiv cyTerm .)
    ]               reduce using rule 137 (term -> fact performMulDiv cyTerm .)
    ;               reduce using rule 137 (term -> fact performMulDiv cyTerm .)
    EQ              reduce using rule 137 (term -> fact performMulDiv cyTerm .)
    DIF             reduce using rule 137 (term -> fact performMulDiv cyTerm .)
    LTOEQ           reduce using rule 137 (term -> fact performMulDiv cyTerm .)
    GTOEQ           reduce using rule 137 (term -> fact performMulDiv cyTerm .)
    GT              reduce using rule 137 (term -> fact performMulDiv cyTerm .)
    LT              reduce using rule 137 (term -> fact performMulDiv cyTerm .)


state 182

    (141) cyTerm -> empty .

    PLUS            reduce using rule 141 (cyTerm -> empty .)
    MINUS           reduce using rule 141 (cyTerm -> empty .)
    ,               reduce using rule 141 (cyTerm -> empty .)
    PARFIN          reduce using rule 141 (cyTerm -> empty .)
    EQ              reduce using rule 141 (cyTerm -> empty .)
    DIF             reduce using rule 141 (cyTerm -> empty .)
    LTOEQ           reduce using rule 141 (cyTerm -> empty .)
    GTOEQ           reduce using rule 141 (cyTerm -> empty .)
    GT              reduce using rule 141 (cyTerm -> empty .)
    LT              reduce using rule 141 (cyTerm -> empty .)
    AND             reduce using rule 141 (cyTerm -> empty .)
    OR              reduce using rule 141 (cyTerm -> empty .)
    ]               reduce using rule 141 (cyTerm -> empty .)
    ;               reduce using rule 141 (cyTerm -> empty .)


state 183

    (139) cyTerm -> DIV . saveOperator term
    (174) saveOperator -> .

    CTES            reduce using rule 174 (saveOperator -> .)
    PARINI          reduce using rule 174 (saveOperator -> .)
    ID              reduce using rule 174 (saveOperator -> .)
    CTED            reduce using rule 174 (saveOperator -> .)
    CTEF            reduce using rule 174 (saveOperator -> .)
    TRUE            reduce using rule 174 (saveOperator -> .)
    FALSE           reduce using rule 174 (saveOperator -> .)

    saveOperator                   shift and go to state 216

state 184

    (138) cyTerm -> MULT . saveOperator errorFact term
    (174) saveOperator -> .

    CTES            reduce using rule 174 (saveOperator -> .)
    PARINI          reduce using rule 174 (saveOperator -> .)
    ID              reduce using rule 174 (saveOperator -> .)
    CTED            reduce using rule 174 (saveOperator -> .)
    CTEF            reduce using rule 174 (saveOperator -> .)
    TRUE            reduce using rule 174 (saveOperator -> .)
    FALSE           reduce using rule 174 (saveOperator -> .)

    saveOperator                   shift and go to state 217

state 185

    (79) whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion . PARFIN saveFalso { body } repeatWhile

    PARFIN          shift and go to state 218


state 186

    (89) assign -> ID saveVariable errorAssign assignOptions performAssign .

    PARFIN          reduce using rule 89 (assign -> ID saveVariable errorAssign assignOptions performAssign .)
    ;               reduce using rule 89 (assign -> ID saveVariable errorAssign assignOptions performAssign .)


state 187

    (38) init -> ASGN saveOperator . errorInit initWith
    (39) errorInit -> .

    ID              reduce using rule 39 (errorInit -> .)
    CTES            reduce using rule 39 (errorInit -> .)
    PARINI          reduce using rule 39 (errorInit -> .)
    CTED            reduce using rule 39 (errorInit -> .)
    CTEF            reduce using rule 39 (errorInit -> .)
    TRUE            reduce using rule 39 (errorInit -> .)
    FALSE           reduce using rule 39 (errorInit -> .)

    errorInit                      shift and go to state 219

state 188

    (92) assignOptions -> saveToDimensionStacks [ . expresion verifyIndex ] assignMatrix accessStruct init
    (118) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (123) sExp -> . exp errorOpSExp opSExp performRelational
    (132) exp -> . term performAddSub errorCyExp cyExp
    (137) term -> . fact performMulDiv cyTerm
    (142) fact -> . CTES saveConstantString
    (143) fact -> . cte
    (144) fact -> . funcCall
    (145) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (146) fact -> . ID saveVariable opAccess errorOpAccess
    (160) cte -> . CTED saveConstantInt
    (161) cte -> . CTEF saveConstantFloat
    (162) cte -> . TRUE saveConstantBool
    (163) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams

    CTES            shift and go to state 124
    PARINI          shift and go to state 121
    ID              shift and go to state 123
    CTED            shift and go to state 122
    CTEF            shift and go to state 129
    TRUE            shift and go to state 120
    FALSE           shift and go to state 126

    sExp                           shift and go to state 162
    expresion                      shift and go to state 220
    term                           shift and go to state 125
    funcCall                       shift and go to state 127
    cte                            shift and go to state 128
    exp                            shift and go to state 164
    fact                           shift and go to state 131

state 189

    (96) funcCall -> ID checkFunction PARINI putFondo opParamCall . takeFondo PARFIN checkNumParams
    (176) takeFondo -> .

    PARFIN          reduce using rule 176 (takeFondo -> .)

    takeFondo                      shift and go to state 221

state 190

    (100) opParamCall -> empty .

    PARFIN          reduce using rule 100 (opParamCall -> empty .)


state 191

    (99) opParamCall -> expresion . checkParamType cyParamCall
    (103) checkParamType -> .

    ,               reduce using rule 103 (checkParamType -> .)
    PARFIN          reduce using rule 103 (checkParamType -> .)

    checkParamType                 shift and go to state 222

state 192

    (83) forCycle -> errorForCycle FOR PARINI assign ; . saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign
    (81) saveReturn -> .

    CTES            reduce using rule 81 (saveReturn -> .)
    PARINI          reduce using rule 81 (saveReturn -> .)
    ID              reduce using rule 81 (saveReturn -> .)
    CTED            reduce using rule 81 (saveReturn -> .)
    CTEF            reduce using rule 81 (saveReturn -> .)
    TRUE            reduce using rule 81 (saveReturn -> .)
    FALSE           reduce using rule 81 (saveReturn -> .)

    saveReturn                     shift and go to state 223

state 193

    (118) expresion -> sExp performAndOr . cyExpresion errorExpresion
    (120) cyExpresion -> . AND saveOperator expresion
    (121) cyExpresion -> . OR saveOperator expresion
    (122) cyExpresion -> . empty
    (164) empty -> .

    AND             shift and go to state 224
    OR              shift and go to state 225
    PARFIN          reduce using rule 164 (empty -> .)
    ,               reduce using rule 164 (empty -> .)
    ]               reduce using rule 164 (empty -> .)
    ;               reduce using rule 164 (empty -> .)

    cyExpresion                    shift and go to state 226
    empty                          shift and go to state 227

state 194

    (113) condition -> errorCondition IF PARINI expresion PARFIN . saveFalso { body } optionalElse rellenaFalso
    (167) saveFalso -> .

    {               reduce using rule 167 (saveFalso -> .)

    saveFalso                      shift and go to state 228

state 195

    (123) sExp -> exp errorOpSExp . opSExp performRelational
    (124) opSExp -> . EQ saveOperator exp
    (125) opSExp -> . DIF saveOperator exp
    (126) opSExp -> . LTOEQ saveOperator exp
    (127) opSExp -> . GTOEQ saveOperator exp
    (128) opSExp -> . GT saveOperator exp
    (129) opSExp -> . LT saveOperator exp
    (130) opSExp -> . empty
    (164) empty -> .

    EQ              shift and go to state 234
    DIF             shift and go to state 231
    LTOEQ           shift and go to state 230
    GTOEQ           shift and go to state 233
    GT              shift and go to state 229
    LT              shift and go to state 232
    AND             reduce using rule 164 (empty -> .)
    OR              reduce using rule 164 (empty -> .)
    PARFIN          reduce using rule 164 (empty -> .)
    ,               reduce using rule 164 (empty -> .)
    ]               reduce using rule 164 (empty -> .)
    ;               reduce using rule 164 (empty -> .)

    empty                          shift and go to state 235
    opSExp                         shift and go to state 236

state 196

    (50) function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable .

    FUNC            reduce using rule 50 (function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable .)
    MAIN            reduce using rule 50 (function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable .)


state 197

    (62) opReturns -> errorOpReturns RETURNS type . saveReturnType { opVars saveQuadruple body return
    (65) saveReturnType -> .

    {               reduce using rule 65 (saveReturnType -> .)

    saveReturnType                 shift and go to state 237

state 198

    (63) opReturns -> { opVars saveQuadruple . body
    (73) body -> . errorBody cyInstruction
    (74) body -> . empty
    (75) errorBody -> .
    (164) empty -> .

    ID              reduce using rule 75 (errorBody -> .)
    PRINT           reduce using rule 75 (errorBody -> .)
    READ            reduce using rule 75 (errorBody -> .)
    IF              reduce using rule 75 (errorBody -> .)
    FOR             reduce using rule 75 (errorBody -> .)
    WHILE           reduce using rule 75 (errorBody -> .)
    }               reduce using rule 164 (empty -> .)

    body                           shift and go to state 238
    errorBody                      shift and go to state 73
    empty                          shift and go to state 74

state 199

    (45) cyParam -> empty . saveTypeParam saveID
    (48) saveTypeParam -> .

    PARFIN          reduce using rule 48 (saveTypeParam -> .)

    saveTypeParam                  shift and go to state 239

state 200

    (44) cyParam -> errorCyParam . saveTypeParam saveID ; param
    (48) saveTypeParam -> .

    ;               reduce using rule 48 (saveTypeParam -> .)

    saveTypeParam                  shift and go to state 240

state 201

    (42) param -> saveType type errorParam ID cyTypeParam cyParam .

    PARFIN          reduce using rule 42 (param -> saveType type errorParam ID cyTypeParam cyParam .)


state 202

    (109) optionalMatrix -> createSecondDimension [ CTED saveSecondDimensionSize . ]

    ]               shift and go to state 241


state 203

    (33) cyRead -> , . fix ID saveVariable performRead cyRead
    (35) fix -> .

    ID              reduce using rule 35 (fix -> .)

    fix                            shift and go to state 242

state 204

    (32) read -> READ PARINI ID saveVariable performRead cyRead . PARFIN

    PARFIN          shift and go to state 243


state 205

    (34) cyRead -> empty .

    PARFIN          reduce using rule 34 (cyRead -> empty .)


state 206

    (145) fact -> PARINI putFondo expresion PARFIN . takeFondo
    (176) takeFondo -> .

    MULT            reduce using rule 176 (takeFondo -> .)
    DIV             reduce using rule 176 (takeFondo -> .)
    RES             reduce using rule 176 (takeFondo -> .)
    PLUS            reduce using rule 176 (takeFondo -> .)
    MINUS           reduce using rule 176 (takeFondo -> .)
    ,               reduce using rule 176 (takeFondo -> .)
    PARFIN          reduce using rule 176 (takeFondo -> .)
    EQ              reduce using rule 176 (takeFondo -> .)
    DIF             reduce using rule 176 (takeFondo -> .)
    LTOEQ           reduce using rule 176 (takeFondo -> .)
    GTOEQ           reduce using rule 176 (takeFondo -> .)
    GT              reduce using rule 176 (takeFondo -> .)
    LT              reduce using rule 176 (takeFondo -> .)
    AND             reduce using rule 176 (takeFondo -> .)
    OR              reduce using rule 176 (takeFondo -> .)
    ]               reduce using rule 176 (takeFondo -> .)
    ;               reduce using rule 176 (takeFondo -> .)

    takeFondo                      shift and go to state 244

state 207

    (151) opStruct -> errorOpStruct saveToDimensionStacks . [ expresion verifyIndex ] opMatrix accessStruct

    [               shift and go to state 245


state 208

    (146) fact -> ID saveVariable opAccess errorOpAccess .

    MULT            reduce using rule 146 (fact -> ID saveVariable opAccess errorOpAccess .)
    DIV             reduce using rule 146 (fact -> ID saveVariable opAccess errorOpAccess .)
    RES             reduce using rule 146 (fact -> ID saveVariable opAccess errorOpAccess .)
    PLUS            reduce using rule 146 (fact -> ID saveVariable opAccess errorOpAccess .)
    MINUS           reduce using rule 146 (fact -> ID saveVariable opAccess errorOpAccess .)
    EQ              reduce using rule 146 (fact -> ID saveVariable opAccess errorOpAccess .)
    DIF             reduce using rule 146 (fact -> ID saveVariable opAccess errorOpAccess .)
    LTOEQ           reduce using rule 146 (fact -> ID saveVariable opAccess errorOpAccess .)
    GTOEQ           reduce using rule 146 (fact -> ID saveVariable opAccess errorOpAccess .)
    GT              reduce using rule 146 (fact -> ID saveVariable opAccess errorOpAccess .)
    LT              reduce using rule 146 (fact -> ID saveVariable opAccess errorOpAccess .)
    AND             reduce using rule 146 (fact -> ID saveVariable opAccess errorOpAccess .)
    OR              reduce using rule 146 (fact -> ID saveVariable opAccess errorOpAccess .)
    ]               reduce using rule 146 (fact -> ID saveVariable opAccess errorOpAccess .)
    PARFIN          reduce using rule 146 (fact -> ID saveVariable opAccess errorOpAccess .)
    ,               reduce using rule 146 (fact -> ID saveVariable opAccess errorOpAccess .)
    ;               reduce using rule 146 (fact -> ID saveVariable opAccess errorOpAccess .)


state 209

    (132) exp -> term performAddSub errorCyExp cyExp .

    EQ              reduce using rule 132 (exp -> term performAddSub errorCyExp cyExp .)
    DIF             reduce using rule 132 (exp -> term performAddSub errorCyExp cyExp .)
    LTOEQ           reduce using rule 132 (exp -> term performAddSub errorCyExp cyExp .)
    GTOEQ           reduce using rule 132 (exp -> term performAddSub errorCyExp cyExp .)
    GT              reduce using rule 132 (exp -> term performAddSub errorCyExp cyExp .)
    LT              reduce using rule 132 (exp -> term performAddSub errorCyExp cyExp .)
    AND             reduce using rule 132 (exp -> term performAddSub errorCyExp cyExp .)
    OR              reduce using rule 132 (exp -> term performAddSub errorCyExp cyExp .)
    ;               reduce using rule 132 (exp -> term performAddSub errorCyExp cyExp .)
    PARFIN          reduce using rule 132 (exp -> term performAddSub errorCyExp cyExp .)
    ,               reduce using rule 132 (exp -> term performAddSub errorCyExp cyExp .)
    ]               reduce using rule 132 (exp -> term performAddSub errorCyExp cyExp .)


state 210

    (133) cyExp -> PLUS . saveOperator exp
    (174) saveOperator -> .

    CTES            reduce using rule 174 (saveOperator -> .)
    PARINI          reduce using rule 174 (saveOperator -> .)
    ID              reduce using rule 174 (saveOperator -> .)
    CTED            reduce using rule 174 (saveOperator -> .)
    CTEF            reduce using rule 174 (saveOperator -> .)
    TRUE            reduce using rule 174 (saveOperator -> .)
    FALSE           reduce using rule 174 (saveOperator -> .)

    saveOperator                   shift and go to state 246

state 211

    (134) cyExp -> MINUS . saveOperator exp
    (174) saveOperator -> .

    CTES            reduce using rule 174 (saveOperator -> .)
    PARINI          reduce using rule 174 (saveOperator -> .)
    ID              reduce using rule 174 (saveOperator -> .)
    CTED            reduce using rule 174 (saveOperator -> .)
    CTEF            reduce using rule 174 (saveOperator -> .)
    TRUE            reduce using rule 174 (saveOperator -> .)
    FALSE           reduce using rule 174 (saveOperator -> .)

    saveOperator                   shift and go to state 247

state 212

    (135) cyExp -> empty .

    ,               reduce using rule 135 (cyExp -> empty .)
    PARFIN          reduce using rule 135 (cyExp -> empty .)
    EQ              reduce using rule 135 (cyExp -> empty .)
    DIF             reduce using rule 135 (cyExp -> empty .)
    LTOEQ           reduce using rule 135 (cyExp -> empty .)
    GTOEQ           reduce using rule 135 (cyExp -> empty .)
    GT              reduce using rule 135 (cyExp -> empty .)
    LT              reduce using rule 135 (cyExp -> empty .)
    AND             reduce using rule 135 (cyExp -> empty .)
    OR              reduce using rule 135 (cyExp -> empty .)
    ]               reduce using rule 135 (cyExp -> empty .)
    ;               reduce using rule 135 (cyExp -> empty .)


state 213

    (29) print -> PRINT PARINI exp performPrint cyPrint PARFIN .

    ;               reduce using rule 29 (print -> PRINT PARINI exp performPrint cyPrint PARFIN .)


state 214

    (30) cyPrint -> , fix . exp performPrint cyPrint
    (132) exp -> . term performAddSub errorCyExp cyExp
    (137) term -> . fact performMulDiv cyTerm
    (142) fact -> . CTES saveConstantString
    (143) fact -> . cte
    (144) fact -> . funcCall
    (145) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (146) fact -> . ID saveVariable opAccess errorOpAccess
    (160) cte -> . CTED saveConstantInt
    (161) cte -> . CTEF saveConstantFloat
    (162) cte -> . TRUE saveConstantBool
    (163) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams

    CTES            shift and go to state 124
    PARINI          shift and go to state 121
    ID              shift and go to state 123
    CTED            shift and go to state 122
    CTEF            shift and go to state 129
    TRUE            shift and go to state 120
    FALSE           shift and go to state 126

    term                           shift and go to state 125
    funcCall                       shift and go to state 127
    cte                            shift and go to state 128
    exp                            shift and go to state 248
    fact                           shift and go to state 131

state 215

    (140) cyTerm -> RES saveOperator . term
    (137) term -> . fact performMulDiv cyTerm
    (142) fact -> . CTES saveConstantString
    (143) fact -> . cte
    (144) fact -> . funcCall
    (145) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (146) fact -> . ID saveVariable opAccess errorOpAccess
    (160) cte -> . CTED saveConstantInt
    (161) cte -> . CTEF saveConstantFloat
    (162) cte -> . TRUE saveConstantBool
    (163) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams

    CTES            shift and go to state 124
    PARINI          shift and go to state 121
    ID              shift and go to state 123
    CTED            shift and go to state 122
    CTEF            shift and go to state 129
    TRUE            shift and go to state 120
    FALSE           shift and go to state 126

    term                           shift and go to state 249
    funcCall                       shift and go to state 127
    cte                            shift and go to state 128
    fact                           shift and go to state 131

state 216

    (139) cyTerm -> DIV saveOperator . term
    (137) term -> . fact performMulDiv cyTerm
    (142) fact -> . CTES saveConstantString
    (143) fact -> . cte
    (144) fact -> . funcCall
    (145) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (146) fact -> . ID saveVariable opAccess errorOpAccess
    (160) cte -> . CTED saveConstantInt
    (161) cte -> . CTEF saveConstantFloat
    (162) cte -> . TRUE saveConstantBool
    (163) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams

    CTES            shift and go to state 124
    PARINI          shift and go to state 121
    ID              shift and go to state 123
    CTED            shift and go to state 122
    CTEF            shift and go to state 129
    TRUE            shift and go to state 120
    FALSE           shift and go to state 126

    term                           shift and go to state 250
    funcCall                       shift and go to state 127
    cte                            shift and go to state 128
    fact                           shift and go to state 131

state 217

    (138) cyTerm -> MULT saveOperator . errorFact term
    (147) errorFact -> .

    CTES            reduce using rule 147 (errorFact -> .)
    PARINI          reduce using rule 147 (errorFact -> .)
    ID              reduce using rule 147 (errorFact -> .)
    CTED            reduce using rule 147 (errorFact -> .)
    CTEF            reduce using rule 147 (errorFact -> .)
    TRUE            reduce using rule 147 (errorFact -> .)
    FALSE           reduce using rule 147 (errorFact -> .)

    errorFact                      shift and go to state 251

state 218

    (79) whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN . saveFalso { body } repeatWhile
    (167) saveFalso -> .

    {               reduce using rule 167 (saveFalso -> .)

    saveFalso                      shift and go to state 252

state 219

    (38) init -> ASGN saveOperator errorInit . initWith
    (40) initWith -> . expresion
    (41) initWith -> . funcCall
    (118) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (96) funcCall -> . ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams
    (123) sExp -> . exp errorOpSExp opSExp performRelational
    (132) exp -> . term performAddSub errorCyExp cyExp
    (137) term -> . fact performMulDiv cyTerm
    (142) fact -> . CTES saveConstantString
    (143) fact -> . cte
    (144) fact -> . funcCall
    (145) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (146) fact -> . ID saveVariable opAccess errorOpAccess
    (160) cte -> . CTED saveConstantInt
    (161) cte -> . CTEF saveConstantFloat
    (162) cte -> . TRUE saveConstantBool
    (163) cte -> . FALSE saveConstantBool

    ID              shift and go to state 254
    CTES            shift and go to state 124
    PARINI          shift and go to state 121
    CTED            shift and go to state 122
    CTEF            shift and go to state 129
    TRUE            shift and go to state 120
    FALSE           shift and go to state 126

    initWith                       shift and go to state 253
    sExp                           shift and go to state 162
    expresion                      shift and go to state 255
    term                           shift and go to state 125
    funcCall                       shift and go to state 256
    cte                            shift and go to state 128
    exp                            shift and go to state 164
    fact                           shift and go to state 131

state 220

    (92) assignOptions -> saveToDimensionStacks [ expresion . verifyIndex ] assignMatrix accessStruct init
    (153) verifyIndex -> .

    ]               reduce using rule 153 (verifyIndex -> .)

    verifyIndex                    shift and go to state 257

state 221

    (96) funcCall -> ID checkFunction PARINI putFondo opParamCall takeFondo . PARFIN checkNumParams

    PARFIN          shift and go to state 258


state 222

    (99) opParamCall -> expresion checkParamType . cyParamCall
    (101) cyParamCall -> . , expresion checkParamType cyParamCall
    (102) cyParamCall -> . empty
    (164) empty -> .

    ,               shift and go to state 261
    PARFIN          reduce using rule 164 (empty -> .)

    cyParamCall                    shift and go to state 259
    empty                          shift and go to state 260

state 223

    (83) forCycle -> errorForCycle FOR PARINI assign ; saveReturn . expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign
    (118) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (123) sExp -> . exp errorOpSExp opSExp performRelational
    (132) exp -> . term performAddSub errorCyExp cyExp
    (137) term -> . fact performMulDiv cyTerm
    (142) fact -> . CTES saveConstantString
    (143) fact -> . cte
    (144) fact -> . funcCall
    (145) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (146) fact -> . ID saveVariable opAccess errorOpAccess
    (160) cte -> . CTED saveConstantInt
    (161) cte -> . CTEF saveConstantFloat
    (162) cte -> . TRUE saveConstantBool
    (163) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams

    CTES            shift and go to state 124
    PARINI          shift and go to state 121
    ID              shift and go to state 123
    CTED            shift and go to state 122
    CTEF            shift and go to state 129
    TRUE            shift and go to state 120
    FALSE           shift and go to state 126

    sExp                           shift and go to state 162
    expresion                      shift and go to state 262
    term                           shift and go to state 125
    funcCall                       shift and go to state 127
    cte                            shift and go to state 128
    fact                           shift and go to state 131
    exp                            shift and go to state 164

state 224

    (120) cyExpresion -> AND . saveOperator expresion
    (174) saveOperator -> .

    CTES            reduce using rule 174 (saveOperator -> .)
    PARINI          reduce using rule 174 (saveOperator -> .)
    ID              reduce using rule 174 (saveOperator -> .)
    CTED            reduce using rule 174 (saveOperator -> .)
    CTEF            reduce using rule 174 (saveOperator -> .)
    TRUE            reduce using rule 174 (saveOperator -> .)
    FALSE           reduce using rule 174 (saveOperator -> .)

    saveOperator                   shift and go to state 263

state 225

    (121) cyExpresion -> OR . saveOperator expresion
    (174) saveOperator -> .

    CTES            reduce using rule 174 (saveOperator -> .)
    PARINI          reduce using rule 174 (saveOperator -> .)
    ID              reduce using rule 174 (saveOperator -> .)
    CTED            reduce using rule 174 (saveOperator -> .)
    CTEF            reduce using rule 174 (saveOperator -> .)
    TRUE            reduce using rule 174 (saveOperator -> .)
    FALSE           reduce using rule 174 (saveOperator -> .)

    saveOperator                   shift and go to state 264

state 226

    (118) expresion -> sExp performAndOr cyExpresion . errorExpresion
    (119) errorExpresion -> .

    PARFIN          reduce using rule 119 (errorExpresion -> .)
    ,               reduce using rule 119 (errorExpresion -> .)
    ]               reduce using rule 119 (errorExpresion -> .)
    ;               reduce using rule 119 (errorExpresion -> .)

    errorExpresion                 shift and go to state 265

state 227

    (122) cyExpresion -> empty .

    PARFIN          reduce using rule 122 (cyExpresion -> empty .)
    ,               reduce using rule 122 (cyExpresion -> empty .)
    ]               reduce using rule 122 (cyExpresion -> empty .)
    ;               reduce using rule 122 (cyExpresion -> empty .)


state 228

    (113) condition -> errorCondition IF PARINI expresion PARFIN saveFalso . { body } optionalElse rellenaFalso

    {               shift and go to state 266


state 229

    (128) opSExp -> GT . saveOperator exp
    (174) saveOperator -> .

    CTES            reduce using rule 174 (saveOperator -> .)
    PARINI          reduce using rule 174 (saveOperator -> .)
    ID              reduce using rule 174 (saveOperator -> .)
    CTED            reduce using rule 174 (saveOperator -> .)
    CTEF            reduce using rule 174 (saveOperator -> .)
    TRUE            reduce using rule 174 (saveOperator -> .)
    FALSE           reduce using rule 174 (saveOperator -> .)

    saveOperator                   shift and go to state 267

state 230

    (126) opSExp -> LTOEQ . saveOperator exp
    (174) saveOperator -> .

    CTES            reduce using rule 174 (saveOperator -> .)
    PARINI          reduce using rule 174 (saveOperator -> .)
    ID              reduce using rule 174 (saveOperator -> .)
    CTED            reduce using rule 174 (saveOperator -> .)
    CTEF            reduce using rule 174 (saveOperator -> .)
    TRUE            reduce using rule 174 (saveOperator -> .)
    FALSE           reduce using rule 174 (saveOperator -> .)

    saveOperator                   shift and go to state 268

state 231

    (125) opSExp -> DIF . saveOperator exp
    (174) saveOperator -> .

    CTES            reduce using rule 174 (saveOperator -> .)
    PARINI          reduce using rule 174 (saveOperator -> .)
    ID              reduce using rule 174 (saveOperator -> .)
    CTED            reduce using rule 174 (saveOperator -> .)
    CTEF            reduce using rule 174 (saveOperator -> .)
    TRUE            reduce using rule 174 (saveOperator -> .)
    FALSE           reduce using rule 174 (saveOperator -> .)

    saveOperator                   shift and go to state 269

state 232

    (129) opSExp -> LT . saveOperator exp
    (174) saveOperator -> .

    CTES            reduce using rule 174 (saveOperator -> .)
    PARINI          reduce using rule 174 (saveOperator -> .)
    ID              reduce using rule 174 (saveOperator -> .)
    CTED            reduce using rule 174 (saveOperator -> .)
    CTEF            reduce using rule 174 (saveOperator -> .)
    TRUE            reduce using rule 174 (saveOperator -> .)
    FALSE           reduce using rule 174 (saveOperator -> .)

    saveOperator                   shift and go to state 270

state 233

    (127) opSExp -> GTOEQ . saveOperator exp
    (174) saveOperator -> .

    CTES            reduce using rule 174 (saveOperator -> .)
    PARINI          reduce using rule 174 (saveOperator -> .)
    ID              reduce using rule 174 (saveOperator -> .)
    CTED            reduce using rule 174 (saveOperator -> .)
    CTEF            reduce using rule 174 (saveOperator -> .)
    TRUE            reduce using rule 174 (saveOperator -> .)
    FALSE           reduce using rule 174 (saveOperator -> .)

    saveOperator                   shift and go to state 271

state 234

    (124) opSExp -> EQ . saveOperator exp
    (174) saveOperator -> .

    CTES            reduce using rule 174 (saveOperator -> .)
    PARINI          reduce using rule 174 (saveOperator -> .)
    ID              reduce using rule 174 (saveOperator -> .)
    CTED            reduce using rule 174 (saveOperator -> .)
    CTEF            reduce using rule 174 (saveOperator -> .)
    TRUE            reduce using rule 174 (saveOperator -> .)
    FALSE           reduce using rule 174 (saveOperator -> .)

    saveOperator                   shift and go to state 272

state 235

    (130) opSExp -> empty .

    AND             reduce using rule 130 (opSExp -> empty .)
    OR              reduce using rule 130 (opSExp -> empty .)
    PARFIN          reduce using rule 130 (opSExp -> empty .)
    ,               reduce using rule 130 (opSExp -> empty .)
    ]               reduce using rule 130 (opSExp -> empty .)
    ;               reduce using rule 130 (opSExp -> empty .)


state 236

    (123) sExp -> exp errorOpSExp opSExp . performRelational
    (180) performRelational -> .

    AND             reduce using rule 180 (performRelational -> .)
    OR              reduce using rule 180 (performRelational -> .)
    PARFIN          reduce using rule 180 (performRelational -> .)
    ,               reduce using rule 180 (performRelational -> .)
    ]               reduce using rule 180 (performRelational -> .)
    ;               reduce using rule 180 (performRelational -> .)

    performRelational              shift and go to state 273

state 237

    (62) opReturns -> errorOpReturns RETURNS type saveReturnType . { opVars saveQuadruple body return

    {               shift and go to state 274


state 238

    (63) opReturns -> { opVars saveQuadruple body .

    }               reduce using rule 63 (opReturns -> { opVars saveQuadruple body .)


state 239

    (45) cyParam -> empty saveTypeParam . saveID
    (11) saveID -> .

    PARFIN          reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 275

state 240

    (44) cyParam -> errorCyParam saveTypeParam . saveID ; param
    (11) saveID -> .

    ;               reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 276

state 241

    (109) optionalMatrix -> createSecondDimension [ CTED saveSecondDimensionSize ] .

    ;               reduce using rule 109 (optionalMatrix -> createSecondDimension [ CTED saveSecondDimensionSize ] .)


state 242

    (33) cyRead -> , fix . ID saveVariable performRead cyRead

    ID              shift and go to state 277


state 243

    (32) read -> READ PARINI ID saveVariable performRead cyRead PARFIN .

    ;               reduce using rule 32 (read -> READ PARINI ID saveVariable performRead cyRead PARFIN .)


state 244

    (145) fact -> PARINI putFondo expresion PARFIN takeFondo .

    MULT            reduce using rule 145 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    DIV             reduce using rule 145 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    RES             reduce using rule 145 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    PLUS            reduce using rule 145 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    MINUS           reduce using rule 145 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    EQ              reduce using rule 145 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    DIF             reduce using rule 145 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    LTOEQ           reduce using rule 145 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    GTOEQ           reduce using rule 145 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    GT              reduce using rule 145 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    LT              reduce using rule 145 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    AND             reduce using rule 145 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    OR              reduce using rule 145 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    ]               reduce using rule 145 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    PARFIN          reduce using rule 145 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    ,               reduce using rule 145 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    ;               reduce using rule 145 (fact -> PARINI putFondo expresion PARFIN takeFondo .)


state 245

    (151) opStruct -> errorOpStruct saveToDimensionStacks [ . expresion verifyIndex ] opMatrix accessStruct
    (118) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (123) sExp -> . exp errorOpSExp opSExp performRelational
    (132) exp -> . term performAddSub errorCyExp cyExp
    (137) term -> . fact performMulDiv cyTerm
    (142) fact -> . CTES saveConstantString
    (143) fact -> . cte
    (144) fact -> . funcCall
    (145) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (146) fact -> . ID saveVariable opAccess errorOpAccess
    (160) cte -> . CTED saveConstantInt
    (161) cte -> . CTEF saveConstantFloat
    (162) cte -> . TRUE saveConstantBool
    (163) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams

    CTES            shift and go to state 124
    PARINI          shift and go to state 121
    ID              shift and go to state 123
    CTED            shift and go to state 122
    CTEF            shift and go to state 129
    TRUE            shift and go to state 120
    FALSE           shift and go to state 126

    sExp                           shift and go to state 162
    expresion                      shift and go to state 278
    term                           shift and go to state 125
    funcCall                       shift and go to state 127
    cte                            shift and go to state 128
    exp                            shift and go to state 164
    fact                           shift and go to state 131

state 246

    (133) cyExp -> PLUS saveOperator . exp
    (132) exp -> . term performAddSub errorCyExp cyExp
    (137) term -> . fact performMulDiv cyTerm
    (142) fact -> . CTES saveConstantString
    (143) fact -> . cte
    (144) fact -> . funcCall
    (145) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (146) fact -> . ID saveVariable opAccess errorOpAccess
    (160) cte -> . CTED saveConstantInt
    (161) cte -> . CTEF saveConstantFloat
    (162) cte -> . TRUE saveConstantBool
    (163) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams

    CTES            shift and go to state 124
    PARINI          shift and go to state 121
    ID              shift and go to state 123
    CTED            shift and go to state 122
    CTEF            shift and go to state 129
    TRUE            shift and go to state 120
    FALSE           shift and go to state 126

    term                           shift and go to state 125
    funcCall                       shift and go to state 127
    cte                            shift and go to state 128
    exp                            shift and go to state 279
    fact                           shift and go to state 131

state 247

    (134) cyExp -> MINUS saveOperator . exp
    (132) exp -> . term performAddSub errorCyExp cyExp
    (137) term -> . fact performMulDiv cyTerm
    (142) fact -> . CTES saveConstantString
    (143) fact -> . cte
    (144) fact -> . funcCall
    (145) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (146) fact -> . ID saveVariable opAccess errorOpAccess
    (160) cte -> . CTED saveConstantInt
    (161) cte -> . CTEF saveConstantFloat
    (162) cte -> . TRUE saveConstantBool
    (163) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams

    CTES            shift and go to state 124
    PARINI          shift and go to state 121
    ID              shift and go to state 123
    CTED            shift and go to state 122
    CTEF            shift and go to state 129
    TRUE            shift and go to state 120
    FALSE           shift and go to state 126

    term                           shift and go to state 125
    funcCall                       shift and go to state 127
    cte                            shift and go to state 128
    exp                            shift and go to state 280
    fact                           shift and go to state 131

state 248

    (30) cyPrint -> , fix exp . performPrint cyPrint
    (182) performPrint -> .

    ,               reduce using rule 182 (performPrint -> .)
    PARFIN          reduce using rule 182 (performPrint -> .)

    performPrint                   shift and go to state 281

state 249

    (140) cyTerm -> RES saveOperator term .

    PLUS            reduce using rule 140 (cyTerm -> RES saveOperator term .)
    MINUS           reduce using rule 140 (cyTerm -> RES saveOperator term .)
    ,               reduce using rule 140 (cyTerm -> RES saveOperator term .)
    PARFIN          reduce using rule 140 (cyTerm -> RES saveOperator term .)
    EQ              reduce using rule 140 (cyTerm -> RES saveOperator term .)
    DIF             reduce using rule 140 (cyTerm -> RES saveOperator term .)
    LTOEQ           reduce using rule 140 (cyTerm -> RES saveOperator term .)
    GTOEQ           reduce using rule 140 (cyTerm -> RES saveOperator term .)
    GT              reduce using rule 140 (cyTerm -> RES saveOperator term .)
    LT              reduce using rule 140 (cyTerm -> RES saveOperator term .)
    AND             reduce using rule 140 (cyTerm -> RES saveOperator term .)
    OR              reduce using rule 140 (cyTerm -> RES saveOperator term .)
    ]               reduce using rule 140 (cyTerm -> RES saveOperator term .)
    ;               reduce using rule 140 (cyTerm -> RES saveOperator term .)


state 250

    (139) cyTerm -> DIV saveOperator term .

    PLUS            reduce using rule 139 (cyTerm -> DIV saveOperator term .)
    MINUS           reduce using rule 139 (cyTerm -> DIV saveOperator term .)
    ,               reduce using rule 139 (cyTerm -> DIV saveOperator term .)
    PARFIN          reduce using rule 139 (cyTerm -> DIV saveOperator term .)
    EQ              reduce using rule 139 (cyTerm -> DIV saveOperator term .)
    DIF             reduce using rule 139 (cyTerm -> DIV saveOperator term .)
    LTOEQ           reduce using rule 139 (cyTerm -> DIV saveOperator term .)
    GTOEQ           reduce using rule 139 (cyTerm -> DIV saveOperator term .)
    GT              reduce using rule 139 (cyTerm -> DIV saveOperator term .)
    LT              reduce using rule 139 (cyTerm -> DIV saveOperator term .)
    AND             reduce using rule 139 (cyTerm -> DIV saveOperator term .)
    OR              reduce using rule 139 (cyTerm -> DIV saveOperator term .)
    ]               reduce using rule 139 (cyTerm -> DIV saveOperator term .)
    ;               reduce using rule 139 (cyTerm -> DIV saveOperator term .)


state 251

    (138) cyTerm -> MULT saveOperator errorFact . term
    (137) term -> . fact performMulDiv cyTerm
    (142) fact -> . CTES saveConstantString
    (143) fact -> . cte
    (144) fact -> . funcCall
    (145) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (146) fact -> . ID saveVariable opAccess errorOpAccess
    (160) cte -> . CTED saveConstantInt
    (161) cte -> . CTEF saveConstantFloat
    (162) cte -> . TRUE saveConstantBool
    (163) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams

    CTES            shift and go to state 124
    PARINI          shift and go to state 121
    ID              shift and go to state 123
    CTED            shift and go to state 122
    CTEF            shift and go to state 129
    TRUE            shift and go to state 120
    FALSE           shift and go to state 126

    term                           shift and go to state 282
    funcCall                       shift and go to state 127
    cte                            shift and go to state 128
    fact                           shift and go to state 131

state 252

    (79) whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso . { body } repeatWhile

    {               shift and go to state 283


state 253

    (38) init -> ASGN saveOperator errorInit initWith .

    ;               reduce using rule 38 (init -> ASGN saveOperator errorInit initWith .)
    PARFIN          reduce using rule 38 (init -> ASGN saveOperator errorInit initWith .)


state 254

    (96) funcCall -> ID . checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams
    (146) fact -> ID . saveVariable opAccess errorOpAccess
    (98) checkFunction -> .
    (173) saveVariable -> .

    PARINI          reduce using rule 98 (checkFunction -> .)
    [               reduce using rule 173 (saveVariable -> .)
    MULT            reduce using rule 173 (saveVariable -> .)
    DIV             reduce using rule 173 (saveVariable -> .)
    RES             reduce using rule 173 (saveVariable -> .)
    PLUS            reduce using rule 173 (saveVariable -> .)
    MINUS           reduce using rule 173 (saveVariable -> .)
    EQ              reduce using rule 173 (saveVariable -> .)
    DIF             reduce using rule 173 (saveVariable -> .)
    LTOEQ           reduce using rule 173 (saveVariable -> .)
    GTOEQ           reduce using rule 173 (saveVariable -> .)
    GT              reduce using rule 173 (saveVariable -> .)
    LT              reduce using rule 173 (saveVariable -> .)
    AND             reduce using rule 173 (saveVariable -> .)
    OR              reduce using rule 173 (saveVariable -> .)
    ;               reduce using rule 173 (saveVariable -> .)
    PARFIN          reduce using rule 173 (saveVariable -> .)

    saveVariable                   shift and go to state 147
    checkFunction                  shift and go to state 109

state 255

    (40) initWith -> expresion .

    ;               reduce using rule 40 (initWith -> expresion .)
    PARFIN          reduce using rule 40 (initWith -> expresion .)


state 256

    (41) initWith -> funcCall .
    (144) fact -> funcCall .

  ! reduce/reduce conflict for ; resolved using rule 41 (initWith -> funcCall .)
  ! reduce/reduce conflict for PARFIN resolved using rule 41 (initWith -> funcCall .)
    ;               reduce using rule 41 (initWith -> funcCall .)
    PARFIN          reduce using rule 41 (initWith -> funcCall .)
    MULT            reduce using rule 144 (fact -> funcCall .)
    DIV             reduce using rule 144 (fact -> funcCall .)
    RES             reduce using rule 144 (fact -> funcCall .)
    PLUS            reduce using rule 144 (fact -> funcCall .)
    MINUS           reduce using rule 144 (fact -> funcCall .)
    EQ              reduce using rule 144 (fact -> funcCall .)
    DIF             reduce using rule 144 (fact -> funcCall .)
    LTOEQ           reduce using rule 144 (fact -> funcCall .)
    GTOEQ           reduce using rule 144 (fact -> funcCall .)
    GT              reduce using rule 144 (fact -> funcCall .)
    LT              reduce using rule 144 (fact -> funcCall .)
    AND             reduce using rule 144 (fact -> funcCall .)
    OR              reduce using rule 144 (fact -> funcCall .)

  ! ;               [ reduce using rule 144 (fact -> funcCall .) ]
  ! PARFIN          [ reduce using rule 144 (fact -> funcCall .) ]


state 257

    (92) assignOptions -> saveToDimensionStacks [ expresion verifyIndex . ] assignMatrix accessStruct init

    ]               shift and go to state 284


state 258

    (96) funcCall -> ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN . checkNumParams
    (97) checkNumParams -> .

    ;               reduce using rule 97 (checkNumParams -> .)
    MULT            reduce using rule 97 (checkNumParams -> .)
    DIV             reduce using rule 97 (checkNumParams -> .)
    RES             reduce using rule 97 (checkNumParams -> .)
    PLUS            reduce using rule 97 (checkNumParams -> .)
    MINUS           reduce using rule 97 (checkNumParams -> .)
    ,               reduce using rule 97 (checkNumParams -> .)
    PARFIN          reduce using rule 97 (checkNumParams -> .)
    EQ              reduce using rule 97 (checkNumParams -> .)
    DIF             reduce using rule 97 (checkNumParams -> .)
    LTOEQ           reduce using rule 97 (checkNumParams -> .)
    GTOEQ           reduce using rule 97 (checkNumParams -> .)
    GT              reduce using rule 97 (checkNumParams -> .)
    LT              reduce using rule 97 (checkNumParams -> .)
    AND             reduce using rule 97 (checkNumParams -> .)
    OR              reduce using rule 97 (checkNumParams -> .)
    ]               reduce using rule 97 (checkNumParams -> .)

    checkNumParams                 shift and go to state 285

state 259

    (99) opParamCall -> expresion checkParamType cyParamCall .

    PARFIN          reduce using rule 99 (opParamCall -> expresion checkParamType cyParamCall .)


state 260

    (102) cyParamCall -> empty .

    PARFIN          reduce using rule 102 (cyParamCall -> empty .)


state 261

    (101) cyParamCall -> , . expresion checkParamType cyParamCall
    (118) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (123) sExp -> . exp errorOpSExp opSExp performRelational
    (132) exp -> . term performAddSub errorCyExp cyExp
    (137) term -> . fact performMulDiv cyTerm
    (142) fact -> . CTES saveConstantString
    (143) fact -> . cte
    (144) fact -> . funcCall
    (145) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (146) fact -> . ID saveVariable opAccess errorOpAccess
    (160) cte -> . CTED saveConstantInt
    (161) cte -> . CTEF saveConstantFloat
    (162) cte -> . TRUE saveConstantBool
    (163) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams

    CTES            shift and go to state 124
    PARINI          shift and go to state 121
    ID              shift and go to state 123
    CTED            shift and go to state 122
    CTEF            shift and go to state 129
    TRUE            shift and go to state 120
    FALSE           shift and go to state 126

    sExp                           shift and go to state 162
    expresion                      shift and go to state 286
    term                           shift and go to state 125
    funcCall                       shift and go to state 127
    cte                            shift and go to state 128
    exp                            shift and go to state 164
    fact                           shift and go to state 131

state 262

    (83) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion . saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign
    (167) saveFalso -> .

    ;               reduce using rule 167 (saveFalso -> .)

    saveFalso                      shift and go to state 287

state 263

    (120) cyExpresion -> AND saveOperator . expresion
    (118) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (123) sExp -> . exp errorOpSExp opSExp performRelational
    (132) exp -> . term performAddSub errorCyExp cyExp
    (137) term -> . fact performMulDiv cyTerm
    (142) fact -> . CTES saveConstantString
    (143) fact -> . cte
    (144) fact -> . funcCall
    (145) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (146) fact -> . ID saveVariable opAccess errorOpAccess
    (160) cte -> . CTED saveConstantInt
    (161) cte -> . CTEF saveConstantFloat
    (162) cte -> . TRUE saveConstantBool
    (163) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams

    CTES            shift and go to state 124
    PARINI          shift and go to state 121
    ID              shift and go to state 123
    CTED            shift and go to state 122
    CTEF            shift and go to state 129
    TRUE            shift and go to state 120
    FALSE           shift and go to state 126

    sExp                           shift and go to state 162
    expresion                      shift and go to state 288
    term                           shift and go to state 125
    funcCall                       shift and go to state 127
    cte                            shift and go to state 128
    exp                            shift and go to state 164
    fact                           shift and go to state 131

state 264

    (121) cyExpresion -> OR saveOperator . expresion
    (118) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (123) sExp -> . exp errorOpSExp opSExp performRelational
    (132) exp -> . term performAddSub errorCyExp cyExp
    (137) term -> . fact performMulDiv cyTerm
    (142) fact -> . CTES saveConstantString
    (143) fact -> . cte
    (144) fact -> . funcCall
    (145) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (146) fact -> . ID saveVariable opAccess errorOpAccess
    (160) cte -> . CTED saveConstantInt
    (161) cte -> . CTEF saveConstantFloat
    (162) cte -> . TRUE saveConstantBool
    (163) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams

    CTES            shift and go to state 124
    PARINI          shift and go to state 121
    ID              shift and go to state 123
    CTED            shift and go to state 122
    CTEF            shift and go to state 129
    TRUE            shift and go to state 120
    FALSE           shift and go to state 126

    sExp                           shift and go to state 162
    expresion                      shift and go to state 289
    term                           shift and go to state 125
    funcCall                       shift and go to state 127
    cte                            shift and go to state 128
    exp                            shift and go to state 164
    fact                           shift and go to state 131

state 265

    (118) expresion -> sExp performAndOr cyExpresion errorExpresion .

    PARFIN          reduce using rule 118 (expresion -> sExp performAndOr cyExpresion errorExpresion .)
    ,               reduce using rule 118 (expresion -> sExp performAndOr cyExpresion errorExpresion .)
    ]               reduce using rule 118 (expresion -> sExp performAndOr cyExpresion errorExpresion .)
    ;               reduce using rule 118 (expresion -> sExp performAndOr cyExpresion errorExpresion .)


state 266

    (113) condition -> errorCondition IF PARINI expresion PARFIN saveFalso { . body } optionalElse rellenaFalso
    (73) body -> . errorBody cyInstruction
    (74) body -> . empty
    (75) errorBody -> .
    (164) empty -> .

    ID              reduce using rule 75 (errorBody -> .)
    PRINT           reduce using rule 75 (errorBody -> .)
    READ            reduce using rule 75 (errorBody -> .)
    IF              reduce using rule 75 (errorBody -> .)
    FOR             reduce using rule 75 (errorBody -> .)
    WHILE           reduce using rule 75 (errorBody -> .)
    }               reduce using rule 164 (empty -> .)

    body                           shift and go to state 290
    errorBody                      shift and go to state 73
    empty                          shift and go to state 74

state 267

    (128) opSExp -> GT saveOperator . exp
    (132) exp -> . term performAddSub errorCyExp cyExp
    (137) term -> . fact performMulDiv cyTerm
    (142) fact -> . CTES saveConstantString
    (143) fact -> . cte
    (144) fact -> . funcCall
    (145) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (146) fact -> . ID saveVariable opAccess errorOpAccess
    (160) cte -> . CTED saveConstantInt
    (161) cte -> . CTEF saveConstantFloat
    (162) cte -> . TRUE saveConstantBool
    (163) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams

    CTES            shift and go to state 124
    PARINI          shift and go to state 121
    ID              shift and go to state 123
    CTED            shift and go to state 122
    CTEF            shift and go to state 129
    TRUE            shift and go to state 120
    FALSE           shift and go to state 126

    term                           shift and go to state 125
    funcCall                       shift and go to state 127
    cte                            shift and go to state 128
    exp                            shift and go to state 291
    fact                           shift and go to state 131

state 268

    (126) opSExp -> LTOEQ saveOperator . exp
    (132) exp -> . term performAddSub errorCyExp cyExp
    (137) term -> . fact performMulDiv cyTerm
    (142) fact -> . CTES saveConstantString
    (143) fact -> . cte
    (144) fact -> . funcCall
    (145) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (146) fact -> . ID saveVariable opAccess errorOpAccess
    (160) cte -> . CTED saveConstantInt
    (161) cte -> . CTEF saveConstantFloat
    (162) cte -> . TRUE saveConstantBool
    (163) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams

    CTES            shift and go to state 124
    PARINI          shift and go to state 121
    ID              shift and go to state 123
    CTED            shift and go to state 122
    CTEF            shift and go to state 129
    TRUE            shift and go to state 120
    FALSE           shift and go to state 126

    term                           shift and go to state 125
    funcCall                       shift and go to state 127
    cte                            shift and go to state 128
    exp                            shift and go to state 292
    fact                           shift and go to state 131

state 269

    (125) opSExp -> DIF saveOperator . exp
    (132) exp -> . term performAddSub errorCyExp cyExp
    (137) term -> . fact performMulDiv cyTerm
    (142) fact -> . CTES saveConstantString
    (143) fact -> . cte
    (144) fact -> . funcCall
    (145) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (146) fact -> . ID saveVariable opAccess errorOpAccess
    (160) cte -> . CTED saveConstantInt
    (161) cte -> . CTEF saveConstantFloat
    (162) cte -> . TRUE saveConstantBool
    (163) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams

    CTES            shift and go to state 124
    PARINI          shift and go to state 121
    ID              shift and go to state 123
    CTED            shift and go to state 122
    CTEF            shift and go to state 129
    TRUE            shift and go to state 120
    FALSE           shift and go to state 126

    term                           shift and go to state 125
    funcCall                       shift and go to state 127
    cte                            shift and go to state 128
    exp                            shift and go to state 293
    fact                           shift and go to state 131

state 270

    (129) opSExp -> LT saveOperator . exp
    (132) exp -> . term performAddSub errorCyExp cyExp
    (137) term -> . fact performMulDiv cyTerm
    (142) fact -> . CTES saveConstantString
    (143) fact -> . cte
    (144) fact -> . funcCall
    (145) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (146) fact -> . ID saveVariable opAccess errorOpAccess
    (160) cte -> . CTED saveConstantInt
    (161) cte -> . CTEF saveConstantFloat
    (162) cte -> . TRUE saveConstantBool
    (163) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams

    CTES            shift and go to state 124
    PARINI          shift and go to state 121
    ID              shift and go to state 123
    CTED            shift and go to state 122
    CTEF            shift and go to state 129
    TRUE            shift and go to state 120
    FALSE           shift and go to state 126

    term                           shift and go to state 125
    funcCall                       shift and go to state 127
    cte                            shift and go to state 128
    exp                            shift and go to state 294
    fact                           shift and go to state 131

state 271

    (127) opSExp -> GTOEQ saveOperator . exp
    (132) exp -> . term performAddSub errorCyExp cyExp
    (137) term -> . fact performMulDiv cyTerm
    (142) fact -> . CTES saveConstantString
    (143) fact -> . cte
    (144) fact -> . funcCall
    (145) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (146) fact -> . ID saveVariable opAccess errorOpAccess
    (160) cte -> . CTED saveConstantInt
    (161) cte -> . CTEF saveConstantFloat
    (162) cte -> . TRUE saveConstantBool
    (163) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams

    CTES            shift and go to state 124
    PARINI          shift and go to state 121
    ID              shift and go to state 123
    CTED            shift and go to state 122
    CTEF            shift and go to state 129
    TRUE            shift and go to state 120
    FALSE           shift and go to state 126

    term                           shift and go to state 125
    funcCall                       shift and go to state 127
    cte                            shift and go to state 128
    exp                            shift and go to state 295
    fact                           shift and go to state 131

state 272

    (124) opSExp -> EQ saveOperator . exp
    (132) exp -> . term performAddSub errorCyExp cyExp
    (137) term -> . fact performMulDiv cyTerm
    (142) fact -> . CTES saveConstantString
    (143) fact -> . cte
    (144) fact -> . funcCall
    (145) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (146) fact -> . ID saveVariable opAccess errorOpAccess
    (160) cte -> . CTED saveConstantInt
    (161) cte -> . CTEF saveConstantFloat
    (162) cte -> . TRUE saveConstantBool
    (163) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams

    CTES            shift and go to state 124
    PARINI          shift and go to state 121
    ID              shift and go to state 123
    CTED            shift and go to state 122
    CTEF            shift and go to state 129
    TRUE            shift and go to state 120
    FALSE           shift and go to state 126

    term                           shift and go to state 125
    funcCall                       shift and go to state 127
    cte                            shift and go to state 128
    exp                            shift and go to state 296
    fact                           shift and go to state 131

state 273

    (123) sExp -> exp errorOpSExp opSExp performRelational .

    AND             reduce using rule 123 (sExp -> exp errorOpSExp opSExp performRelational .)
    OR              reduce using rule 123 (sExp -> exp errorOpSExp opSExp performRelational .)
    PARFIN          reduce using rule 123 (sExp -> exp errorOpSExp opSExp performRelational .)
    ,               reduce using rule 123 (sExp -> exp errorOpSExp opSExp performRelational .)
    ]               reduce using rule 123 (sExp -> exp errorOpSExp opSExp performRelational .)
    ;               reduce using rule 123 (sExp -> exp errorOpSExp opSExp performRelational .)


state 274

    (62) opReturns -> errorOpReturns RETURNS type saveReturnType { . opVars saveQuadruple body return
    (6) opVars -> . vars
    (7) opVars -> . empty
    (10) vars -> . errorVars VARS declare
    (164) empty -> .
    (12) errorVars -> .

    RETURN          reduce using rule 164 (empty -> .)
    ID              reduce using rule 164 (empty -> .)
    PRINT           reduce using rule 164 (empty -> .)
    READ            reduce using rule 164 (empty -> .)
    IF              reduce using rule 164 (empty -> .)
    FOR             reduce using rule 164 (empty -> .)
    WHILE           reduce using rule 164 (empty -> .)
    VARS            reduce using rule 12 (errorVars -> .)

    vars                           shift and go to state 8
    opVars                         shift and go to state 297
    errorVars                      shift and go to state 10
    empty                          shift and go to state 11

state 275

    (45) cyParam -> empty saveTypeParam saveID .

    PARFIN          reduce using rule 45 (cyParam -> empty saveTypeParam saveID .)


state 276

    (44) cyParam -> errorCyParam saveTypeParam saveID . ; param

    ;               shift and go to state 298


state 277

    (33) cyRead -> , fix ID . saveVariable performRead cyRead
    (173) saveVariable -> .

    ,               reduce using rule 173 (saveVariable -> .)
    PARFIN          reduce using rule 173 (saveVariable -> .)

    saveVariable                   shift and go to state 299

state 278

    (151) opStruct -> errorOpStruct saveToDimensionStacks [ expresion . verifyIndex ] opMatrix accessStruct
    (153) verifyIndex -> .

    ]               reduce using rule 153 (verifyIndex -> .)

    verifyIndex                    shift and go to state 300

state 279

    (133) cyExp -> PLUS saveOperator exp .

    ,               reduce using rule 133 (cyExp -> PLUS saveOperator exp .)
    PARFIN          reduce using rule 133 (cyExp -> PLUS saveOperator exp .)
    EQ              reduce using rule 133 (cyExp -> PLUS saveOperator exp .)
    DIF             reduce using rule 133 (cyExp -> PLUS saveOperator exp .)
    LTOEQ           reduce using rule 133 (cyExp -> PLUS saveOperator exp .)
    GTOEQ           reduce using rule 133 (cyExp -> PLUS saveOperator exp .)
    GT              reduce using rule 133 (cyExp -> PLUS saveOperator exp .)
    LT              reduce using rule 133 (cyExp -> PLUS saveOperator exp .)
    AND             reduce using rule 133 (cyExp -> PLUS saveOperator exp .)
    OR              reduce using rule 133 (cyExp -> PLUS saveOperator exp .)
    ]               reduce using rule 133 (cyExp -> PLUS saveOperator exp .)
    ;               reduce using rule 133 (cyExp -> PLUS saveOperator exp .)


state 280

    (134) cyExp -> MINUS saveOperator exp .

    ,               reduce using rule 134 (cyExp -> MINUS saveOperator exp .)
    PARFIN          reduce using rule 134 (cyExp -> MINUS saveOperator exp .)
    EQ              reduce using rule 134 (cyExp -> MINUS saveOperator exp .)
    DIF             reduce using rule 134 (cyExp -> MINUS saveOperator exp .)
    LTOEQ           reduce using rule 134 (cyExp -> MINUS saveOperator exp .)
    GTOEQ           reduce using rule 134 (cyExp -> MINUS saveOperator exp .)
    GT              reduce using rule 134 (cyExp -> MINUS saveOperator exp .)
    LT              reduce using rule 134 (cyExp -> MINUS saveOperator exp .)
    AND             reduce using rule 134 (cyExp -> MINUS saveOperator exp .)
    OR              reduce using rule 134 (cyExp -> MINUS saveOperator exp .)
    ]               reduce using rule 134 (cyExp -> MINUS saveOperator exp .)
    ;               reduce using rule 134 (cyExp -> MINUS saveOperator exp .)


state 281

    (30) cyPrint -> , fix exp performPrint . cyPrint
    (30) cyPrint -> . , fix exp performPrint cyPrint
    (31) cyPrint -> . empty
    (164) empty -> .

    ,               shift and go to state 178
    PARFIN          reduce using rule 164 (empty -> .)

    empty                          shift and go to state 179
    cyPrint                        shift and go to state 301

state 282

    (138) cyTerm -> MULT saveOperator errorFact term .

    PLUS            reduce using rule 138 (cyTerm -> MULT saveOperator errorFact term .)
    MINUS           reduce using rule 138 (cyTerm -> MULT saveOperator errorFact term .)
    ,               reduce using rule 138 (cyTerm -> MULT saveOperator errorFact term .)
    PARFIN          reduce using rule 138 (cyTerm -> MULT saveOperator errorFact term .)
    EQ              reduce using rule 138 (cyTerm -> MULT saveOperator errorFact term .)
    DIF             reduce using rule 138 (cyTerm -> MULT saveOperator errorFact term .)
    LTOEQ           reduce using rule 138 (cyTerm -> MULT saveOperator errorFact term .)
    GTOEQ           reduce using rule 138 (cyTerm -> MULT saveOperator errorFact term .)
    GT              reduce using rule 138 (cyTerm -> MULT saveOperator errorFact term .)
    LT              reduce using rule 138 (cyTerm -> MULT saveOperator errorFact term .)
    AND             reduce using rule 138 (cyTerm -> MULT saveOperator errorFact term .)
    OR              reduce using rule 138 (cyTerm -> MULT saveOperator errorFact term .)
    ]               reduce using rule 138 (cyTerm -> MULT saveOperator errorFact term .)
    ;               reduce using rule 138 (cyTerm -> MULT saveOperator errorFact term .)


state 283

    (79) whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { . body } repeatWhile
    (73) body -> . errorBody cyInstruction
    (74) body -> . empty
    (75) errorBody -> .
    (164) empty -> .

    ID              reduce using rule 75 (errorBody -> .)
    PRINT           reduce using rule 75 (errorBody -> .)
    READ            reduce using rule 75 (errorBody -> .)
    IF              reduce using rule 75 (errorBody -> .)
    FOR             reduce using rule 75 (errorBody -> .)
    WHILE           reduce using rule 75 (errorBody -> .)
    }               reduce using rule 164 (empty -> .)

    body                           shift and go to state 302
    errorBody                      shift and go to state 73
    empty                          shift and go to state 74

state 284

    (92) assignOptions -> saveToDimensionStacks [ expresion verifyIndex ] . assignMatrix accessStruct init
    (93) assignMatrix -> . updateDimension [ expresion verifyIndex ] errorAssignMatrix
    (94) assignMatrix -> . empty
    (158) updateDimension -> .
    (164) empty -> .

    [               reduce using rule 158 (updateDimension -> .)
    ASGN            reduce using rule 164 (empty -> .)

    assignMatrix                   shift and go to state 303
    updateDimension                shift and go to state 304
    empty                          shift and go to state 305

state 285

    (96) funcCall -> ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams .

    MULT            reduce using rule 96 (funcCall -> ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams .)
    DIV             reduce using rule 96 (funcCall -> ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams .)
    RES             reduce using rule 96 (funcCall -> ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams .)
    PLUS            reduce using rule 96 (funcCall -> ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams .)
    MINUS           reduce using rule 96 (funcCall -> ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams .)
    AND             reduce using rule 96 (funcCall -> ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams .)
    OR              reduce using rule 96 (funcCall -> ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams .)
    PARFIN          reduce using rule 96 (funcCall -> ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams .)
    ,               reduce using rule 96 (funcCall -> ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams .)
    ]               reduce using rule 96 (funcCall -> ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams .)
    ;               reduce using rule 96 (funcCall -> ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams .)
    EQ              reduce using rule 96 (funcCall -> ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams .)
    DIF             reduce using rule 96 (funcCall -> ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams .)
    LTOEQ           reduce using rule 96 (funcCall -> ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams .)
    GTOEQ           reduce using rule 96 (funcCall -> ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams .)
    GT              reduce using rule 96 (funcCall -> ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams .)
    LT              reduce using rule 96 (funcCall -> ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams .)


state 286

    (101) cyParamCall -> , expresion . checkParamType cyParamCall
    (103) checkParamType -> .

    ,               reduce using rule 103 (checkParamType -> .)
    PARFIN          reduce using rule 103 (checkParamType -> .)

    checkParamType                 shift and go to state 306

state 287

    (83) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso . ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign

    ;               shift and go to state 307


state 288

    (120) cyExpresion -> AND saveOperator expresion .

    PARFIN          reduce using rule 120 (cyExpresion -> AND saveOperator expresion .)
    ,               reduce using rule 120 (cyExpresion -> AND saveOperator expresion .)
    ]               reduce using rule 120 (cyExpresion -> AND saveOperator expresion .)
    ;               reduce using rule 120 (cyExpresion -> AND saveOperator expresion .)


state 289

    (121) cyExpresion -> OR saveOperator expresion .

    PARFIN          reduce using rule 121 (cyExpresion -> OR saveOperator expresion .)
    ,               reduce using rule 121 (cyExpresion -> OR saveOperator expresion .)
    ]               reduce using rule 121 (cyExpresion -> OR saveOperator expresion .)
    ;               reduce using rule 121 (cyExpresion -> OR saveOperator expresion .)


state 290

    (113) condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body . } optionalElse rellenaFalso

    }               shift and go to state 308


state 291

    (128) opSExp -> GT saveOperator exp .

    AND             reduce using rule 128 (opSExp -> GT saveOperator exp .)
    OR              reduce using rule 128 (opSExp -> GT saveOperator exp .)
    PARFIN          reduce using rule 128 (opSExp -> GT saveOperator exp .)
    ,               reduce using rule 128 (opSExp -> GT saveOperator exp .)
    ]               reduce using rule 128 (opSExp -> GT saveOperator exp .)
    ;               reduce using rule 128 (opSExp -> GT saveOperator exp .)


state 292

    (126) opSExp -> LTOEQ saveOperator exp .

    AND             reduce using rule 126 (opSExp -> LTOEQ saveOperator exp .)
    OR              reduce using rule 126 (opSExp -> LTOEQ saveOperator exp .)
    PARFIN          reduce using rule 126 (opSExp -> LTOEQ saveOperator exp .)
    ,               reduce using rule 126 (opSExp -> LTOEQ saveOperator exp .)
    ]               reduce using rule 126 (opSExp -> LTOEQ saveOperator exp .)
    ;               reduce using rule 126 (opSExp -> LTOEQ saveOperator exp .)


state 293

    (125) opSExp -> DIF saveOperator exp .

    AND             reduce using rule 125 (opSExp -> DIF saveOperator exp .)
    OR              reduce using rule 125 (opSExp -> DIF saveOperator exp .)
    PARFIN          reduce using rule 125 (opSExp -> DIF saveOperator exp .)
    ,               reduce using rule 125 (opSExp -> DIF saveOperator exp .)
    ]               reduce using rule 125 (opSExp -> DIF saveOperator exp .)
    ;               reduce using rule 125 (opSExp -> DIF saveOperator exp .)


state 294

    (129) opSExp -> LT saveOperator exp .

    AND             reduce using rule 129 (opSExp -> LT saveOperator exp .)
    OR              reduce using rule 129 (opSExp -> LT saveOperator exp .)
    PARFIN          reduce using rule 129 (opSExp -> LT saveOperator exp .)
    ,               reduce using rule 129 (opSExp -> LT saveOperator exp .)
    ]               reduce using rule 129 (opSExp -> LT saveOperator exp .)
    ;               reduce using rule 129 (opSExp -> LT saveOperator exp .)


state 295

    (127) opSExp -> GTOEQ saveOperator exp .

    AND             reduce using rule 127 (opSExp -> GTOEQ saveOperator exp .)
    OR              reduce using rule 127 (opSExp -> GTOEQ saveOperator exp .)
    PARFIN          reduce using rule 127 (opSExp -> GTOEQ saveOperator exp .)
    ,               reduce using rule 127 (opSExp -> GTOEQ saveOperator exp .)
    ]               reduce using rule 127 (opSExp -> GTOEQ saveOperator exp .)
    ;               reduce using rule 127 (opSExp -> GTOEQ saveOperator exp .)


state 296

    (124) opSExp -> EQ saveOperator exp .

    AND             reduce using rule 124 (opSExp -> EQ saveOperator exp .)
    OR              reduce using rule 124 (opSExp -> EQ saveOperator exp .)
    PARFIN          reduce using rule 124 (opSExp -> EQ saveOperator exp .)
    ,               reduce using rule 124 (opSExp -> EQ saveOperator exp .)
    ]               reduce using rule 124 (opSExp -> EQ saveOperator exp .)
    ;               reduce using rule 124 (opSExp -> EQ saveOperator exp .)


state 297

    (62) opReturns -> errorOpReturns RETURNS type saveReturnType { opVars . saveQuadruple body return
    (64) saveQuadruple -> .

    RETURN          reduce using rule 64 (saveQuadruple -> .)
    ID              reduce using rule 64 (saveQuadruple -> .)
    PRINT           reduce using rule 64 (saveQuadruple -> .)
    READ            reduce using rule 64 (saveQuadruple -> .)
    IF              reduce using rule 64 (saveQuadruple -> .)
    FOR             reduce using rule 64 (saveQuadruple -> .)
    WHILE           reduce using rule 64 (saveQuadruple -> .)

    saveQuadruple                  shift and go to state 309

state 298

    (44) cyParam -> errorCyParam saveTypeParam saveID ; . param
    (42) param -> . saveType type errorParam ID cyTypeParam cyParam
    (3) saveType -> .

    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)

    param                          shift and go to state 310
    saveType                       shift and go to state 77

state 299

    (33) cyRead -> , fix ID saveVariable . performRead cyRead
    (183) performRead -> .

    ,               reduce using rule 183 (performRead -> .)
    PARFIN          reduce using rule 183 (performRead -> .)

    performRead                    shift and go to state 311

state 300

    (151) opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex . ] opMatrix accessStruct

    ]               shift and go to state 312


state 301

    (30) cyPrint -> , fix exp performPrint cyPrint .

    PARFIN          reduce using rule 30 (cyPrint -> , fix exp performPrint cyPrint .)


state 302

    (79) whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body . } repeatWhile

    }               shift and go to state 313


state 303

    (92) assignOptions -> saveToDimensionStacks [ expresion verifyIndex ] assignMatrix . accessStruct init
    (152) accessStruct -> .

    ASGN            reduce using rule 152 (accessStruct -> .)

    accessStruct                   shift and go to state 314

state 304

    (93) assignMatrix -> updateDimension . [ expresion verifyIndex ] errorAssignMatrix

    [               shift and go to state 315


state 305

    (94) assignMatrix -> empty .

    ASGN            reduce using rule 94 (assignMatrix -> empty .)


state 306

    (101) cyParamCall -> , expresion checkParamType . cyParamCall
    (101) cyParamCall -> . , expresion checkParamType cyParamCall
    (102) cyParamCall -> . empty
    (164) empty -> .

    ,               shift and go to state 261
    PARFIN          reduce using rule 164 (empty -> .)

    cyParamCall                    shift and go to state 316
    empty                          shift and go to state 260

state 307

    (83) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; . saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign
    (84) saltoBody -> .

    ID              reduce using rule 84 (saltoBody -> .)

    saltoBody                      shift and go to state 317

state 308

    (113) condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } . optionalElse rellenaFalso
    (115) optionalElse -> . errorElse ELSE saveVerdadero { body }
    (116) optionalElse -> . empty
    (117) errorElse -> .
    (164) empty -> .

    ELSE            reduce using rule 117 (errorElse -> .)
    ID              reduce using rule 164 (empty -> .)
    PRINT           reduce using rule 164 (empty -> .)
    READ            reduce using rule 164 (empty -> .)
    IF              reduce using rule 164 (empty -> .)
    FOR             reduce using rule 164 (empty -> .)
    WHILE           reduce using rule 164 (empty -> .)
    }               reduce using rule 164 (empty -> .)
    RETURN          reduce using rule 164 (empty -> .)

    errorElse                      shift and go to state 319
    optionalElse                   shift and go to state 318
    empty                          shift and go to state 320

state 309

    (62) opReturns -> errorOpReturns RETURNS type saveReturnType { opVars saveQuadruple . body return
    (73) body -> . errorBody cyInstruction
    (74) body -> . empty
    (75) errorBody -> .
    (164) empty -> .

    ID              reduce using rule 75 (errorBody -> .)
    PRINT           reduce using rule 75 (errorBody -> .)
    READ            reduce using rule 75 (errorBody -> .)
    IF              reduce using rule 75 (errorBody -> .)
    FOR             reduce using rule 75 (errorBody -> .)
    WHILE           reduce using rule 75 (errorBody -> .)
    RETURN          reduce using rule 164 (empty -> .)

    body                           shift and go to state 321
    errorBody                      shift and go to state 73
    empty                          shift and go to state 74

state 310

    (44) cyParam -> errorCyParam saveTypeParam saveID ; param .

    PARFIN          reduce using rule 44 (cyParam -> errorCyParam saveTypeParam saveID ; param .)


state 311

    (33) cyRead -> , fix ID saveVariable performRead . cyRead
    (33) cyRead -> . , fix ID saveVariable performRead cyRead
    (34) cyRead -> . empty
    (164) empty -> .

    ,               shift and go to state 203
    PARFIN          reduce using rule 164 (empty -> .)

    cyRead                         shift and go to state 322
    empty                          shift and go to state 205

state 312

    (151) opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] . opMatrix accessStruct
    (156) opMatrix -> . errorOpMatrix updateDimension [ expresion verifyIndex ]
    (157) opMatrix -> . empty
    (159) errorOpMatrix -> .
    (164) empty -> .

    [               reduce using rule 159 (errorOpMatrix -> .)
    MULT            reduce using rule 164 (empty -> .)
    DIV             reduce using rule 164 (empty -> .)
    RES             reduce using rule 164 (empty -> .)
    PLUS            reduce using rule 164 (empty -> .)
    MINUS           reduce using rule 164 (empty -> .)
    ,               reduce using rule 164 (empty -> .)
    PARFIN          reduce using rule 164 (empty -> .)
    EQ              reduce using rule 164 (empty -> .)
    DIF             reduce using rule 164 (empty -> .)
    LTOEQ           reduce using rule 164 (empty -> .)
    GTOEQ           reduce using rule 164 (empty -> .)
    GT              reduce using rule 164 (empty -> .)
    LT              reduce using rule 164 (empty -> .)
    AND             reduce using rule 164 (empty -> .)
    OR              reduce using rule 164 (empty -> .)
    ]               reduce using rule 164 (empty -> .)
    ;               reduce using rule 164 (empty -> .)

    errorOpMatrix                  shift and go to state 323
    opMatrix                       shift and go to state 324
    empty                          shift and go to state 325

state 313

    (79) whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } . repeatWhile
    (80) repeatWhile -> .

    ID              reduce using rule 80 (repeatWhile -> .)
    PRINT           reduce using rule 80 (repeatWhile -> .)
    READ            reduce using rule 80 (repeatWhile -> .)
    IF              reduce using rule 80 (repeatWhile -> .)
    FOR             reduce using rule 80 (repeatWhile -> .)
    WHILE           reduce using rule 80 (repeatWhile -> .)
    }               reduce using rule 80 (repeatWhile -> .)
    RETURN          reduce using rule 80 (repeatWhile -> .)

    repeatWhile                    shift and go to state 326

state 314

    (92) assignOptions -> saveToDimensionStacks [ expresion verifyIndex ] assignMatrix accessStruct . init
    (38) init -> . ASGN saveOperator errorInit initWith

    ASGN            shift and go to state 156

    init                           shift and go to state 327

state 315

    (93) assignMatrix -> updateDimension [ . expresion verifyIndex ] errorAssignMatrix
    (118) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (123) sExp -> . exp errorOpSExp opSExp performRelational
    (132) exp -> . term performAddSub errorCyExp cyExp
    (137) term -> . fact performMulDiv cyTerm
    (142) fact -> . CTES saveConstantString
    (143) fact -> . cte
    (144) fact -> . funcCall
    (145) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (146) fact -> . ID saveVariable opAccess errorOpAccess
    (160) cte -> . CTED saveConstantInt
    (161) cte -> . CTEF saveConstantFloat
    (162) cte -> . TRUE saveConstantBool
    (163) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams

    CTES            shift and go to state 124
    PARINI          shift and go to state 121
    ID              shift and go to state 123
    CTED            shift and go to state 122
    CTEF            shift and go to state 129
    TRUE            shift and go to state 120
    FALSE           shift and go to state 126

    sExp                           shift and go to state 162
    expresion                      shift and go to state 328
    term                           shift and go to state 125
    funcCall                       shift and go to state 127
    cte                            shift and go to state 128
    exp                            shift and go to state 164
    fact                           shift and go to state 131

state 316

    (101) cyParamCall -> , expresion checkParamType cyParamCall .

    PARFIN          reduce using rule 101 (cyParamCall -> , expresion checkParamType cyParamCall .)


state 317

    (83) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody . assign returnFor PARFIN { rellenaBody body } returnAssign
    (89) assign -> . ID saveVariable errorAssign assignOptions performAssign

    ID              shift and go to state 160

    assign                         shift and go to state 329

state 318

    (113) condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse . rellenaFalso
    (166) rellenaFalso -> .

    ID              reduce using rule 166 (rellenaFalso -> .)
    PRINT           reduce using rule 166 (rellenaFalso -> .)
    READ            reduce using rule 166 (rellenaFalso -> .)
    IF              reduce using rule 166 (rellenaFalso -> .)
    FOR             reduce using rule 166 (rellenaFalso -> .)
    WHILE           reduce using rule 166 (rellenaFalso -> .)
    }               reduce using rule 166 (rellenaFalso -> .)
    RETURN          reduce using rule 166 (rellenaFalso -> .)

    rellenaFalso                   shift and go to state 330

state 319

    (115) optionalElse -> errorElse . ELSE saveVerdadero { body }

    ELSE            shift and go to state 331


state 320

    (116) optionalElse -> empty .

    ID              reduce using rule 116 (optionalElse -> empty .)
    PRINT           reduce using rule 116 (optionalElse -> empty .)
    READ            reduce using rule 116 (optionalElse -> empty .)
    IF              reduce using rule 116 (optionalElse -> empty .)
    FOR             reduce using rule 116 (optionalElse -> empty .)
    WHILE           reduce using rule 116 (optionalElse -> empty .)
    }               reduce using rule 116 (optionalElse -> empty .)
    RETURN          reduce using rule 116 (optionalElse -> empty .)


state 321

    (62) opReturns -> errorOpReturns RETURNS type saveReturnType { opVars saveQuadruple body . return
    (54) return -> . errorReturn RETURN expresion saveReturnValue ;
    (56) errorReturn -> .

    RETURN          reduce using rule 56 (errorReturn -> .)

    return                         shift and go to state 332
    errorReturn                    shift and go to state 333

state 322

    (33) cyRead -> , fix ID saveVariable performRead cyRead .

    PARFIN          reduce using rule 33 (cyRead -> , fix ID saveVariable performRead cyRead .)


state 323

    (156) opMatrix -> errorOpMatrix . updateDimension [ expresion verifyIndex ]
    (158) updateDimension -> .

    [               reduce using rule 158 (updateDimension -> .)

    updateDimension                shift and go to state 334

state 324

    (151) opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix . accessStruct
    (152) accessStruct -> .

    MULT            reduce using rule 152 (accessStruct -> .)
    DIV             reduce using rule 152 (accessStruct -> .)
    RES             reduce using rule 152 (accessStruct -> .)
    PLUS            reduce using rule 152 (accessStruct -> .)
    MINUS           reduce using rule 152 (accessStruct -> .)
    ,               reduce using rule 152 (accessStruct -> .)
    PARFIN          reduce using rule 152 (accessStruct -> .)
    EQ              reduce using rule 152 (accessStruct -> .)
    DIF             reduce using rule 152 (accessStruct -> .)
    LTOEQ           reduce using rule 152 (accessStruct -> .)
    GTOEQ           reduce using rule 152 (accessStruct -> .)
    GT              reduce using rule 152 (accessStruct -> .)
    LT              reduce using rule 152 (accessStruct -> .)
    AND             reduce using rule 152 (accessStruct -> .)
    OR              reduce using rule 152 (accessStruct -> .)
    ]               reduce using rule 152 (accessStruct -> .)
    ;               reduce using rule 152 (accessStruct -> .)

    accessStruct                   shift and go to state 335

state 325

    (157) opMatrix -> empty .

    MULT            reduce using rule 157 (opMatrix -> empty .)
    DIV             reduce using rule 157 (opMatrix -> empty .)
    RES             reduce using rule 157 (opMatrix -> empty .)
    PLUS            reduce using rule 157 (opMatrix -> empty .)
    MINUS           reduce using rule 157 (opMatrix -> empty .)
    ,               reduce using rule 157 (opMatrix -> empty .)
    PARFIN          reduce using rule 157 (opMatrix -> empty .)
    EQ              reduce using rule 157 (opMatrix -> empty .)
    DIF             reduce using rule 157 (opMatrix -> empty .)
    LTOEQ           reduce using rule 157 (opMatrix -> empty .)
    GTOEQ           reduce using rule 157 (opMatrix -> empty .)
    GT              reduce using rule 157 (opMatrix -> empty .)
    LT              reduce using rule 157 (opMatrix -> empty .)
    AND             reduce using rule 157 (opMatrix -> empty .)
    OR              reduce using rule 157 (opMatrix -> empty .)
    ]               reduce using rule 157 (opMatrix -> empty .)
    ;               reduce using rule 157 (opMatrix -> empty .)


state 326

    (79) whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile .

    ID              reduce using rule 79 (whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile .)
    PRINT           reduce using rule 79 (whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile .)
    READ            reduce using rule 79 (whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile .)
    IF              reduce using rule 79 (whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile .)
    FOR             reduce using rule 79 (whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile .)
    WHILE           reduce using rule 79 (whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile .)
    }               reduce using rule 79 (whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile .)
    RETURN          reduce using rule 79 (whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile .)


state 327

    (92) assignOptions -> saveToDimensionStacks [ expresion verifyIndex ] assignMatrix accessStruct init .

    ;               reduce using rule 92 (assignOptions -> saveToDimensionStacks [ expresion verifyIndex ] assignMatrix accessStruct init .)
    PARFIN          reduce using rule 92 (assignOptions -> saveToDimensionStacks [ expresion verifyIndex ] assignMatrix accessStruct init .)


state 328

    (93) assignMatrix -> updateDimension [ expresion . verifyIndex ] errorAssignMatrix
    (153) verifyIndex -> .

    ]               reduce using rule 153 (verifyIndex -> .)

    verifyIndex                    shift and go to state 336

state 329

    (83) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign . returnFor PARFIN { rellenaBody body } returnAssign
    (85) returnFor -> .

    PARFIN          reduce using rule 85 (returnFor -> .)

    returnFor                      shift and go to state 337

state 330

    (113) condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso .

    ID              reduce using rule 113 (condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso .)
    PRINT           reduce using rule 113 (condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso .)
    READ            reduce using rule 113 (condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso .)
    IF              reduce using rule 113 (condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso .)
    FOR             reduce using rule 113 (condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso .)
    WHILE           reduce using rule 113 (condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso .)
    }               reduce using rule 113 (condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso .)
    RETURN          reduce using rule 113 (condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso .)


state 331

    (115) optionalElse -> errorElse ELSE . saveVerdadero { body }
    (168) saveVerdadero -> .

    {               reduce using rule 168 (saveVerdadero -> .)

    saveVerdadero                  shift and go to state 338

state 332

    (62) opReturns -> errorOpReturns RETURNS type saveReturnType { opVars saveQuadruple body return .

    }               reduce using rule 62 (opReturns -> errorOpReturns RETURNS type saveReturnType { opVars saveQuadruple body return .)


state 333

    (54) return -> errorReturn . RETURN expresion saveReturnValue ;

    RETURN          shift and go to state 339


state 334

    (156) opMatrix -> errorOpMatrix updateDimension . [ expresion verifyIndex ]

    [               shift and go to state 340


state 335

    (151) opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct .

    MULT            reduce using rule 151 (opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct .)
    DIV             reduce using rule 151 (opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct .)
    RES             reduce using rule 151 (opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct .)
    PLUS            reduce using rule 151 (opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct .)
    MINUS           reduce using rule 151 (opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct .)
    ,               reduce using rule 151 (opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct .)
    PARFIN          reduce using rule 151 (opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct .)
    EQ              reduce using rule 151 (opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct .)
    DIF             reduce using rule 151 (opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct .)
    LTOEQ           reduce using rule 151 (opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct .)
    GTOEQ           reduce using rule 151 (opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct .)
    GT              reduce using rule 151 (opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct .)
    LT              reduce using rule 151 (opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct .)
    AND             reduce using rule 151 (opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct .)
    OR              reduce using rule 151 (opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct .)
    ]               reduce using rule 151 (opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct .)
    ;               reduce using rule 151 (opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct .)


state 336

    (93) assignMatrix -> updateDimension [ expresion verifyIndex . ] errorAssignMatrix

    ]               shift and go to state 341


state 337

    (83) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor . PARFIN { rellenaBody body } returnAssign

    PARFIN          shift and go to state 342


state 338

    (115) optionalElse -> errorElse ELSE saveVerdadero . { body }

    {               shift and go to state 343


state 339

    (54) return -> errorReturn RETURN . expresion saveReturnValue ;
    (118) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (123) sExp -> . exp errorOpSExp opSExp performRelational
    (132) exp -> . term performAddSub errorCyExp cyExp
    (137) term -> . fact performMulDiv cyTerm
    (142) fact -> . CTES saveConstantString
    (143) fact -> . cte
    (144) fact -> . funcCall
    (145) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (146) fact -> . ID saveVariable opAccess errorOpAccess
    (160) cte -> . CTED saveConstantInt
    (161) cte -> . CTEF saveConstantFloat
    (162) cte -> . TRUE saveConstantBool
    (163) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams

    CTES            shift and go to state 124
    PARINI          shift and go to state 121
    ID              shift and go to state 123
    CTED            shift and go to state 122
    CTEF            shift and go to state 129
    TRUE            shift and go to state 120
    FALSE           shift and go to state 126

    sExp                           shift and go to state 162
    expresion                      shift and go to state 344
    term                           shift and go to state 125
    funcCall                       shift and go to state 127
    cte                            shift and go to state 128
    exp                            shift and go to state 164
    fact                           shift and go to state 131

state 340

    (156) opMatrix -> errorOpMatrix updateDimension [ . expresion verifyIndex ]
    (118) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (123) sExp -> . exp errorOpSExp opSExp performRelational
    (132) exp -> . term performAddSub errorCyExp cyExp
    (137) term -> . fact performMulDiv cyTerm
    (142) fact -> . CTES saveConstantString
    (143) fact -> . cte
    (144) fact -> . funcCall
    (145) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (146) fact -> . ID saveVariable opAccess errorOpAccess
    (160) cte -> . CTED saveConstantInt
    (161) cte -> . CTEF saveConstantFloat
    (162) cte -> . TRUE saveConstantBool
    (163) cte -> . FALSE saveConstantBool
    (96) funcCall -> . ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams

    CTES            shift and go to state 124
    PARINI          shift and go to state 121
    ID              shift and go to state 123
    CTED            shift and go to state 122
    CTEF            shift and go to state 129
    TRUE            shift and go to state 120
    FALSE           shift and go to state 126

    sExp                           shift and go to state 162
    expresion                      shift and go to state 345
    term                           shift and go to state 125
    funcCall                       shift and go to state 127
    cte                            shift and go to state 128
    exp                            shift and go to state 164
    fact                           shift and go to state 131

state 341

    (93) assignMatrix -> updateDimension [ expresion verifyIndex ] . errorAssignMatrix
    (95) errorAssignMatrix -> .

    ASGN            reduce using rule 95 (errorAssignMatrix -> .)

    errorAssignMatrix              shift and go to state 346

state 342

    (83) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN . { rellenaBody body } returnAssign

    {               shift and go to state 347


state 343

    (115) optionalElse -> errorElse ELSE saveVerdadero { . body }
    (73) body -> . errorBody cyInstruction
    (74) body -> . empty
    (75) errorBody -> .
    (164) empty -> .

    ID              reduce using rule 75 (errorBody -> .)
    PRINT           reduce using rule 75 (errorBody -> .)
    READ            reduce using rule 75 (errorBody -> .)
    IF              reduce using rule 75 (errorBody -> .)
    FOR             reduce using rule 75 (errorBody -> .)
    WHILE           reduce using rule 75 (errorBody -> .)
    }               reduce using rule 164 (empty -> .)

    body                           shift and go to state 348
    errorBody                      shift and go to state 73
    empty                          shift and go to state 74

state 344

    (54) return -> errorReturn RETURN expresion . saveReturnValue ;
    (55) saveReturnValue -> .

    ;               reduce using rule 55 (saveReturnValue -> .)

    saveReturnValue                shift and go to state 349

state 345

    (156) opMatrix -> errorOpMatrix updateDimension [ expresion . verifyIndex ]
    (153) verifyIndex -> .

    ]               reduce using rule 153 (verifyIndex -> .)

    verifyIndex                    shift and go to state 350

state 346

    (93) assignMatrix -> updateDimension [ expresion verifyIndex ] errorAssignMatrix .

    ASGN            reduce using rule 93 (assignMatrix -> updateDimension [ expresion verifyIndex ] errorAssignMatrix .)


state 347

    (83) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { . rellenaBody body } returnAssign
    (86) rellenaBody -> .

    }               reduce using rule 86 (rellenaBody -> .)
    ID              reduce using rule 86 (rellenaBody -> .)
    PRINT           reduce using rule 86 (rellenaBody -> .)
    READ            reduce using rule 86 (rellenaBody -> .)
    IF              reduce using rule 86 (rellenaBody -> .)
    FOR             reduce using rule 86 (rellenaBody -> .)
    WHILE           reduce using rule 86 (rellenaBody -> .)

    rellenaBody                    shift and go to state 351

state 348

    (115) optionalElse -> errorElse ELSE saveVerdadero { body . }

    }               shift and go to state 352


state 349

    (54) return -> errorReturn RETURN expresion saveReturnValue . ;

    ;               shift and go to state 353


state 350

    (156) opMatrix -> errorOpMatrix updateDimension [ expresion verifyIndex . ]

    ]               shift and go to state 354


state 351

    (83) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody . body } returnAssign
    (73) body -> . errorBody cyInstruction
    (74) body -> . empty
    (75) errorBody -> .
    (164) empty -> .

    ID              reduce using rule 75 (errorBody -> .)
    PRINT           reduce using rule 75 (errorBody -> .)
    READ            reduce using rule 75 (errorBody -> .)
    IF              reduce using rule 75 (errorBody -> .)
    FOR             reduce using rule 75 (errorBody -> .)
    WHILE           reduce using rule 75 (errorBody -> .)
    }               reduce using rule 164 (empty -> .)

    body                           shift and go to state 355
    errorBody                      shift and go to state 73
    empty                          shift and go to state 74

state 352

    (115) optionalElse -> errorElse ELSE saveVerdadero { body } .

    ID              reduce using rule 115 (optionalElse -> errorElse ELSE saveVerdadero { body } .)
    PRINT           reduce using rule 115 (optionalElse -> errorElse ELSE saveVerdadero { body } .)
    READ            reduce using rule 115 (optionalElse -> errorElse ELSE saveVerdadero { body } .)
    IF              reduce using rule 115 (optionalElse -> errorElse ELSE saveVerdadero { body } .)
    FOR             reduce using rule 115 (optionalElse -> errorElse ELSE saveVerdadero { body } .)
    WHILE           reduce using rule 115 (optionalElse -> errorElse ELSE saveVerdadero { body } .)
    }               reduce using rule 115 (optionalElse -> errorElse ELSE saveVerdadero { body } .)
    RETURN          reduce using rule 115 (optionalElse -> errorElse ELSE saveVerdadero { body } .)


state 353

    (54) return -> errorReturn RETURN expresion saveReturnValue ; .

    }               reduce using rule 54 (return -> errorReturn RETURN expresion saveReturnValue ; .)


state 354

    (156) opMatrix -> errorOpMatrix updateDimension [ expresion verifyIndex ] .

    MULT            reduce using rule 156 (opMatrix -> errorOpMatrix updateDimension [ expresion verifyIndex ] .)
    DIV             reduce using rule 156 (opMatrix -> errorOpMatrix updateDimension [ expresion verifyIndex ] .)
    RES             reduce using rule 156 (opMatrix -> errorOpMatrix updateDimension [ expresion verifyIndex ] .)
    PLUS            reduce using rule 156 (opMatrix -> errorOpMatrix updateDimension [ expresion verifyIndex ] .)
    MINUS           reduce using rule 156 (opMatrix -> errorOpMatrix updateDimension [ expresion verifyIndex ] .)
    ,               reduce using rule 156 (opMatrix -> errorOpMatrix updateDimension [ expresion verifyIndex ] .)
    PARFIN          reduce using rule 156 (opMatrix -> errorOpMatrix updateDimension [ expresion verifyIndex ] .)
    EQ              reduce using rule 156 (opMatrix -> errorOpMatrix updateDimension [ expresion verifyIndex ] .)
    DIF             reduce using rule 156 (opMatrix -> errorOpMatrix updateDimension [ expresion verifyIndex ] .)
    LTOEQ           reduce using rule 156 (opMatrix -> errorOpMatrix updateDimension [ expresion verifyIndex ] .)
    GTOEQ           reduce using rule 156 (opMatrix -> errorOpMatrix updateDimension [ expresion verifyIndex ] .)
    GT              reduce using rule 156 (opMatrix -> errorOpMatrix updateDimension [ expresion verifyIndex ] .)
    LT              reduce using rule 156 (opMatrix -> errorOpMatrix updateDimension [ expresion verifyIndex ] .)
    AND             reduce using rule 156 (opMatrix -> errorOpMatrix updateDimension [ expresion verifyIndex ] .)
    OR              reduce using rule 156 (opMatrix -> errorOpMatrix updateDimension [ expresion verifyIndex ] .)
    ]               reduce using rule 156 (opMatrix -> errorOpMatrix updateDimension [ expresion verifyIndex ] .)
    ;               reduce using rule 156 (opMatrix -> errorOpMatrix updateDimension [ expresion verifyIndex ] .)


state 355

    (83) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body . } returnAssign

    }               shift and go to state 356


state 356

    (83) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } . returnAssign
    (87) returnAssign -> .

    ID              reduce using rule 87 (returnAssign -> .)
    PRINT           reduce using rule 87 (returnAssign -> .)
    READ            reduce using rule 87 (returnAssign -> .)
    IF              reduce using rule 87 (returnAssign -> .)
    FOR             reduce using rule 87 (returnAssign -> .)
    WHILE           reduce using rule 87 (returnAssign -> .)
    }               reduce using rule 87 (returnAssign -> .)
    RETURN          reduce using rule 87 (returnAssign -> .)

    returnAssign                   shift and go to state 357

state 357

    (83) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign .

    ID              reduce using rule 83 (forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign .)
    PRINT           reduce using rule 83 (forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign .)
    READ            reduce using rule 83 (forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign .)
    IF              reduce using rule 83 (forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign .)
    FOR             reduce using rule 83 (forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign .)
    WHILE           reduce using rule 83 (forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign .)
    }               reduce using rule 83 (forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign .)
    RETURN          reduce using rule 83 (forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 256 resolved using rule (initWith -> funcCall)
WARNING: rejected rule (fact -> funcCall) in state 256
