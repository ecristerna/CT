Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables
Rule 2     changeCurrentScope -> <empty>
Rule 3     saveType -> <empty>
Rule 4     saveProc -> <empty>
Rule 5     errorProgram -> <empty>
Rule 6     opVars -> vars
Rule 7     opVars -> empty
Rule 8     opFunctions -> function opFunctions
Rule 9     opFunctions -> empty
Rule 10    vars -> errorVars VARS declare
Rule 11    saveID -> <empty>
Rule 12    errorVars -> <empty>
Rule 13    type -> errorType INT
Rule 14    type -> FLOAT
Rule 15    type -> STRING
Rule 16    type -> BOOL
Rule 17    errorType -> <empty>
Rule 18    main -> errorMain MAIN saveMain { opVars saveQuadruple generateInitialQuadruple body } clearVarsTable
Rule 19    generateInitialQuadruple -> <empty>
Rule 20    saveMain -> <empty>
Rule 21    errorMain -> <empty>
Rule 22    instr -> basicStatements ;
Rule 23    instr -> condition
Rule 24    instr -> cycle
Rule 25    basicStatements -> assign
Rule 26    basicStatements -> funcCall
Rule 27    basicStatements -> print
Rule 28    basicStatements -> read
Rule 29    print -> PRINT PARINI exp performPrint cyPrint PARFIN
Rule 30    cyPrint -> , fix exp performPrint cyPrint
Rule 31    cyPrint -> empty
Rule 32    read -> READ PARINI ID performRead cyRead PARFIN
Rule 33    cyRead -> , fix ID performRead cyRead
Rule 34    cyRead -> empty
Rule 35    fix -> <empty>
Rule 36    declare -> basicDeclare
Rule 37    declare -> structDeclare
Rule 38    declare -> dictDeclare
Rule 39    init -> ASGN saveOperator errorInit initWith
Rule 40    errorInit -> <empty>
Rule 41    initWith -> expresion
Rule 42    initWith -> funcCall
Rule 43    initDict -> ASGN PARINI dictType : dictType PARFIN errorInitDict
Rule 44    errorInitDict -> <empty>
Rule 45    dictType -> errorDictType CTES
Rule 46    dictType -> cte
Rule 47    dictType -> ID
Rule 48    errorDictType -> <empty>
Rule 49    param -> saveType type errorParam ID cyTypeParam cyParam
Rule 50    errorParam -> <empty>
Rule 51    cyParam -> errorCyParam saveID saveTypeParam ; param
Rule 52    cyParam -> empty saveID saveTypeParam
Rule 53    cyTypeParam -> , saveID saveTypeParam ID cyTypeParam
Rule 54    cyTypeParam -> empty
Rule 55    saveTypeParam -> <empty>
Rule 56    errorCyParam -> <empty>
Rule 57    function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
Rule 58    saveCurrentTemps -> <empty>
Rule 59    errorFunction -> <empty>
Rule 60    clearVarsTable -> <empty>
Rule 61    return -> errorReturn RETURN expresion ;
Rule 62    errorReturn -> <empty>
Rule 63    opParameters -> param saveParamToDirProc errorOpParameters
Rule 64    opParameters -> empty
Rule 65    flagParameters -> <empty>
Rule 66    saveParamToDirProc -> <empty>
Rule 67    errorOpParameters -> <empty>
Rule 68    opReturns -> errorOpReturns RETURNS type saveReturnType { opVars saveQuadruple body return
Rule 69    opReturns -> { opVars saveQuadruple body
Rule 70    saveQuadruple -> <empty>
Rule 71    saveReturnType -> <empty>
Rule 72    errorOpReturns -> <empty>
Rule 73    basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
Rule 74    errorBasicDeclare -> <empty>
Rule 75    structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare
Rule 76    errorStructDeclare -> <empty>
Rule 77    dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare
Rule 78    errorDictDeclare -> <empty>
Rule 79    cyDeclare -> declare
Rule 80    cyDeclare -> empty
Rule 81    body -> errorBody cyInstruction
Rule 82    body -> empty
Rule 83    errorBody -> <empty>
Rule 84    cyInstruction -> instr body
Rule 85    cycle -> forCycle
Rule 86    cycle -> whileCycle
Rule 87    whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile
Rule 88    repeatWhile -> <empty>
Rule 89    saveReturn -> <empty>
Rule 90    errorWhileCycle -> <empty>
Rule 91    forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign
Rule 92    saltoBody -> <empty>
Rule 93    returnFor -> <empty>
Rule 94    rellenaBody -> <empty>
Rule 95    returnAssign -> <empty>
Rule 96    errorForCycle -> <empty>
Rule 97    assign -> ID saveVariable errorAssign assignOptions performAssign
Rule 98    errorAssign -> <empty>
Rule 99    assignOptions -> init
Rule 100   assignOptions -> initDict
Rule 101   assignOptions -> [ expresion ] assignMatrix init
Rule 102   assignMatrix -> [ expresion ] errorAssignMatrix
Rule 103   assignMatrix -> empty
Rule 104   errorAssignMatrix -> <empty>
Rule 105   funcCall -> ID PARINI opParamCall PARFIN
Rule 106   opParamCall -> expresion cyParamCall
Rule 107   opParamCall -> empty
Rule 108   cyParamCall -> , expresion cyParamCall
Rule 109   cyParamCall -> empty
Rule 110   struct -> structType [ CTED ] optionalMatrix
Rule 111   structType -> type
Rule 112   structType -> DICT dict
Rule 113   optionalMatrix -> [ CTED ]
Rule 114   optionalMatrix -> empty
Rule 115   condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso
Rule 116   errorCondition -> <empty>
Rule 117   optionalElse -> errorElse ELSE saveVerdadero { body }
Rule 118   optionalElse -> empty
Rule 119   errorElse -> <empty>
Rule 120   dict -> errorDict PARINI type : type PARFIN
Rule 121   errorDict -> <empty>
Rule 122   expresion -> sExp performAndOr cyExpresion errorExpresion
Rule 123   errorExpresion -> <empty>
Rule 124   cyExpresion -> AND saveOperator expresion
Rule 125   cyExpresion -> OR saveOperator expresion
Rule 126   cyExpresion -> empty
Rule 127   sExp -> exp errorOpSExp opSExp performRelational
Rule 128   opSExp -> EQ saveOperator exp
Rule 129   opSExp -> DIF saveOperator exp
Rule 130   opSExp -> LTOEQ saveOperator exp
Rule 131   opSExp -> GTOEQ saveOperator exp
Rule 132   opSExp -> GT saveOperator exp
Rule 133   opSExp -> LT saveOperator exp
Rule 134   opSExp -> empty
Rule 135   errorOpSExp -> <empty>
Rule 136   exp -> term performAddSub errorCyExp cyExp
Rule 137   cyExp -> PLUS saveOperator exp
Rule 138   cyExp -> MINUS saveOperator exp
Rule 139   cyExp -> empty
Rule 140   errorCyExp -> <empty>
Rule 141   term -> fact performMulDiv cyTerm
Rule 142   cyTerm -> MULT saveOperator errorFact term
Rule 143   cyTerm -> DIV saveOperator term
Rule 144   cyTerm -> empty
Rule 145   fact -> CTES saveConstantString
Rule 146   fact -> cte
Rule 147   fact -> funcCall
Rule 148   fact -> PARINI putFondo expresion PARFIN takeFondo
Rule 149   fact -> ID saveVariable opAccess errorOpAccess
Rule 150   errorFact -> <empty>
Rule 151   opAccess -> opStruct
Rule 152   opAccess -> opDictionary
Rule 153   opAccess -> empty
Rule 154   errorOpAccess -> <empty>
Rule 155   opStruct -> errorOpStruct [ expresion ] opMatrix
Rule 156   errorOpStruct -> <empty>
Rule 157   opMatrix -> errorOpMatrix [ expresion ]
Rule 158   opMatrix -> empty
Rule 159   errorOpMatrix -> <empty>
Rule 160   opDictionary -> . dictIndex
Rule 161   dictIndex -> FIRST
Rule 162   dictIndex -> LAST
Rule 163   cte -> CTED saveConstantInt
Rule 164   cte -> CTEF saveConstantFloat
Rule 165   cte -> TRUE saveConstantBool
Rule 166   cte -> FALSE saveConstantBool
Rule 167   empty -> <empty>
Rule 168   printTables -> <empty>
Rule 169   rellenaFalso -> <empty>
Rule 170   saveFalso -> <empty>
Rule 171   saveVerdadero -> <empty>
Rule 172   saveConstantInt -> <empty>
Rule 173   saveConstantFloat -> <empty>
Rule 174   saveConstantBool -> <empty>
Rule 175   saveConstantString -> <empty>
Rule 176   saveVariable -> <empty>
Rule 177   saveOperator -> <empty>
Rule 178   putFondo -> <empty>
Rule 179   takeFondo -> <empty>
Rule 180   performAssign -> <empty>
Rule 181   performMulDiv -> <empty>
Rule 182   performAddSub -> <empty>
Rule 183   performRelational -> <empty>
Rule 184   performAndOr -> <empty>
Rule 185   performPrint -> <empty>
Rule 186   performRead -> <empty>

Terminals, with rules where they appear

,                    : 30 33 53 108
.                    : 160
:                    : 43 120
;                    : 22 51 61 73 75 77 91 91
AND                  : 124
ASGN                 : 39 43
BOOL                 : 16
CTED                 : 110 113 163
CTEF                 : 164
CTES                 : 45 145
DICT                 : 77 112
DIF                  : 129
DIV                  : 143
ELSE                 : 117
EQ                   : 128
FALSE                : 166
FIRST                : 161
FLOAT                : 14
FOR                  : 91
FUNC                 : 57
GT                   : 132
GTOEQ                : 131
ID                   : 1 32 33 47 49 53 57 73 75 77 97 105 149
IF                   : 115
INT                  : 13
LAST                 : 162
LT                   : 133
LTOEQ                : 130
MAIN                 : 18
MINUS                : 138
MULT                 : 142
OR                   : 125
PARFIN               : 29 32 43 57 87 91 105 115 120 148
PARINI               : 29 32 43 57 87 91 105 115 120 148
PLUS                 : 137
PRINT                : 29
PROGRAM              : 1
READ                 : 32
RETURN               : 61
RETURNS              : 68
STRING               : 15
STRUCT               : 75
TRUE                 : 165
VARS                 : 10
WHILE                : 87
[                    : 101 102 110 113 155 157
]                    : 101 102 110 113 155 157
error                : 
{                    : 1 18 68 69 87 91 115 117
}                    : 1 18 57 87 91 115 117

Nonterminals, with rules where they appear

assign               : 25 91 91
assignMatrix         : 101
assignOptions        : 97
basicDeclare         : 36
basicStatements      : 22
body                 : 18 68 69 84 87 91 115 117
changeCurrentScope   : 1
clearVarsTable       : 18 57
condition            : 23
cte                  : 46 146
cyDeclare            : 73 75 77
cyExp                : 136
cyExpresion          : 122
cyInstruction        : 81
cyParam              : 49
cyParamCall          : 106 108
cyPrint              : 29 30
cyRead               : 32 33
cyTerm               : 141
cyTypeParam          : 49 53 73
cycle                : 24
declare              : 10 79
dict                 : 77 112
dictDeclare          : 38
dictIndex            : 160
dictType             : 43 43
empty                : 7 9 31 34 52 54 64 80 82 103 107 109 114 118 126 134 139 144 153 158
errorAssign          : 97
errorAssignMatrix    : 102
errorBasicDeclare    : 73
errorBody            : 81
errorCondition       : 115
errorCyExp           : 136
errorCyParam         : 51
errorDict            : 120
errorDictDeclare     : 77
errorDictType        : 45
errorElse            : 117
errorExpresion       : 122
errorFact            : 142
errorForCycle        : 91
errorFunction        : 57
errorInit            : 39
errorInitDict        : 43
errorMain            : 18
errorOpAccess        : 149
errorOpMatrix        : 157
errorOpParameters    : 63
errorOpReturns       : 68
errorOpSExp          : 127
errorOpStruct        : 155
errorParam           : 49
errorProgram         : 1
errorReturn          : 61
errorStructDeclare   : 75
errorType            : 13
errorVars            : 10
errorWhileCycle      : 87
exp                  : 29 30 127 128 129 130 131 132 133 137 138
expresion            : 41 61 87 91 101 102 106 108 115 124 125 148 155 157
fact                 : 141
fix                  : 30 33
flagParameters       : 57 57
forCycle             : 85
funcCall             : 26 42 147
function             : 8
generateInitialQuadruple : 18
init                 : 99 101
initDict             : 100
initWith             : 39
instr                : 84
main                 : 1
opAccess             : 149
opDictionary         : 152
opFunctions          : 1 8
opMatrix             : 155
opParamCall          : 105
opParameters         : 57
opReturns            : 57
opSExp               : 127
opStruct             : 151
opVars               : 1 18 68 69
optionalElse         : 115
optionalMatrix       : 110
param                : 51 63
performAddSub        : 136
performAndOr         : 122
performAssign        : 97
performMulDiv        : 141
performPrint         : 29 30
performRead          : 32 33
performRelational    : 127
print                : 27
printTables          : 1
program              : 0
putFondo             : 148
read                 : 28
rellenaBody          : 91
rellenaFalso         : 115
repeatWhile          : 87
return               : 68
returnAssign         : 91
returnFor            : 91
sExp                 : 122
saltoBody            : 91
saveConstantBool     : 165 166
saveConstantFloat    : 164
saveConstantInt      : 163
saveConstantString   : 145
saveCurrentTemps     : 57
saveFalso            : 87 91 115
saveID               : 51 52 53 73
saveMain             : 18
saveOperator         : 39 124 125 128 129 130 131 132 133 137 138 142 143
saveParamToDirProc   : 63
saveProc             : 1 57
saveQuadruple        : 18 68 69
saveReturn           : 87 91
saveReturnType       : 68
saveType             : 1 49 57 73
saveTypeParam        : 51 52 53
saveVariable         : 97 149
saveVerdadero        : 117
struct               : 75
structDeclare        : 37
structType           : 110
takeFondo            : 148
term                 : 136 142 143
type                 : 49 68 73 111 120 120
vars                 : 6
whileCycle           : 86

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables
    (5) errorProgram -> .

    PROGRAM         reduce using rule 5 (errorProgram -> .)

    errorProgram                   shift and go to state 2
    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> errorProgram . PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables

    PROGRAM         shift and go to state 3


state 3

    (1) program -> errorProgram PROGRAM . saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables
    (3) saveType -> .

    ID              reduce using rule 3 (saveType -> .)

    saveType                       shift and go to state 4

state 4

    (1) program -> errorProgram PROGRAM saveType . ID saveProc { opVars changeCurrentScope opFunctions main } printTables

    ID              shift and go to state 5


state 5

    (1) program -> errorProgram PROGRAM saveType ID . saveProc { opVars changeCurrentScope opFunctions main } printTables
    (4) saveProc -> .

    {               reduce using rule 4 (saveProc -> .)

    saveProc                       shift and go to state 6

state 6

    (1) program -> errorProgram PROGRAM saveType ID saveProc . { opVars changeCurrentScope opFunctions main } printTables

    {               shift and go to state 7


state 7

    (1) program -> errorProgram PROGRAM saveType ID saveProc { . opVars changeCurrentScope opFunctions main } printTables
    (6) opVars -> . vars
    (7) opVars -> . empty
    (10) vars -> . errorVars VARS declare
    (167) empty -> .
    (12) errorVars -> .

    MAIN            reduce using rule 167 (empty -> .)
    FUNC            reduce using rule 167 (empty -> .)
    VARS            reduce using rule 12 (errorVars -> .)

    vars                           shift and go to state 8
    opVars                         shift and go to state 9
    errorVars                      shift and go to state 10
    empty                          shift and go to state 11

state 8

    (6) opVars -> vars .

    }               reduce using rule 6 (opVars -> vars .)
    ID              reduce using rule 6 (opVars -> vars .)
    PRINT           reduce using rule 6 (opVars -> vars .)
    READ            reduce using rule 6 (opVars -> vars .)
    IF              reduce using rule 6 (opVars -> vars .)
    FOR             reduce using rule 6 (opVars -> vars .)
    WHILE           reduce using rule 6 (opVars -> vars .)
    MAIN            reduce using rule 6 (opVars -> vars .)
    FUNC            reduce using rule 6 (opVars -> vars .)
    RETURN          reduce using rule 6 (opVars -> vars .)


state 9

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars . changeCurrentScope opFunctions main } printTables
    (2) changeCurrentScope -> .

    MAIN            reduce using rule 2 (changeCurrentScope -> .)
    FUNC            reduce using rule 2 (changeCurrentScope -> .)

    changeCurrentScope             shift and go to state 12

state 10

    (10) vars -> errorVars . VARS declare

    VARS            shift and go to state 13


state 11

    (7) opVars -> empty .

    }               reduce using rule 7 (opVars -> empty .)
    ID              reduce using rule 7 (opVars -> empty .)
    PRINT           reduce using rule 7 (opVars -> empty .)
    READ            reduce using rule 7 (opVars -> empty .)
    IF              reduce using rule 7 (opVars -> empty .)
    FOR             reduce using rule 7 (opVars -> empty .)
    WHILE           reduce using rule 7 (opVars -> empty .)
    MAIN            reduce using rule 7 (opVars -> empty .)
    FUNC            reduce using rule 7 (opVars -> empty .)
    RETURN          reduce using rule 7 (opVars -> empty .)


state 12

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope . opFunctions main } printTables
    (8) opFunctions -> . function opFunctions
    (9) opFunctions -> . empty
    (57) function -> . errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (167) empty -> .
    (59) errorFunction -> .

    MAIN            reduce using rule 167 (empty -> .)
    FUNC            reduce using rule 59 (errorFunction -> .)

    function                       shift and go to state 16
    errorFunction                  shift and go to state 17
    empty                          shift and go to state 15
    opFunctions                    shift and go to state 14

state 13

    (10) vars -> errorVars VARS . declare
    (36) declare -> . basicDeclare
    (37) declare -> . structDeclare
    (38) declare -> . dictDeclare
    (73) basicDeclare -> . saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (75) structDeclare -> . errorStructDeclare STRUCT ID struct ; cyDeclare
    (77) dictDeclare -> . errorDictDeclare DICT ID dict ; cyDeclare
    (3) saveType -> .
    (76) errorStructDeclare -> .
    (78) errorDictDeclare -> .

    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)
    STRUCT          reduce using rule 76 (errorStructDeclare -> .)
    DICT            reduce using rule 78 (errorDictDeclare -> .)

    dictDeclare                    shift and go to state 18
    saveType                       shift and go to state 19
    errorDictDeclare               shift and go to state 20
    structDeclare                  shift and go to state 21
    errorStructDeclare             shift and go to state 22
    basicDeclare                   shift and go to state 23
    declare                        shift and go to state 24

state 14

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions . main } printTables
    (18) main -> . errorMain MAIN saveMain { opVars saveQuadruple generateInitialQuadruple body } clearVarsTable
    (21) errorMain -> .

    MAIN            reduce using rule 21 (errorMain -> .)

    main                           shift and go to state 25
    errorMain                      shift and go to state 26

state 15

    (9) opFunctions -> empty .

    MAIN            reduce using rule 9 (opFunctions -> empty .)


state 16

    (8) opFunctions -> function . opFunctions
    (8) opFunctions -> . function opFunctions
    (9) opFunctions -> . empty
    (57) function -> . errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (167) empty -> .
    (59) errorFunction -> .

    MAIN            reduce using rule 167 (empty -> .)
    FUNC            reduce using rule 59 (errorFunction -> .)

    function                       shift and go to state 16
    errorFunction                  shift and go to state 17
    empty                          shift and go to state 15
    opFunctions                    shift and go to state 27

state 17

    (57) function -> errorFunction . saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (58) saveCurrentTemps -> .

    FUNC            reduce using rule 58 (saveCurrentTemps -> .)

    saveCurrentTemps               shift and go to state 28

state 18

    (38) declare -> dictDeclare .

    MAIN            reduce using rule 38 (declare -> dictDeclare .)
    FUNC            reduce using rule 38 (declare -> dictDeclare .)
    }               reduce using rule 38 (declare -> dictDeclare .)
    ID              reduce using rule 38 (declare -> dictDeclare .)
    PRINT           reduce using rule 38 (declare -> dictDeclare .)
    READ            reduce using rule 38 (declare -> dictDeclare .)
    IF              reduce using rule 38 (declare -> dictDeclare .)
    FOR             reduce using rule 38 (declare -> dictDeclare .)
    WHILE           reduce using rule 38 (declare -> dictDeclare .)
    RETURN          reduce using rule 38 (declare -> dictDeclare .)


state 19

    (73) basicDeclare -> saveType . type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    errorType                      shift and go to state 31
    type                           shift and go to state 33

state 20

    (77) dictDeclare -> errorDictDeclare . DICT ID dict ; cyDeclare

    DICT            shift and go to state 34


state 21

    (37) declare -> structDeclare .

    MAIN            reduce using rule 37 (declare -> structDeclare .)
    FUNC            reduce using rule 37 (declare -> structDeclare .)
    }               reduce using rule 37 (declare -> structDeclare .)
    ID              reduce using rule 37 (declare -> structDeclare .)
    PRINT           reduce using rule 37 (declare -> structDeclare .)
    READ            reduce using rule 37 (declare -> structDeclare .)
    IF              reduce using rule 37 (declare -> structDeclare .)
    FOR             reduce using rule 37 (declare -> structDeclare .)
    WHILE           reduce using rule 37 (declare -> structDeclare .)
    RETURN          reduce using rule 37 (declare -> structDeclare .)


state 22

    (75) structDeclare -> errorStructDeclare . STRUCT ID struct ; cyDeclare

    STRUCT          shift and go to state 35


state 23

    (36) declare -> basicDeclare .

    MAIN            reduce using rule 36 (declare -> basicDeclare .)
    FUNC            reduce using rule 36 (declare -> basicDeclare .)
    }               reduce using rule 36 (declare -> basicDeclare .)
    ID              reduce using rule 36 (declare -> basicDeclare .)
    PRINT           reduce using rule 36 (declare -> basicDeclare .)
    READ            reduce using rule 36 (declare -> basicDeclare .)
    IF              reduce using rule 36 (declare -> basicDeclare .)
    FOR             reduce using rule 36 (declare -> basicDeclare .)
    WHILE           reduce using rule 36 (declare -> basicDeclare .)
    RETURN          reduce using rule 36 (declare -> basicDeclare .)


state 24

    (10) vars -> errorVars VARS declare .

    ID              reduce using rule 10 (vars -> errorVars VARS declare .)
    PRINT           reduce using rule 10 (vars -> errorVars VARS declare .)
    READ            reduce using rule 10 (vars -> errorVars VARS declare .)
    IF              reduce using rule 10 (vars -> errorVars VARS declare .)
    FOR             reduce using rule 10 (vars -> errorVars VARS declare .)
    WHILE           reduce using rule 10 (vars -> errorVars VARS declare .)
    }               reduce using rule 10 (vars -> errorVars VARS declare .)
    MAIN            reduce using rule 10 (vars -> errorVars VARS declare .)
    FUNC            reduce using rule 10 (vars -> errorVars VARS declare .)
    RETURN          reduce using rule 10 (vars -> errorVars VARS declare .)


state 25

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main . } printTables

    }               shift and go to state 36


state 26

    (18) main -> errorMain . MAIN saveMain { opVars saveQuadruple generateInitialQuadruple body } clearVarsTable

    MAIN            shift and go to state 37


state 27

    (8) opFunctions -> function opFunctions .

    MAIN            reduce using rule 8 (opFunctions -> function opFunctions .)


state 28

    (57) function -> errorFunction saveCurrentTemps . FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable

    FUNC            shift and go to state 38


state 29

    (14) type -> FLOAT .

    ID              reduce using rule 14 (type -> FLOAT .)
    {               reduce using rule 14 (type -> FLOAT .)
    PARFIN          reduce using rule 14 (type -> FLOAT .)
    [               reduce using rule 14 (type -> FLOAT .)
    :               reduce using rule 14 (type -> FLOAT .)


state 30

    (15) type -> STRING .

    ID              reduce using rule 15 (type -> STRING .)
    {               reduce using rule 15 (type -> STRING .)
    PARFIN          reduce using rule 15 (type -> STRING .)
    [               reduce using rule 15 (type -> STRING .)
    :               reduce using rule 15 (type -> STRING .)


state 31

    (13) type -> errorType . INT

    INT             shift and go to state 39


state 32

    (16) type -> BOOL .

    ID              reduce using rule 16 (type -> BOOL .)
    {               reduce using rule 16 (type -> BOOL .)
    PARFIN          reduce using rule 16 (type -> BOOL .)
    [               reduce using rule 16 (type -> BOOL .)
    :               reduce using rule 16 (type -> BOOL .)


state 33

    (73) basicDeclare -> saveType type . errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (74) errorBasicDeclare -> .

    ID              reduce using rule 74 (errorBasicDeclare -> .)

    errorBasicDeclare              shift and go to state 40

state 34

    (77) dictDeclare -> errorDictDeclare DICT . ID dict ; cyDeclare

    ID              shift and go to state 41


state 35

    (75) structDeclare -> errorStructDeclare STRUCT . ID struct ; cyDeclare

    ID              shift and go to state 42


state 36

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } . printTables
    (168) printTables -> .

    $end            reduce using rule 168 (printTables -> .)

    printTables                    shift and go to state 43

state 37

    (18) main -> errorMain MAIN . saveMain { opVars saveQuadruple generateInitialQuadruple body } clearVarsTable
    (20) saveMain -> .

    {               reduce using rule 20 (saveMain -> .)

    saveMain                       shift and go to state 44

state 38

    (57) function -> errorFunction saveCurrentTemps FUNC . saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (3) saveType -> .

    ID              reduce using rule 3 (saveType -> .)

    saveType                       shift and go to state 45

state 39

    (13) type -> errorType INT .

    ID              reduce using rule 13 (type -> errorType INT .)
    {               reduce using rule 13 (type -> errorType INT .)
    PARFIN          reduce using rule 13 (type -> errorType INT .)
    [               reduce using rule 13 (type -> errorType INT .)
    :               reduce using rule 13 (type -> errorType INT .)


state 40

    (73) basicDeclare -> saveType type errorBasicDeclare . ID cyTypeParam saveID ; cyDeclare

    ID              shift and go to state 46


state 41

    (77) dictDeclare -> errorDictDeclare DICT ID . dict ; cyDeclare
    (120) dict -> . errorDict PARINI type : type PARFIN
    (121) errorDict -> .

    PARINI          reduce using rule 121 (errorDict -> .)

    dict                           shift and go to state 48
    errorDict                      shift and go to state 47

state 42

    (75) structDeclare -> errorStructDeclare STRUCT ID . struct ; cyDeclare
    (110) struct -> . structType [ CTED ] optionalMatrix
    (111) structType -> . type
    (112) structType -> . DICT dict
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    DICT            shift and go to state 51
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    structType                     shift and go to state 49
    struct                         shift and go to state 50
    errorType                      shift and go to state 31
    type                           shift and go to state 52

state 43

    (1) program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables .

    $end            reduce using rule 1 (program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables .)


state 44

    (18) main -> errorMain MAIN saveMain . { opVars saveQuadruple generateInitialQuadruple body } clearVarsTable

    {               shift and go to state 53


state 45

    (57) function -> errorFunction saveCurrentTemps FUNC saveType . ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable

    ID              shift and go to state 54


state 46

    (73) basicDeclare -> saveType type errorBasicDeclare ID . cyTypeParam saveID ; cyDeclare
    (53) cyTypeParam -> . , saveID saveTypeParam ID cyTypeParam
    (54) cyTypeParam -> . empty
    (167) empty -> .

    ,               shift and go to state 55
    ;               reduce using rule 167 (empty -> .)

    empty                          shift and go to state 56
    cyTypeParam                    shift and go to state 57

state 47

    (120) dict -> errorDict . PARINI type : type PARFIN

    PARINI          shift and go to state 58


state 48

    (77) dictDeclare -> errorDictDeclare DICT ID dict . ; cyDeclare

    ;               shift and go to state 59


state 49

    (110) struct -> structType . [ CTED ] optionalMatrix

    [               shift and go to state 60


state 50

    (75) structDeclare -> errorStructDeclare STRUCT ID struct . ; cyDeclare

    ;               shift and go to state 61


state 51

    (112) structType -> DICT . dict
    (120) dict -> . errorDict PARINI type : type PARFIN
    (121) errorDict -> .

    PARINI          reduce using rule 121 (errorDict -> .)

    dict                           shift and go to state 62
    errorDict                      shift and go to state 47

state 52

    (111) structType -> type .

    [               reduce using rule 111 (structType -> type .)


state 53

    (18) main -> errorMain MAIN saveMain { . opVars saveQuadruple generateInitialQuadruple body } clearVarsTable
    (6) opVars -> . vars
    (7) opVars -> . empty
    (10) vars -> . errorVars VARS declare
    (167) empty -> .
    (12) errorVars -> .

    }               reduce using rule 167 (empty -> .)
    ID              reduce using rule 167 (empty -> .)
    PRINT           reduce using rule 167 (empty -> .)
    READ            reduce using rule 167 (empty -> .)
    IF              reduce using rule 167 (empty -> .)
    FOR             reduce using rule 167 (empty -> .)
    WHILE           reduce using rule 167 (empty -> .)
    VARS            reduce using rule 12 (errorVars -> .)

    vars                           shift and go to state 8
    opVars                         shift and go to state 63
    errorVars                      shift and go to state 10
    empty                          shift and go to state 11

state 54

    (57) function -> errorFunction saveCurrentTemps FUNC saveType ID . saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (4) saveProc -> .

    PARINI          reduce using rule 4 (saveProc -> .)

    saveProc                       shift and go to state 64

state 55

    (53) cyTypeParam -> , . saveID saveTypeParam ID cyTypeParam
    (11) saveID -> .

    ID              reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 65

state 56

    (54) cyTypeParam -> empty .

    ;               reduce using rule 54 (cyTypeParam -> empty .)
    PARFIN          reduce using rule 54 (cyTypeParam -> empty .)


state 57

    (73) basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam . saveID ; cyDeclare
    (11) saveID -> .

    ;               reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 66

state 58

    (120) dict -> errorDict PARINI . type : type PARFIN
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    errorType                      shift and go to state 31
    type                           shift and go to state 67

state 59

    (77) dictDeclare -> errorDictDeclare DICT ID dict ; . cyDeclare
    (79) cyDeclare -> . declare
    (80) cyDeclare -> . empty
    (36) declare -> . basicDeclare
    (37) declare -> . structDeclare
    (38) declare -> . dictDeclare
    (167) empty -> .
    (73) basicDeclare -> . saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (75) structDeclare -> . errorStructDeclare STRUCT ID struct ; cyDeclare
    (77) dictDeclare -> . errorDictDeclare DICT ID dict ; cyDeclare
    (3) saveType -> .
    (76) errorStructDeclare -> .
    (78) errorDictDeclare -> .

    MAIN            reduce using rule 167 (empty -> .)
    FUNC            reduce using rule 167 (empty -> .)
    }               reduce using rule 167 (empty -> .)
    ID              reduce using rule 167 (empty -> .)
    PRINT           reduce using rule 167 (empty -> .)
    READ            reduce using rule 167 (empty -> .)
    IF              reduce using rule 167 (empty -> .)
    FOR             reduce using rule 167 (empty -> .)
    WHILE           reduce using rule 167 (empty -> .)
    RETURN          reduce using rule 167 (empty -> .)
    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)
    STRUCT          reduce using rule 76 (errorStructDeclare -> .)
    DICT            reduce using rule 78 (errorDictDeclare -> .)

    dictDeclare                    shift and go to state 18
    cyDeclare                      shift and go to state 68
    saveType                       shift and go to state 19
    structDeclare                  shift and go to state 21
    errorDictDeclare               shift and go to state 20
    errorStructDeclare             shift and go to state 22
    basicDeclare                   shift and go to state 23
    declare                        shift and go to state 69
    empty                          shift and go to state 70

state 60

    (110) struct -> structType [ . CTED ] optionalMatrix

    CTED            shift and go to state 71


state 61

    (75) structDeclare -> errorStructDeclare STRUCT ID struct ; . cyDeclare
    (79) cyDeclare -> . declare
    (80) cyDeclare -> . empty
    (36) declare -> . basicDeclare
    (37) declare -> . structDeclare
    (38) declare -> . dictDeclare
    (167) empty -> .
    (73) basicDeclare -> . saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (75) structDeclare -> . errorStructDeclare STRUCT ID struct ; cyDeclare
    (77) dictDeclare -> . errorDictDeclare DICT ID dict ; cyDeclare
    (3) saveType -> .
    (76) errorStructDeclare -> .
    (78) errorDictDeclare -> .

    MAIN            reduce using rule 167 (empty -> .)
    FUNC            reduce using rule 167 (empty -> .)
    }               reduce using rule 167 (empty -> .)
    ID              reduce using rule 167 (empty -> .)
    PRINT           reduce using rule 167 (empty -> .)
    READ            reduce using rule 167 (empty -> .)
    IF              reduce using rule 167 (empty -> .)
    FOR             reduce using rule 167 (empty -> .)
    WHILE           reduce using rule 167 (empty -> .)
    RETURN          reduce using rule 167 (empty -> .)
    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)
    STRUCT          reduce using rule 76 (errorStructDeclare -> .)
    DICT            reduce using rule 78 (errorDictDeclare -> .)

    dictDeclare                    shift and go to state 18
    cyDeclare                      shift and go to state 72
    saveType                       shift and go to state 19
    errorDictDeclare               shift and go to state 20
    structDeclare                  shift and go to state 21
    basicDeclare                   shift and go to state 23
    declare                        shift and go to state 69
    empty                          shift and go to state 70
    errorStructDeclare             shift and go to state 22

state 62

    (112) structType -> DICT dict .

    [               reduce using rule 112 (structType -> DICT dict .)


state 63

    (18) main -> errorMain MAIN saveMain { opVars . saveQuadruple generateInitialQuadruple body } clearVarsTable
    (70) saveQuadruple -> .

    }               reduce using rule 70 (saveQuadruple -> .)
    ID              reduce using rule 70 (saveQuadruple -> .)
    PRINT           reduce using rule 70 (saveQuadruple -> .)
    READ            reduce using rule 70 (saveQuadruple -> .)
    IF              reduce using rule 70 (saveQuadruple -> .)
    FOR             reduce using rule 70 (saveQuadruple -> .)
    WHILE           reduce using rule 70 (saveQuadruple -> .)

    saveQuadruple                  shift and go to state 73

state 64

    (57) function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc . flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable
    (65) flagParameters -> .

    PARINI          reduce using rule 65 (flagParameters -> .)

    flagParameters                 shift and go to state 74

state 65

    (53) cyTypeParam -> , saveID . saveTypeParam ID cyTypeParam
    (55) saveTypeParam -> .

    ID              reduce using rule 55 (saveTypeParam -> .)

    saveTypeParam                  shift and go to state 75

state 66

    (73) basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID . ; cyDeclare

    ;               shift and go to state 76


state 67

    (120) dict -> errorDict PARINI type . : type PARFIN

    :               shift and go to state 77


state 68

    (77) dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .

    MAIN            reduce using rule 77 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    FUNC            reduce using rule 77 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    }               reduce using rule 77 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    ID              reduce using rule 77 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    PRINT           reduce using rule 77 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    READ            reduce using rule 77 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    IF              reduce using rule 77 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    FOR             reduce using rule 77 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    WHILE           reduce using rule 77 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)
    RETURN          reduce using rule 77 (dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare .)


state 69

    (79) cyDeclare -> declare .

    MAIN            reduce using rule 79 (cyDeclare -> declare .)
    FUNC            reduce using rule 79 (cyDeclare -> declare .)
    }               reduce using rule 79 (cyDeclare -> declare .)
    ID              reduce using rule 79 (cyDeclare -> declare .)
    PRINT           reduce using rule 79 (cyDeclare -> declare .)
    READ            reduce using rule 79 (cyDeclare -> declare .)
    IF              reduce using rule 79 (cyDeclare -> declare .)
    FOR             reduce using rule 79 (cyDeclare -> declare .)
    WHILE           reduce using rule 79 (cyDeclare -> declare .)
    RETURN          reduce using rule 79 (cyDeclare -> declare .)


state 70

    (80) cyDeclare -> empty .

    MAIN            reduce using rule 80 (cyDeclare -> empty .)
    FUNC            reduce using rule 80 (cyDeclare -> empty .)
    }               reduce using rule 80 (cyDeclare -> empty .)
    ID              reduce using rule 80 (cyDeclare -> empty .)
    PRINT           reduce using rule 80 (cyDeclare -> empty .)
    READ            reduce using rule 80 (cyDeclare -> empty .)
    IF              reduce using rule 80 (cyDeclare -> empty .)
    FOR             reduce using rule 80 (cyDeclare -> empty .)
    WHILE           reduce using rule 80 (cyDeclare -> empty .)
    RETURN          reduce using rule 80 (cyDeclare -> empty .)


state 71

    (110) struct -> structType [ CTED . ] optionalMatrix

    ]               shift and go to state 78


state 72

    (75) structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .

    MAIN            reduce using rule 75 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    FUNC            reduce using rule 75 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    }               reduce using rule 75 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    ID              reduce using rule 75 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    PRINT           reduce using rule 75 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    READ            reduce using rule 75 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    IF              reduce using rule 75 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    FOR             reduce using rule 75 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    WHILE           reduce using rule 75 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)
    RETURN          reduce using rule 75 (structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare .)


state 73

    (18) main -> errorMain MAIN saveMain { opVars saveQuadruple . generateInitialQuadruple body } clearVarsTable
    (19) generateInitialQuadruple -> .

    }               reduce using rule 19 (generateInitialQuadruple -> .)
    ID              reduce using rule 19 (generateInitialQuadruple -> .)
    PRINT           reduce using rule 19 (generateInitialQuadruple -> .)
    READ            reduce using rule 19 (generateInitialQuadruple -> .)
    IF              reduce using rule 19 (generateInitialQuadruple -> .)
    FOR             reduce using rule 19 (generateInitialQuadruple -> .)
    WHILE           reduce using rule 19 (generateInitialQuadruple -> .)

    generateInitialQuadruple       shift and go to state 79

state 74

    (57) function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters . PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable

    PARINI          shift and go to state 80


state 75

    (53) cyTypeParam -> , saveID saveTypeParam . ID cyTypeParam

    ID              shift and go to state 81


state 76

    (73) basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; . cyDeclare
    (79) cyDeclare -> . declare
    (80) cyDeclare -> . empty
    (36) declare -> . basicDeclare
    (37) declare -> . structDeclare
    (38) declare -> . dictDeclare
    (167) empty -> .
    (73) basicDeclare -> . saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare
    (75) structDeclare -> . errorStructDeclare STRUCT ID struct ; cyDeclare
    (77) dictDeclare -> . errorDictDeclare DICT ID dict ; cyDeclare
    (3) saveType -> .
    (76) errorStructDeclare -> .
    (78) errorDictDeclare -> .

    MAIN            reduce using rule 167 (empty -> .)
    FUNC            reduce using rule 167 (empty -> .)
    }               reduce using rule 167 (empty -> .)
    ID              reduce using rule 167 (empty -> .)
    PRINT           reduce using rule 167 (empty -> .)
    READ            reduce using rule 167 (empty -> .)
    IF              reduce using rule 167 (empty -> .)
    FOR             reduce using rule 167 (empty -> .)
    WHILE           reduce using rule 167 (empty -> .)
    RETURN          reduce using rule 167 (empty -> .)
    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)
    STRUCT          reduce using rule 76 (errorStructDeclare -> .)
    DICT            reduce using rule 78 (errorDictDeclare -> .)

    dictDeclare                    shift and go to state 18
    cyDeclare                      shift and go to state 82
    basicDeclare                   shift and go to state 23
    saveType                       shift and go to state 19
    errorDictDeclare               shift and go to state 20
    empty                          shift and go to state 70
    structDeclare                  shift and go to state 21
    errorStructDeclare             shift and go to state 22
    declare                        shift and go to state 69

state 77

    (120) dict -> errorDict PARINI type : . type PARFIN
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    errorType                      shift and go to state 31
    type                           shift and go to state 83

state 78

    (110) struct -> structType [ CTED ] . optionalMatrix
    (113) optionalMatrix -> . [ CTED ]
    (114) optionalMatrix -> . empty
    (167) empty -> .

    [               shift and go to state 85
    ;               reduce using rule 167 (empty -> .)

    empty                          shift and go to state 86
    optionalMatrix                 shift and go to state 84

state 79

    (18) main -> errorMain MAIN saveMain { opVars saveQuadruple generateInitialQuadruple . body } clearVarsTable
    (81) body -> . errorBody cyInstruction
    (82) body -> . empty
    (83) errorBody -> .
    (167) empty -> .

    ID              reduce using rule 83 (errorBody -> .)
    PRINT           reduce using rule 83 (errorBody -> .)
    READ            reduce using rule 83 (errorBody -> .)
    IF              reduce using rule 83 (errorBody -> .)
    FOR             reduce using rule 83 (errorBody -> .)
    WHILE           reduce using rule 83 (errorBody -> .)
    }               reduce using rule 167 (empty -> .)

    body                           shift and go to state 87
    errorBody                      shift and go to state 88
    empty                          shift and go to state 89

state 80

    (57) function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI . opParameters PARFIN flagParameters opReturns } clearVarsTable
    (63) opParameters -> . param saveParamToDirProc errorOpParameters
    (64) opParameters -> . empty
    (49) param -> . saveType type errorParam ID cyTypeParam cyParam
    (167) empty -> .
    (3) saveType -> .

    PARFIN          reduce using rule 167 (empty -> .)
    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)

    opParameters                   shift and go to state 90
    param                          shift and go to state 91
    saveType                       shift and go to state 92
    empty                          shift and go to state 93

state 81

    (53) cyTypeParam -> , saveID saveTypeParam ID . cyTypeParam
    (53) cyTypeParam -> . , saveID saveTypeParam ID cyTypeParam
    (54) cyTypeParam -> . empty
    (167) empty -> .

    ,               shift and go to state 55
    ;               reduce using rule 167 (empty -> .)
    PARFIN          reduce using rule 167 (empty -> .)

    cyTypeParam                    shift and go to state 94
    empty                          shift and go to state 56

state 82

    (73) basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .

    MAIN            reduce using rule 73 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    FUNC            reduce using rule 73 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    }               reduce using rule 73 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    ID              reduce using rule 73 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    PRINT           reduce using rule 73 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    READ            reduce using rule 73 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    IF              reduce using rule 73 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    FOR             reduce using rule 73 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    WHILE           reduce using rule 73 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)
    RETURN          reduce using rule 73 (basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare .)


state 83

    (120) dict -> errorDict PARINI type : type . PARFIN

    PARFIN          shift and go to state 95


state 84

    (110) struct -> structType [ CTED ] optionalMatrix .

    ;               reduce using rule 110 (struct -> structType [ CTED ] optionalMatrix .)


state 85

    (113) optionalMatrix -> [ . CTED ]

    CTED            shift and go to state 96


state 86

    (114) optionalMatrix -> empty .

    ;               reduce using rule 114 (optionalMatrix -> empty .)


state 87

    (18) main -> errorMain MAIN saveMain { opVars saveQuadruple generateInitialQuadruple body . } clearVarsTable

    }               shift and go to state 97


state 88

    (81) body -> errorBody . cyInstruction
    (84) cyInstruction -> . instr body
    (22) instr -> . basicStatements ;
    (23) instr -> . condition
    (24) instr -> . cycle
    (25) basicStatements -> . assign
    (26) basicStatements -> . funcCall
    (27) basicStatements -> . print
    (28) basicStatements -> . read
    (115) condition -> . errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso
    (85) cycle -> . forCycle
    (86) cycle -> . whileCycle
    (97) assign -> . ID saveVariable errorAssign assignOptions performAssign
    (105) funcCall -> . ID PARINI opParamCall PARFIN
    (29) print -> . PRINT PARINI exp performPrint cyPrint PARFIN
    (32) read -> . READ PARINI ID performRead cyRead PARFIN
    (116) errorCondition -> .
    (91) forCycle -> . errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign
    (87) whileCycle -> . errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile
    (96) errorForCycle -> .
    (90) errorWhileCycle -> .

    ID              shift and go to state 104
    PRINT           shift and go to state 101
    READ            shift and go to state 99
    IF              reduce using rule 116 (errorCondition -> .)
    FOR             reduce using rule 96 (errorForCycle -> .)
    WHILE           reduce using rule 90 (errorWhileCycle -> .)

    instr                          shift and go to state 98
    whileCycle                     shift and go to state 100
    forCycle                       shift and go to state 102
    errorWhileCycle                shift and go to state 103
    condition                      shift and go to state 111
    print                          shift and go to state 105
    read                           shift and go to state 107
    basicStatements                shift and go to state 108
    errorForCycle                  shift and go to state 109
    cyInstruction                  shift and go to state 110
    cycle                          shift and go to state 106
    funcCall                       shift and go to state 112
    errorCondition                 shift and go to state 113
    assign                         shift and go to state 114

state 89

    (82) body -> empty .

    }               reduce using rule 82 (body -> empty .)
    RETURN          reduce using rule 82 (body -> empty .)


state 90

    (57) function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters . PARFIN flagParameters opReturns } clearVarsTable

    PARFIN          shift and go to state 115


state 91

    (63) opParameters -> param . saveParamToDirProc errorOpParameters
    (66) saveParamToDirProc -> .

    PARFIN          reduce using rule 66 (saveParamToDirProc -> .)

    saveParamToDirProc             shift and go to state 116

state 92

    (49) param -> saveType . type errorParam ID cyTypeParam cyParam
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    type                           shift and go to state 117
    errorType                      shift and go to state 31

state 93

    (64) opParameters -> empty .

    PARFIN          reduce using rule 64 (opParameters -> empty .)


state 94

    (53) cyTypeParam -> , saveID saveTypeParam ID cyTypeParam .

    ;               reduce using rule 53 (cyTypeParam -> , saveID saveTypeParam ID cyTypeParam .)
    PARFIN          reduce using rule 53 (cyTypeParam -> , saveID saveTypeParam ID cyTypeParam .)


state 95

    (120) dict -> errorDict PARINI type : type PARFIN .

    ;               reduce using rule 120 (dict -> errorDict PARINI type : type PARFIN .)
    [               reduce using rule 120 (dict -> errorDict PARINI type : type PARFIN .)


state 96

    (113) optionalMatrix -> [ CTED . ]

    ]               shift and go to state 118


state 97

    (18) main -> errorMain MAIN saveMain { opVars saveQuadruple generateInitialQuadruple body } . clearVarsTable
    (60) clearVarsTable -> .

    }               reduce using rule 60 (clearVarsTable -> .)

    clearVarsTable                 shift and go to state 119

state 98

    (84) cyInstruction -> instr . body
    (81) body -> . errorBody cyInstruction
    (82) body -> . empty
    (83) errorBody -> .
    (167) empty -> .

    ID              reduce using rule 83 (errorBody -> .)
    PRINT           reduce using rule 83 (errorBody -> .)
    READ            reduce using rule 83 (errorBody -> .)
    IF              reduce using rule 83 (errorBody -> .)
    FOR             reduce using rule 83 (errorBody -> .)
    WHILE           reduce using rule 83 (errorBody -> .)
    }               reduce using rule 167 (empty -> .)
    RETURN          reduce using rule 167 (empty -> .)

    body                           shift and go to state 120
    errorBody                      shift and go to state 88
    empty                          shift and go to state 89

state 99

    (32) read -> READ . PARINI ID performRead cyRead PARFIN

    PARINI          shift and go to state 121


state 100

    (86) cycle -> whileCycle .

    ID              reduce using rule 86 (cycle -> whileCycle .)
    PRINT           reduce using rule 86 (cycle -> whileCycle .)
    READ            reduce using rule 86 (cycle -> whileCycle .)
    IF              reduce using rule 86 (cycle -> whileCycle .)
    FOR             reduce using rule 86 (cycle -> whileCycle .)
    WHILE           reduce using rule 86 (cycle -> whileCycle .)
    }               reduce using rule 86 (cycle -> whileCycle .)
    RETURN          reduce using rule 86 (cycle -> whileCycle .)


state 101

    (29) print -> PRINT . PARINI exp performPrint cyPrint PARFIN

    PARINI          shift and go to state 122


state 102

    (85) cycle -> forCycle .

    ID              reduce using rule 85 (cycle -> forCycle .)
    PRINT           reduce using rule 85 (cycle -> forCycle .)
    READ            reduce using rule 85 (cycle -> forCycle .)
    IF              reduce using rule 85 (cycle -> forCycle .)
    FOR             reduce using rule 85 (cycle -> forCycle .)
    WHILE           reduce using rule 85 (cycle -> forCycle .)
    }               reduce using rule 85 (cycle -> forCycle .)
    RETURN          reduce using rule 85 (cycle -> forCycle .)


state 103

    (87) whileCycle -> errorWhileCycle . WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile

    WHILE           shift and go to state 123


state 104

    (97) assign -> ID . saveVariable errorAssign assignOptions performAssign
    (105) funcCall -> ID . PARINI opParamCall PARFIN
    (176) saveVariable -> .

    PARINI          shift and go to state 125
    [               reduce using rule 176 (saveVariable -> .)
    ASGN            reduce using rule 176 (saveVariable -> .)

    saveVariable                   shift and go to state 124

state 105

    (27) basicStatements -> print .

    ;               reduce using rule 27 (basicStatements -> print .)


state 106

    (24) instr -> cycle .

    ID              reduce using rule 24 (instr -> cycle .)
    PRINT           reduce using rule 24 (instr -> cycle .)
    READ            reduce using rule 24 (instr -> cycle .)
    IF              reduce using rule 24 (instr -> cycle .)
    FOR             reduce using rule 24 (instr -> cycle .)
    WHILE           reduce using rule 24 (instr -> cycle .)
    }               reduce using rule 24 (instr -> cycle .)
    RETURN          reduce using rule 24 (instr -> cycle .)


state 107

    (28) basicStatements -> read .

    ;               reduce using rule 28 (basicStatements -> read .)


state 108

    (22) instr -> basicStatements . ;

    ;               shift and go to state 126


state 109

    (91) forCycle -> errorForCycle . FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign

    FOR             shift and go to state 127


state 110

    (81) body -> errorBody cyInstruction .

    }               reduce using rule 81 (body -> errorBody cyInstruction .)
    RETURN          reduce using rule 81 (body -> errorBody cyInstruction .)


state 111

    (23) instr -> condition .

    ID              reduce using rule 23 (instr -> condition .)
    PRINT           reduce using rule 23 (instr -> condition .)
    READ            reduce using rule 23 (instr -> condition .)
    IF              reduce using rule 23 (instr -> condition .)
    FOR             reduce using rule 23 (instr -> condition .)
    WHILE           reduce using rule 23 (instr -> condition .)
    }               reduce using rule 23 (instr -> condition .)
    RETURN          reduce using rule 23 (instr -> condition .)


state 112

    (26) basicStatements -> funcCall .

    ;               reduce using rule 26 (basicStatements -> funcCall .)


state 113

    (115) condition -> errorCondition . IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso

    IF              shift and go to state 128


state 114

    (25) basicStatements -> assign .

    ;               reduce using rule 25 (basicStatements -> assign .)


state 115

    (57) function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN . flagParameters opReturns } clearVarsTable
    (65) flagParameters -> .

    {               reduce using rule 65 (flagParameters -> .)
    RETURNS         reduce using rule 65 (flagParameters -> .)

    flagParameters                 shift and go to state 129

state 116

    (63) opParameters -> param saveParamToDirProc . errorOpParameters
    (67) errorOpParameters -> .

    PARFIN          reduce using rule 67 (errorOpParameters -> .)

    errorOpParameters              shift and go to state 130

state 117

    (49) param -> saveType type . errorParam ID cyTypeParam cyParam
    (50) errorParam -> .

    ID              reduce using rule 50 (errorParam -> .)

    errorParam                     shift and go to state 131

state 118

    (113) optionalMatrix -> [ CTED ] .

    ;               reduce using rule 113 (optionalMatrix -> [ CTED ] .)


state 119

    (18) main -> errorMain MAIN saveMain { opVars saveQuadruple generateInitialQuadruple body } clearVarsTable .

    }               reduce using rule 18 (main -> errorMain MAIN saveMain { opVars saveQuadruple generateInitialQuadruple body } clearVarsTable .)


state 120

    (84) cyInstruction -> instr body .

    }               reduce using rule 84 (cyInstruction -> instr body .)
    RETURN          reduce using rule 84 (cyInstruction -> instr body .)


state 121

    (32) read -> READ PARINI . ID performRead cyRead PARFIN

    ID              shift and go to state 132


state 122

    (29) print -> PRINT PARINI . exp performPrint cyPrint PARFIN
    (136) exp -> . term performAddSub errorCyExp cyExp
    (141) term -> . fact performMulDiv cyTerm
    (145) fact -> . CTES saveConstantString
    (146) fact -> . cte
    (147) fact -> . funcCall
    (148) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (149) fact -> . ID saveVariable opAccess errorOpAccess
    (163) cte -> . CTED saveConstantInt
    (164) cte -> . CTEF saveConstantFloat
    (165) cte -> . TRUE saveConstantBool
    (166) cte -> . FALSE saveConstantBool
    (105) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 137
    PARINI          shift and go to state 134
    ID              shift and go to state 136
    CTED            shift and go to state 135
    CTEF            shift and go to state 142
    TRUE            shift and go to state 133
    FALSE           shift and go to state 139

    term                           shift and go to state 138
    funcCall                       shift and go to state 140
    cte                            shift and go to state 141
    exp                            shift and go to state 143
    fact                           shift and go to state 144

state 123

    (87) whileCycle -> errorWhileCycle WHILE . saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile
    (89) saveReturn -> .

    PARINI          reduce using rule 89 (saveReturn -> .)

    saveReturn                     shift and go to state 145

state 124

    (97) assign -> ID saveVariable . errorAssign assignOptions performAssign
    (98) errorAssign -> .

    [               reduce using rule 98 (errorAssign -> .)
    ASGN            reduce using rule 98 (errorAssign -> .)

    errorAssign                    shift and go to state 146

state 125

    (105) funcCall -> ID PARINI . opParamCall PARFIN
    (106) opParamCall -> . expresion cyParamCall
    (107) opParamCall -> . empty
    (122) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (167) empty -> .
    (127) sExp -> . exp errorOpSExp opSExp performRelational
    (136) exp -> . term performAddSub errorCyExp cyExp
    (141) term -> . fact performMulDiv cyTerm
    (145) fact -> . CTES saveConstantString
    (146) fact -> . cte
    (147) fact -> . funcCall
    (148) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (149) fact -> . ID saveVariable opAccess errorOpAccess
    (163) cte -> . CTED saveConstantInt
    (164) cte -> . CTEF saveConstantFloat
    (165) cte -> . TRUE saveConstantBool
    (166) cte -> . FALSE saveConstantBool
    (105) funcCall -> . ID PARINI opParamCall PARFIN

    PARFIN          reduce using rule 167 (empty -> .)
    CTES            shift and go to state 137
    PARINI          shift and go to state 134
    ID              shift and go to state 136
    CTED            shift and go to state 135
    CTEF            shift and go to state 142
    TRUE            shift and go to state 133
    FALSE           shift and go to state 139

    opParamCall                    shift and go to state 147
    sExp                           shift and go to state 148
    empty                          shift and go to state 149
    expresion                      shift and go to state 150
    term                           shift and go to state 138
    funcCall                       shift and go to state 140
    cte                            shift and go to state 141
    exp                            shift and go to state 151
    fact                           shift and go to state 144

state 126

    (22) instr -> basicStatements ; .

    ID              reduce using rule 22 (instr -> basicStatements ; .)
    PRINT           reduce using rule 22 (instr -> basicStatements ; .)
    READ            reduce using rule 22 (instr -> basicStatements ; .)
    IF              reduce using rule 22 (instr -> basicStatements ; .)
    FOR             reduce using rule 22 (instr -> basicStatements ; .)
    WHILE           reduce using rule 22 (instr -> basicStatements ; .)
    }               reduce using rule 22 (instr -> basicStatements ; .)
    RETURN          reduce using rule 22 (instr -> basicStatements ; .)


state 127

    (91) forCycle -> errorForCycle FOR . PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign

    PARINI          shift and go to state 152


state 128

    (115) condition -> errorCondition IF . PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso

    PARINI          shift and go to state 153


state 129

    (57) function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters . opReturns } clearVarsTable
    (68) opReturns -> . errorOpReturns RETURNS type saveReturnType { opVars saveQuadruple body return
    (69) opReturns -> . { opVars saveQuadruple body
    (72) errorOpReturns -> .

    {               shift and go to state 156
    RETURNS         reduce using rule 72 (errorOpReturns -> .)

    errorOpReturns                 shift and go to state 155
    opReturns                      shift and go to state 154

state 130

    (63) opParameters -> param saveParamToDirProc errorOpParameters .

    PARFIN          reduce using rule 63 (opParameters -> param saveParamToDirProc errorOpParameters .)


state 131

    (49) param -> saveType type errorParam . ID cyTypeParam cyParam

    ID              shift and go to state 157


state 132

    (32) read -> READ PARINI ID . performRead cyRead PARFIN
    (186) performRead -> .

    ,               reduce using rule 186 (performRead -> .)
    PARFIN          reduce using rule 186 (performRead -> .)

    performRead                    shift and go to state 158

state 133

    (165) cte -> TRUE . saveConstantBool
    (174) saveConstantBool -> .

    MULT            reduce using rule 174 (saveConstantBool -> .)
    DIV             reduce using rule 174 (saveConstantBool -> .)
    PLUS            reduce using rule 174 (saveConstantBool -> .)
    MINUS           reduce using rule 174 (saveConstantBool -> .)
    ,               reduce using rule 174 (saveConstantBool -> .)
    PARFIN          reduce using rule 174 (saveConstantBool -> .)
    EQ              reduce using rule 174 (saveConstantBool -> .)
    DIF             reduce using rule 174 (saveConstantBool -> .)
    LTOEQ           reduce using rule 174 (saveConstantBool -> .)
    GTOEQ           reduce using rule 174 (saveConstantBool -> .)
    GT              reduce using rule 174 (saveConstantBool -> .)
    LT              reduce using rule 174 (saveConstantBool -> .)
    AND             reduce using rule 174 (saveConstantBool -> .)
    OR              reduce using rule 174 (saveConstantBool -> .)
    ]               reduce using rule 174 (saveConstantBool -> .)
    :               reduce using rule 174 (saveConstantBool -> .)
    ;               reduce using rule 174 (saveConstantBool -> .)

    saveConstantBool               shift and go to state 159

state 134

    (148) fact -> PARINI . putFondo expresion PARFIN takeFondo
    (178) putFondo -> .

    CTES            reduce using rule 178 (putFondo -> .)
    PARINI          reduce using rule 178 (putFondo -> .)
    ID              reduce using rule 178 (putFondo -> .)
    CTED            reduce using rule 178 (putFondo -> .)
    CTEF            reduce using rule 178 (putFondo -> .)
    TRUE            reduce using rule 178 (putFondo -> .)
    FALSE           reduce using rule 178 (putFondo -> .)

    putFondo                       shift and go to state 160

state 135

    (163) cte -> CTED . saveConstantInt
    (172) saveConstantInt -> .

    MULT            reduce using rule 172 (saveConstantInt -> .)
    DIV             reduce using rule 172 (saveConstantInt -> .)
    PLUS            reduce using rule 172 (saveConstantInt -> .)
    MINUS           reduce using rule 172 (saveConstantInt -> .)
    ,               reduce using rule 172 (saveConstantInt -> .)
    PARFIN          reduce using rule 172 (saveConstantInt -> .)
    EQ              reduce using rule 172 (saveConstantInt -> .)
    DIF             reduce using rule 172 (saveConstantInt -> .)
    LTOEQ           reduce using rule 172 (saveConstantInt -> .)
    GTOEQ           reduce using rule 172 (saveConstantInt -> .)
    GT              reduce using rule 172 (saveConstantInt -> .)
    LT              reduce using rule 172 (saveConstantInt -> .)
    AND             reduce using rule 172 (saveConstantInt -> .)
    OR              reduce using rule 172 (saveConstantInt -> .)
    ]               reduce using rule 172 (saveConstantInt -> .)
    :               reduce using rule 172 (saveConstantInt -> .)
    ;               reduce using rule 172 (saveConstantInt -> .)

    saveConstantInt                shift and go to state 161

state 136

    (149) fact -> ID . saveVariable opAccess errorOpAccess
    (105) funcCall -> ID . PARINI opParamCall PARFIN
    (176) saveVariable -> .

    PARINI          shift and go to state 125
    .               reduce using rule 176 (saveVariable -> .)
    [               reduce using rule 176 (saveVariable -> .)
    MULT            reduce using rule 176 (saveVariable -> .)
    DIV             reduce using rule 176 (saveVariable -> .)
    PLUS            reduce using rule 176 (saveVariable -> .)
    MINUS           reduce using rule 176 (saveVariable -> .)
    ,               reduce using rule 176 (saveVariable -> .)
    PARFIN          reduce using rule 176 (saveVariable -> .)
    EQ              reduce using rule 176 (saveVariable -> .)
    DIF             reduce using rule 176 (saveVariable -> .)
    LTOEQ           reduce using rule 176 (saveVariable -> .)
    GTOEQ           reduce using rule 176 (saveVariable -> .)
    GT              reduce using rule 176 (saveVariable -> .)
    LT              reduce using rule 176 (saveVariable -> .)
    AND             reduce using rule 176 (saveVariable -> .)
    OR              reduce using rule 176 (saveVariable -> .)
    ]               reduce using rule 176 (saveVariable -> .)
    ;               reduce using rule 176 (saveVariable -> .)

    saveVariable                   shift and go to state 162

state 137

    (145) fact -> CTES . saveConstantString
    (175) saveConstantString -> .

    MULT            reduce using rule 175 (saveConstantString -> .)
    DIV             reduce using rule 175 (saveConstantString -> .)
    PLUS            reduce using rule 175 (saveConstantString -> .)
    MINUS           reduce using rule 175 (saveConstantString -> .)
    ,               reduce using rule 175 (saveConstantString -> .)
    PARFIN          reduce using rule 175 (saveConstantString -> .)
    EQ              reduce using rule 175 (saveConstantString -> .)
    DIF             reduce using rule 175 (saveConstantString -> .)
    LTOEQ           reduce using rule 175 (saveConstantString -> .)
    GTOEQ           reduce using rule 175 (saveConstantString -> .)
    GT              reduce using rule 175 (saveConstantString -> .)
    LT              reduce using rule 175 (saveConstantString -> .)
    AND             reduce using rule 175 (saveConstantString -> .)
    OR              reduce using rule 175 (saveConstantString -> .)
    ]               reduce using rule 175 (saveConstantString -> .)
    ;               reduce using rule 175 (saveConstantString -> .)

    saveConstantString             shift and go to state 163

state 138

    (136) exp -> term . performAddSub errorCyExp cyExp
    (182) performAddSub -> .

    PLUS            reduce using rule 182 (performAddSub -> .)
    MINUS           reduce using rule 182 (performAddSub -> .)
    ,               reduce using rule 182 (performAddSub -> .)
    PARFIN          reduce using rule 182 (performAddSub -> .)
    EQ              reduce using rule 182 (performAddSub -> .)
    DIF             reduce using rule 182 (performAddSub -> .)
    LTOEQ           reduce using rule 182 (performAddSub -> .)
    GTOEQ           reduce using rule 182 (performAddSub -> .)
    GT              reduce using rule 182 (performAddSub -> .)
    LT              reduce using rule 182 (performAddSub -> .)
    AND             reduce using rule 182 (performAddSub -> .)
    OR              reduce using rule 182 (performAddSub -> .)
    ]               reduce using rule 182 (performAddSub -> .)
    ;               reduce using rule 182 (performAddSub -> .)

    performAddSub                  shift and go to state 164

state 139

    (166) cte -> FALSE . saveConstantBool
    (174) saveConstantBool -> .

    MULT            reduce using rule 174 (saveConstantBool -> .)
    DIV             reduce using rule 174 (saveConstantBool -> .)
    PLUS            reduce using rule 174 (saveConstantBool -> .)
    MINUS           reduce using rule 174 (saveConstantBool -> .)
    ,               reduce using rule 174 (saveConstantBool -> .)
    PARFIN          reduce using rule 174 (saveConstantBool -> .)
    EQ              reduce using rule 174 (saveConstantBool -> .)
    DIF             reduce using rule 174 (saveConstantBool -> .)
    LTOEQ           reduce using rule 174 (saveConstantBool -> .)
    GTOEQ           reduce using rule 174 (saveConstantBool -> .)
    GT              reduce using rule 174 (saveConstantBool -> .)
    LT              reduce using rule 174 (saveConstantBool -> .)
    AND             reduce using rule 174 (saveConstantBool -> .)
    OR              reduce using rule 174 (saveConstantBool -> .)
    ]               reduce using rule 174 (saveConstantBool -> .)
    :               reduce using rule 174 (saveConstantBool -> .)
    ;               reduce using rule 174 (saveConstantBool -> .)

    saveConstantBool               shift and go to state 165

state 140

    (147) fact -> funcCall .

    MULT            reduce using rule 147 (fact -> funcCall .)
    DIV             reduce using rule 147 (fact -> funcCall .)
    PLUS            reduce using rule 147 (fact -> funcCall .)
    MINUS           reduce using rule 147 (fact -> funcCall .)
    ,               reduce using rule 147 (fact -> funcCall .)
    PARFIN          reduce using rule 147 (fact -> funcCall .)
    EQ              reduce using rule 147 (fact -> funcCall .)
    DIF             reduce using rule 147 (fact -> funcCall .)
    LTOEQ           reduce using rule 147 (fact -> funcCall .)
    GTOEQ           reduce using rule 147 (fact -> funcCall .)
    GT              reduce using rule 147 (fact -> funcCall .)
    LT              reduce using rule 147 (fact -> funcCall .)
    AND             reduce using rule 147 (fact -> funcCall .)
    OR              reduce using rule 147 (fact -> funcCall .)
    ]               reduce using rule 147 (fact -> funcCall .)
    ;               reduce using rule 147 (fact -> funcCall .)


state 141

    (146) fact -> cte .

    MULT            reduce using rule 146 (fact -> cte .)
    DIV             reduce using rule 146 (fact -> cte .)
    PLUS            reduce using rule 146 (fact -> cte .)
    MINUS           reduce using rule 146 (fact -> cte .)
    ,               reduce using rule 146 (fact -> cte .)
    PARFIN          reduce using rule 146 (fact -> cte .)
    EQ              reduce using rule 146 (fact -> cte .)
    DIF             reduce using rule 146 (fact -> cte .)
    LTOEQ           reduce using rule 146 (fact -> cte .)
    GTOEQ           reduce using rule 146 (fact -> cte .)
    GT              reduce using rule 146 (fact -> cte .)
    LT              reduce using rule 146 (fact -> cte .)
    AND             reduce using rule 146 (fact -> cte .)
    OR              reduce using rule 146 (fact -> cte .)
    ]               reduce using rule 146 (fact -> cte .)
    ;               reduce using rule 146 (fact -> cte .)


state 142

    (164) cte -> CTEF . saveConstantFloat
    (173) saveConstantFloat -> .

    MULT            reduce using rule 173 (saveConstantFloat -> .)
    DIV             reduce using rule 173 (saveConstantFloat -> .)
    PLUS            reduce using rule 173 (saveConstantFloat -> .)
    MINUS           reduce using rule 173 (saveConstantFloat -> .)
    ,               reduce using rule 173 (saveConstantFloat -> .)
    PARFIN          reduce using rule 173 (saveConstantFloat -> .)
    EQ              reduce using rule 173 (saveConstantFloat -> .)
    DIF             reduce using rule 173 (saveConstantFloat -> .)
    LTOEQ           reduce using rule 173 (saveConstantFloat -> .)
    GTOEQ           reduce using rule 173 (saveConstantFloat -> .)
    GT              reduce using rule 173 (saveConstantFloat -> .)
    LT              reduce using rule 173 (saveConstantFloat -> .)
    AND             reduce using rule 173 (saveConstantFloat -> .)
    OR              reduce using rule 173 (saveConstantFloat -> .)
    ]               reduce using rule 173 (saveConstantFloat -> .)
    :               reduce using rule 173 (saveConstantFloat -> .)
    ;               reduce using rule 173 (saveConstantFloat -> .)

    saveConstantFloat              shift and go to state 166

state 143

    (29) print -> PRINT PARINI exp . performPrint cyPrint PARFIN
    (185) performPrint -> .

    ,               reduce using rule 185 (performPrint -> .)
    PARFIN          reduce using rule 185 (performPrint -> .)

    performPrint                   shift and go to state 167

state 144

    (141) term -> fact . performMulDiv cyTerm
    (181) performMulDiv -> .

    MULT            reduce using rule 181 (performMulDiv -> .)
    DIV             reduce using rule 181 (performMulDiv -> .)
    PLUS            reduce using rule 181 (performMulDiv -> .)
    MINUS           reduce using rule 181 (performMulDiv -> .)
    ,               reduce using rule 181 (performMulDiv -> .)
    PARFIN          reduce using rule 181 (performMulDiv -> .)
    EQ              reduce using rule 181 (performMulDiv -> .)
    DIF             reduce using rule 181 (performMulDiv -> .)
    LTOEQ           reduce using rule 181 (performMulDiv -> .)
    GTOEQ           reduce using rule 181 (performMulDiv -> .)
    GT              reduce using rule 181 (performMulDiv -> .)
    LT              reduce using rule 181 (performMulDiv -> .)
    AND             reduce using rule 181 (performMulDiv -> .)
    OR              reduce using rule 181 (performMulDiv -> .)
    ]               reduce using rule 181 (performMulDiv -> .)
    ;               reduce using rule 181 (performMulDiv -> .)

    performMulDiv                  shift and go to state 168

state 145

    (87) whileCycle -> errorWhileCycle WHILE saveReturn . PARINI expresion PARFIN saveFalso { body } repeatWhile

    PARINI          shift and go to state 169


state 146

    (97) assign -> ID saveVariable errorAssign . assignOptions performAssign
    (99) assignOptions -> . init
    (100) assignOptions -> . initDict
    (101) assignOptions -> . [ expresion ] assignMatrix init
    (39) init -> . ASGN saveOperator errorInit initWith
    (43) initDict -> . ASGN PARINI dictType : dictType PARFIN errorInitDict

    [               shift and go to state 174
    ASGN            shift and go to state 172

    initDict                       shift and go to state 170
    assignOptions                  shift and go to state 171
    init                           shift and go to state 173

state 147

    (105) funcCall -> ID PARINI opParamCall . PARFIN

    PARFIN          shift and go to state 175


state 148

    (122) expresion -> sExp . performAndOr cyExpresion errorExpresion
    (184) performAndOr -> .

    AND             reduce using rule 184 (performAndOr -> .)
    OR              reduce using rule 184 (performAndOr -> .)
    ,               reduce using rule 184 (performAndOr -> .)
    PARFIN          reduce using rule 184 (performAndOr -> .)
    ]               reduce using rule 184 (performAndOr -> .)
    ;               reduce using rule 184 (performAndOr -> .)

    performAndOr                   shift and go to state 176

state 149

    (107) opParamCall -> empty .

    PARFIN          reduce using rule 107 (opParamCall -> empty .)


state 150

    (106) opParamCall -> expresion . cyParamCall
    (108) cyParamCall -> . , expresion cyParamCall
    (109) cyParamCall -> . empty
    (167) empty -> .

    ,               shift and go to state 178
    PARFIN          reduce using rule 167 (empty -> .)

    cyParamCall                    shift and go to state 177
    empty                          shift and go to state 179

state 151

    (127) sExp -> exp . errorOpSExp opSExp performRelational
    (135) errorOpSExp -> .

    EQ              reduce using rule 135 (errorOpSExp -> .)
    DIF             reduce using rule 135 (errorOpSExp -> .)
    LTOEQ           reduce using rule 135 (errorOpSExp -> .)
    GTOEQ           reduce using rule 135 (errorOpSExp -> .)
    GT              reduce using rule 135 (errorOpSExp -> .)
    LT              reduce using rule 135 (errorOpSExp -> .)
    AND             reduce using rule 135 (errorOpSExp -> .)
    OR              reduce using rule 135 (errorOpSExp -> .)
    ,               reduce using rule 135 (errorOpSExp -> .)
    PARFIN          reduce using rule 135 (errorOpSExp -> .)
    ]               reduce using rule 135 (errorOpSExp -> .)
    ;               reduce using rule 135 (errorOpSExp -> .)

    errorOpSExp                    shift and go to state 180

state 152

    (91) forCycle -> errorForCycle FOR PARINI . assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign
    (97) assign -> . ID saveVariable errorAssign assignOptions performAssign

    ID              shift and go to state 181

    assign                         shift and go to state 182

state 153

    (115) condition -> errorCondition IF PARINI . expresion PARFIN saveFalso { body } optionalElse rellenaFalso
    (122) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (127) sExp -> . exp errorOpSExp opSExp performRelational
    (136) exp -> . term performAddSub errorCyExp cyExp
    (141) term -> . fact performMulDiv cyTerm
    (145) fact -> . CTES saveConstantString
    (146) fact -> . cte
    (147) fact -> . funcCall
    (148) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (149) fact -> . ID saveVariable opAccess errorOpAccess
    (163) cte -> . CTED saveConstantInt
    (164) cte -> . CTEF saveConstantFloat
    (165) cte -> . TRUE saveConstantBool
    (166) cte -> . FALSE saveConstantBool
    (105) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 137
    PARINI          shift and go to state 134
    ID              shift and go to state 136
    CTED            shift and go to state 135
    CTEF            shift and go to state 142
    TRUE            shift and go to state 133
    FALSE           shift and go to state 139

    sExp                           shift and go to state 148
    expresion                      shift and go to state 183
    term                           shift and go to state 138
    funcCall                       shift and go to state 140
    cte                            shift and go to state 141
    exp                            shift and go to state 151
    fact                           shift and go to state 144

state 154

    (57) function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns . } clearVarsTable

    }               shift and go to state 184


state 155

    (68) opReturns -> errorOpReturns . RETURNS type saveReturnType { opVars saveQuadruple body return

    RETURNS         shift and go to state 185


state 156

    (69) opReturns -> { . opVars saveQuadruple body
    (6) opVars -> . vars
    (7) opVars -> . empty
    (10) vars -> . errorVars VARS declare
    (167) empty -> .
    (12) errorVars -> .

    ID              reduce using rule 167 (empty -> .)
    PRINT           reduce using rule 167 (empty -> .)
    READ            reduce using rule 167 (empty -> .)
    IF              reduce using rule 167 (empty -> .)
    FOR             reduce using rule 167 (empty -> .)
    WHILE           reduce using rule 167 (empty -> .)
    }               reduce using rule 167 (empty -> .)
    VARS            reduce using rule 12 (errorVars -> .)

    vars                           shift and go to state 8
    opVars                         shift and go to state 186
    errorVars                      shift and go to state 10
    empty                          shift and go to state 11

state 157

    (49) param -> saveType type errorParam ID . cyTypeParam cyParam
    (53) cyTypeParam -> . , saveID saveTypeParam ID cyTypeParam
    (54) cyTypeParam -> . empty
    (167) empty -> .

    ,               shift and go to state 55
    ;               reduce using rule 167 (empty -> .)
    PARFIN          reduce using rule 167 (empty -> .)

    empty                          shift and go to state 56
    cyTypeParam                    shift and go to state 187

state 158

    (32) read -> READ PARINI ID performRead . cyRead PARFIN
    (33) cyRead -> . , fix ID performRead cyRead
    (34) cyRead -> . empty
    (167) empty -> .

    ,               shift and go to state 188
    PARFIN          reduce using rule 167 (empty -> .)

    cyRead                         shift and go to state 189
    empty                          shift and go to state 190

state 159

    (165) cte -> TRUE saveConstantBool .

    MULT            reduce using rule 165 (cte -> TRUE saveConstantBool .)
    DIV             reduce using rule 165 (cte -> TRUE saveConstantBool .)
    PLUS            reduce using rule 165 (cte -> TRUE saveConstantBool .)
    MINUS           reduce using rule 165 (cte -> TRUE saveConstantBool .)
    EQ              reduce using rule 165 (cte -> TRUE saveConstantBool .)
    DIF             reduce using rule 165 (cte -> TRUE saveConstantBool .)
    LTOEQ           reduce using rule 165 (cte -> TRUE saveConstantBool .)
    GTOEQ           reduce using rule 165 (cte -> TRUE saveConstantBool .)
    GT              reduce using rule 165 (cte -> TRUE saveConstantBool .)
    LT              reduce using rule 165 (cte -> TRUE saveConstantBool .)
    AND             reduce using rule 165 (cte -> TRUE saveConstantBool .)
    OR              reduce using rule 165 (cte -> TRUE saveConstantBool .)
    ,               reduce using rule 165 (cte -> TRUE saveConstantBool .)
    PARFIN          reduce using rule 165 (cte -> TRUE saveConstantBool .)
    ]               reduce using rule 165 (cte -> TRUE saveConstantBool .)
    ;               reduce using rule 165 (cte -> TRUE saveConstantBool .)
    :               reduce using rule 165 (cte -> TRUE saveConstantBool .)


state 160

    (148) fact -> PARINI putFondo . expresion PARFIN takeFondo
    (122) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (127) sExp -> . exp errorOpSExp opSExp performRelational
    (136) exp -> . term performAddSub errorCyExp cyExp
    (141) term -> . fact performMulDiv cyTerm
    (145) fact -> . CTES saveConstantString
    (146) fact -> . cte
    (147) fact -> . funcCall
    (148) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (149) fact -> . ID saveVariable opAccess errorOpAccess
    (163) cte -> . CTED saveConstantInt
    (164) cte -> . CTEF saveConstantFloat
    (165) cte -> . TRUE saveConstantBool
    (166) cte -> . FALSE saveConstantBool
    (105) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 137
    PARINI          shift and go to state 134
    ID              shift and go to state 136
    CTED            shift and go to state 135
    CTEF            shift and go to state 142
    TRUE            shift and go to state 133
    FALSE           shift and go to state 139

    sExp                           shift and go to state 148
    expresion                      shift and go to state 191
    term                           shift and go to state 138
    funcCall                       shift and go to state 140
    cte                            shift and go to state 141
    exp                            shift and go to state 151
    fact                           shift and go to state 144

state 161

    (163) cte -> CTED saveConstantInt .

    MULT            reduce using rule 163 (cte -> CTED saveConstantInt .)
    DIV             reduce using rule 163 (cte -> CTED saveConstantInt .)
    PLUS            reduce using rule 163 (cte -> CTED saveConstantInt .)
    MINUS           reduce using rule 163 (cte -> CTED saveConstantInt .)
    EQ              reduce using rule 163 (cte -> CTED saveConstantInt .)
    DIF             reduce using rule 163 (cte -> CTED saveConstantInt .)
    LTOEQ           reduce using rule 163 (cte -> CTED saveConstantInt .)
    GTOEQ           reduce using rule 163 (cte -> CTED saveConstantInt .)
    GT              reduce using rule 163 (cte -> CTED saveConstantInt .)
    LT              reduce using rule 163 (cte -> CTED saveConstantInt .)
    AND             reduce using rule 163 (cte -> CTED saveConstantInt .)
    OR              reduce using rule 163 (cte -> CTED saveConstantInt .)
    ,               reduce using rule 163 (cte -> CTED saveConstantInt .)
    PARFIN          reduce using rule 163 (cte -> CTED saveConstantInt .)
    ]               reduce using rule 163 (cte -> CTED saveConstantInt .)
    ;               reduce using rule 163 (cte -> CTED saveConstantInt .)
    :               reduce using rule 163 (cte -> CTED saveConstantInt .)


state 162

    (149) fact -> ID saveVariable . opAccess errorOpAccess
    (151) opAccess -> . opStruct
    (152) opAccess -> . opDictionary
    (153) opAccess -> . empty
    (155) opStruct -> . errorOpStruct [ expresion ] opMatrix
    (160) opDictionary -> . . dictIndex
    (167) empty -> .
    (156) errorOpStruct -> .

    .               shift and go to state 196
    MULT            reduce using rule 167 (empty -> .)
    DIV             reduce using rule 167 (empty -> .)
    PLUS            reduce using rule 167 (empty -> .)
    MINUS           reduce using rule 167 (empty -> .)
    ,               reduce using rule 167 (empty -> .)
    PARFIN          reduce using rule 167 (empty -> .)
    EQ              reduce using rule 167 (empty -> .)
    DIF             reduce using rule 167 (empty -> .)
    LTOEQ           reduce using rule 167 (empty -> .)
    GTOEQ           reduce using rule 167 (empty -> .)
    GT              reduce using rule 167 (empty -> .)
    LT              reduce using rule 167 (empty -> .)
    AND             reduce using rule 167 (empty -> .)
    OR              reduce using rule 167 (empty -> .)
    ]               reduce using rule 167 (empty -> .)
    ;               reduce using rule 167 (empty -> .)
    [               reduce using rule 156 (errorOpStruct -> .)

    errorOpStruct                  shift and go to state 192
    opDictionary                   shift and go to state 193
    opStruct                       shift and go to state 194
    opAccess                       shift and go to state 195
    empty                          shift and go to state 197

state 163

    (145) fact -> CTES saveConstantString .

    MULT            reduce using rule 145 (fact -> CTES saveConstantString .)
    DIV             reduce using rule 145 (fact -> CTES saveConstantString .)
    PLUS            reduce using rule 145 (fact -> CTES saveConstantString .)
    MINUS           reduce using rule 145 (fact -> CTES saveConstantString .)
    ,               reduce using rule 145 (fact -> CTES saveConstantString .)
    PARFIN          reduce using rule 145 (fact -> CTES saveConstantString .)
    EQ              reduce using rule 145 (fact -> CTES saveConstantString .)
    DIF             reduce using rule 145 (fact -> CTES saveConstantString .)
    LTOEQ           reduce using rule 145 (fact -> CTES saveConstantString .)
    GTOEQ           reduce using rule 145 (fact -> CTES saveConstantString .)
    GT              reduce using rule 145 (fact -> CTES saveConstantString .)
    LT              reduce using rule 145 (fact -> CTES saveConstantString .)
    AND             reduce using rule 145 (fact -> CTES saveConstantString .)
    OR              reduce using rule 145 (fact -> CTES saveConstantString .)
    ]               reduce using rule 145 (fact -> CTES saveConstantString .)
    ;               reduce using rule 145 (fact -> CTES saveConstantString .)


state 164

    (136) exp -> term performAddSub . errorCyExp cyExp
    (140) errorCyExp -> .

    PLUS            reduce using rule 140 (errorCyExp -> .)
    MINUS           reduce using rule 140 (errorCyExp -> .)
    ,               reduce using rule 140 (errorCyExp -> .)
    PARFIN          reduce using rule 140 (errorCyExp -> .)
    EQ              reduce using rule 140 (errorCyExp -> .)
    DIF             reduce using rule 140 (errorCyExp -> .)
    LTOEQ           reduce using rule 140 (errorCyExp -> .)
    GTOEQ           reduce using rule 140 (errorCyExp -> .)
    GT              reduce using rule 140 (errorCyExp -> .)
    LT              reduce using rule 140 (errorCyExp -> .)
    AND             reduce using rule 140 (errorCyExp -> .)
    OR              reduce using rule 140 (errorCyExp -> .)
    ]               reduce using rule 140 (errorCyExp -> .)
    ;               reduce using rule 140 (errorCyExp -> .)

    errorCyExp                     shift and go to state 198

state 165

    (166) cte -> FALSE saveConstantBool .

    MULT            reduce using rule 166 (cte -> FALSE saveConstantBool .)
    DIV             reduce using rule 166 (cte -> FALSE saveConstantBool .)
    PLUS            reduce using rule 166 (cte -> FALSE saveConstantBool .)
    MINUS           reduce using rule 166 (cte -> FALSE saveConstantBool .)
    EQ              reduce using rule 166 (cte -> FALSE saveConstantBool .)
    DIF             reduce using rule 166 (cte -> FALSE saveConstantBool .)
    LTOEQ           reduce using rule 166 (cte -> FALSE saveConstantBool .)
    GTOEQ           reduce using rule 166 (cte -> FALSE saveConstantBool .)
    GT              reduce using rule 166 (cte -> FALSE saveConstantBool .)
    LT              reduce using rule 166 (cte -> FALSE saveConstantBool .)
    AND             reduce using rule 166 (cte -> FALSE saveConstantBool .)
    OR              reduce using rule 166 (cte -> FALSE saveConstantBool .)
    ,               reduce using rule 166 (cte -> FALSE saveConstantBool .)
    PARFIN          reduce using rule 166 (cte -> FALSE saveConstantBool .)
    ]               reduce using rule 166 (cte -> FALSE saveConstantBool .)
    ;               reduce using rule 166 (cte -> FALSE saveConstantBool .)
    :               reduce using rule 166 (cte -> FALSE saveConstantBool .)


state 166

    (164) cte -> CTEF saveConstantFloat .

    MULT            reduce using rule 164 (cte -> CTEF saveConstantFloat .)
    DIV             reduce using rule 164 (cte -> CTEF saveConstantFloat .)
    PLUS            reduce using rule 164 (cte -> CTEF saveConstantFloat .)
    MINUS           reduce using rule 164 (cte -> CTEF saveConstantFloat .)
    EQ              reduce using rule 164 (cte -> CTEF saveConstantFloat .)
    DIF             reduce using rule 164 (cte -> CTEF saveConstantFloat .)
    LTOEQ           reduce using rule 164 (cte -> CTEF saveConstantFloat .)
    GTOEQ           reduce using rule 164 (cte -> CTEF saveConstantFloat .)
    GT              reduce using rule 164 (cte -> CTEF saveConstantFloat .)
    LT              reduce using rule 164 (cte -> CTEF saveConstantFloat .)
    AND             reduce using rule 164 (cte -> CTEF saveConstantFloat .)
    OR              reduce using rule 164 (cte -> CTEF saveConstantFloat .)
    ,               reduce using rule 164 (cte -> CTEF saveConstantFloat .)
    PARFIN          reduce using rule 164 (cte -> CTEF saveConstantFloat .)
    ]               reduce using rule 164 (cte -> CTEF saveConstantFloat .)
    ;               reduce using rule 164 (cte -> CTEF saveConstantFloat .)
    :               reduce using rule 164 (cte -> CTEF saveConstantFloat .)


state 167

    (29) print -> PRINT PARINI exp performPrint . cyPrint PARFIN
    (30) cyPrint -> . , fix exp performPrint cyPrint
    (31) cyPrint -> . empty
    (167) empty -> .

    ,               shift and go to state 200
    PARFIN          reduce using rule 167 (empty -> .)

    cyPrint                        shift and go to state 199
    empty                          shift and go to state 201

state 168

    (141) term -> fact performMulDiv . cyTerm
    (142) cyTerm -> . MULT saveOperator errorFact term
    (143) cyTerm -> . DIV saveOperator term
    (144) cyTerm -> . empty
    (167) empty -> .

    MULT            shift and go to state 205
    DIV             shift and go to state 204
    PLUS            reduce using rule 167 (empty -> .)
    MINUS           reduce using rule 167 (empty -> .)
    ,               reduce using rule 167 (empty -> .)
    PARFIN          reduce using rule 167 (empty -> .)
    EQ              reduce using rule 167 (empty -> .)
    DIF             reduce using rule 167 (empty -> .)
    LTOEQ           reduce using rule 167 (empty -> .)
    GTOEQ           reduce using rule 167 (empty -> .)
    GT              reduce using rule 167 (empty -> .)
    LT              reduce using rule 167 (empty -> .)
    AND             reduce using rule 167 (empty -> .)
    OR              reduce using rule 167 (empty -> .)
    ]               reduce using rule 167 (empty -> .)
    ;               reduce using rule 167 (empty -> .)

    cyTerm                         shift and go to state 202
    empty                          shift and go to state 203

state 169

    (87) whileCycle -> errorWhileCycle WHILE saveReturn PARINI . expresion PARFIN saveFalso { body } repeatWhile
    (122) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (127) sExp -> . exp errorOpSExp opSExp performRelational
    (136) exp -> . term performAddSub errorCyExp cyExp
    (141) term -> . fact performMulDiv cyTerm
    (145) fact -> . CTES saveConstantString
    (146) fact -> . cte
    (147) fact -> . funcCall
    (148) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (149) fact -> . ID saveVariable opAccess errorOpAccess
    (163) cte -> . CTED saveConstantInt
    (164) cte -> . CTEF saveConstantFloat
    (165) cte -> . TRUE saveConstantBool
    (166) cte -> . FALSE saveConstantBool
    (105) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 137
    PARINI          shift and go to state 134
    ID              shift and go to state 136
    CTED            shift and go to state 135
    CTEF            shift and go to state 142
    TRUE            shift and go to state 133
    FALSE           shift and go to state 139

    sExp                           shift and go to state 148
    expresion                      shift and go to state 206
    term                           shift and go to state 138
    funcCall                       shift and go to state 140
    cte                            shift and go to state 141
    exp                            shift and go to state 151
    fact                           shift and go to state 144

state 170

    (100) assignOptions -> initDict .

    ;               reduce using rule 100 (assignOptions -> initDict .)
    PARFIN          reduce using rule 100 (assignOptions -> initDict .)


state 171

    (97) assign -> ID saveVariable errorAssign assignOptions . performAssign
    (180) performAssign -> .

    ;               reduce using rule 180 (performAssign -> .)
    PARFIN          reduce using rule 180 (performAssign -> .)

    performAssign                  shift and go to state 207

state 172

    (39) init -> ASGN . saveOperator errorInit initWith
    (43) initDict -> ASGN . PARINI dictType : dictType PARFIN errorInitDict
    (177) saveOperator -> .

  ! shift/reduce conflict for PARINI resolved as shift
    PARINI          shift and go to state 209
    ID              reduce using rule 177 (saveOperator -> .)
    CTES            reduce using rule 177 (saveOperator -> .)
    CTED            reduce using rule 177 (saveOperator -> .)
    CTEF            reduce using rule 177 (saveOperator -> .)
    TRUE            reduce using rule 177 (saveOperator -> .)
    FALSE           reduce using rule 177 (saveOperator -> .)

  ! PARINI          [ reduce using rule 177 (saveOperator -> .) ]

    saveOperator                   shift and go to state 208

state 173

    (99) assignOptions -> init .

    ;               reduce using rule 99 (assignOptions -> init .)
    PARFIN          reduce using rule 99 (assignOptions -> init .)


state 174

    (101) assignOptions -> [ . expresion ] assignMatrix init
    (122) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (127) sExp -> . exp errorOpSExp opSExp performRelational
    (136) exp -> . term performAddSub errorCyExp cyExp
    (141) term -> . fact performMulDiv cyTerm
    (145) fact -> . CTES saveConstantString
    (146) fact -> . cte
    (147) fact -> . funcCall
    (148) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (149) fact -> . ID saveVariable opAccess errorOpAccess
    (163) cte -> . CTED saveConstantInt
    (164) cte -> . CTEF saveConstantFloat
    (165) cte -> . TRUE saveConstantBool
    (166) cte -> . FALSE saveConstantBool
    (105) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 137
    PARINI          shift and go to state 134
    ID              shift and go to state 136
    CTED            shift and go to state 135
    CTEF            shift and go to state 142
    TRUE            shift and go to state 133
    FALSE           shift and go to state 139

    sExp                           shift and go to state 148
    expresion                      shift and go to state 210
    term                           shift and go to state 138
    funcCall                       shift and go to state 140
    cte                            shift and go to state 141
    exp                            shift and go to state 151
    fact                           shift and go to state 144

state 175

    (105) funcCall -> ID PARINI opParamCall PARFIN .

    MULT            reduce using rule 105 (funcCall -> ID PARINI opParamCall PARFIN .)
    DIV             reduce using rule 105 (funcCall -> ID PARINI opParamCall PARFIN .)
    PLUS            reduce using rule 105 (funcCall -> ID PARINI opParamCall PARFIN .)
    MINUS           reduce using rule 105 (funcCall -> ID PARINI opParamCall PARFIN .)
    ,               reduce using rule 105 (funcCall -> ID PARINI opParamCall PARFIN .)
    PARFIN          reduce using rule 105 (funcCall -> ID PARINI opParamCall PARFIN .)
    EQ              reduce using rule 105 (funcCall -> ID PARINI opParamCall PARFIN .)
    DIF             reduce using rule 105 (funcCall -> ID PARINI opParamCall PARFIN .)
    LTOEQ           reduce using rule 105 (funcCall -> ID PARINI opParamCall PARFIN .)
    GTOEQ           reduce using rule 105 (funcCall -> ID PARINI opParamCall PARFIN .)
    GT              reduce using rule 105 (funcCall -> ID PARINI opParamCall PARFIN .)
    LT              reduce using rule 105 (funcCall -> ID PARINI opParamCall PARFIN .)
    AND             reduce using rule 105 (funcCall -> ID PARINI opParamCall PARFIN .)
    OR              reduce using rule 105 (funcCall -> ID PARINI opParamCall PARFIN .)
    ]               reduce using rule 105 (funcCall -> ID PARINI opParamCall PARFIN .)
    ;               reduce using rule 105 (funcCall -> ID PARINI opParamCall PARFIN .)


state 176

    (122) expresion -> sExp performAndOr . cyExpresion errorExpresion
    (124) cyExpresion -> . AND saveOperator expresion
    (125) cyExpresion -> . OR saveOperator expresion
    (126) cyExpresion -> . empty
    (167) empty -> .

    AND             shift and go to state 211
    OR              shift and go to state 212
    ,               reduce using rule 167 (empty -> .)
    PARFIN          reduce using rule 167 (empty -> .)
    ]               reduce using rule 167 (empty -> .)
    ;               reduce using rule 167 (empty -> .)

    cyExpresion                    shift and go to state 213
    empty                          shift and go to state 214

state 177

    (106) opParamCall -> expresion cyParamCall .

    PARFIN          reduce using rule 106 (opParamCall -> expresion cyParamCall .)


state 178

    (108) cyParamCall -> , . expresion cyParamCall
    (122) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (127) sExp -> . exp errorOpSExp opSExp performRelational
    (136) exp -> . term performAddSub errorCyExp cyExp
    (141) term -> . fact performMulDiv cyTerm
    (145) fact -> . CTES saveConstantString
    (146) fact -> . cte
    (147) fact -> . funcCall
    (148) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (149) fact -> . ID saveVariable opAccess errorOpAccess
    (163) cte -> . CTED saveConstantInt
    (164) cte -> . CTEF saveConstantFloat
    (165) cte -> . TRUE saveConstantBool
    (166) cte -> . FALSE saveConstantBool
    (105) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 137
    PARINI          shift and go to state 134
    ID              shift and go to state 136
    CTED            shift and go to state 135
    CTEF            shift and go to state 142
    TRUE            shift and go to state 133
    FALSE           shift and go to state 139

    sExp                           shift and go to state 148
    expresion                      shift and go to state 215
    term                           shift and go to state 138
    funcCall                       shift and go to state 140
    cte                            shift and go to state 141
    exp                            shift and go to state 151
    fact                           shift and go to state 144

state 179

    (109) cyParamCall -> empty .

    PARFIN          reduce using rule 109 (cyParamCall -> empty .)


state 180

    (127) sExp -> exp errorOpSExp . opSExp performRelational
    (128) opSExp -> . EQ saveOperator exp
    (129) opSExp -> . DIF saveOperator exp
    (130) opSExp -> . LTOEQ saveOperator exp
    (131) opSExp -> . GTOEQ saveOperator exp
    (132) opSExp -> . GT saveOperator exp
    (133) opSExp -> . LT saveOperator exp
    (134) opSExp -> . empty
    (167) empty -> .

    EQ              shift and go to state 221
    DIF             shift and go to state 218
    LTOEQ           shift and go to state 217
    GTOEQ           shift and go to state 220
    GT              shift and go to state 216
    LT              shift and go to state 219
    AND             reduce using rule 167 (empty -> .)
    OR              reduce using rule 167 (empty -> .)
    ,               reduce using rule 167 (empty -> .)
    PARFIN          reduce using rule 167 (empty -> .)
    ]               reduce using rule 167 (empty -> .)
    ;               reduce using rule 167 (empty -> .)

    empty                          shift and go to state 222
    opSExp                         shift and go to state 223

state 181

    (97) assign -> ID . saveVariable errorAssign assignOptions performAssign
    (176) saveVariable -> .

    [               reduce using rule 176 (saveVariable -> .)
    ASGN            reduce using rule 176 (saveVariable -> .)

    saveVariable                   shift and go to state 124

state 182

    (91) forCycle -> errorForCycle FOR PARINI assign . ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign

    ;               shift and go to state 224


state 183

    (115) condition -> errorCondition IF PARINI expresion . PARFIN saveFalso { body } optionalElse rellenaFalso

    PARFIN          shift and go to state 225


state 184

    (57) function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } . clearVarsTable
    (60) clearVarsTable -> .

    FUNC            reduce using rule 60 (clearVarsTable -> .)
    MAIN            reduce using rule 60 (clearVarsTable -> .)

    clearVarsTable                 shift and go to state 226

state 185

    (68) opReturns -> errorOpReturns RETURNS . type saveReturnType { opVars saveQuadruple body return
    (13) type -> . errorType INT
    (14) type -> . FLOAT
    (15) type -> . STRING
    (16) type -> . BOOL
    (17) errorType -> .

    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 32
    INT             reduce using rule 17 (errorType -> .)

    errorType                      shift and go to state 31
    type                           shift and go to state 227

state 186

    (69) opReturns -> { opVars . saveQuadruple body
    (70) saveQuadruple -> .

    ID              reduce using rule 70 (saveQuadruple -> .)
    PRINT           reduce using rule 70 (saveQuadruple -> .)
    READ            reduce using rule 70 (saveQuadruple -> .)
    IF              reduce using rule 70 (saveQuadruple -> .)
    FOR             reduce using rule 70 (saveQuadruple -> .)
    WHILE           reduce using rule 70 (saveQuadruple -> .)
    }               reduce using rule 70 (saveQuadruple -> .)

    saveQuadruple                  shift and go to state 228

state 187

    (49) param -> saveType type errorParam ID cyTypeParam . cyParam
    (51) cyParam -> . errorCyParam saveID saveTypeParam ; param
    (52) cyParam -> . empty saveID saveTypeParam
    (56) errorCyParam -> .
    (167) empty -> .

    ;               reduce using rule 56 (errorCyParam -> .)
    PARFIN          reduce using rule 167 (empty -> .)

    empty                          shift and go to state 229
    cyParam                        shift and go to state 231
    errorCyParam                   shift and go to state 230

state 188

    (33) cyRead -> , . fix ID performRead cyRead
    (35) fix -> .

    ID              reduce using rule 35 (fix -> .)

    fix                            shift and go to state 232

state 189

    (32) read -> READ PARINI ID performRead cyRead . PARFIN

    PARFIN          shift and go to state 233


state 190

    (34) cyRead -> empty .

    PARFIN          reduce using rule 34 (cyRead -> empty .)


state 191

    (148) fact -> PARINI putFondo expresion . PARFIN takeFondo

    PARFIN          shift and go to state 234


state 192

    (155) opStruct -> errorOpStruct . [ expresion ] opMatrix

    [               shift and go to state 235


state 193

    (152) opAccess -> opDictionary .

    MULT            reduce using rule 152 (opAccess -> opDictionary .)
    DIV             reduce using rule 152 (opAccess -> opDictionary .)
    PLUS            reduce using rule 152 (opAccess -> opDictionary .)
    MINUS           reduce using rule 152 (opAccess -> opDictionary .)
    ,               reduce using rule 152 (opAccess -> opDictionary .)
    PARFIN          reduce using rule 152 (opAccess -> opDictionary .)
    EQ              reduce using rule 152 (opAccess -> opDictionary .)
    DIF             reduce using rule 152 (opAccess -> opDictionary .)
    LTOEQ           reduce using rule 152 (opAccess -> opDictionary .)
    GTOEQ           reduce using rule 152 (opAccess -> opDictionary .)
    GT              reduce using rule 152 (opAccess -> opDictionary .)
    LT              reduce using rule 152 (opAccess -> opDictionary .)
    AND             reduce using rule 152 (opAccess -> opDictionary .)
    OR              reduce using rule 152 (opAccess -> opDictionary .)
    ]               reduce using rule 152 (opAccess -> opDictionary .)
    ;               reduce using rule 152 (opAccess -> opDictionary .)


state 194

    (151) opAccess -> opStruct .

    MULT            reduce using rule 151 (opAccess -> opStruct .)
    DIV             reduce using rule 151 (opAccess -> opStruct .)
    PLUS            reduce using rule 151 (opAccess -> opStruct .)
    MINUS           reduce using rule 151 (opAccess -> opStruct .)
    ,               reduce using rule 151 (opAccess -> opStruct .)
    PARFIN          reduce using rule 151 (opAccess -> opStruct .)
    EQ              reduce using rule 151 (opAccess -> opStruct .)
    DIF             reduce using rule 151 (opAccess -> opStruct .)
    LTOEQ           reduce using rule 151 (opAccess -> opStruct .)
    GTOEQ           reduce using rule 151 (opAccess -> opStruct .)
    GT              reduce using rule 151 (opAccess -> opStruct .)
    LT              reduce using rule 151 (opAccess -> opStruct .)
    AND             reduce using rule 151 (opAccess -> opStruct .)
    OR              reduce using rule 151 (opAccess -> opStruct .)
    ]               reduce using rule 151 (opAccess -> opStruct .)
    ;               reduce using rule 151 (opAccess -> opStruct .)


state 195

    (149) fact -> ID saveVariable opAccess . errorOpAccess
    (154) errorOpAccess -> .

    MULT            reduce using rule 154 (errorOpAccess -> .)
    DIV             reduce using rule 154 (errorOpAccess -> .)
    PLUS            reduce using rule 154 (errorOpAccess -> .)
    MINUS           reduce using rule 154 (errorOpAccess -> .)
    ,               reduce using rule 154 (errorOpAccess -> .)
    PARFIN          reduce using rule 154 (errorOpAccess -> .)
    EQ              reduce using rule 154 (errorOpAccess -> .)
    DIF             reduce using rule 154 (errorOpAccess -> .)
    LTOEQ           reduce using rule 154 (errorOpAccess -> .)
    GTOEQ           reduce using rule 154 (errorOpAccess -> .)
    GT              reduce using rule 154 (errorOpAccess -> .)
    LT              reduce using rule 154 (errorOpAccess -> .)
    AND             reduce using rule 154 (errorOpAccess -> .)
    OR              reduce using rule 154 (errorOpAccess -> .)
    ]               reduce using rule 154 (errorOpAccess -> .)
    ;               reduce using rule 154 (errorOpAccess -> .)

    errorOpAccess                  shift and go to state 236

state 196

    (160) opDictionary -> . . dictIndex
    (161) dictIndex -> . FIRST
    (162) dictIndex -> . LAST

    FIRST           shift and go to state 237
    LAST            shift and go to state 238

    dictIndex                      shift and go to state 239

state 197

    (153) opAccess -> empty .

    MULT            reduce using rule 153 (opAccess -> empty .)
    DIV             reduce using rule 153 (opAccess -> empty .)
    PLUS            reduce using rule 153 (opAccess -> empty .)
    MINUS           reduce using rule 153 (opAccess -> empty .)
    ,               reduce using rule 153 (opAccess -> empty .)
    PARFIN          reduce using rule 153 (opAccess -> empty .)
    EQ              reduce using rule 153 (opAccess -> empty .)
    DIF             reduce using rule 153 (opAccess -> empty .)
    LTOEQ           reduce using rule 153 (opAccess -> empty .)
    GTOEQ           reduce using rule 153 (opAccess -> empty .)
    GT              reduce using rule 153 (opAccess -> empty .)
    LT              reduce using rule 153 (opAccess -> empty .)
    AND             reduce using rule 153 (opAccess -> empty .)
    OR              reduce using rule 153 (opAccess -> empty .)
    ]               reduce using rule 153 (opAccess -> empty .)
    ;               reduce using rule 153 (opAccess -> empty .)


state 198

    (136) exp -> term performAddSub errorCyExp . cyExp
    (137) cyExp -> . PLUS saveOperator exp
    (138) cyExp -> . MINUS saveOperator exp
    (139) cyExp -> . empty
    (167) empty -> .

    PLUS            shift and go to state 241
    MINUS           shift and go to state 242
    ,               reduce using rule 167 (empty -> .)
    PARFIN          reduce using rule 167 (empty -> .)
    EQ              reduce using rule 167 (empty -> .)
    DIF             reduce using rule 167 (empty -> .)
    LTOEQ           reduce using rule 167 (empty -> .)
    GTOEQ           reduce using rule 167 (empty -> .)
    GT              reduce using rule 167 (empty -> .)
    LT              reduce using rule 167 (empty -> .)
    AND             reduce using rule 167 (empty -> .)
    OR              reduce using rule 167 (empty -> .)
    ]               reduce using rule 167 (empty -> .)
    ;               reduce using rule 167 (empty -> .)

    cyExp                          shift and go to state 240
    empty                          shift and go to state 243

state 199

    (29) print -> PRINT PARINI exp performPrint cyPrint . PARFIN

    PARFIN          shift and go to state 244


state 200

    (30) cyPrint -> , . fix exp performPrint cyPrint
    (35) fix -> .

    CTES            reduce using rule 35 (fix -> .)
    PARINI          reduce using rule 35 (fix -> .)
    ID              reduce using rule 35 (fix -> .)
    CTED            reduce using rule 35 (fix -> .)
    CTEF            reduce using rule 35 (fix -> .)
    TRUE            reduce using rule 35 (fix -> .)
    FALSE           reduce using rule 35 (fix -> .)

    fix                            shift and go to state 245

state 201

    (31) cyPrint -> empty .

    PARFIN          reduce using rule 31 (cyPrint -> empty .)


state 202

    (141) term -> fact performMulDiv cyTerm .

    PLUS            reduce using rule 141 (term -> fact performMulDiv cyTerm .)
    MINUS           reduce using rule 141 (term -> fact performMulDiv cyTerm .)
    EQ              reduce using rule 141 (term -> fact performMulDiv cyTerm .)
    DIF             reduce using rule 141 (term -> fact performMulDiv cyTerm .)
    LTOEQ           reduce using rule 141 (term -> fact performMulDiv cyTerm .)
    GTOEQ           reduce using rule 141 (term -> fact performMulDiv cyTerm .)
    GT              reduce using rule 141 (term -> fact performMulDiv cyTerm .)
    LT              reduce using rule 141 (term -> fact performMulDiv cyTerm .)
    AND             reduce using rule 141 (term -> fact performMulDiv cyTerm .)
    OR              reduce using rule 141 (term -> fact performMulDiv cyTerm .)
    ]               reduce using rule 141 (term -> fact performMulDiv cyTerm .)
    ,               reduce using rule 141 (term -> fact performMulDiv cyTerm .)
    PARFIN          reduce using rule 141 (term -> fact performMulDiv cyTerm .)
    ;               reduce using rule 141 (term -> fact performMulDiv cyTerm .)


state 203

    (144) cyTerm -> empty .

    PLUS            reduce using rule 144 (cyTerm -> empty .)
    MINUS           reduce using rule 144 (cyTerm -> empty .)
    ,               reduce using rule 144 (cyTerm -> empty .)
    PARFIN          reduce using rule 144 (cyTerm -> empty .)
    EQ              reduce using rule 144 (cyTerm -> empty .)
    DIF             reduce using rule 144 (cyTerm -> empty .)
    LTOEQ           reduce using rule 144 (cyTerm -> empty .)
    GTOEQ           reduce using rule 144 (cyTerm -> empty .)
    GT              reduce using rule 144 (cyTerm -> empty .)
    LT              reduce using rule 144 (cyTerm -> empty .)
    AND             reduce using rule 144 (cyTerm -> empty .)
    OR              reduce using rule 144 (cyTerm -> empty .)
    ]               reduce using rule 144 (cyTerm -> empty .)
    ;               reduce using rule 144 (cyTerm -> empty .)


state 204

    (143) cyTerm -> DIV . saveOperator term
    (177) saveOperator -> .

    CTES            reduce using rule 177 (saveOperator -> .)
    PARINI          reduce using rule 177 (saveOperator -> .)
    ID              reduce using rule 177 (saveOperator -> .)
    CTED            reduce using rule 177 (saveOperator -> .)
    CTEF            reduce using rule 177 (saveOperator -> .)
    TRUE            reduce using rule 177 (saveOperator -> .)
    FALSE           reduce using rule 177 (saveOperator -> .)

    saveOperator                   shift and go to state 246

state 205

    (142) cyTerm -> MULT . saveOperator errorFact term
    (177) saveOperator -> .

    CTES            reduce using rule 177 (saveOperator -> .)
    PARINI          reduce using rule 177 (saveOperator -> .)
    ID              reduce using rule 177 (saveOperator -> .)
    CTED            reduce using rule 177 (saveOperator -> .)
    CTEF            reduce using rule 177 (saveOperator -> .)
    TRUE            reduce using rule 177 (saveOperator -> .)
    FALSE           reduce using rule 177 (saveOperator -> .)

    saveOperator                   shift and go to state 247

state 206

    (87) whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion . PARFIN saveFalso { body } repeatWhile

    PARFIN          shift and go to state 248


state 207

    (97) assign -> ID saveVariable errorAssign assignOptions performAssign .

    ;               reduce using rule 97 (assign -> ID saveVariable errorAssign assignOptions performAssign .)
    PARFIN          reduce using rule 97 (assign -> ID saveVariable errorAssign assignOptions performAssign .)


state 208

    (39) init -> ASGN saveOperator . errorInit initWith
    (40) errorInit -> .

    ID              reduce using rule 40 (errorInit -> .)
    CTES            reduce using rule 40 (errorInit -> .)
    PARINI          reduce using rule 40 (errorInit -> .)
    CTED            reduce using rule 40 (errorInit -> .)
    CTEF            reduce using rule 40 (errorInit -> .)
    TRUE            reduce using rule 40 (errorInit -> .)
    FALSE           reduce using rule 40 (errorInit -> .)

    errorInit                      shift and go to state 249

state 209

    (43) initDict -> ASGN PARINI . dictType : dictType PARFIN errorInitDict
    (45) dictType -> . errorDictType CTES
    (46) dictType -> . cte
    (47) dictType -> . ID
    (48) errorDictType -> .
    (163) cte -> . CTED saveConstantInt
    (164) cte -> . CTEF saveConstantFloat
    (165) cte -> . TRUE saveConstantBool
    (166) cte -> . FALSE saveConstantBool

    ID              shift and go to state 253
    CTES            reduce using rule 48 (errorDictType -> .)
    CTED            shift and go to state 135
    CTEF            shift and go to state 142
    TRUE            shift and go to state 133
    FALSE           shift and go to state 139

    dictType                       shift and go to state 250
    errorDictType                  shift and go to state 251
    cte                            shift and go to state 252

state 210

    (101) assignOptions -> [ expresion . ] assignMatrix init

    ]               shift and go to state 254


state 211

    (124) cyExpresion -> AND . saveOperator expresion
    (177) saveOperator -> .

    CTES            reduce using rule 177 (saveOperator -> .)
    PARINI          reduce using rule 177 (saveOperator -> .)
    ID              reduce using rule 177 (saveOperator -> .)
    CTED            reduce using rule 177 (saveOperator -> .)
    CTEF            reduce using rule 177 (saveOperator -> .)
    TRUE            reduce using rule 177 (saveOperator -> .)
    FALSE           reduce using rule 177 (saveOperator -> .)

    saveOperator                   shift and go to state 255

state 212

    (125) cyExpresion -> OR . saveOperator expresion
    (177) saveOperator -> .

    CTES            reduce using rule 177 (saveOperator -> .)
    PARINI          reduce using rule 177 (saveOperator -> .)
    ID              reduce using rule 177 (saveOperator -> .)
    CTED            reduce using rule 177 (saveOperator -> .)
    CTEF            reduce using rule 177 (saveOperator -> .)
    TRUE            reduce using rule 177 (saveOperator -> .)
    FALSE           reduce using rule 177 (saveOperator -> .)

    saveOperator                   shift and go to state 256

state 213

    (122) expresion -> sExp performAndOr cyExpresion . errorExpresion
    (123) errorExpresion -> .

    ,               reduce using rule 123 (errorExpresion -> .)
    PARFIN          reduce using rule 123 (errorExpresion -> .)
    ]               reduce using rule 123 (errorExpresion -> .)
    ;               reduce using rule 123 (errorExpresion -> .)

    errorExpresion                 shift and go to state 257

state 214

    (126) cyExpresion -> empty .

    ,               reduce using rule 126 (cyExpresion -> empty .)
    PARFIN          reduce using rule 126 (cyExpresion -> empty .)
    ]               reduce using rule 126 (cyExpresion -> empty .)
    ;               reduce using rule 126 (cyExpresion -> empty .)


state 215

    (108) cyParamCall -> , expresion . cyParamCall
    (108) cyParamCall -> . , expresion cyParamCall
    (109) cyParamCall -> . empty
    (167) empty -> .

    ,               shift and go to state 178
    PARFIN          reduce using rule 167 (empty -> .)

    cyParamCall                    shift and go to state 258
    empty                          shift and go to state 179

state 216

    (132) opSExp -> GT . saveOperator exp
    (177) saveOperator -> .

    CTES            reduce using rule 177 (saveOperator -> .)
    PARINI          reduce using rule 177 (saveOperator -> .)
    ID              reduce using rule 177 (saveOperator -> .)
    CTED            reduce using rule 177 (saveOperator -> .)
    CTEF            reduce using rule 177 (saveOperator -> .)
    TRUE            reduce using rule 177 (saveOperator -> .)
    FALSE           reduce using rule 177 (saveOperator -> .)

    saveOperator                   shift and go to state 259

state 217

    (130) opSExp -> LTOEQ . saveOperator exp
    (177) saveOperator -> .

    CTES            reduce using rule 177 (saveOperator -> .)
    PARINI          reduce using rule 177 (saveOperator -> .)
    ID              reduce using rule 177 (saveOperator -> .)
    CTED            reduce using rule 177 (saveOperator -> .)
    CTEF            reduce using rule 177 (saveOperator -> .)
    TRUE            reduce using rule 177 (saveOperator -> .)
    FALSE           reduce using rule 177 (saveOperator -> .)

    saveOperator                   shift and go to state 260

state 218

    (129) opSExp -> DIF . saveOperator exp
    (177) saveOperator -> .

    CTES            reduce using rule 177 (saveOperator -> .)
    PARINI          reduce using rule 177 (saveOperator -> .)
    ID              reduce using rule 177 (saveOperator -> .)
    CTED            reduce using rule 177 (saveOperator -> .)
    CTEF            reduce using rule 177 (saveOperator -> .)
    TRUE            reduce using rule 177 (saveOperator -> .)
    FALSE           reduce using rule 177 (saveOperator -> .)

    saveOperator                   shift and go to state 261

state 219

    (133) opSExp -> LT . saveOperator exp
    (177) saveOperator -> .

    CTES            reduce using rule 177 (saveOperator -> .)
    PARINI          reduce using rule 177 (saveOperator -> .)
    ID              reduce using rule 177 (saveOperator -> .)
    CTED            reduce using rule 177 (saveOperator -> .)
    CTEF            reduce using rule 177 (saveOperator -> .)
    TRUE            reduce using rule 177 (saveOperator -> .)
    FALSE           reduce using rule 177 (saveOperator -> .)

    saveOperator                   shift and go to state 262

state 220

    (131) opSExp -> GTOEQ . saveOperator exp
    (177) saveOperator -> .

    CTES            reduce using rule 177 (saveOperator -> .)
    PARINI          reduce using rule 177 (saveOperator -> .)
    ID              reduce using rule 177 (saveOperator -> .)
    CTED            reduce using rule 177 (saveOperator -> .)
    CTEF            reduce using rule 177 (saveOperator -> .)
    TRUE            reduce using rule 177 (saveOperator -> .)
    FALSE           reduce using rule 177 (saveOperator -> .)

    saveOperator                   shift and go to state 263

state 221

    (128) opSExp -> EQ . saveOperator exp
    (177) saveOperator -> .

    CTES            reduce using rule 177 (saveOperator -> .)
    PARINI          reduce using rule 177 (saveOperator -> .)
    ID              reduce using rule 177 (saveOperator -> .)
    CTED            reduce using rule 177 (saveOperator -> .)
    CTEF            reduce using rule 177 (saveOperator -> .)
    TRUE            reduce using rule 177 (saveOperator -> .)
    FALSE           reduce using rule 177 (saveOperator -> .)

    saveOperator                   shift and go to state 264

state 222

    (134) opSExp -> empty .

    AND             reduce using rule 134 (opSExp -> empty .)
    OR              reduce using rule 134 (opSExp -> empty .)
    ,               reduce using rule 134 (opSExp -> empty .)
    PARFIN          reduce using rule 134 (opSExp -> empty .)
    ]               reduce using rule 134 (opSExp -> empty .)
    ;               reduce using rule 134 (opSExp -> empty .)


state 223

    (127) sExp -> exp errorOpSExp opSExp . performRelational
    (183) performRelational -> .

    AND             reduce using rule 183 (performRelational -> .)
    OR              reduce using rule 183 (performRelational -> .)
    ,               reduce using rule 183 (performRelational -> .)
    PARFIN          reduce using rule 183 (performRelational -> .)
    ]               reduce using rule 183 (performRelational -> .)
    ;               reduce using rule 183 (performRelational -> .)

    performRelational              shift and go to state 265

state 224

    (91) forCycle -> errorForCycle FOR PARINI assign ; . saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign
    (89) saveReturn -> .

    CTES            reduce using rule 89 (saveReturn -> .)
    PARINI          reduce using rule 89 (saveReturn -> .)
    ID              reduce using rule 89 (saveReturn -> .)
    CTED            reduce using rule 89 (saveReturn -> .)
    CTEF            reduce using rule 89 (saveReturn -> .)
    TRUE            reduce using rule 89 (saveReturn -> .)
    FALSE           reduce using rule 89 (saveReturn -> .)

    saveReturn                     shift and go to state 266

state 225

    (115) condition -> errorCondition IF PARINI expresion PARFIN . saveFalso { body } optionalElse rellenaFalso
    (170) saveFalso -> .

    {               reduce using rule 170 (saveFalso -> .)

    saveFalso                      shift and go to state 267

state 226

    (57) function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable .

    FUNC            reduce using rule 57 (function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable .)
    MAIN            reduce using rule 57 (function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable .)


state 227

    (68) opReturns -> errorOpReturns RETURNS type . saveReturnType { opVars saveQuadruple body return
    (71) saveReturnType -> .

    {               reduce using rule 71 (saveReturnType -> .)

    saveReturnType                 shift and go to state 268

state 228

    (69) opReturns -> { opVars saveQuadruple . body
    (81) body -> . errorBody cyInstruction
    (82) body -> . empty
    (83) errorBody -> .
    (167) empty -> .

    ID              reduce using rule 83 (errorBody -> .)
    PRINT           reduce using rule 83 (errorBody -> .)
    READ            reduce using rule 83 (errorBody -> .)
    IF              reduce using rule 83 (errorBody -> .)
    FOR             reduce using rule 83 (errorBody -> .)
    WHILE           reduce using rule 83 (errorBody -> .)
    }               reduce using rule 167 (empty -> .)

    body                           shift and go to state 269
    errorBody                      shift and go to state 88
    empty                          shift and go to state 89

state 229

    (52) cyParam -> empty . saveID saveTypeParam
    (11) saveID -> .

    PARFIN          reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 270

state 230

    (51) cyParam -> errorCyParam . saveID saveTypeParam ; param
    (11) saveID -> .

    ;               reduce using rule 11 (saveID -> .)

    saveID                         shift and go to state 271

state 231

    (49) param -> saveType type errorParam ID cyTypeParam cyParam .

    PARFIN          reduce using rule 49 (param -> saveType type errorParam ID cyTypeParam cyParam .)


state 232

    (33) cyRead -> , fix . ID performRead cyRead

    ID              shift and go to state 272


state 233

    (32) read -> READ PARINI ID performRead cyRead PARFIN .

    ;               reduce using rule 32 (read -> READ PARINI ID performRead cyRead PARFIN .)


state 234

    (148) fact -> PARINI putFondo expresion PARFIN . takeFondo
    (179) takeFondo -> .

    MULT            reduce using rule 179 (takeFondo -> .)
    DIV             reduce using rule 179 (takeFondo -> .)
    PLUS            reduce using rule 179 (takeFondo -> .)
    MINUS           reduce using rule 179 (takeFondo -> .)
    ,               reduce using rule 179 (takeFondo -> .)
    PARFIN          reduce using rule 179 (takeFondo -> .)
    EQ              reduce using rule 179 (takeFondo -> .)
    DIF             reduce using rule 179 (takeFondo -> .)
    LTOEQ           reduce using rule 179 (takeFondo -> .)
    GTOEQ           reduce using rule 179 (takeFondo -> .)
    GT              reduce using rule 179 (takeFondo -> .)
    LT              reduce using rule 179 (takeFondo -> .)
    AND             reduce using rule 179 (takeFondo -> .)
    OR              reduce using rule 179 (takeFondo -> .)
    ]               reduce using rule 179 (takeFondo -> .)
    ;               reduce using rule 179 (takeFondo -> .)

    takeFondo                      shift and go to state 273

state 235

    (155) opStruct -> errorOpStruct [ . expresion ] opMatrix
    (122) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (127) sExp -> . exp errorOpSExp opSExp performRelational
    (136) exp -> . term performAddSub errorCyExp cyExp
    (141) term -> . fact performMulDiv cyTerm
    (145) fact -> . CTES saveConstantString
    (146) fact -> . cte
    (147) fact -> . funcCall
    (148) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (149) fact -> . ID saveVariable opAccess errorOpAccess
    (163) cte -> . CTED saveConstantInt
    (164) cte -> . CTEF saveConstantFloat
    (165) cte -> . TRUE saveConstantBool
    (166) cte -> . FALSE saveConstantBool
    (105) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 137
    PARINI          shift and go to state 134
    ID              shift and go to state 136
    CTED            shift and go to state 135
    CTEF            shift and go to state 142
    TRUE            shift and go to state 133
    FALSE           shift and go to state 139

    sExp                           shift and go to state 148
    expresion                      shift and go to state 274
    term                           shift and go to state 138
    funcCall                       shift and go to state 140
    cte                            shift and go to state 141
    exp                            shift and go to state 151
    fact                           shift and go to state 144

state 236

    (149) fact -> ID saveVariable opAccess errorOpAccess .

    MULT            reduce using rule 149 (fact -> ID saveVariable opAccess errorOpAccess .)
    DIV             reduce using rule 149 (fact -> ID saveVariable opAccess errorOpAccess .)
    PLUS            reduce using rule 149 (fact -> ID saveVariable opAccess errorOpAccess .)
    MINUS           reduce using rule 149 (fact -> ID saveVariable opAccess errorOpAccess .)
    ,               reduce using rule 149 (fact -> ID saveVariable opAccess errorOpAccess .)
    PARFIN          reduce using rule 149 (fact -> ID saveVariable opAccess errorOpAccess .)
    EQ              reduce using rule 149 (fact -> ID saveVariable opAccess errorOpAccess .)
    DIF             reduce using rule 149 (fact -> ID saveVariable opAccess errorOpAccess .)
    LTOEQ           reduce using rule 149 (fact -> ID saveVariable opAccess errorOpAccess .)
    GTOEQ           reduce using rule 149 (fact -> ID saveVariable opAccess errorOpAccess .)
    GT              reduce using rule 149 (fact -> ID saveVariable opAccess errorOpAccess .)
    LT              reduce using rule 149 (fact -> ID saveVariable opAccess errorOpAccess .)
    AND             reduce using rule 149 (fact -> ID saveVariable opAccess errorOpAccess .)
    OR              reduce using rule 149 (fact -> ID saveVariable opAccess errorOpAccess .)
    ]               reduce using rule 149 (fact -> ID saveVariable opAccess errorOpAccess .)
    ;               reduce using rule 149 (fact -> ID saveVariable opAccess errorOpAccess .)


state 237

    (161) dictIndex -> FIRST .

    MULT            reduce using rule 161 (dictIndex -> FIRST .)
    DIV             reduce using rule 161 (dictIndex -> FIRST .)
    PLUS            reduce using rule 161 (dictIndex -> FIRST .)
    MINUS           reduce using rule 161 (dictIndex -> FIRST .)
    ,               reduce using rule 161 (dictIndex -> FIRST .)
    PARFIN          reduce using rule 161 (dictIndex -> FIRST .)
    EQ              reduce using rule 161 (dictIndex -> FIRST .)
    DIF             reduce using rule 161 (dictIndex -> FIRST .)
    LTOEQ           reduce using rule 161 (dictIndex -> FIRST .)
    GTOEQ           reduce using rule 161 (dictIndex -> FIRST .)
    GT              reduce using rule 161 (dictIndex -> FIRST .)
    LT              reduce using rule 161 (dictIndex -> FIRST .)
    AND             reduce using rule 161 (dictIndex -> FIRST .)
    OR              reduce using rule 161 (dictIndex -> FIRST .)
    ]               reduce using rule 161 (dictIndex -> FIRST .)
    ;               reduce using rule 161 (dictIndex -> FIRST .)


state 238

    (162) dictIndex -> LAST .

    MULT            reduce using rule 162 (dictIndex -> LAST .)
    DIV             reduce using rule 162 (dictIndex -> LAST .)
    PLUS            reduce using rule 162 (dictIndex -> LAST .)
    MINUS           reduce using rule 162 (dictIndex -> LAST .)
    ,               reduce using rule 162 (dictIndex -> LAST .)
    PARFIN          reduce using rule 162 (dictIndex -> LAST .)
    EQ              reduce using rule 162 (dictIndex -> LAST .)
    DIF             reduce using rule 162 (dictIndex -> LAST .)
    LTOEQ           reduce using rule 162 (dictIndex -> LAST .)
    GTOEQ           reduce using rule 162 (dictIndex -> LAST .)
    GT              reduce using rule 162 (dictIndex -> LAST .)
    LT              reduce using rule 162 (dictIndex -> LAST .)
    AND             reduce using rule 162 (dictIndex -> LAST .)
    OR              reduce using rule 162 (dictIndex -> LAST .)
    ]               reduce using rule 162 (dictIndex -> LAST .)
    ;               reduce using rule 162 (dictIndex -> LAST .)


state 239

    (160) opDictionary -> . dictIndex .

    MULT            reduce using rule 160 (opDictionary -> . dictIndex .)
    DIV             reduce using rule 160 (opDictionary -> . dictIndex .)
    PLUS            reduce using rule 160 (opDictionary -> . dictIndex .)
    MINUS           reduce using rule 160 (opDictionary -> . dictIndex .)
    ,               reduce using rule 160 (opDictionary -> . dictIndex .)
    PARFIN          reduce using rule 160 (opDictionary -> . dictIndex .)
    EQ              reduce using rule 160 (opDictionary -> . dictIndex .)
    DIF             reduce using rule 160 (opDictionary -> . dictIndex .)
    LTOEQ           reduce using rule 160 (opDictionary -> . dictIndex .)
    GTOEQ           reduce using rule 160 (opDictionary -> . dictIndex .)
    GT              reduce using rule 160 (opDictionary -> . dictIndex .)
    LT              reduce using rule 160 (opDictionary -> . dictIndex .)
    AND             reduce using rule 160 (opDictionary -> . dictIndex .)
    OR              reduce using rule 160 (opDictionary -> . dictIndex .)
    ]               reduce using rule 160 (opDictionary -> . dictIndex .)
    ;               reduce using rule 160 (opDictionary -> . dictIndex .)


state 240

    (136) exp -> term performAddSub errorCyExp cyExp .

    ,               reduce using rule 136 (exp -> term performAddSub errorCyExp cyExp .)
    PARFIN          reduce using rule 136 (exp -> term performAddSub errorCyExp cyExp .)
    EQ              reduce using rule 136 (exp -> term performAddSub errorCyExp cyExp .)
    DIF             reduce using rule 136 (exp -> term performAddSub errorCyExp cyExp .)
    LTOEQ           reduce using rule 136 (exp -> term performAddSub errorCyExp cyExp .)
    GTOEQ           reduce using rule 136 (exp -> term performAddSub errorCyExp cyExp .)
    GT              reduce using rule 136 (exp -> term performAddSub errorCyExp cyExp .)
    LT              reduce using rule 136 (exp -> term performAddSub errorCyExp cyExp .)
    AND             reduce using rule 136 (exp -> term performAddSub errorCyExp cyExp .)
    OR              reduce using rule 136 (exp -> term performAddSub errorCyExp cyExp .)
    ]               reduce using rule 136 (exp -> term performAddSub errorCyExp cyExp .)
    ;               reduce using rule 136 (exp -> term performAddSub errorCyExp cyExp .)


state 241

    (137) cyExp -> PLUS . saveOperator exp
    (177) saveOperator -> .

    CTES            reduce using rule 177 (saveOperator -> .)
    PARINI          reduce using rule 177 (saveOperator -> .)
    ID              reduce using rule 177 (saveOperator -> .)
    CTED            reduce using rule 177 (saveOperator -> .)
    CTEF            reduce using rule 177 (saveOperator -> .)
    TRUE            reduce using rule 177 (saveOperator -> .)
    FALSE           reduce using rule 177 (saveOperator -> .)

    saveOperator                   shift and go to state 275

state 242

    (138) cyExp -> MINUS . saveOperator exp
    (177) saveOperator -> .

    CTES            reduce using rule 177 (saveOperator -> .)
    PARINI          reduce using rule 177 (saveOperator -> .)
    ID              reduce using rule 177 (saveOperator -> .)
    CTED            reduce using rule 177 (saveOperator -> .)
    CTEF            reduce using rule 177 (saveOperator -> .)
    TRUE            reduce using rule 177 (saveOperator -> .)
    FALSE           reduce using rule 177 (saveOperator -> .)

    saveOperator                   shift and go to state 276

state 243

    (139) cyExp -> empty .

    ,               reduce using rule 139 (cyExp -> empty .)
    PARFIN          reduce using rule 139 (cyExp -> empty .)
    EQ              reduce using rule 139 (cyExp -> empty .)
    DIF             reduce using rule 139 (cyExp -> empty .)
    LTOEQ           reduce using rule 139 (cyExp -> empty .)
    GTOEQ           reduce using rule 139 (cyExp -> empty .)
    GT              reduce using rule 139 (cyExp -> empty .)
    LT              reduce using rule 139 (cyExp -> empty .)
    AND             reduce using rule 139 (cyExp -> empty .)
    OR              reduce using rule 139 (cyExp -> empty .)
    ]               reduce using rule 139 (cyExp -> empty .)
    ;               reduce using rule 139 (cyExp -> empty .)


state 244

    (29) print -> PRINT PARINI exp performPrint cyPrint PARFIN .

    ;               reduce using rule 29 (print -> PRINT PARINI exp performPrint cyPrint PARFIN .)


state 245

    (30) cyPrint -> , fix . exp performPrint cyPrint
    (136) exp -> . term performAddSub errorCyExp cyExp
    (141) term -> . fact performMulDiv cyTerm
    (145) fact -> . CTES saveConstantString
    (146) fact -> . cte
    (147) fact -> . funcCall
    (148) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (149) fact -> . ID saveVariable opAccess errorOpAccess
    (163) cte -> . CTED saveConstantInt
    (164) cte -> . CTEF saveConstantFloat
    (165) cte -> . TRUE saveConstantBool
    (166) cte -> . FALSE saveConstantBool
    (105) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 137
    PARINI          shift and go to state 134
    ID              shift and go to state 136
    CTED            shift and go to state 135
    CTEF            shift and go to state 142
    TRUE            shift and go to state 133
    FALSE           shift and go to state 139

    term                           shift and go to state 138
    funcCall                       shift and go to state 140
    cte                            shift and go to state 141
    exp                            shift and go to state 277
    fact                           shift and go to state 144

state 246

    (143) cyTerm -> DIV saveOperator . term
    (141) term -> . fact performMulDiv cyTerm
    (145) fact -> . CTES saveConstantString
    (146) fact -> . cte
    (147) fact -> . funcCall
    (148) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (149) fact -> . ID saveVariable opAccess errorOpAccess
    (163) cte -> . CTED saveConstantInt
    (164) cte -> . CTEF saveConstantFloat
    (165) cte -> . TRUE saveConstantBool
    (166) cte -> . FALSE saveConstantBool
    (105) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 137
    PARINI          shift and go to state 134
    ID              shift and go to state 136
    CTED            shift and go to state 135
    CTEF            shift and go to state 142
    TRUE            shift and go to state 133
    FALSE           shift and go to state 139

    term                           shift and go to state 278
    funcCall                       shift and go to state 140
    cte                            shift and go to state 141
    fact                           shift and go to state 144

state 247

    (142) cyTerm -> MULT saveOperator . errorFact term
    (150) errorFact -> .

    CTES            reduce using rule 150 (errorFact -> .)
    PARINI          reduce using rule 150 (errorFact -> .)
    ID              reduce using rule 150 (errorFact -> .)
    CTED            reduce using rule 150 (errorFact -> .)
    CTEF            reduce using rule 150 (errorFact -> .)
    TRUE            reduce using rule 150 (errorFact -> .)
    FALSE           reduce using rule 150 (errorFact -> .)

    errorFact                      shift and go to state 279

state 248

    (87) whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN . saveFalso { body } repeatWhile
    (170) saveFalso -> .

    {               reduce using rule 170 (saveFalso -> .)

    saveFalso                      shift and go to state 280

state 249

    (39) init -> ASGN saveOperator errorInit . initWith
    (41) initWith -> . expresion
    (42) initWith -> . funcCall
    (122) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (105) funcCall -> . ID PARINI opParamCall PARFIN
    (127) sExp -> . exp errorOpSExp opSExp performRelational
    (136) exp -> . term performAddSub errorCyExp cyExp
    (141) term -> . fact performMulDiv cyTerm
    (145) fact -> . CTES saveConstantString
    (146) fact -> . cte
    (147) fact -> . funcCall
    (148) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (149) fact -> . ID saveVariable opAccess errorOpAccess
    (163) cte -> . CTED saveConstantInt
    (164) cte -> . CTEF saveConstantFloat
    (165) cte -> . TRUE saveConstantBool
    (166) cte -> . FALSE saveConstantBool

    ID              shift and go to state 282
    CTES            shift and go to state 137
    PARINI          shift and go to state 134
    CTED            shift and go to state 135
    CTEF            shift and go to state 142
    TRUE            shift and go to state 133
    FALSE           shift and go to state 139

    initWith                       shift and go to state 281
    sExp                           shift and go to state 148
    expresion                      shift and go to state 283
    term                           shift and go to state 138
    funcCall                       shift and go to state 284
    cte                            shift and go to state 141
    exp                            shift and go to state 151
    fact                           shift and go to state 144

state 250

    (43) initDict -> ASGN PARINI dictType . : dictType PARFIN errorInitDict

    :               shift and go to state 285


state 251

    (45) dictType -> errorDictType . CTES

    CTES            shift and go to state 286


state 252

    (46) dictType -> cte .

    PARFIN          reduce using rule 46 (dictType -> cte .)
    :               reduce using rule 46 (dictType -> cte .)


state 253

    (47) dictType -> ID .

    PARFIN          reduce using rule 47 (dictType -> ID .)
    :               reduce using rule 47 (dictType -> ID .)


state 254

    (101) assignOptions -> [ expresion ] . assignMatrix init
    (102) assignMatrix -> . [ expresion ] errorAssignMatrix
    (103) assignMatrix -> . empty
    (167) empty -> .

    [               shift and go to state 288
    ASGN            reduce using rule 167 (empty -> .)

    assignMatrix                   shift and go to state 287
    empty                          shift and go to state 289

state 255

    (124) cyExpresion -> AND saveOperator . expresion
    (122) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (127) sExp -> . exp errorOpSExp opSExp performRelational
    (136) exp -> . term performAddSub errorCyExp cyExp
    (141) term -> . fact performMulDiv cyTerm
    (145) fact -> . CTES saveConstantString
    (146) fact -> . cte
    (147) fact -> . funcCall
    (148) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (149) fact -> . ID saveVariable opAccess errorOpAccess
    (163) cte -> . CTED saveConstantInt
    (164) cte -> . CTEF saveConstantFloat
    (165) cte -> . TRUE saveConstantBool
    (166) cte -> . FALSE saveConstantBool
    (105) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 137
    PARINI          shift and go to state 134
    ID              shift and go to state 136
    CTED            shift and go to state 135
    CTEF            shift and go to state 142
    TRUE            shift and go to state 133
    FALSE           shift and go to state 139

    sExp                           shift and go to state 148
    expresion                      shift and go to state 290
    term                           shift and go to state 138
    funcCall                       shift and go to state 140
    cte                            shift and go to state 141
    exp                            shift and go to state 151
    fact                           shift and go to state 144

state 256

    (125) cyExpresion -> OR saveOperator . expresion
    (122) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (127) sExp -> . exp errorOpSExp opSExp performRelational
    (136) exp -> . term performAddSub errorCyExp cyExp
    (141) term -> . fact performMulDiv cyTerm
    (145) fact -> . CTES saveConstantString
    (146) fact -> . cte
    (147) fact -> . funcCall
    (148) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (149) fact -> . ID saveVariable opAccess errorOpAccess
    (163) cte -> . CTED saveConstantInt
    (164) cte -> . CTEF saveConstantFloat
    (165) cte -> . TRUE saveConstantBool
    (166) cte -> . FALSE saveConstantBool
    (105) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 137
    PARINI          shift and go to state 134
    ID              shift and go to state 136
    CTED            shift and go to state 135
    CTEF            shift and go to state 142
    TRUE            shift and go to state 133
    FALSE           shift and go to state 139

    sExp                           shift and go to state 148
    expresion                      shift and go to state 291
    term                           shift and go to state 138
    funcCall                       shift and go to state 140
    cte                            shift and go to state 141
    exp                            shift and go to state 151
    fact                           shift and go to state 144

state 257

    (122) expresion -> sExp performAndOr cyExpresion errorExpresion .

    ;               reduce using rule 122 (expresion -> sExp performAndOr cyExpresion errorExpresion .)
    ,               reduce using rule 122 (expresion -> sExp performAndOr cyExpresion errorExpresion .)
    PARFIN          reduce using rule 122 (expresion -> sExp performAndOr cyExpresion errorExpresion .)
    ]               reduce using rule 122 (expresion -> sExp performAndOr cyExpresion errorExpresion .)


state 258

    (108) cyParamCall -> , expresion cyParamCall .

    PARFIN          reduce using rule 108 (cyParamCall -> , expresion cyParamCall .)


state 259

    (132) opSExp -> GT saveOperator . exp
    (136) exp -> . term performAddSub errorCyExp cyExp
    (141) term -> . fact performMulDiv cyTerm
    (145) fact -> . CTES saveConstantString
    (146) fact -> . cte
    (147) fact -> . funcCall
    (148) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (149) fact -> . ID saveVariable opAccess errorOpAccess
    (163) cte -> . CTED saveConstantInt
    (164) cte -> . CTEF saveConstantFloat
    (165) cte -> . TRUE saveConstantBool
    (166) cte -> . FALSE saveConstantBool
    (105) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 137
    PARINI          shift and go to state 134
    ID              shift and go to state 136
    CTED            shift and go to state 135
    CTEF            shift and go to state 142
    TRUE            shift and go to state 133
    FALSE           shift and go to state 139

    term                           shift and go to state 138
    funcCall                       shift and go to state 140
    cte                            shift and go to state 141
    exp                            shift and go to state 292
    fact                           shift and go to state 144

state 260

    (130) opSExp -> LTOEQ saveOperator . exp
    (136) exp -> . term performAddSub errorCyExp cyExp
    (141) term -> . fact performMulDiv cyTerm
    (145) fact -> . CTES saveConstantString
    (146) fact -> . cte
    (147) fact -> . funcCall
    (148) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (149) fact -> . ID saveVariable opAccess errorOpAccess
    (163) cte -> . CTED saveConstantInt
    (164) cte -> . CTEF saveConstantFloat
    (165) cte -> . TRUE saveConstantBool
    (166) cte -> . FALSE saveConstantBool
    (105) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 137
    PARINI          shift and go to state 134
    ID              shift and go to state 136
    CTED            shift and go to state 135
    CTEF            shift and go to state 142
    TRUE            shift and go to state 133
    FALSE           shift and go to state 139

    term                           shift and go to state 138
    funcCall                       shift and go to state 140
    cte                            shift and go to state 141
    exp                            shift and go to state 293
    fact                           shift and go to state 144

state 261

    (129) opSExp -> DIF saveOperator . exp
    (136) exp -> . term performAddSub errorCyExp cyExp
    (141) term -> . fact performMulDiv cyTerm
    (145) fact -> . CTES saveConstantString
    (146) fact -> . cte
    (147) fact -> . funcCall
    (148) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (149) fact -> . ID saveVariable opAccess errorOpAccess
    (163) cte -> . CTED saveConstantInt
    (164) cte -> . CTEF saveConstantFloat
    (165) cte -> . TRUE saveConstantBool
    (166) cte -> . FALSE saveConstantBool
    (105) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 137
    PARINI          shift and go to state 134
    ID              shift and go to state 136
    CTED            shift and go to state 135
    CTEF            shift and go to state 142
    TRUE            shift and go to state 133
    FALSE           shift and go to state 139

    term                           shift and go to state 138
    funcCall                       shift and go to state 140
    cte                            shift and go to state 141
    exp                            shift and go to state 294
    fact                           shift and go to state 144

state 262

    (133) opSExp -> LT saveOperator . exp
    (136) exp -> . term performAddSub errorCyExp cyExp
    (141) term -> . fact performMulDiv cyTerm
    (145) fact -> . CTES saveConstantString
    (146) fact -> . cte
    (147) fact -> . funcCall
    (148) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (149) fact -> . ID saveVariable opAccess errorOpAccess
    (163) cte -> . CTED saveConstantInt
    (164) cte -> . CTEF saveConstantFloat
    (165) cte -> . TRUE saveConstantBool
    (166) cte -> . FALSE saveConstantBool
    (105) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 137
    PARINI          shift and go to state 134
    ID              shift and go to state 136
    CTED            shift and go to state 135
    CTEF            shift and go to state 142
    TRUE            shift and go to state 133
    FALSE           shift and go to state 139

    term                           shift and go to state 138
    funcCall                       shift and go to state 140
    cte                            shift and go to state 141
    exp                            shift and go to state 295
    fact                           shift and go to state 144

state 263

    (131) opSExp -> GTOEQ saveOperator . exp
    (136) exp -> . term performAddSub errorCyExp cyExp
    (141) term -> . fact performMulDiv cyTerm
    (145) fact -> . CTES saveConstantString
    (146) fact -> . cte
    (147) fact -> . funcCall
    (148) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (149) fact -> . ID saveVariable opAccess errorOpAccess
    (163) cte -> . CTED saveConstantInt
    (164) cte -> . CTEF saveConstantFloat
    (165) cte -> . TRUE saveConstantBool
    (166) cte -> . FALSE saveConstantBool
    (105) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 137
    PARINI          shift and go to state 134
    ID              shift and go to state 136
    CTED            shift and go to state 135
    CTEF            shift and go to state 142
    TRUE            shift and go to state 133
    FALSE           shift and go to state 139

    term                           shift and go to state 138
    funcCall                       shift and go to state 140
    cte                            shift and go to state 141
    exp                            shift and go to state 296
    fact                           shift and go to state 144

state 264

    (128) opSExp -> EQ saveOperator . exp
    (136) exp -> . term performAddSub errorCyExp cyExp
    (141) term -> . fact performMulDiv cyTerm
    (145) fact -> . CTES saveConstantString
    (146) fact -> . cte
    (147) fact -> . funcCall
    (148) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (149) fact -> . ID saveVariable opAccess errorOpAccess
    (163) cte -> . CTED saveConstantInt
    (164) cte -> . CTEF saveConstantFloat
    (165) cte -> . TRUE saveConstantBool
    (166) cte -> . FALSE saveConstantBool
    (105) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 137
    PARINI          shift and go to state 134
    ID              shift and go to state 136
    CTED            shift and go to state 135
    CTEF            shift and go to state 142
    TRUE            shift and go to state 133
    FALSE           shift and go to state 139

    term                           shift and go to state 138
    funcCall                       shift and go to state 140
    cte                            shift and go to state 141
    exp                            shift and go to state 297
    fact                           shift and go to state 144

state 265

    (127) sExp -> exp errorOpSExp opSExp performRelational .

    AND             reduce using rule 127 (sExp -> exp errorOpSExp opSExp performRelational .)
    OR              reduce using rule 127 (sExp -> exp errorOpSExp opSExp performRelational .)
    ;               reduce using rule 127 (sExp -> exp errorOpSExp opSExp performRelational .)
    ,               reduce using rule 127 (sExp -> exp errorOpSExp opSExp performRelational .)
    PARFIN          reduce using rule 127 (sExp -> exp errorOpSExp opSExp performRelational .)
    ]               reduce using rule 127 (sExp -> exp errorOpSExp opSExp performRelational .)


state 266

    (91) forCycle -> errorForCycle FOR PARINI assign ; saveReturn . expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign
    (122) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (127) sExp -> . exp errorOpSExp opSExp performRelational
    (136) exp -> . term performAddSub errorCyExp cyExp
    (141) term -> . fact performMulDiv cyTerm
    (145) fact -> . CTES saveConstantString
    (146) fact -> . cte
    (147) fact -> . funcCall
    (148) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (149) fact -> . ID saveVariable opAccess errorOpAccess
    (163) cte -> . CTED saveConstantInt
    (164) cte -> . CTEF saveConstantFloat
    (165) cte -> . TRUE saveConstantBool
    (166) cte -> . FALSE saveConstantBool
    (105) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 137
    PARINI          shift and go to state 134
    ID              shift and go to state 136
    CTED            shift and go to state 135
    CTEF            shift and go to state 142
    TRUE            shift and go to state 133
    FALSE           shift and go to state 139

    sExp                           shift and go to state 148
    expresion                      shift and go to state 298
    term                           shift and go to state 138
    funcCall                       shift and go to state 140
    cte                            shift and go to state 141
    fact                           shift and go to state 144
    exp                            shift and go to state 151

state 267

    (115) condition -> errorCondition IF PARINI expresion PARFIN saveFalso . { body } optionalElse rellenaFalso

    {               shift and go to state 299


state 268

    (68) opReturns -> errorOpReturns RETURNS type saveReturnType . { opVars saveQuadruple body return

    {               shift and go to state 300


state 269

    (69) opReturns -> { opVars saveQuadruple body .

    }               reduce using rule 69 (opReturns -> { opVars saveQuadruple body .)


state 270

    (52) cyParam -> empty saveID . saveTypeParam
    (55) saveTypeParam -> .

    PARFIN          reduce using rule 55 (saveTypeParam -> .)

    saveTypeParam                  shift and go to state 301

state 271

    (51) cyParam -> errorCyParam saveID . saveTypeParam ; param
    (55) saveTypeParam -> .

    ;               reduce using rule 55 (saveTypeParam -> .)

    saveTypeParam                  shift and go to state 302

state 272

    (33) cyRead -> , fix ID . performRead cyRead
    (186) performRead -> .

    ,               reduce using rule 186 (performRead -> .)
    PARFIN          reduce using rule 186 (performRead -> .)

    performRead                    shift and go to state 303

state 273

    (148) fact -> PARINI putFondo expresion PARFIN takeFondo .

    MULT            reduce using rule 148 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    DIV             reduce using rule 148 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    PLUS            reduce using rule 148 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    MINUS           reduce using rule 148 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    ,               reduce using rule 148 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    PARFIN          reduce using rule 148 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    EQ              reduce using rule 148 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    DIF             reduce using rule 148 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    LTOEQ           reduce using rule 148 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    GTOEQ           reduce using rule 148 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    GT              reduce using rule 148 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    LT              reduce using rule 148 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    AND             reduce using rule 148 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    OR              reduce using rule 148 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    ]               reduce using rule 148 (fact -> PARINI putFondo expresion PARFIN takeFondo .)
    ;               reduce using rule 148 (fact -> PARINI putFondo expresion PARFIN takeFondo .)


state 274

    (155) opStruct -> errorOpStruct [ expresion . ] opMatrix

    ]               shift and go to state 304


state 275

    (137) cyExp -> PLUS saveOperator . exp
    (136) exp -> . term performAddSub errorCyExp cyExp
    (141) term -> . fact performMulDiv cyTerm
    (145) fact -> . CTES saveConstantString
    (146) fact -> . cte
    (147) fact -> . funcCall
    (148) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (149) fact -> . ID saveVariable opAccess errorOpAccess
    (163) cte -> . CTED saveConstantInt
    (164) cte -> . CTEF saveConstantFloat
    (165) cte -> . TRUE saveConstantBool
    (166) cte -> . FALSE saveConstantBool
    (105) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 137
    PARINI          shift and go to state 134
    ID              shift and go to state 136
    CTED            shift and go to state 135
    CTEF            shift and go to state 142
    TRUE            shift and go to state 133
    FALSE           shift and go to state 139

    term                           shift and go to state 138
    funcCall                       shift and go to state 140
    cte                            shift and go to state 141
    exp                            shift and go to state 305
    fact                           shift and go to state 144

state 276

    (138) cyExp -> MINUS saveOperator . exp
    (136) exp -> . term performAddSub errorCyExp cyExp
    (141) term -> . fact performMulDiv cyTerm
    (145) fact -> . CTES saveConstantString
    (146) fact -> . cte
    (147) fact -> . funcCall
    (148) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (149) fact -> . ID saveVariable opAccess errorOpAccess
    (163) cte -> . CTED saveConstantInt
    (164) cte -> . CTEF saveConstantFloat
    (165) cte -> . TRUE saveConstantBool
    (166) cte -> . FALSE saveConstantBool
    (105) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 137
    PARINI          shift and go to state 134
    ID              shift and go to state 136
    CTED            shift and go to state 135
    CTEF            shift and go to state 142
    TRUE            shift and go to state 133
    FALSE           shift and go to state 139

    term                           shift and go to state 138
    funcCall                       shift and go to state 140
    cte                            shift and go to state 141
    exp                            shift and go to state 306
    fact                           shift and go to state 144

state 277

    (30) cyPrint -> , fix exp . performPrint cyPrint
    (185) performPrint -> .

    ,               reduce using rule 185 (performPrint -> .)
    PARFIN          reduce using rule 185 (performPrint -> .)

    performPrint                   shift and go to state 307

state 278

    (143) cyTerm -> DIV saveOperator term .

    PLUS            reduce using rule 143 (cyTerm -> DIV saveOperator term .)
    MINUS           reduce using rule 143 (cyTerm -> DIV saveOperator term .)
    ,               reduce using rule 143 (cyTerm -> DIV saveOperator term .)
    PARFIN          reduce using rule 143 (cyTerm -> DIV saveOperator term .)
    EQ              reduce using rule 143 (cyTerm -> DIV saveOperator term .)
    DIF             reduce using rule 143 (cyTerm -> DIV saveOperator term .)
    LTOEQ           reduce using rule 143 (cyTerm -> DIV saveOperator term .)
    GTOEQ           reduce using rule 143 (cyTerm -> DIV saveOperator term .)
    GT              reduce using rule 143 (cyTerm -> DIV saveOperator term .)
    LT              reduce using rule 143 (cyTerm -> DIV saveOperator term .)
    AND             reduce using rule 143 (cyTerm -> DIV saveOperator term .)
    OR              reduce using rule 143 (cyTerm -> DIV saveOperator term .)
    ]               reduce using rule 143 (cyTerm -> DIV saveOperator term .)
    ;               reduce using rule 143 (cyTerm -> DIV saveOperator term .)


state 279

    (142) cyTerm -> MULT saveOperator errorFact . term
    (141) term -> . fact performMulDiv cyTerm
    (145) fact -> . CTES saveConstantString
    (146) fact -> . cte
    (147) fact -> . funcCall
    (148) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (149) fact -> . ID saveVariable opAccess errorOpAccess
    (163) cte -> . CTED saveConstantInt
    (164) cte -> . CTEF saveConstantFloat
    (165) cte -> . TRUE saveConstantBool
    (166) cte -> . FALSE saveConstantBool
    (105) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 137
    PARINI          shift and go to state 134
    ID              shift and go to state 136
    CTED            shift and go to state 135
    CTEF            shift and go to state 142
    TRUE            shift and go to state 133
    FALSE           shift and go to state 139

    term                           shift and go to state 308
    funcCall                       shift and go to state 140
    cte                            shift and go to state 141
    fact                           shift and go to state 144

state 280

    (87) whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso . { body } repeatWhile

    {               shift and go to state 309


state 281

    (39) init -> ASGN saveOperator errorInit initWith .

    ;               reduce using rule 39 (init -> ASGN saveOperator errorInit initWith .)
    PARFIN          reduce using rule 39 (init -> ASGN saveOperator errorInit initWith .)


state 282

    (105) funcCall -> ID . PARINI opParamCall PARFIN
    (149) fact -> ID . saveVariable opAccess errorOpAccess
    (176) saveVariable -> .

    PARINI          shift and go to state 125
    .               reduce using rule 176 (saveVariable -> .)
    [               reduce using rule 176 (saveVariable -> .)
    MULT            reduce using rule 176 (saveVariable -> .)
    DIV             reduce using rule 176 (saveVariable -> .)
    PLUS            reduce using rule 176 (saveVariable -> .)
    MINUS           reduce using rule 176 (saveVariable -> .)
    EQ              reduce using rule 176 (saveVariable -> .)
    DIF             reduce using rule 176 (saveVariable -> .)
    LTOEQ           reduce using rule 176 (saveVariable -> .)
    GTOEQ           reduce using rule 176 (saveVariable -> .)
    GT              reduce using rule 176 (saveVariable -> .)
    LT              reduce using rule 176 (saveVariable -> .)
    AND             reduce using rule 176 (saveVariable -> .)
    OR              reduce using rule 176 (saveVariable -> .)
    ;               reduce using rule 176 (saveVariable -> .)
    PARFIN          reduce using rule 176 (saveVariable -> .)

    saveVariable                   shift and go to state 162

state 283

    (41) initWith -> expresion .

    ;               reduce using rule 41 (initWith -> expresion .)
    PARFIN          reduce using rule 41 (initWith -> expresion .)


state 284

    (42) initWith -> funcCall .
    (147) fact -> funcCall .

  ! reduce/reduce conflict for ; resolved using rule 42 (initWith -> funcCall .)
  ! reduce/reduce conflict for PARFIN resolved using rule 42 (initWith -> funcCall .)
    ;               reduce using rule 42 (initWith -> funcCall .)
    PARFIN          reduce using rule 42 (initWith -> funcCall .)
    MULT            reduce using rule 147 (fact -> funcCall .)
    DIV             reduce using rule 147 (fact -> funcCall .)
    PLUS            reduce using rule 147 (fact -> funcCall .)
    MINUS           reduce using rule 147 (fact -> funcCall .)
    EQ              reduce using rule 147 (fact -> funcCall .)
    DIF             reduce using rule 147 (fact -> funcCall .)
    LTOEQ           reduce using rule 147 (fact -> funcCall .)
    GTOEQ           reduce using rule 147 (fact -> funcCall .)
    GT              reduce using rule 147 (fact -> funcCall .)
    LT              reduce using rule 147 (fact -> funcCall .)
    AND             reduce using rule 147 (fact -> funcCall .)
    OR              reduce using rule 147 (fact -> funcCall .)

  ! ;               [ reduce using rule 147 (fact -> funcCall .) ]
  ! PARFIN          [ reduce using rule 147 (fact -> funcCall .) ]


state 285

    (43) initDict -> ASGN PARINI dictType : . dictType PARFIN errorInitDict
    (45) dictType -> . errorDictType CTES
    (46) dictType -> . cte
    (47) dictType -> . ID
    (48) errorDictType -> .
    (163) cte -> . CTED saveConstantInt
    (164) cte -> . CTEF saveConstantFloat
    (165) cte -> . TRUE saveConstantBool
    (166) cte -> . FALSE saveConstantBool

    ID              shift and go to state 253
    CTES            reduce using rule 48 (errorDictType -> .)
    CTED            shift and go to state 135
    CTEF            shift and go to state 142
    TRUE            shift and go to state 133
    FALSE           shift and go to state 139

    dictType                       shift and go to state 310
    errorDictType                  shift and go to state 251
    cte                            shift and go to state 252

state 286

    (45) dictType -> errorDictType CTES .

    PARFIN          reduce using rule 45 (dictType -> errorDictType CTES .)
    :               reduce using rule 45 (dictType -> errorDictType CTES .)


state 287

    (101) assignOptions -> [ expresion ] assignMatrix . init
    (39) init -> . ASGN saveOperator errorInit initWith

    ASGN            shift and go to state 311

    init                           shift and go to state 312

state 288

    (102) assignMatrix -> [ . expresion ] errorAssignMatrix
    (122) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (127) sExp -> . exp errorOpSExp opSExp performRelational
    (136) exp -> . term performAddSub errorCyExp cyExp
    (141) term -> . fact performMulDiv cyTerm
    (145) fact -> . CTES saveConstantString
    (146) fact -> . cte
    (147) fact -> . funcCall
    (148) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (149) fact -> . ID saveVariable opAccess errorOpAccess
    (163) cte -> . CTED saveConstantInt
    (164) cte -> . CTEF saveConstantFloat
    (165) cte -> . TRUE saveConstantBool
    (166) cte -> . FALSE saveConstantBool
    (105) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 137
    PARINI          shift and go to state 134
    ID              shift and go to state 136
    CTED            shift and go to state 135
    CTEF            shift and go to state 142
    TRUE            shift and go to state 133
    FALSE           shift and go to state 139

    sExp                           shift and go to state 148
    expresion                      shift and go to state 313
    term                           shift and go to state 138
    funcCall                       shift and go to state 140
    cte                            shift and go to state 141
    exp                            shift and go to state 151
    fact                           shift and go to state 144

state 289

    (103) assignMatrix -> empty .

    ASGN            reduce using rule 103 (assignMatrix -> empty .)


state 290

    (124) cyExpresion -> AND saveOperator expresion .

    ,               reduce using rule 124 (cyExpresion -> AND saveOperator expresion .)
    PARFIN          reduce using rule 124 (cyExpresion -> AND saveOperator expresion .)
    ]               reduce using rule 124 (cyExpresion -> AND saveOperator expresion .)
    ;               reduce using rule 124 (cyExpresion -> AND saveOperator expresion .)


state 291

    (125) cyExpresion -> OR saveOperator expresion .

    ,               reduce using rule 125 (cyExpresion -> OR saveOperator expresion .)
    PARFIN          reduce using rule 125 (cyExpresion -> OR saveOperator expresion .)
    ]               reduce using rule 125 (cyExpresion -> OR saveOperator expresion .)
    ;               reduce using rule 125 (cyExpresion -> OR saveOperator expresion .)


state 292

    (132) opSExp -> GT saveOperator exp .

    AND             reduce using rule 132 (opSExp -> GT saveOperator exp .)
    OR              reduce using rule 132 (opSExp -> GT saveOperator exp .)
    ,               reduce using rule 132 (opSExp -> GT saveOperator exp .)
    PARFIN          reduce using rule 132 (opSExp -> GT saveOperator exp .)
    ]               reduce using rule 132 (opSExp -> GT saveOperator exp .)
    ;               reduce using rule 132 (opSExp -> GT saveOperator exp .)


state 293

    (130) opSExp -> LTOEQ saveOperator exp .

    AND             reduce using rule 130 (opSExp -> LTOEQ saveOperator exp .)
    OR              reduce using rule 130 (opSExp -> LTOEQ saveOperator exp .)
    ,               reduce using rule 130 (opSExp -> LTOEQ saveOperator exp .)
    PARFIN          reduce using rule 130 (opSExp -> LTOEQ saveOperator exp .)
    ]               reduce using rule 130 (opSExp -> LTOEQ saveOperator exp .)
    ;               reduce using rule 130 (opSExp -> LTOEQ saveOperator exp .)


state 294

    (129) opSExp -> DIF saveOperator exp .

    AND             reduce using rule 129 (opSExp -> DIF saveOperator exp .)
    OR              reduce using rule 129 (opSExp -> DIF saveOperator exp .)
    ,               reduce using rule 129 (opSExp -> DIF saveOperator exp .)
    PARFIN          reduce using rule 129 (opSExp -> DIF saveOperator exp .)
    ]               reduce using rule 129 (opSExp -> DIF saveOperator exp .)
    ;               reduce using rule 129 (opSExp -> DIF saveOperator exp .)


state 295

    (133) opSExp -> LT saveOperator exp .

    AND             reduce using rule 133 (opSExp -> LT saveOperator exp .)
    OR              reduce using rule 133 (opSExp -> LT saveOperator exp .)
    ,               reduce using rule 133 (opSExp -> LT saveOperator exp .)
    PARFIN          reduce using rule 133 (opSExp -> LT saveOperator exp .)
    ]               reduce using rule 133 (opSExp -> LT saveOperator exp .)
    ;               reduce using rule 133 (opSExp -> LT saveOperator exp .)


state 296

    (131) opSExp -> GTOEQ saveOperator exp .

    AND             reduce using rule 131 (opSExp -> GTOEQ saveOperator exp .)
    OR              reduce using rule 131 (opSExp -> GTOEQ saveOperator exp .)
    ,               reduce using rule 131 (opSExp -> GTOEQ saveOperator exp .)
    PARFIN          reduce using rule 131 (opSExp -> GTOEQ saveOperator exp .)
    ]               reduce using rule 131 (opSExp -> GTOEQ saveOperator exp .)
    ;               reduce using rule 131 (opSExp -> GTOEQ saveOperator exp .)


state 297

    (128) opSExp -> EQ saveOperator exp .

    AND             reduce using rule 128 (opSExp -> EQ saveOperator exp .)
    OR              reduce using rule 128 (opSExp -> EQ saveOperator exp .)
    ,               reduce using rule 128 (opSExp -> EQ saveOperator exp .)
    PARFIN          reduce using rule 128 (opSExp -> EQ saveOperator exp .)
    ]               reduce using rule 128 (opSExp -> EQ saveOperator exp .)
    ;               reduce using rule 128 (opSExp -> EQ saveOperator exp .)


state 298

    (91) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion . saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign
    (170) saveFalso -> .

    ;               reduce using rule 170 (saveFalso -> .)

    saveFalso                      shift and go to state 314

state 299

    (115) condition -> errorCondition IF PARINI expresion PARFIN saveFalso { . body } optionalElse rellenaFalso
    (81) body -> . errorBody cyInstruction
    (82) body -> . empty
    (83) errorBody -> .
    (167) empty -> .

    ID              reduce using rule 83 (errorBody -> .)
    PRINT           reduce using rule 83 (errorBody -> .)
    READ            reduce using rule 83 (errorBody -> .)
    IF              reduce using rule 83 (errorBody -> .)
    FOR             reduce using rule 83 (errorBody -> .)
    WHILE           reduce using rule 83 (errorBody -> .)
    }               reduce using rule 167 (empty -> .)

    body                           shift and go to state 315
    errorBody                      shift and go to state 88
    empty                          shift and go to state 89

state 300

    (68) opReturns -> errorOpReturns RETURNS type saveReturnType { . opVars saveQuadruple body return
    (6) opVars -> . vars
    (7) opVars -> . empty
    (10) vars -> . errorVars VARS declare
    (167) empty -> .
    (12) errorVars -> .

    RETURN          reduce using rule 167 (empty -> .)
    ID              reduce using rule 167 (empty -> .)
    PRINT           reduce using rule 167 (empty -> .)
    READ            reduce using rule 167 (empty -> .)
    IF              reduce using rule 167 (empty -> .)
    FOR             reduce using rule 167 (empty -> .)
    WHILE           reduce using rule 167 (empty -> .)
    VARS            reduce using rule 12 (errorVars -> .)

    vars                           shift and go to state 8
    opVars                         shift and go to state 316
    errorVars                      shift and go to state 10
    empty                          shift and go to state 11

state 301

    (52) cyParam -> empty saveID saveTypeParam .

    PARFIN          reduce using rule 52 (cyParam -> empty saveID saveTypeParam .)


state 302

    (51) cyParam -> errorCyParam saveID saveTypeParam . ; param

    ;               shift and go to state 317


state 303

    (33) cyRead -> , fix ID performRead . cyRead
    (33) cyRead -> . , fix ID performRead cyRead
    (34) cyRead -> . empty
    (167) empty -> .

    ,               shift and go to state 188
    PARFIN          reduce using rule 167 (empty -> .)

    cyRead                         shift and go to state 318
    empty                          shift and go to state 190

state 304

    (155) opStruct -> errorOpStruct [ expresion ] . opMatrix
    (157) opMatrix -> . errorOpMatrix [ expresion ]
    (158) opMatrix -> . empty
    (159) errorOpMatrix -> .
    (167) empty -> .

    [               reduce using rule 159 (errorOpMatrix -> .)
    MULT            reduce using rule 167 (empty -> .)
    DIV             reduce using rule 167 (empty -> .)
    PLUS            reduce using rule 167 (empty -> .)
    MINUS           reduce using rule 167 (empty -> .)
    ,               reduce using rule 167 (empty -> .)
    PARFIN          reduce using rule 167 (empty -> .)
    EQ              reduce using rule 167 (empty -> .)
    DIF             reduce using rule 167 (empty -> .)
    LTOEQ           reduce using rule 167 (empty -> .)
    GTOEQ           reduce using rule 167 (empty -> .)
    GT              reduce using rule 167 (empty -> .)
    LT              reduce using rule 167 (empty -> .)
    AND             reduce using rule 167 (empty -> .)
    OR              reduce using rule 167 (empty -> .)
    ]               reduce using rule 167 (empty -> .)
    ;               reduce using rule 167 (empty -> .)

    empty                          shift and go to state 321
    errorOpMatrix                  shift and go to state 319
    opMatrix                       shift and go to state 320

state 305

    (137) cyExp -> PLUS saveOperator exp .

    ,               reduce using rule 137 (cyExp -> PLUS saveOperator exp .)
    PARFIN          reduce using rule 137 (cyExp -> PLUS saveOperator exp .)
    EQ              reduce using rule 137 (cyExp -> PLUS saveOperator exp .)
    DIF             reduce using rule 137 (cyExp -> PLUS saveOperator exp .)
    LTOEQ           reduce using rule 137 (cyExp -> PLUS saveOperator exp .)
    GTOEQ           reduce using rule 137 (cyExp -> PLUS saveOperator exp .)
    GT              reduce using rule 137 (cyExp -> PLUS saveOperator exp .)
    LT              reduce using rule 137 (cyExp -> PLUS saveOperator exp .)
    AND             reduce using rule 137 (cyExp -> PLUS saveOperator exp .)
    OR              reduce using rule 137 (cyExp -> PLUS saveOperator exp .)
    ]               reduce using rule 137 (cyExp -> PLUS saveOperator exp .)
    ;               reduce using rule 137 (cyExp -> PLUS saveOperator exp .)


state 306

    (138) cyExp -> MINUS saveOperator exp .

    ,               reduce using rule 138 (cyExp -> MINUS saveOperator exp .)
    PARFIN          reduce using rule 138 (cyExp -> MINUS saveOperator exp .)
    EQ              reduce using rule 138 (cyExp -> MINUS saveOperator exp .)
    DIF             reduce using rule 138 (cyExp -> MINUS saveOperator exp .)
    LTOEQ           reduce using rule 138 (cyExp -> MINUS saveOperator exp .)
    GTOEQ           reduce using rule 138 (cyExp -> MINUS saveOperator exp .)
    GT              reduce using rule 138 (cyExp -> MINUS saveOperator exp .)
    LT              reduce using rule 138 (cyExp -> MINUS saveOperator exp .)
    AND             reduce using rule 138 (cyExp -> MINUS saveOperator exp .)
    OR              reduce using rule 138 (cyExp -> MINUS saveOperator exp .)
    ]               reduce using rule 138 (cyExp -> MINUS saveOperator exp .)
    ;               reduce using rule 138 (cyExp -> MINUS saveOperator exp .)


state 307

    (30) cyPrint -> , fix exp performPrint . cyPrint
    (30) cyPrint -> . , fix exp performPrint cyPrint
    (31) cyPrint -> . empty
    (167) empty -> .

    ,               shift and go to state 200
    PARFIN          reduce using rule 167 (empty -> .)

    empty                          shift and go to state 201
    cyPrint                        shift and go to state 322

state 308

    (142) cyTerm -> MULT saveOperator errorFact term .

    PLUS            reduce using rule 142 (cyTerm -> MULT saveOperator errorFact term .)
    MINUS           reduce using rule 142 (cyTerm -> MULT saveOperator errorFact term .)
    ,               reduce using rule 142 (cyTerm -> MULT saveOperator errorFact term .)
    PARFIN          reduce using rule 142 (cyTerm -> MULT saveOperator errorFact term .)
    EQ              reduce using rule 142 (cyTerm -> MULT saveOperator errorFact term .)
    DIF             reduce using rule 142 (cyTerm -> MULT saveOperator errorFact term .)
    LTOEQ           reduce using rule 142 (cyTerm -> MULT saveOperator errorFact term .)
    GTOEQ           reduce using rule 142 (cyTerm -> MULT saveOperator errorFact term .)
    GT              reduce using rule 142 (cyTerm -> MULT saveOperator errorFact term .)
    LT              reduce using rule 142 (cyTerm -> MULT saveOperator errorFact term .)
    AND             reduce using rule 142 (cyTerm -> MULT saveOperator errorFact term .)
    OR              reduce using rule 142 (cyTerm -> MULT saveOperator errorFact term .)
    ]               reduce using rule 142 (cyTerm -> MULT saveOperator errorFact term .)
    ;               reduce using rule 142 (cyTerm -> MULT saveOperator errorFact term .)


state 309

    (87) whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { . body } repeatWhile
    (81) body -> . errorBody cyInstruction
    (82) body -> . empty
    (83) errorBody -> .
    (167) empty -> .

    ID              reduce using rule 83 (errorBody -> .)
    PRINT           reduce using rule 83 (errorBody -> .)
    READ            reduce using rule 83 (errorBody -> .)
    IF              reduce using rule 83 (errorBody -> .)
    FOR             reduce using rule 83 (errorBody -> .)
    WHILE           reduce using rule 83 (errorBody -> .)
    }               reduce using rule 167 (empty -> .)

    body                           shift and go to state 323
    errorBody                      shift and go to state 88
    empty                          shift and go to state 89

state 310

    (43) initDict -> ASGN PARINI dictType : dictType . PARFIN errorInitDict

    PARFIN          shift and go to state 324


state 311

    (39) init -> ASGN . saveOperator errorInit initWith
    (177) saveOperator -> .

    ID              reduce using rule 177 (saveOperator -> .)
    CTES            reduce using rule 177 (saveOperator -> .)
    PARINI          reduce using rule 177 (saveOperator -> .)
    CTED            reduce using rule 177 (saveOperator -> .)
    CTEF            reduce using rule 177 (saveOperator -> .)
    TRUE            reduce using rule 177 (saveOperator -> .)
    FALSE           reduce using rule 177 (saveOperator -> .)

    saveOperator                   shift and go to state 208

state 312

    (101) assignOptions -> [ expresion ] assignMatrix init .

    ;               reduce using rule 101 (assignOptions -> [ expresion ] assignMatrix init .)
    PARFIN          reduce using rule 101 (assignOptions -> [ expresion ] assignMatrix init .)


state 313

    (102) assignMatrix -> [ expresion . ] errorAssignMatrix

    ]               shift and go to state 325


state 314

    (91) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso . ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign

    ;               shift and go to state 326


state 315

    (115) condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body . } optionalElse rellenaFalso

    }               shift and go to state 327


state 316

    (68) opReturns -> errorOpReturns RETURNS type saveReturnType { opVars . saveQuadruple body return
    (70) saveQuadruple -> .

    RETURN          reduce using rule 70 (saveQuadruple -> .)
    ID              reduce using rule 70 (saveQuadruple -> .)
    PRINT           reduce using rule 70 (saveQuadruple -> .)
    READ            reduce using rule 70 (saveQuadruple -> .)
    IF              reduce using rule 70 (saveQuadruple -> .)
    FOR             reduce using rule 70 (saveQuadruple -> .)
    WHILE           reduce using rule 70 (saveQuadruple -> .)

    saveQuadruple                  shift and go to state 328

state 317

    (51) cyParam -> errorCyParam saveID saveTypeParam ; . param
    (49) param -> . saveType type errorParam ID cyTypeParam cyParam
    (3) saveType -> .

    FLOAT           reduce using rule 3 (saveType -> .)
    STRING          reduce using rule 3 (saveType -> .)
    BOOL            reduce using rule 3 (saveType -> .)
    INT             reduce using rule 3 (saveType -> .)

    param                          shift and go to state 329
    saveType                       shift and go to state 92

state 318

    (33) cyRead -> , fix ID performRead cyRead .

    PARFIN          reduce using rule 33 (cyRead -> , fix ID performRead cyRead .)


state 319

    (157) opMatrix -> errorOpMatrix . [ expresion ]

    [               shift and go to state 330


state 320

    (155) opStruct -> errorOpStruct [ expresion ] opMatrix .

    MULT            reduce using rule 155 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    DIV             reduce using rule 155 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    PLUS            reduce using rule 155 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    MINUS           reduce using rule 155 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    ,               reduce using rule 155 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    PARFIN          reduce using rule 155 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    EQ              reduce using rule 155 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    DIF             reduce using rule 155 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    LTOEQ           reduce using rule 155 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    GTOEQ           reduce using rule 155 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    GT              reduce using rule 155 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    LT              reduce using rule 155 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    AND             reduce using rule 155 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    OR              reduce using rule 155 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    ]               reduce using rule 155 (opStruct -> errorOpStruct [ expresion ] opMatrix .)
    ;               reduce using rule 155 (opStruct -> errorOpStruct [ expresion ] opMatrix .)


state 321

    (158) opMatrix -> empty .

    MULT            reduce using rule 158 (opMatrix -> empty .)
    DIV             reduce using rule 158 (opMatrix -> empty .)
    PLUS            reduce using rule 158 (opMatrix -> empty .)
    MINUS           reduce using rule 158 (opMatrix -> empty .)
    ,               reduce using rule 158 (opMatrix -> empty .)
    PARFIN          reduce using rule 158 (opMatrix -> empty .)
    EQ              reduce using rule 158 (opMatrix -> empty .)
    DIF             reduce using rule 158 (opMatrix -> empty .)
    LTOEQ           reduce using rule 158 (opMatrix -> empty .)
    GTOEQ           reduce using rule 158 (opMatrix -> empty .)
    GT              reduce using rule 158 (opMatrix -> empty .)
    LT              reduce using rule 158 (opMatrix -> empty .)
    AND             reduce using rule 158 (opMatrix -> empty .)
    OR              reduce using rule 158 (opMatrix -> empty .)
    ]               reduce using rule 158 (opMatrix -> empty .)
    ;               reduce using rule 158 (opMatrix -> empty .)


state 322

    (30) cyPrint -> , fix exp performPrint cyPrint .

    PARFIN          reduce using rule 30 (cyPrint -> , fix exp performPrint cyPrint .)


state 323

    (87) whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body . } repeatWhile

    }               shift and go to state 331


state 324

    (43) initDict -> ASGN PARINI dictType : dictType PARFIN . errorInitDict
    (44) errorInitDict -> .

    ;               reduce using rule 44 (errorInitDict -> .)
    PARFIN          reduce using rule 44 (errorInitDict -> .)

    errorInitDict                  shift and go to state 332

state 325

    (102) assignMatrix -> [ expresion ] . errorAssignMatrix
    (104) errorAssignMatrix -> .

    ASGN            reduce using rule 104 (errorAssignMatrix -> .)

    errorAssignMatrix              shift and go to state 333

state 326

    (91) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; . saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign
    (92) saltoBody -> .

    ID              reduce using rule 92 (saltoBody -> .)

    saltoBody                      shift and go to state 334

state 327

    (115) condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } . optionalElse rellenaFalso
    (117) optionalElse -> . errorElse ELSE saveVerdadero { body }
    (118) optionalElse -> . empty
    (119) errorElse -> .
    (167) empty -> .

    ELSE            reduce using rule 119 (errorElse -> .)
    ID              reduce using rule 167 (empty -> .)
    PRINT           reduce using rule 167 (empty -> .)
    READ            reduce using rule 167 (empty -> .)
    IF              reduce using rule 167 (empty -> .)
    FOR             reduce using rule 167 (empty -> .)
    WHILE           reduce using rule 167 (empty -> .)
    }               reduce using rule 167 (empty -> .)
    RETURN          reduce using rule 167 (empty -> .)

    errorElse                      shift and go to state 336
    optionalElse                   shift and go to state 335
    empty                          shift and go to state 337

state 328

    (68) opReturns -> errorOpReturns RETURNS type saveReturnType { opVars saveQuadruple . body return
    (81) body -> . errorBody cyInstruction
    (82) body -> . empty
    (83) errorBody -> .
    (167) empty -> .

    ID              reduce using rule 83 (errorBody -> .)
    PRINT           reduce using rule 83 (errorBody -> .)
    READ            reduce using rule 83 (errorBody -> .)
    IF              reduce using rule 83 (errorBody -> .)
    FOR             reduce using rule 83 (errorBody -> .)
    WHILE           reduce using rule 83 (errorBody -> .)
    RETURN          reduce using rule 167 (empty -> .)

    body                           shift and go to state 338
    errorBody                      shift and go to state 88
    empty                          shift and go to state 89

state 329

    (51) cyParam -> errorCyParam saveID saveTypeParam ; param .

    PARFIN          reduce using rule 51 (cyParam -> errorCyParam saveID saveTypeParam ; param .)


state 330

    (157) opMatrix -> errorOpMatrix [ . expresion ]
    (122) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (127) sExp -> . exp errorOpSExp opSExp performRelational
    (136) exp -> . term performAddSub errorCyExp cyExp
    (141) term -> . fact performMulDiv cyTerm
    (145) fact -> . CTES saveConstantString
    (146) fact -> . cte
    (147) fact -> . funcCall
    (148) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (149) fact -> . ID saveVariable opAccess errorOpAccess
    (163) cte -> . CTED saveConstantInt
    (164) cte -> . CTEF saveConstantFloat
    (165) cte -> . TRUE saveConstantBool
    (166) cte -> . FALSE saveConstantBool
    (105) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 137
    PARINI          shift and go to state 134
    ID              shift and go to state 136
    CTED            shift and go to state 135
    CTEF            shift and go to state 142
    TRUE            shift and go to state 133
    FALSE           shift and go to state 139

    sExp                           shift and go to state 148
    expresion                      shift and go to state 339
    term                           shift and go to state 138
    funcCall                       shift and go to state 140
    cte                            shift and go to state 141
    exp                            shift and go to state 151
    fact                           shift and go to state 144

state 331

    (87) whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } . repeatWhile
    (88) repeatWhile -> .

    ID              reduce using rule 88 (repeatWhile -> .)
    PRINT           reduce using rule 88 (repeatWhile -> .)
    READ            reduce using rule 88 (repeatWhile -> .)
    IF              reduce using rule 88 (repeatWhile -> .)
    FOR             reduce using rule 88 (repeatWhile -> .)
    WHILE           reduce using rule 88 (repeatWhile -> .)
    }               reduce using rule 88 (repeatWhile -> .)
    RETURN          reduce using rule 88 (repeatWhile -> .)

    repeatWhile                    shift and go to state 340

state 332

    (43) initDict -> ASGN PARINI dictType : dictType PARFIN errorInitDict .

    ;               reduce using rule 43 (initDict -> ASGN PARINI dictType : dictType PARFIN errorInitDict .)
    PARFIN          reduce using rule 43 (initDict -> ASGN PARINI dictType : dictType PARFIN errorInitDict .)


state 333

    (102) assignMatrix -> [ expresion ] errorAssignMatrix .

    ASGN            reduce using rule 102 (assignMatrix -> [ expresion ] errorAssignMatrix .)


state 334

    (91) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody . assign returnFor PARFIN { rellenaBody body } returnAssign
    (97) assign -> . ID saveVariable errorAssign assignOptions performAssign

    ID              shift and go to state 181

    assign                         shift and go to state 341

state 335

    (115) condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse . rellenaFalso
    (169) rellenaFalso -> .

    ID              reduce using rule 169 (rellenaFalso -> .)
    PRINT           reduce using rule 169 (rellenaFalso -> .)
    READ            reduce using rule 169 (rellenaFalso -> .)
    IF              reduce using rule 169 (rellenaFalso -> .)
    FOR             reduce using rule 169 (rellenaFalso -> .)
    WHILE           reduce using rule 169 (rellenaFalso -> .)
    }               reduce using rule 169 (rellenaFalso -> .)
    RETURN          reduce using rule 169 (rellenaFalso -> .)

    rellenaFalso                   shift and go to state 342

state 336

    (117) optionalElse -> errorElse . ELSE saveVerdadero { body }

    ELSE            shift and go to state 343


state 337

    (118) optionalElse -> empty .

    ID              reduce using rule 118 (optionalElse -> empty .)
    PRINT           reduce using rule 118 (optionalElse -> empty .)
    READ            reduce using rule 118 (optionalElse -> empty .)
    IF              reduce using rule 118 (optionalElse -> empty .)
    FOR             reduce using rule 118 (optionalElse -> empty .)
    WHILE           reduce using rule 118 (optionalElse -> empty .)
    }               reduce using rule 118 (optionalElse -> empty .)
    RETURN          reduce using rule 118 (optionalElse -> empty .)


state 338

    (68) opReturns -> errorOpReturns RETURNS type saveReturnType { opVars saveQuadruple body . return
    (61) return -> . errorReturn RETURN expresion ;
    (62) errorReturn -> .

    RETURN          reduce using rule 62 (errorReturn -> .)

    return                         shift and go to state 344
    errorReturn                    shift and go to state 345

state 339

    (157) opMatrix -> errorOpMatrix [ expresion . ]

    ]               shift and go to state 346


state 340

    (87) whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile .

    ID              reduce using rule 87 (whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile .)
    PRINT           reduce using rule 87 (whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile .)
    READ            reduce using rule 87 (whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile .)
    IF              reduce using rule 87 (whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile .)
    FOR             reduce using rule 87 (whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile .)
    WHILE           reduce using rule 87 (whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile .)
    }               reduce using rule 87 (whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile .)
    RETURN          reduce using rule 87 (whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile .)


state 341

    (91) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign . returnFor PARFIN { rellenaBody body } returnAssign
    (93) returnFor -> .

    PARFIN          reduce using rule 93 (returnFor -> .)

    returnFor                      shift and go to state 347

state 342

    (115) condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso .

    ID              reduce using rule 115 (condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso .)
    PRINT           reduce using rule 115 (condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso .)
    READ            reduce using rule 115 (condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso .)
    IF              reduce using rule 115 (condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso .)
    FOR             reduce using rule 115 (condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso .)
    WHILE           reduce using rule 115 (condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso .)
    }               reduce using rule 115 (condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso .)
    RETURN          reduce using rule 115 (condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso .)


state 343

    (117) optionalElse -> errorElse ELSE . saveVerdadero { body }
    (171) saveVerdadero -> .

    {               reduce using rule 171 (saveVerdadero -> .)

    saveVerdadero                  shift and go to state 348

state 344

    (68) opReturns -> errorOpReturns RETURNS type saveReturnType { opVars saveQuadruple body return .

    }               reduce using rule 68 (opReturns -> errorOpReturns RETURNS type saveReturnType { opVars saveQuadruple body return .)


state 345

    (61) return -> errorReturn . RETURN expresion ;

    RETURN          shift and go to state 349


state 346

    (157) opMatrix -> errorOpMatrix [ expresion ] .

    MULT            reduce using rule 157 (opMatrix -> errorOpMatrix [ expresion ] .)
    DIV             reduce using rule 157 (opMatrix -> errorOpMatrix [ expresion ] .)
    PLUS            reduce using rule 157 (opMatrix -> errorOpMatrix [ expresion ] .)
    MINUS           reduce using rule 157 (opMatrix -> errorOpMatrix [ expresion ] .)
    ,               reduce using rule 157 (opMatrix -> errorOpMatrix [ expresion ] .)
    PARFIN          reduce using rule 157 (opMatrix -> errorOpMatrix [ expresion ] .)
    EQ              reduce using rule 157 (opMatrix -> errorOpMatrix [ expresion ] .)
    DIF             reduce using rule 157 (opMatrix -> errorOpMatrix [ expresion ] .)
    LTOEQ           reduce using rule 157 (opMatrix -> errorOpMatrix [ expresion ] .)
    GTOEQ           reduce using rule 157 (opMatrix -> errorOpMatrix [ expresion ] .)
    GT              reduce using rule 157 (opMatrix -> errorOpMatrix [ expresion ] .)
    LT              reduce using rule 157 (opMatrix -> errorOpMatrix [ expresion ] .)
    AND             reduce using rule 157 (opMatrix -> errorOpMatrix [ expresion ] .)
    OR              reduce using rule 157 (opMatrix -> errorOpMatrix [ expresion ] .)
    ]               reduce using rule 157 (opMatrix -> errorOpMatrix [ expresion ] .)
    ;               reduce using rule 157 (opMatrix -> errorOpMatrix [ expresion ] .)


state 347

    (91) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor . PARFIN { rellenaBody body } returnAssign

    PARFIN          shift and go to state 350


state 348

    (117) optionalElse -> errorElse ELSE saveVerdadero . { body }

    {               shift and go to state 351


state 349

    (61) return -> errorReturn RETURN . expresion ;
    (122) expresion -> . sExp performAndOr cyExpresion errorExpresion
    (127) sExp -> . exp errorOpSExp opSExp performRelational
    (136) exp -> . term performAddSub errorCyExp cyExp
    (141) term -> . fact performMulDiv cyTerm
    (145) fact -> . CTES saveConstantString
    (146) fact -> . cte
    (147) fact -> . funcCall
    (148) fact -> . PARINI putFondo expresion PARFIN takeFondo
    (149) fact -> . ID saveVariable opAccess errorOpAccess
    (163) cte -> . CTED saveConstantInt
    (164) cte -> . CTEF saveConstantFloat
    (165) cte -> . TRUE saveConstantBool
    (166) cte -> . FALSE saveConstantBool
    (105) funcCall -> . ID PARINI opParamCall PARFIN

    CTES            shift and go to state 137
    PARINI          shift and go to state 134
    ID              shift and go to state 136
    CTED            shift and go to state 135
    CTEF            shift and go to state 142
    TRUE            shift and go to state 133
    FALSE           shift and go to state 139

    sExp                           shift and go to state 148
    expresion                      shift and go to state 352
    term                           shift and go to state 138
    funcCall                       shift and go to state 140
    cte                            shift and go to state 141
    exp                            shift and go to state 151
    fact                           shift and go to state 144

state 350

    (91) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN . { rellenaBody body } returnAssign

    {               shift and go to state 353


state 351

    (117) optionalElse -> errorElse ELSE saveVerdadero { . body }
    (81) body -> . errorBody cyInstruction
    (82) body -> . empty
    (83) errorBody -> .
    (167) empty -> .

    ID              reduce using rule 83 (errorBody -> .)
    PRINT           reduce using rule 83 (errorBody -> .)
    READ            reduce using rule 83 (errorBody -> .)
    IF              reduce using rule 83 (errorBody -> .)
    FOR             reduce using rule 83 (errorBody -> .)
    WHILE           reduce using rule 83 (errorBody -> .)
    }               reduce using rule 167 (empty -> .)

    body                           shift and go to state 354
    errorBody                      shift and go to state 88
    empty                          shift and go to state 89

state 352

    (61) return -> errorReturn RETURN expresion . ;

    ;               shift and go to state 355


state 353

    (91) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { . rellenaBody body } returnAssign
    (94) rellenaBody -> .

    }               reduce using rule 94 (rellenaBody -> .)
    ID              reduce using rule 94 (rellenaBody -> .)
    PRINT           reduce using rule 94 (rellenaBody -> .)
    READ            reduce using rule 94 (rellenaBody -> .)
    IF              reduce using rule 94 (rellenaBody -> .)
    FOR             reduce using rule 94 (rellenaBody -> .)
    WHILE           reduce using rule 94 (rellenaBody -> .)

    rellenaBody                    shift and go to state 356

state 354

    (117) optionalElse -> errorElse ELSE saveVerdadero { body . }

    }               shift and go to state 357


state 355

    (61) return -> errorReturn RETURN expresion ; .

    }               reduce using rule 61 (return -> errorReturn RETURN expresion ; .)


state 356

    (91) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody . body } returnAssign
    (81) body -> . errorBody cyInstruction
    (82) body -> . empty
    (83) errorBody -> .
    (167) empty -> .

    ID              reduce using rule 83 (errorBody -> .)
    PRINT           reduce using rule 83 (errorBody -> .)
    READ            reduce using rule 83 (errorBody -> .)
    IF              reduce using rule 83 (errorBody -> .)
    FOR             reduce using rule 83 (errorBody -> .)
    WHILE           reduce using rule 83 (errorBody -> .)
    }               reduce using rule 167 (empty -> .)

    body                           shift and go to state 358
    errorBody                      shift and go to state 88
    empty                          shift and go to state 89

state 357

    (117) optionalElse -> errorElse ELSE saveVerdadero { body } .

    ID              reduce using rule 117 (optionalElse -> errorElse ELSE saveVerdadero { body } .)
    PRINT           reduce using rule 117 (optionalElse -> errorElse ELSE saveVerdadero { body } .)
    READ            reduce using rule 117 (optionalElse -> errorElse ELSE saveVerdadero { body } .)
    IF              reduce using rule 117 (optionalElse -> errorElse ELSE saveVerdadero { body } .)
    FOR             reduce using rule 117 (optionalElse -> errorElse ELSE saveVerdadero { body } .)
    WHILE           reduce using rule 117 (optionalElse -> errorElse ELSE saveVerdadero { body } .)
    }               reduce using rule 117 (optionalElse -> errorElse ELSE saveVerdadero { body } .)
    RETURN          reduce using rule 117 (optionalElse -> errorElse ELSE saveVerdadero { body } .)


state 358

    (91) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body . } returnAssign

    }               shift and go to state 359


state 359

    (91) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } . returnAssign
    (95) returnAssign -> .

    ID              reduce using rule 95 (returnAssign -> .)
    PRINT           reduce using rule 95 (returnAssign -> .)
    READ            reduce using rule 95 (returnAssign -> .)
    IF              reduce using rule 95 (returnAssign -> .)
    FOR             reduce using rule 95 (returnAssign -> .)
    WHILE           reduce using rule 95 (returnAssign -> .)
    }               reduce using rule 95 (returnAssign -> .)
    RETURN          reduce using rule 95 (returnAssign -> .)

    returnAssign                   shift and go to state 360

state 360

    (91) forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign .

    ID              reduce using rule 91 (forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign .)
    PRINT           reduce using rule 91 (forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign .)
    READ            reduce using rule 91 (forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign .)
    IF              reduce using rule 91 (forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign .)
    FOR             reduce using rule 91 (forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign .)
    WHILE           reduce using rule 91 (forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign .)
    }               reduce using rule 91 (forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign .)
    RETURN          reduce using rule 91 (forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PARINI in state 172 resolved as shift
WARNING: reduce/reduce conflict in state 284 resolved using rule (initWith -> funcCall)
WARNING: rejected rule (fact -> funcCall) in state 284
