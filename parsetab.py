
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '21A8BBAE9A228293D5F409D605CA4752'
    
_lr_action_items = {'RETURN':([8,11,18,21,23,24,59,61,68,69,70,72,75,78,82,83,84,86,87,88,100,106,108,258,265,268,274,275,277,282,287,288,291,],[-6,-7,-28,-27,-26,-10,-150,-150,-65,-67,-68,-63,-70,-150,-150,-74,-73,-69,-22,-23,-61,-72,-21,-75,-150,-150,-97,-100,-150,-51,290,-77,-99,]),'VARS':([7,10,53,180,268,],[-12,13,-12,-12,-12,]),'DIF':([122,126,127,129,130,131,132,133,134,135,136,150,157,158,159,161,165,166,167,170,173,175,184,189,190,191,192,194,197,198,202,206,207,218,219,226,241,261,262,284,],[-148,-146,-150,-128,-123,-149,-130,-129,-147,-118,-150,-87,-134,-137,-136,-135,-150,-117,-124,-127,-150,-130,-131,-132,-144,-145,-143,-119,-122,222,-126,-150,-129,-120,-121,-125,-150,-138,-141,-140,]),'WHILE':([8,11,18,21,23,24,53,59,61,63,68,69,70,72,74,78,82,83,84,85,87,88,100,108,180,212,214,232,258,265,268,274,275,277,278,285,288,291,],[-6,-7,-28,-27,-26,-10,-150,-150,-150,-71,-65,-67,-68,-63,-76,-150,-71,-74,-73,107,-22,-23,-61,-21,-150,-71,-71,-71,-75,-150,-150,-97,-100,-71,-71,-71,-77,-99,]),'PROGRAM':([0,2,],[-5,3,]),'DIV':([122,126,127,129,131,132,133,134,136,150,157,158,159,161,173,175,184,189,190,191,192,206,207,241,261,262,284,],[-148,-146,-150,-128,-149,-130,-129,-147,169,-87,-134,-137,-136,-135,-150,-130,-131,-132,-144,-145,-143,-150,-129,-150,-138,-141,-140,]),'.':([127,173,206,],[160,160,160,]),'TRUE':([110,119,123,139,141,142,152,154,163,168,169,172,183,188,195,196,201,220,221,222,223,224,225,227,230,251,270,290,],[122,122,122,122,122,122,122,122,122,-133,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'MINUS':([122,126,127,129,130,131,132,133,134,136,150,157,158,159,161,165,167,170,173,175,184,189,190,191,192,202,206,207,226,241,261,262,284,],[-148,-146,-150,-128,-123,-149,-130,-129,-147,-150,-87,-134,-137,-136,-135,196,-124,-127,-150,-130,-131,-132,-144,-145,-143,-126,-150,-129,-125,-150,-138,-141,-140,]),'MULT':([122,126,127,129,131,132,133,134,136,150,157,158,159,161,173,175,184,189,190,191,192,206,207,241,261,262,284,],[-148,-146,-150,-128,-149,-130,-129,-147,168,-87,-134,-137,-136,-135,-150,-130,-131,-132,-144,-145,-143,-150,-129,-150,-138,-141,-140,]),'LAST':([160,],[191,]),')':([29,30,32,39,56,76,95,97,98,99,101,110,113,116,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,143,147,150,151,153,155,157,158,159,161,162,164,165,166,167,170,171,173,174,175,177,178,184,185,186,187,189,190,191,192,193,194,197,199,200,202,203,206,207,210,217,218,219,226,228,233,235,241,242,243,244,245,246,247,248,249,250,252,255,259,261,262,263,266,271,281,284,],[-14,-15,-16,-13,-44,-150,-55,115,-53,-150,117,-150,-56,-43,150,-148,-150,-89,-146,-150,-150,-128,-123,-149,-130,-129,-147,-118,-150,-82,-79,-81,-52,182,-87,184,-105,-108,-134,-137,-136,-135,-88,-91,-150,-150,-124,-127,-30,-150,-31,-32,209,-150,-131,-106,-104,-107,-132,-144,-145,-143,-150,-119,-122,-116,-109,-126,-29,-150,-129,-150,-90,-120,-121,-125,-35,-11,-39,-150,-114,-110,-111,-115,-113,-112,263,-36,-37,-83,-45,269,-138,-141,-34,-42,-33,-41,-140,]),'(':([41,45,47,51,54,64,91,107,109,110,112,119,123,127,139,141,142,152,154,163,168,169,172,173,183,188,195,196,201,206,220,221,222,223,224,225,230,251,270,290,],[-103,-4,58,-103,-54,76,110,119,120,123,142,123,123,110,172,123,123,123,123,123,-133,123,123,110,123,123,123,123,123,110,123,123,123,123,123,123,123,123,123,123,]),',':([46,99,122,124,126,127,128,129,130,131,132,133,134,135,136,150,153,155,157,158,159,161,165,166,167,170,178,184,185,186,187,189,190,191,192,193,194,197,199,200,202,218,219,226,241,242,243,244,245,246,247,261,262,284,],[55,55,-148,-150,-146,-150,163,-128,-123,-149,-130,-129,-147,-118,-150,-87,-105,-108,-134,-137,-136,-135,-150,-150,-124,-127,55,-131,-106,-104,-107,-132,-144,-145,-143,163,-119,-122,-116,-109,-126,-120,-121,-125,-150,-114,-110,-111,-115,-113,-112,-138,-141,-140,]),'ASGN':([91,111,148,208,229,231,264,272,],[-80,139,-80,-150,251,-85,-86,-84,]),'FIRST':([160,],[190,]),'LT':([122,126,127,129,130,131,132,133,134,135,136,150,157,158,159,161,165,166,167,170,173,175,184,189,190,191,192,194,197,198,202,206,207,218,219,226,241,261,262,284,],[-148,-146,-150,-128,-123,-149,-130,-129,-147,-118,-150,-87,-134,-137,-136,-135,-150,-117,-124,-127,-150,-130,-131,-132,-144,-145,-143,-119,-122,223,-126,-150,-129,-120,-121,-125,-150,-138,-141,-140,]),'PLUS':([122,126,127,129,130,131,132,133,134,136,150,157,158,159,161,165,167,170,173,175,184,189,190,191,192,202,206,207,226,241,261,262,284,],[-148,-146,-150,-128,-123,-149,-130,-129,-147,-150,-87,-134,-137,-136,-135,195,-124,-127,-150,-130,-131,-132,-144,-145,-143,-126,-150,-129,-125,-150,-138,-141,-140,]),'BOOL':([13,19,42,58,59,61,76,78,79,96,211,276,],[-3,32,32,32,-3,-3,-3,-3,32,32,32,-3,]),';':([46,48,50,56,57,66,80,89,92,94,99,102,104,116,117,122,124,126,127,129,130,131,132,133,134,135,136,137,138,140,146,149,150,153,155,157,158,159,161,165,166,167,170,171,173,174,175,178,184,185,186,187,189,190,191,192,194,197,199,200,202,203,210,215,218,219,226,234,241,242,243,244,245,246,247,252,256,261,262,263,267,271,284,292,],[-150,59,61,-44,-11,78,-150,108,-25,-24,-150,-92,-96,-43,-102,-148,-150,-146,-150,-128,-123,-149,-130,-129,-147,-118,-150,-82,-79,-81,-95,183,-87,-105,-108,-134,-137,-136,-135,-150,-150,-124,-127,-30,-150,-31,-32,-150,-131,-106,-104,-107,-132,-144,-145,-143,-119,-122,-116,-109,-126,-29,-46,240,-120,-121,-125,-11,-150,-114,-110,-111,-115,-113,-112,-83,-45,-138,-141,-34,276,-33,-140,293,]),':':([29,30,32,39,67,122,126,131,134,204,206,207,228,],[-14,-15,-16,-13,79,-148,-146,-149,-147,227,-37,-36,-35,]),'$end':([1,36,43,],[0,-151,-1,]),'GT':([122,126,127,129,130,131,132,133,134,135,136,150,157,158,159,161,165,166,167,170,173,175,184,189,190,191,192,194,197,198,202,206,207,218,219,226,241,261,262,284,],[-148,-146,-150,-128,-123,-149,-130,-129,-147,-118,-150,-87,-134,-137,-136,-135,-150,-117,-124,-127,-150,-130,-131,-132,-144,-145,-143,-119,-122,220,-126,-150,-129,-120,-121,-125,-150,-138,-141,-140,]),'STRING':([13,19,42,58,59,61,76,78,79,96,211,276,],[-3,30,30,30,-3,-3,-3,-3,30,30,30,-3,]),'FOR':([8,11,18,21,23,24,53,59,61,63,68,69,70,72,74,78,82,83,84,87,88,90,100,108,180,212,214,232,258,265,268,274,275,277,278,285,288,291,],[-6,-7,-28,-27,-26,-10,-150,-150,-150,-71,-65,-67,-68,-63,-78,-150,-71,-74,-73,-22,-23,109,-61,-21,-150,-71,-71,-71,-75,-150,-150,-97,-100,-71,-71,-71,-77,-99,]),'ELSE':([265,273,],[-101,280,]),'RETURNS':([115,145,179,],[-54,-60,211,]),'FUNC':([7,8,9,11,12,16,17,18,21,23,24,59,61,68,69,70,72,78,100,213,238,],[-150,-6,-2,-7,-48,-48,28,-28,-27,-26,-10,-150,-150,-65,-67,-68,-63,-150,-61,-49,-47,]),'[':([29,30,32,39,49,52,62,80,91,111,117,127,148,156,173,206,208,241,260,],[-14,-15,-16,-13,60,-93,-94,103,-80,141,-102,-139,-80,188,-139,-139,230,-142,270,]),']':([71,118,122,124,126,127,129,130,131,132,133,134,135,136,150,153,155,157,158,159,161,165,166,167,170,176,184,185,186,187,189,190,191,192,194,197,199,200,202,216,218,219,226,241,242,243,244,245,246,247,253,261,262,279,284,],[80,146,-148,-150,-146,-150,-128,-123,-149,-130,-129,-147,-118,-150,-87,-105,-108,-134,-137,-136,-135,-150,-150,-124,-127,208,-131,-106,-104,-107,-132,-144,-145,-143,-119,-122,-116,-109,-126,241,-120,-121,-125,-150,-114,-110,-111,-115,-113,-112,264,-138,-141,284,-140,]),'ID':([3,4,8,11,18,21,23,24,28,29,30,32,33,34,35,38,39,40,53,55,59,61,63,65,68,69,70,72,74,77,78,82,83,84,87,88,100,108,110,114,119,120,123,139,141,142,144,152,154,163,168,169,172,180,183,188,195,196,201,212,214,220,221,222,223,224,225,227,230,232,240,251,258,265,268,270,274,275,277,278,285,288,290,291,],[-3,5,-6,-7,-28,-27,-26,-10,-3,-14,-15,-16,-62,41,42,45,-13,46,-150,-11,-150,-150,-71,-45,-65,-67,-68,-63,91,99,-150,-71,-74,-73,-22,-23,-61,-21,127,-40,127,148,127,173,127,127,178,127,127,127,-133,127,206,-150,127,127,127,127,127,-71,-71,127,127,127,127,127,127,250,127,-71,148,173,-75,-150,-150,127,-97,-100,-71,-71,-71,-77,127,-99,]),'IF':([8,11,18,21,23,24,53,59,61,63,68,69,70,72,74,78,82,83,84,87,88,93,100,108,180,212,214,232,258,265,268,274,275,277,278,285,288,291,],[-6,-7,-28,-27,-26,-10,-150,-150,-150,-71,-65,-67,-68,-63,-98,-150,-71,-74,-73,-22,-23,112,-61,-21,-150,-71,-71,-71,-75,-150,-150,-97,-100,-71,-71,-71,-77,-99,]),'AND':([122,124,126,127,129,130,131,132,133,134,135,136,150,157,158,159,161,165,166,167,170,173,175,184,189,190,191,192,194,197,199,200,202,206,207,218,219,226,241,242,243,244,245,246,247,261,262,284,],[-148,152,-146,-150,-128,-123,-149,-130,-129,-147,-118,-150,-87,-134,-137,-136,-135,-150,-150,-124,-127,-150,-130,-131,-132,-144,-145,-143,-119,-122,-116,-109,-126,-150,-129,-120,-121,-125,-150,-114,-110,-111,-115,-113,-112,-138,-141,-140,]),'CTES':([110,119,123,139,141,142,152,154,163,168,169,172,183,188,195,196,201,205,220,221,222,223,224,225,227,230,251,270,290,],[129,129,129,129,129,129,129,129,129,-133,129,129,129,129,129,129,129,228,129,129,129,129,129,129,-38,129,129,129,129,]),'LTOEQ':([122,126,127,129,130,131,132,133,134,135,136,150,157,158,159,161,165,166,167,170,173,175,184,189,190,191,192,194,197,198,202,206,207,218,219,226,241,261,262,284,],[-148,-146,-150,-128,-123,-149,-130,-129,-147,-118,-150,-87,-134,-137,-136,-135,-150,-117,-124,-127,-150,-130,-131,-132,-144,-145,-143,-119,-122,225,-126,-150,-129,-120,-121,-125,-150,-138,-141,-140,]),'FALSE':([110,119,123,139,141,142,152,154,163,168,169,172,183,188,195,196,201,220,221,222,223,224,225,227,230,251,270,290,],[131,131,131,131,131,131,131,131,131,-133,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'STRUCT':([13,22,59,61,78,],[-64,35,-64,-64,-64,]),'INT':([13,19,31,42,58,59,61,76,78,79,96,211,276,],[-3,-17,39,-17,-17,-3,-3,-3,-3,-17,-17,-17,-3,]),'EQ':([122,126,127,129,130,131,132,133,134,135,136,150,157,158,159,161,165,166,167,170,173,175,184,189,190,191,192,194,197,198,202,206,207,218,219,226,241,261,262,284,],[-148,-146,-150,-128,-123,-149,-130,-129,-147,-118,-150,-87,-134,-137,-136,-135,-150,-117,-124,-127,-150,-130,-131,-132,-144,-145,-143,-119,-122,221,-126,-150,-129,-120,-121,-125,-150,-138,-141,-140,]),'FLOAT':([13,19,42,58,59,61,76,78,79,96,211,276,],[-3,29,29,29,-3,-3,-3,-3,29,29,29,-3,]),'OR':([122,124,126,127,129,130,131,132,133,134,135,136,150,157,158,159,161,165,166,167,170,173,175,184,189,190,191,192,194,197,199,200,202,206,207,218,219,226,241,242,243,244,245,246,247,261,262,284,],[-148,154,-146,-150,-128,-123,-149,-130,-129,-147,-118,-150,-87,-134,-137,-136,-135,-150,-150,-124,-127,-150,-130,-131,-132,-144,-145,-143,-119,-122,-116,-109,-126,-150,-129,-120,-121,-125,-150,-114,-110,-111,-115,-113,-112,-138,-141,-140,]),'DICT':([13,20,42,59,61,78,],[-66,34,51,-66,-66,-66,]),'CTED':([60,103,110,119,123,139,141,142,152,154,163,168,169,172,183,188,195,196,201,220,221,222,223,224,225,227,230,251,270,290,],[71,118,126,126,126,126,126,126,126,126,126,-133,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'GTOEQ':([122,126,127,129,130,131,132,133,134,135,136,150,157,158,159,161,165,166,167,170,173,175,184,189,190,191,192,194,197,198,202,206,207,218,219,226,241,261,262,284,],[-148,-146,-150,-128,-123,-149,-130,-129,-147,-118,-150,-87,-134,-137,-136,-135,-150,-117,-124,-127,-150,-130,-131,-132,-144,-145,-143,-119,-122,224,-126,-150,-129,-120,-121,-125,-150,-138,-141,-140,]),'{':([5,6,29,30,32,37,39,44,115,145,182,209,236,257,269,280,],[-4,7,-14,-15,-16,-19,-13,53,-54,180,214,232,-59,268,278,285,]),'MAIN':([7,8,9,11,12,14,15,16,18,21,23,24,26,27,59,61,68,69,70,72,78,100,213,238,],[-150,-6,-2,-7,-150,-20,-9,-150,-28,-27,-26,-10,37,-8,-150,-150,-65,-67,-68,-63,-150,-61,-49,-47,]),'}':([8,11,18,21,23,24,25,53,59,61,63,68,69,70,72,73,75,78,81,82,83,84,86,87,88,100,105,106,108,180,181,212,214,232,237,239,254,258,265,274,275,278,283,285,286,288,289,291,293,],[-6,-7,-28,-27,-26,-10,36,-150,-150,-150,-150,-65,-67,-68,-63,81,-70,-150,-49,-150,-74,-73,-69,-22,-23,-61,-18,-72,-21,-150,213,-150,-150,-150,-58,258,265,-75,-150,-97,-100,-150,288,-150,-57,-77,291,-99,-50,]),'CTEF':([110,119,123,139,141,142,152,154,163,168,169,172,183,188,195,196,201,220,221,222,223,224,225,227,230,251,270,290,],[134,134,134,134,134,134,134,134,134,-133,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vars':([7,53,180,268,],[8,8,8,8,]),'errorOpSExp':([135,],[166,]),'errorMain':([14,],[26,]),'errorCyExp':([130,],[165,]),'opParamCall':([110,],[121,]),'cyTypeParam':([46,99,178,],[57,116,210,]),'forCycle':([74,],[84,]),'structType':([42,],[49,]),'changeCurrentScope':([9,],[12,]),'struct':([42,],[50,]),'param':([76,276,],[95,281,]),'init':([111,229,],[140,252,]),'program':([0,],[1,]),'dict':([41,51,],[48,62,]),'opMatrix':([241,],[261,]),'errorExpresion':([153,],[186,]),'main':([14,],[25,]),'return':([282,],[286,]),'prueba':([166,],[198,]),'errorParam':([114,],[144,]),'errorElse':([265,],[273,]),'errorReturn':([282,],[287,]),'assignOptions':([111,],[138,]),'flagParameters':([54,115,],[64,145,]),'basicDeclare':([13,59,61,78,],[23,23,23,23,]),'cyInstruction':([74,],[86,]),'condition':([74,],[87,]),'expresion':([110,119,123,139,141,142,152,154,163,172,183,188,230,251,270,290,],[128,147,151,174,176,177,185,187,193,151,215,216,253,174,279,292,]),'term':([110,119,123,139,141,142,152,154,163,172,183,188,195,196,220,221,222,223,224,225,230,251,270,290,],[130,130,130,130,130,130,130,130,130,130,130,130,218,219,130,130,130,130,130,130,130,130,130,130,]),'funcCall':([74,110,119,123,139,141,142,152,154,163,169,172,183,188,195,196,201,220,221,222,223,224,225,230,251,270,290,],[92,132,132,132,175,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,175,132,132,]),'initDict':([111,],[137,]),'saveTypeParam':([65,255,256,],[77,266,267,]),'dictDeclare':([13,59,61,78,],[18,18,18,18,]),'saveMain':([37,],[44,]),'errorVars':([7,53,180,268,],[10,10,10,10,]),'whileCycle':([74,],[83,]),'errorDictDeclare':([13,59,61,78,],[20,20,20,20,]),'opFunctions':([12,16,],[14,27,]),'errorOpStruct':([127,173,206,],[156,156,156,]),'opVars':([7,53,180,268,],[9,63,212,277,]),'errorInit':([171,],[203,]),'cyExpresion':([124,],[153,]),'body':([63,82,212,214,232,277,278,285,],[73,106,237,239,254,282,283,289,]),'errorOpParameters':([113,],[143,]),'printTables':([36,],[43,]),'saveParamToDirProc':([95,],[113,]),'saveReturnType':([236,],[257,]),'opParameters':([76,],[97,]),'errorCondition':([74,],[93,]),'cte':([110,119,123,139,141,142,152,154,163,169,172,183,188,195,196,201,220,221,222,223,224,225,227,230,251,270,290,],[133,133,133,133,133,133,133,133,133,133,207,133,133,133,133,133,133,133,133,133,133,133,249,133,133,133,133,]),'saveProc':([5,45,],[6,54,]),'assign':([74,120,240,],[94,149,259,]),'errorStructDeclare':([13,59,61,78,],[22,22,22,22,]),'cyExp':([165,],[194,]),'instr':([74,],[82,]),'errorFact':([168,],[201,]),'errorProgram':([0,],[2,]),'cyTerm':([136,],[167,]),'errorAssignMatrix':([264,],[272,]),'cyDeclare':([59,61,78,],[68,72,100,]),'errorBody':([63,82,212,214,232,277,278,285,],[74,74,74,74,74,74,74,74,]),'opStruct':([127,173,206,],[157,157,157,]),'errorOpAccess':([158,],[189,]),'type':([19,42,58,79,96,211,],[33,52,67,101,114,236,]),'dictIndex':([160,],[192,]),'empty':([7,12,16,46,53,59,61,63,76,78,80,82,99,110,124,127,128,136,165,166,173,178,180,193,206,208,210,212,214,232,241,265,268,277,278,285,],[11,15,15,56,11,70,70,75,98,70,104,75,56,125,155,159,164,170,197,199,159,56,11,164,159,231,233,75,75,75,262,275,11,75,75,75,]),'errorBasicDeclare':([33,],[40,]),'function':([12,16,],[16,16,]),'errorOpMatrix':([241,],[260,]),'opDictionary':([127,173,206,],[161,161,161,]),'errorType':([19,42,58,79,96,211,],[31,31,31,31,31,31,]),'errorForCycle':([74,],[90,]),'opAccess':([127,173,206,],[158,158,158,]),'basicStatements':([74,],[89,]),'structDeclare':([13,59,61,78,],[21,21,21,21,]),'errorAssign':([91,148,],[111,111,]),'cyParam':([210,],[235,]),'opSExp':([166,],[200,]),'errorOpReturns':([145,],[179,]),'cyParamCall':([128,193,],[162,217,]),'declare':([13,59,61,78,],[24,69,69,69,]),'optionalMatrix':([80,],[102,]),'clearVarsTable':([81,213,],[105,238,]),'optionalElse':([265,],[274,]),'dictType':([172,227,],[204,248,]),'initWith':([139,251,],[171,171,]),'errorWhileCycle':([74,],[85,]),'sExp':([110,119,123,139,141,142,152,154,163,172,183,188,230,251,270,290,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'errorCyParam':([210,],[234,]),'opReturns':([145,],[181,]),'errorDictType':([172,227,],[205,205,]),'assignMatrix':([208,],[229,]),'errorDict':([41,51,],[47,47,]),'errorInitDict':([263,],[271,]),'saveType':([3,13,28,59,61,76,78,276,],[4,19,38,19,19,96,19,96,]),'saveID':([55,57,233,234,],[65,66,255,256,]),'cycle':([74,],[88,]),'errorFunction':([12,16,],[17,17,]),'exp':([110,119,123,139,141,142,152,154,163,172,183,188,220,221,222,223,224,225,230,251,270,290,],[135,135,135,135,135,135,135,135,135,135,135,135,242,243,244,245,246,247,135,135,135,135,]),'fact':([110,119,123,139,141,142,152,154,163,169,172,183,188,195,196,201,220,221,222,223,224,225,230,251,270,290,],[136,136,136,136,136,136,136,136,136,202,136,136,136,136,136,226,136,136,136,136,136,136,136,136,136,136,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables','program',12,'p_program','CT.py',215),
  ('changeCurrentScope -> <empty>','changeCurrentScope',0,'p_changeCurrentScope','CT.py',219),
  ('saveType -> <empty>','saveType',0,'p_saveType','CT.py',224),
  ('saveProc -> <empty>','saveProc',0,'p_saveProc','CT.py',231),
  ('errorProgram -> <empty>','errorProgram',0,'p_errorProgram','CT.py',248),
  ('opVars -> vars','opVars',1,'p_opVars','CT.py',254),
  ('opVars -> empty','opVars',1,'p_opVars','CT.py',255),
  ('opFunctions -> function opFunctions','opFunctions',2,'p_opFunctions','CT.py',260),
  ('opFunctions -> empty','opFunctions',1,'p_opFunctions','CT.py',261),
  ('vars -> errorVars VARS declare','vars',3,'p_vars','CT.py',265),
  ('saveID -> <empty>','saveID',0,'p_saveID','CT.py',270),
  ('errorVars -> <empty>','errorVars',0,'p_errorVars','CT.py',299),
  ('type -> errorType INT','type',2,'p_type','CT.py',305),
  ('type -> FLOAT','type',1,'p_type','CT.py',306),
  ('type -> STRING','type',1,'p_type','CT.py',307),
  ('type -> BOOL','type',1,'p_type','CT.py',308),
  ('errorType -> <empty>','errorType',0,'p_errorType','CT.py',313),
  ('main -> errorMain MAIN saveMain { opVars body } clearVarsTable','main',8,'p_main','CT.py',319),
  ('saveMain -> <empty>','saveMain',0,'p_saveMain','CT.py',323),
  ('errorMain -> <empty>','errorMain',0,'p_errorMain','CT.py',331),
  ('instr -> basicStatements ;','instr',2,'p_instr','CT.py',337),
  ('instr -> condition','instr',1,'p_instr','CT.py',338),
  ('instr -> cycle','instr',1,'p_instr','CT.py',339),
  ('basicStatements -> assign','basicStatements',1,'p_basicStatements','CT.py',343),
  ('basicStatements -> funcCall','basicStatements',1,'p_basicStatements','CT.py',344),
  ('declare -> basicDeclare','declare',1,'p_declare','CT.py',348),
  ('declare -> structDeclare','declare',1,'p_declare','CT.py',349),
  ('declare -> dictDeclare','declare',1,'p_declare','CT.py',350),
  ('init -> ASGN initWith errorInit','init',3,'p_init','CT.py',355),
  ('errorInit -> <empty>','errorInit',0,'p_errorInit','CT.py',360),
  ('initWith -> expresion','initWith',1,'p_initWith','CT.py',366),
  ('initWith -> funcCall','initWith',1,'p_initWith','CT.py',367),
  ('initDict -> ASGN ( dictType : dictType ) errorInitDict','initDict',7,'p_initDict','CT.py',372),
  ('errorInitDict -> <empty>','errorInitDict',0,'p_errorInitDict','CT.py',377),
  ('dictType -> errorDictType CTES','dictType',2,'p_dictType','CT.py',383),
  ('dictType -> cte','dictType',1,'p_dictType','CT.py',384),
  ('dictType -> ID','dictType',1,'p_dictType','CT.py',385),
  ('errorDictType -> <empty>','errorDictType',0,'p_errorDictType','CT.py',390),
  ('param -> saveType type errorParam ID cyTypeParam cyParam','param',6,'p_param','CT.py',396),
  ('errorParam -> <empty>','errorParam',0,'p_errorParam','CT.py',401),
  ('cyParam -> errorCyParam saveID saveTypeParam ; param','cyParam',5,'p_cyParam','CT.py',407),
  ('cyParam -> empty saveID saveTypeParam','cyParam',3,'p_cyParam','CT.py',408),
  ('cyTypeParam -> , saveID saveTypeParam ID cyTypeParam','cyTypeParam',5,'p_cyTypeParam','CT.py',413),
  ('cyTypeParam -> empty','cyTypeParam',1,'p_cyTypeParam','CT.py',414),
  ('saveTypeParam -> <empty>','saveTypeParam',0,'p_saveTypeParam','CT.py',418),
  ('errorCyParam -> <empty>','errorCyParam',0,'p_errorCyParam','CT.py',427),
  ('function -> errorFunction FUNC saveType ID saveProc flagParameters ( opParameters ) flagParameters opReturns } clearVarsTable','function',13,'p_function','CT.py',433),
  ('errorFunction -> <empty>','errorFunction',0,'p_errorFunction','CT.py',437),
  ('clearVarsTable -> <empty>','clearVarsTable',0,'p_clearVarsTable','CT.py',442),
  ('return -> errorReturn RETURN expresion ;','return',4,'p_return','CT.py',453),
  ('errorReturn -> <empty>','errorReturn',0,'p_errorReturn','CT.py',458),
  ('opParameters -> param saveParamToDirProc errorOpParameters','opParameters',3,'p_opParameters','CT.py',464),
  ('opParameters -> empty','opParameters',1,'p_opParameters','CT.py',465),
  ('flagParameters -> <empty>','flagParameters',0,'p_flagParameters','CT.py',469),
  ('saveParamToDirProc -> <empty>','saveParamToDirProc',0,'p_saveParamToDirProc','CT.py',474),
  ('errorOpParameters -> <empty>','errorOpParameters',0,'p_errorOpParameters','CT.py',482),
  ('opReturns -> errorOpReturns RETURNS type saveReturnType { opVars body return','opReturns',8,'p_opReturns','CT.py',488),
  ('opReturns -> { opVars body','opReturns',3,'p_opReturns','CT.py',489),
  ('saveReturnType -> <empty>','saveReturnType',0,'p_saveReturnType','CT.py',494),
  ('errorOpReturns -> <empty>','errorOpReturns',0,'p_errorOpReturns','CT.py',500),
  ('basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare','basicDeclare',8,'p_basicDeclare','CT.py',506),
  ('errorBasicDeclare -> <empty>','errorBasicDeclare',0,'p_errorBasicDeclare','CT.py',511),
  ('structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare','structDeclare',6,'p_structDeclare','CT.py',517),
  ('errorStructDeclare -> <empty>','errorStructDeclare',0,'p_errorStructDeclare','CT.py',522),
  ('dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare','dictDeclare',6,'p_dictDeclare','CT.py',528),
  ('errorDictDeclare -> <empty>','errorDictDeclare',0,'p_errorDictDeclare','CT.py',533),
  ('cyDeclare -> declare','cyDeclare',1,'p_cyDeclare','CT.py',539),
  ('cyDeclare -> empty','cyDeclare',1,'p_cyDeclare','CT.py',540),
  ('body -> errorBody cyInstruction','body',2,'p_body','CT.py',545),
  ('body -> empty','body',1,'p_body','CT.py',546),
  ('errorBody -> <empty>','errorBody',0,'p_errorBody','CT.py',551),
  ('cyInstruction -> instr body','cyInstruction',2,'p_cyInstruction','CT.py',557),
  ('cycle -> forCycle','cycle',1,'p_cycle','CT.py',562),
  ('cycle -> whileCycle','cycle',1,'p_cycle','CT.py',563),
  ('whileCycle -> errorWhileCycle WHILE ( expresion ) { body }','whileCycle',8,'p_whileCycle','CT.py',568),
  ('errorWhileCycle -> <empty>','errorWhileCycle',0,'p_errorWhileCycle','CT.py',573),
  ('forCycle -> errorForCycle FOR ( assign ; expresion ; assign ) { body }','forCycle',12,'p_forCycle','CT.py',579),
  ('errorForCycle -> <empty>','errorForCycle',0,'p_errorForCycle','CT.py',584),
  ('assign -> ID errorAssign assignOptions','assign',3,'p_assign','CT.py',590),
  ('errorAssign -> <empty>','errorAssign',0,'p_errorAssign','CT.py',595),
  ('assignOptions -> init','assignOptions',1,'p_assignOptions','CT.py',601),
  ('assignOptions -> initDict','assignOptions',1,'p_assignOptions','CT.py',602),
  ('assignOptions -> [ expresion ] assignMatrix init','assignOptions',5,'p_assignOptions','CT.py',603),
  ('assignMatrix -> [ expresion ] errorAssignMatrix','assignMatrix',4,'p_assignMatrix','CT.py',608),
  ('assignMatrix -> empty','assignMatrix',1,'p_assignMatrix','CT.py',609),
  ('errorAssignMatrix -> <empty>','errorAssignMatrix',0,'p_errorAssignMatrix','CT.py',614),
  ('funcCall -> ID ( opParamCall )','funcCall',4,'p_funcCall','CT.py',620),
  ('opParamCall -> expresion cyParamCall','opParamCall',2,'p_opParamCall','CT.py',625),
  ('opParamCall -> empty','opParamCall',1,'p_opParamCall','CT.py',626),
  ('cyParamCall -> , expresion cyParamCall','cyParamCall',3,'p_cyParamCall','CT.py',631),
  ('cyParamCall -> empty','cyParamCall',1,'p_cyParamCall','CT.py',632),
  ('struct -> structType [ CTED ] optionalMatrix','struct',5,'p_struct','CT.py',637),
  ('structType -> type','structType',1,'p_structType','CT.py',642),
  ('structType -> DICT dict','structType',2,'p_structType','CT.py',643),
  ('optionalMatrix -> [ CTED ]','optionalMatrix',3,'p_optionalMatrix','CT.py',648),
  ('optionalMatrix -> empty','optionalMatrix',1,'p_optionalMatrix','CT.py',649),
  ('condition -> errorCondition IF ( expresion ) { body } optionalElse','condition',9,'p_condition','CT.py',654),
  ('errorCondition -> <empty>','errorCondition',0,'p_errorCondition','CT.py',659),
  ('optionalElse -> errorElse ELSE { body }','optionalElse',5,'p_optionalElse','CT.py',665),
  ('optionalElse -> empty','optionalElse',1,'p_optionalElse','CT.py',666),
  ('errorElse -> <empty>','errorElse',0,'p_errorElse','CT.py',671),
  ('dict -> errorDict ( type : type )','dict',6,'p_dict','CT.py',677),
  ('errorDict -> <empty>','errorDict',0,'p_errorDict','CT.py',682),
  ('expresion -> sExp cyExpresion errorExpresion','expresion',3,'p_expresion','CT.py',688),
  ('errorExpresion -> <empty>','errorExpresion',0,'p_errorExpresion','CT.py',693),
  ('cyExpresion -> AND expresion','cyExpresion',2,'p_cyExpresion','CT.py',699),
  ('cyExpresion -> OR expresion','cyExpresion',2,'p_cyExpresion','CT.py',700),
  ('cyExpresion -> empty','cyExpresion',1,'p_cyExpresion','CT.py',701),
  ('sExp -> exp errorOpSExp opSExp','sExp',3,'p_sExp','CT.py',706),
  ('opSExp -> prueba EQ exp','opSExp',3,'p_opSExp','CT.py',711),
  ('opSExp -> prueba DIF exp','opSExp',3,'p_opSExp','CT.py',712),
  ('opSExp -> prueba LTOEQ exp','opSExp',3,'p_opSExp','CT.py',713),
  ('opSExp -> prueba GTOEQ exp','opSExp',3,'p_opSExp','CT.py',714),
  ('opSExp -> prueba GT exp','opSExp',3,'p_opSExp','CT.py',715),
  ('opSExp -> prueba LT exp','opSExp',3,'p_opSExp','CT.py',716),
  ('opSExp -> empty','opSExp',1,'p_opSExp','CT.py',717),
  ('prueba -> <empty>','prueba',0,'p_prueba','CT.py',721),
  ('errorOpSExp -> <empty>','errorOpSExp',0,'p_errorOpSExp','CT.py',727),
  ('exp -> term errorCyExp cyExp','exp',3,'p_exp','CT.py',733),
  ('cyExp -> PLUS term','cyExp',2,'p_cyExp','CT.py',738),
  ('cyExp -> MINUS term','cyExp',2,'p_cyExp','CT.py',739),
  ('cyExp -> empty','cyExp',1,'p_cyExp','CT.py',740),
  ('errorCyExp -> <empty>','errorCyExp',0,'p_errorCyExp','CT.py',745),
  ('term -> fact cyTerm','term',2,'p_term','CT.py',751),
  ('cyTerm -> MULT errorFact fact','cyTerm',3,'p_cyTerm','CT.py',756),
  ('cyTerm -> DIV fact','cyTerm',2,'p_cyTerm','CT.py',757),
  ('cyTerm -> empty','cyTerm',1,'p_cyTerm','CT.py',758),
  ('fact -> CTES','fact',1,'p_fact','CT.py',763),
  ('fact -> cte','fact',1,'p_fact','CT.py',764),
  ('fact -> funcCall','fact',1,'p_fact','CT.py',765),
  ('fact -> ( expresion )','fact',3,'p_fact','CT.py',766),
  ('fact -> ID opAccess errorOpAccess','fact',3,'p_fact','CT.py',767),
  ('errorFact -> <empty>','errorFact',0,'p_errorFact','CT.py',772),
  ('opAccess -> opStruct','opAccess',1,'p_opAccess','CT.py',778),
  ('opAccess -> opDictionary','opAccess',1,'p_opAccess','CT.py',779),
  ('opAccess -> empty','opAccess',1,'p_opAccess','CT.py',780),
  ('errorOpAccess -> <empty>','errorOpAccess',0,'p_errorOpAccess','CT.py',785),
  ('opStruct -> errorOpStruct [ expresion ] opMatrix','opStruct',5,'p_opStruct','CT.py',791),
  ('errorOpStruct -> <empty>','errorOpStruct',0,'p_errorOpStruct','CT.py',796),
  ('opMatrix -> errorOpMatrix [ expresion ]','opMatrix',4,'p_opMatrix','CT.py',802),
  ('opMatrix -> empty','opMatrix',1,'p_opMatrix','CT.py',803),
  ('errorOpMatrix -> <empty>','errorOpMatrix',0,'p_errorOpMatrix','CT.py',808),
  ('opDictionary -> . dictIndex','opDictionary',2,'p_opDictionary','CT.py',814),
  ('dictIndex -> FIRST','dictIndex',1,'p_dictIndex','CT.py',819),
  ('dictIndex -> LAST','dictIndex',1,'p_dictIndex','CT.py',820),
  ('cte -> CTED','cte',1,'p_cte','CT.py',825),
  ('cte -> CTEF','cte',1,'p_cte','CT.py',826),
  ('cte -> TRUE','cte',1,'p_cte','CT.py',827),
  ('cte -> FALSE','cte',1,'p_cte','CT.py',828),
  ('empty -> <empty>','empty',0,'p_empty','CT.py',833),
  ('printTables -> <empty>','printTables',0,'p_printTables','CT.py',838),
]
