
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'B0CA99997787632569EDE3CD67356C3D'
    
_lr_action_items = {'RETURN':([8,11,18,21,23,24,59,61,68,69,70,72,75,78,82,83,84,86,87,88,100,106,108,257,264,267,273,274,276,281,286,287,290,],[-6,-7,-28,-27,-26,-10,-149,-149,-65,-67,-68,-63,-70,-149,-149,-74,-73,-69,-22,-23,-61,-72,-21,-75,-149,-149,-97,-100,-149,-51,289,-77,-99,]),'VARS':([7,10,53,180,267,],[-12,13,-12,-12,-12,]),'DIF':([122,126,127,129,130,131,132,133,134,135,136,150,157,158,159,161,165,166,169,170,173,175,184,189,190,191,192,194,197,207,211,212,223,224,231,246,260,261,283,],[-147,-145,-149,-127,-122,-148,-129,-128,-146,-117,-149,-87,-133,-136,-135,-134,-149,199,-123,-126,-149,-129,-130,-131,-143,-144,-142,-118,-121,-125,-149,-128,-119,-120,-124,-149,-137,-140,-139,]),'WHILE':([8,11,18,21,23,24,53,59,61,63,68,69,70,72,74,78,82,83,84,85,87,88,100,108,180,217,219,237,257,264,267,273,274,276,277,284,287,290,],[-6,-7,-28,-27,-26,-10,-149,-149,-149,-71,-65,-67,-68,-63,-76,-149,-71,-74,-73,107,-22,-23,-61,-21,-149,-71,-71,-71,-75,-149,-149,-97,-100,-71,-71,-71,-77,-99,]),'PROGRAM':([0,2,],[-5,3,]),'TRUE':([110,119,123,137,141,142,152,154,163,167,168,172,183,188,195,196,198,199,200,201,202,203,206,232,235,251,269,289,],[122,122,122,122,122,122,122,122,122,-132,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'LAST':([160,],[191,]),')':([29,30,32,39,56,76,95,97,98,99,101,110,113,116,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,143,147,150,151,153,155,157,158,159,161,162,164,165,166,169,170,171,173,174,175,177,178,184,185,186,187,189,190,191,192,193,194,197,204,205,207,208,211,212,215,222,223,224,225,226,227,228,229,230,231,233,238,240,246,247,248,249,250,254,258,260,261,262,265,270,280,283,],[-14,-15,-16,-13,-44,-149,-55,115,-53,-149,117,-149,-56,-43,150,-147,-149,-89,-145,-149,-149,-127,-122,-148,-129,-128,-146,-117,-149,-82,-79,-81,-52,182,-87,184,-105,-108,-133,-136,-135,-134,-88,-91,-149,-149,-123,-126,-30,-149,-31,-32,214,-149,-130,-106,-104,-107,-131,-143,-144,-142,-149,-118,-121,-116,-109,-125,-29,-149,-128,-149,-90,-119,-120,-110,-111,-113,-114,-112,-115,-124,-35,-11,-39,-149,262,-36,-37,-83,-45,268,-137,-140,-34,-42,-33,-41,-139,]),'(':([41,45,47,51,54,64,91,107,109,110,112,119,123,127,137,141,142,152,154,163,167,168,172,173,183,188,195,196,198,199,200,201,202,203,206,211,235,251,269,289,],[-103,-4,58,-103,-54,76,110,119,120,123,142,123,123,110,172,123,123,123,123,123,-132,123,123,110,123,123,123,123,123,123,123,123,123,123,123,110,123,123,123,123,]),'+':([122,126,127,129,130,131,132,133,134,136,150,157,158,159,161,165,169,170,173,175,184,189,190,191,192,207,211,212,231,246,260,261,283,],[-147,-145,-149,-127,-122,-148,-129,-128,-146,-149,-87,-133,-136,-135,-134,195,-123,-126,-149,-129,-130,-131,-143,-144,-142,-125,-149,-128,-124,-149,-137,-140,-139,]),'*':([122,126,127,129,131,132,133,134,136,150,157,158,159,161,173,175,184,189,190,191,192,211,212,246,260,261,283,],[-147,-145,-149,-127,-148,-129,-128,-146,167,-87,-133,-136,-135,-134,-149,-129,-130,-131,-143,-144,-142,-149,-128,-149,-137,-140,-139,]),'-':([122,126,127,129,130,131,132,133,134,136,150,157,158,159,161,165,169,170,173,175,184,189,190,191,192,207,211,212,231,246,260,261,283,],[-147,-145,-149,-127,-122,-148,-129,-128,-146,-149,-87,-133,-136,-135,-134,196,-123,-126,-149,-129,-130,-131,-143,-144,-142,-125,-149,-128,-124,-149,-137,-140,-139,]),',':([46,99,122,124,126,127,128,129,130,131,132,133,134,135,136,150,153,155,157,158,159,161,165,166,169,170,178,184,185,186,187,189,190,191,192,193,194,197,204,205,207,223,224,225,226,227,228,229,230,231,246,260,261,283,],[55,55,-147,-149,-145,-149,163,-127,-122,-148,-129,-128,-146,-117,-149,-87,-105,-108,-133,-136,-135,-134,-149,-149,-123,-126,55,-130,-106,-104,-107,-131,-143,-144,-142,163,-118,-121,-116,-109,-125,-119,-120,-110,-111,-113,-114,-112,-115,-124,-149,-137,-140,-139,]),'/':([122,126,127,129,131,132,133,134,136,150,157,158,159,161,173,175,184,189,190,191,192,211,212,246,260,261,283,],[-147,-145,-149,-127,-148,-129,-128,-146,168,-87,-133,-136,-135,-134,-149,-129,-130,-131,-143,-144,-142,-149,-128,-149,-137,-140,-139,]),'.':([127,173,211,],[160,160,160,]),'FIRST':([160,],[190,]),'BOOL':([13,19,42,58,59,61,76,78,79,96,216,275,],[-3,32,32,32,-3,-3,-3,-3,32,32,32,-3,]),';':([46,48,50,56,57,66,80,89,92,94,99,102,104,116,117,122,124,126,127,129,130,131,132,133,134,135,136,138,139,140,146,149,150,153,155,157,158,159,161,165,166,169,170,171,173,174,175,178,184,185,186,187,189,190,191,192,194,197,204,205,207,208,215,220,223,224,225,226,227,228,229,230,231,239,246,250,255,260,261,262,266,270,283,291,],[-149,59,61,-44,-11,78,-149,108,-25,-24,-149,-92,-96,-43,-102,-147,-149,-145,-149,-127,-122,-148,-129,-128,-146,-117,-149,-82,-79,-81,-95,183,-87,-105,-108,-133,-136,-135,-134,-149,-149,-123,-126,-30,-149,-31,-32,-149,-130,-106,-104,-107,-131,-143,-144,-142,-118,-121,-116,-109,-125,-29,-46,245,-119,-120,-110,-111,-113,-114,-112,-115,-124,-11,-149,-83,-45,-137,-140,-34,275,-33,-139,292,]),':':([29,30,32,39,67,122,126,131,134,209,211,212,233,],[-14,-15,-16,-13,79,-147,-145,-148,-146,232,-37,-36,-35,]),'=':([91,111,148,213,234,236,263,271,],[-80,137,-80,-149,251,-85,-86,-84,]),'<':([122,126,127,129,130,131,132,133,134,135,136,150,157,158,159,161,165,166,169,170,173,175,184,189,190,191,192,194,197,207,211,212,223,224,231,246,260,261,283,],[-147,-145,-149,-127,-122,-148,-129,-128,-146,-117,-149,-87,-133,-136,-135,-134,-149,203,-123,-126,-149,-129,-130,-131,-143,-144,-142,-118,-121,-125,-149,-128,-119,-120,-124,-149,-137,-140,-139,]),'$end':([1,36,43,],[0,-150,-1,]),'STRING':([13,19,42,58,59,61,76,78,79,96,216,275,],[-3,30,30,30,-3,-3,-3,-3,30,30,30,-3,]),'FOR':([8,11,18,21,23,24,53,59,61,63,68,69,70,72,74,78,82,83,84,87,88,90,100,108,180,217,219,237,257,264,267,273,274,276,277,284,287,290,],[-6,-7,-28,-27,-26,-10,-149,-149,-149,-71,-65,-67,-68,-63,-78,-149,-71,-74,-73,-22,-23,109,-61,-21,-149,-71,-71,-71,-75,-149,-149,-97,-100,-71,-71,-71,-77,-99,]),'ELSE':([264,272,],[-101,279,]),'>':([122,126,127,129,130,131,132,133,134,135,136,150,157,158,159,161,165,166,169,170,173,175,184,189,190,191,192,194,197,207,211,212,223,224,231,246,260,261,283,],[-147,-145,-149,-127,-122,-148,-129,-128,-146,-117,-149,-87,-133,-136,-135,-134,-149,201,-123,-126,-149,-129,-130,-131,-143,-144,-142,-118,-121,-125,-149,-128,-119,-120,-124,-149,-137,-140,-139,]),'RETURNS':([115,145,179,],[-54,-60,216,]),'FUNC':([7,8,9,11,12,16,17,18,21,23,24,59,61,68,69,70,72,78,100,218,243,],[-149,-6,-2,-7,-48,-48,28,-28,-27,-26,-10,-149,-149,-65,-67,-68,-63,-149,-61,-49,-47,]),'[':([29,30,32,39,49,52,62,80,91,111,117,127,148,156,173,211,213,246,259,],[-14,-15,-16,-13,60,-93,-94,103,-80,141,-102,-138,-80,188,-138,-138,235,-141,269,]),']':([71,118,122,124,126,127,129,130,131,132,133,134,135,136,150,153,155,157,158,159,161,165,166,169,170,176,184,185,186,187,189,190,191,192,194,197,204,205,207,221,223,224,225,226,227,228,229,230,231,246,252,260,261,278,283,],[80,146,-147,-149,-145,-149,-127,-122,-148,-129,-128,-146,-117,-149,-87,-105,-108,-133,-136,-135,-134,-149,-149,-123,-126,213,-130,-106,-104,-107,-131,-143,-144,-142,-118,-121,-116,-109,-125,246,-119,-120,-110,-111,-113,-114,-112,-115,-124,-149,263,-137,-140,283,-139,]),'ID':([3,4,8,11,18,21,23,24,28,29,30,32,33,34,35,38,39,40,53,55,59,61,63,65,68,69,70,72,74,77,78,82,83,84,87,88,100,108,110,114,119,120,123,137,141,142,144,152,154,163,167,168,172,180,183,188,195,196,198,199,200,201,202,203,206,217,219,232,235,237,245,251,257,264,267,269,273,274,276,277,284,287,289,290,],[-3,5,-6,-7,-28,-27,-26,-10,-3,-14,-15,-16,-62,41,42,45,-13,46,-149,-11,-149,-149,-71,-45,-65,-67,-68,-63,91,99,-149,-71,-74,-73,-22,-23,-61,-21,127,-40,127,148,127,173,127,127,178,127,127,127,-132,127,211,-149,127,127,127,127,127,127,127,127,127,127,127,-71,-71,249,127,-71,148,173,-75,-149,-149,127,-97,-100,-71,-71,-71,-77,127,-99,]),'IF':([8,11,18,21,23,24,53,59,61,63,68,69,70,72,74,78,82,83,84,87,88,93,100,108,180,217,219,237,257,264,267,273,274,276,277,284,287,290,],[-6,-7,-28,-27,-26,-10,-149,-149,-149,-71,-65,-67,-68,-63,-98,-149,-71,-74,-73,-22,-23,112,-61,-21,-149,-71,-71,-71,-75,-149,-149,-97,-100,-71,-71,-71,-77,-99,]),'AND':([122,124,126,127,129,130,131,132,133,134,135,136,150,157,158,159,161,165,166,169,170,173,175,184,189,190,191,192,194,197,204,205,207,211,212,223,224,225,226,227,228,229,230,231,246,260,261,283,],[-147,152,-145,-149,-127,-122,-148,-129,-128,-146,-117,-149,-87,-133,-136,-135,-134,-149,-149,-123,-126,-149,-129,-130,-131,-143,-144,-142,-118,-121,-116,-109,-125,-149,-128,-119,-120,-110,-111,-113,-114,-112,-115,-124,-149,-137,-140,-139,]),'CTES':([110,119,123,137,141,142,152,154,163,167,168,172,183,188,195,196,198,199,200,201,202,203,206,210,232,235,251,269,289,],[129,129,129,129,129,129,129,129,129,-132,129,129,129,129,129,129,129,129,129,129,129,129,129,233,-38,129,129,129,129,]),'LTOEQ':([122,126,127,129,130,131,132,133,134,135,136,150,157,158,159,161,165,166,169,170,173,175,184,189,190,191,192,194,197,207,211,212,223,224,231,246,260,261,283,],[-147,-145,-149,-127,-122,-148,-129,-128,-146,-117,-149,-87,-133,-136,-135,-134,-149,202,-123,-126,-149,-129,-130,-131,-143,-144,-142,-118,-121,-125,-149,-128,-119,-120,-124,-149,-137,-140,-139,]),'FALSE':([110,119,123,137,141,142,152,154,163,167,168,172,183,188,195,196,198,199,200,201,202,203,206,232,235,251,269,289,],[131,131,131,131,131,131,131,131,131,-132,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'STRUCT':([13,22,59,61,78,],[-64,35,-64,-64,-64,]),'INT':([13,19,31,42,58,59,61,76,78,79,96,216,275,],[-3,-17,39,-17,-17,-3,-3,-3,-3,-17,-17,-17,-3,]),'EQ':([122,126,127,129,130,131,132,133,134,135,136,150,157,158,159,161,165,166,169,170,173,175,184,189,190,191,192,194,197,207,211,212,223,224,231,246,260,261,283,],[-147,-145,-149,-127,-122,-148,-129,-128,-146,-117,-149,-87,-133,-136,-135,-134,-149,198,-123,-126,-149,-129,-130,-131,-143,-144,-142,-118,-121,-125,-149,-128,-119,-120,-124,-149,-137,-140,-139,]),'FLOAT':([13,19,42,58,59,61,76,78,79,96,216,275,],[-3,29,29,29,-3,-3,-3,-3,29,29,29,-3,]),'OR':([122,124,126,127,129,130,131,132,133,134,135,136,150,157,158,159,161,165,166,169,170,173,175,184,189,190,191,192,194,197,204,205,207,211,212,223,224,225,226,227,228,229,230,231,246,260,261,283,],[-147,154,-145,-149,-127,-122,-148,-129,-128,-146,-117,-149,-87,-133,-136,-135,-134,-149,-149,-123,-126,-149,-129,-130,-131,-143,-144,-142,-118,-121,-116,-109,-125,-149,-128,-119,-120,-110,-111,-113,-114,-112,-115,-124,-149,-137,-140,-139,]),'DICT':([13,20,42,59,61,78,],[-66,34,51,-66,-66,-66,]),'CTED':([60,103,110,119,123,137,141,142,152,154,163,167,168,172,183,188,195,196,198,199,200,201,202,203,206,232,235,251,269,289,],[71,118,126,126,126,126,126,126,126,126,126,-132,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'GTOEQ':([122,126,127,129,130,131,132,133,134,135,136,150,157,158,159,161,165,166,169,170,173,175,184,189,190,191,192,194,197,207,211,212,223,224,231,246,260,261,283,],[-147,-145,-149,-127,-122,-148,-129,-128,-146,-117,-149,-87,-133,-136,-135,-134,-149,200,-123,-126,-149,-129,-130,-131,-143,-144,-142,-118,-121,-125,-149,-128,-119,-120,-124,-149,-137,-140,-139,]),'{':([5,6,29,30,32,37,39,44,115,145,182,214,241,256,268,279,],[-4,7,-14,-15,-16,-19,-13,53,-54,180,219,237,-59,267,277,284,]),'MAIN':([7,8,9,11,12,14,15,16,18,21,23,24,26,27,59,61,68,69,70,72,78,100,218,243,],[-149,-6,-2,-7,-149,-20,-9,-149,-28,-27,-26,-10,37,-8,-149,-149,-65,-67,-68,-63,-149,-61,-49,-47,]),'}':([8,11,18,21,23,24,25,53,59,61,63,68,69,70,72,73,75,78,81,82,83,84,86,87,88,100,105,106,108,180,181,217,219,237,242,244,253,257,264,273,274,277,282,284,285,287,288,290,292,],[-6,-7,-28,-27,-26,-10,36,-149,-149,-149,-149,-65,-67,-68,-63,81,-70,-149,-49,-149,-74,-73,-69,-22,-23,-61,-18,-72,-21,-149,218,-149,-149,-149,-58,257,264,-75,-149,-97,-100,-149,287,-149,-57,-77,290,-99,-50,]),'CTEF':([110,119,123,137,141,142,152,154,163,167,168,172,183,188,195,196,198,199,200,201,202,203,206,232,235,251,269,289,],[134,134,134,134,134,134,134,134,134,-132,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vars':([7,53,180,267,],[8,8,8,8,]),'errorOpSExp':([135,],[166,]),'errorMain':([14,],[26,]),'errorCyExp':([130,],[165,]),'opParamCall':([110,],[121,]),'cyTypeParam':([46,99,178,],[57,116,215,]),'forCycle':([74,],[84,]),'structType':([42,],[49,]),'changeCurrentScope':([9,],[12,]),'struct':([42,],[50,]),'param':([76,275,],[95,280,]),'init':([111,234,],[140,250,]),'program':([0,],[1,]),'dict':([41,51,],[48,62,]),'opMatrix':([246,],[260,]),'errorExpresion':([153,],[186,]),'main':([14,],[25,]),'return':([281,],[285,]),'errorParam':([114,],[144,]),'errorElse':([264,],[272,]),'errorReturn':([281,],[286,]),'assignOptions':([111,],[139,]),'flagParameters':([54,115,],[64,145,]),'basicDeclare':([13,59,61,78,],[23,23,23,23,]),'cyInstruction':([74,],[86,]),'condition':([74,],[87,]),'expresion':([110,119,123,137,141,142,152,154,163,172,183,188,235,251,269,289,],[128,147,151,174,176,177,185,187,193,151,220,221,252,174,278,291,]),'term':([110,119,123,137,141,142,152,154,163,172,183,188,195,196,198,199,200,201,202,203,235,251,269,289,],[130,130,130,130,130,130,130,130,130,130,130,130,223,224,130,130,130,130,130,130,130,130,130,130,]),'funcCall':([74,110,119,123,137,141,142,152,154,163,168,172,183,188,195,196,198,199,200,201,202,203,206,235,251,269,289,],[92,132,132,132,175,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,175,132,132,]),'initDict':([111,],[138,]),'saveTypeParam':([65,254,255,],[77,265,266,]),'dictDeclare':([13,59,61,78,],[18,18,18,18,]),'saveMain':([37,],[44,]),'errorVars':([7,53,180,267,],[10,10,10,10,]),'whileCycle':([74,],[83,]),'errorDictDeclare':([13,59,61,78,],[20,20,20,20,]),'opFunctions':([12,16,],[14,27,]),'errorOpStruct':([127,173,211,],[156,156,156,]),'opVars':([7,53,180,267,],[9,63,217,276,]),'errorInit':([171,],[208,]),'cyExpresion':([124,],[153,]),'body':([63,82,217,219,237,276,277,284,],[73,106,242,244,253,281,282,288,]),'errorOpParameters':([113,],[143,]),'printTables':([36,],[43,]),'saveParamToDirProc':([95,],[113,]),'saveReturnType':([241,],[256,]),'opParameters':([76,],[97,]),'errorCondition':([74,],[93,]),'cte':([110,119,123,137,141,142,152,154,163,168,172,183,188,195,196,198,199,200,201,202,203,206,232,235,251,269,289,],[133,133,133,133,133,133,133,133,133,133,212,133,133,133,133,133,133,133,133,133,133,133,248,133,133,133,133,]),'saveProc':([5,45,],[6,54,]),'assign':([74,120,245,],[94,149,258,]),'errorStructDeclare':([13,59,61,78,],[22,22,22,22,]),'cyExp':([165,],[194,]),'instr':([74,],[82,]),'errorFact':([167,],[206,]),'errorProgram':([0,],[2,]),'cyTerm':([136,],[169,]),'errorAssignMatrix':([263,],[271,]),'cyDeclare':([59,61,78,],[68,72,100,]),'errorBody':([63,82,217,219,237,276,277,284,],[74,74,74,74,74,74,74,74,]),'opStruct':([127,173,211,],[157,157,157,]),'errorOpAccess':([158,],[189,]),'type':([19,42,58,79,96,216,],[33,52,67,101,114,241,]),'dictIndex':([160,],[192,]),'empty':([7,12,16,46,53,59,61,63,76,78,80,82,99,110,124,127,128,136,165,166,173,178,180,193,211,213,215,217,219,237,246,264,267,276,277,284,],[11,15,15,56,11,70,70,75,98,70,104,75,56,125,155,159,164,170,197,204,159,56,11,164,159,236,238,75,75,75,261,274,11,75,75,75,]),'errorBasicDeclare':([33,],[40,]),'function':([12,16,],[16,16,]),'errorOpMatrix':([246,],[259,]),'opDictionary':([127,173,211,],[161,161,161,]),'errorType':([19,42,58,79,96,216,],[31,31,31,31,31,31,]),'errorForCycle':([74,],[90,]),'opAccess':([127,173,211,],[158,158,158,]),'basicStatements':([74,],[89,]),'structDeclare':([13,59,61,78,],[21,21,21,21,]),'errorAssign':([91,148,],[111,111,]),'cyParam':([215,],[240,]),'opSExp':([166,],[205,]),'errorOpReturns':([145,],[179,]),'cyParamCall':([128,193,],[162,222,]),'declare':([13,59,61,78,],[24,69,69,69,]),'optionalMatrix':([80,],[102,]),'clearVarsTable':([81,218,],[105,243,]),'optionalElse':([264,],[273,]),'dictType':([172,232,],[209,247,]),'initWith':([137,251,],[171,171,]),'errorWhileCycle':([74,],[85,]),'sExp':([110,119,123,137,141,142,152,154,163,172,183,188,235,251,269,289,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'errorCyParam':([215,],[239,]),'opReturns':([145,],[181,]),'errorDictType':([172,232,],[210,210,]),'assignMatrix':([213,],[234,]),'errorDict':([41,51,],[47,47,]),'errorInitDict':([262,],[270,]),'saveType':([3,13,28,59,61,76,78,275,],[4,19,38,19,19,96,19,96,]),'saveID':([55,57,238,239,],[65,66,254,255,]),'cycle':([74,],[88,]),'errorFunction':([12,16,],[17,17,]),'exp':([110,119,123,137,141,142,152,154,163,172,183,188,198,199,200,201,202,203,235,251,269,289,],[135,135,135,135,135,135,135,135,135,135,135,135,225,226,227,228,229,230,135,135,135,135,]),'fact':([110,119,123,137,141,142,152,154,163,168,172,183,188,195,196,198,199,200,201,202,203,206,235,251,269,289,],[136,136,136,136,136,136,136,136,136,207,136,136,136,136,136,136,136,136,136,136,136,231,136,136,136,136,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables','program',12,'p_program','CT.py',122),
  ('changeCurrentScope -> <empty>','changeCurrentScope',0,'p_changeCurrentScope','CT.py',126),
  ('saveType -> <empty>','saveType',0,'p_saveType','CT.py',131),
  ('saveProc -> <empty>','saveProc',0,'p_saveProc','CT.py',138),
  ('errorProgram -> <empty>','errorProgram',0,'p_errorProgram','CT.py',155),
  ('opVars -> vars','opVars',1,'p_opVars','CT.py',161),
  ('opVars -> empty','opVars',1,'p_opVars','CT.py',162),
  ('opFunctions -> function opFunctions','opFunctions',2,'p_opFunctions','CT.py',167),
  ('opFunctions -> empty','opFunctions',1,'p_opFunctions','CT.py',168),
  ('vars -> errorVars VARS declare','vars',3,'p_vars','CT.py',172),
  ('saveID -> <empty>','saveID',0,'p_saveID','CT.py',177),
  ('errorVars -> <empty>','errorVars',0,'p_errorVars','CT.py',206),
  ('type -> errorType INT','type',2,'p_type','CT.py',212),
  ('type -> FLOAT','type',1,'p_type','CT.py',213),
  ('type -> STRING','type',1,'p_type','CT.py',214),
  ('type -> BOOL','type',1,'p_type','CT.py',215),
  ('errorType -> <empty>','errorType',0,'p_errorType','CT.py',220),
  ('main -> errorMain MAIN saveMain { opVars body } clearVarsTable','main',8,'p_main','CT.py',226),
  ('saveMain -> <empty>','saveMain',0,'p_saveMain','CT.py',230),
  ('errorMain -> <empty>','errorMain',0,'p_errorMain','CT.py',238),
  ('instr -> basicStatements ;','instr',2,'p_instr','CT.py',244),
  ('instr -> condition','instr',1,'p_instr','CT.py',245),
  ('instr -> cycle','instr',1,'p_instr','CT.py',246),
  ('basicStatements -> assign','basicStatements',1,'p_basicStatements','CT.py',250),
  ('basicStatements -> funcCall','basicStatements',1,'p_basicStatements','CT.py',251),
  ('declare -> basicDeclare','declare',1,'p_declare','CT.py',255),
  ('declare -> structDeclare','declare',1,'p_declare','CT.py',256),
  ('declare -> dictDeclare','declare',1,'p_declare','CT.py',257),
  ('init -> = initWith errorInit','init',3,'p_init','CT.py',262),
  ('errorInit -> <empty>','errorInit',0,'p_errorInit','CT.py',267),
  ('initWith -> expresion','initWith',1,'p_initWith','CT.py',273),
  ('initWith -> funcCall','initWith',1,'p_initWith','CT.py',274),
  ('initDict -> = ( dictType : dictType ) errorInitDict','initDict',7,'p_initDict','CT.py',279),
  ('errorInitDict -> <empty>','errorInitDict',0,'p_errorInitDict','CT.py',284),
  ('dictType -> errorDictType CTES','dictType',2,'p_dictType','CT.py',290),
  ('dictType -> cte','dictType',1,'p_dictType','CT.py',291),
  ('dictType -> ID','dictType',1,'p_dictType','CT.py',292),
  ('errorDictType -> <empty>','errorDictType',0,'p_errorDictType','CT.py',297),
  ('param -> saveType type errorParam ID cyTypeParam cyParam','param',6,'p_param','CT.py',303),
  ('errorParam -> <empty>','errorParam',0,'p_errorParam','CT.py',308),
  ('cyParam -> errorCyParam saveID saveTypeParam ; param','cyParam',5,'p_cyParam','CT.py',314),
  ('cyParam -> empty saveID saveTypeParam','cyParam',3,'p_cyParam','CT.py',315),
  ('cyTypeParam -> , saveID saveTypeParam ID cyTypeParam','cyTypeParam',5,'p_cyTypeParam','CT.py',320),
  ('cyTypeParam -> empty','cyTypeParam',1,'p_cyTypeParam','CT.py',321),
  ('saveTypeParam -> <empty>','saveTypeParam',0,'p_saveTypeParam','CT.py',325),
  ('errorCyParam -> <empty>','errorCyParam',0,'p_errorCyParam','CT.py',334),
  ('function -> errorFunction FUNC saveType ID saveProc flagParameters ( opParameters ) flagParameters opReturns } clearVarsTable','function',13,'p_function','CT.py',340),
  ('errorFunction -> <empty>','errorFunction',0,'p_errorFunction','CT.py',344),
  ('clearVarsTable -> <empty>','clearVarsTable',0,'p_clearVarsTable','CT.py',349),
  ('return -> errorReturn RETURN expresion ;','return',4,'p_return','CT.py',360),
  ('errorReturn -> <empty>','errorReturn',0,'p_errorReturn','CT.py',365),
  ('opParameters -> param saveParamToDirProc errorOpParameters','opParameters',3,'p_opParameters','CT.py',371),
  ('opParameters -> empty','opParameters',1,'p_opParameters','CT.py',372),
  ('flagParameters -> <empty>','flagParameters',0,'p_flagParameters','CT.py',376),
  ('saveParamToDirProc -> <empty>','saveParamToDirProc',0,'p_saveParamToDirProc','CT.py',381),
  ('errorOpParameters -> <empty>','errorOpParameters',0,'p_errorOpParameters','CT.py',389),
  ('opReturns -> errorOpReturns RETURNS type saveReturnType { opVars body return','opReturns',8,'p_opReturns','CT.py',395),
  ('opReturns -> { opVars body','opReturns',3,'p_opReturns','CT.py',396),
  ('saveReturnType -> <empty>','saveReturnType',0,'p_saveReturnType','CT.py',401),
  ('errorOpReturns -> <empty>','errorOpReturns',0,'p_errorOpReturns','CT.py',407),
  ('basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare','basicDeclare',8,'p_basicDeclare','CT.py',413),
  ('errorBasicDeclare -> <empty>','errorBasicDeclare',0,'p_errorBasicDeclare','CT.py',418),
  ('structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare','structDeclare',6,'p_structDeclare','CT.py',424),
  ('errorStructDeclare -> <empty>','errorStructDeclare',0,'p_errorStructDeclare','CT.py',429),
  ('dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare','dictDeclare',6,'p_dictDeclare','CT.py',435),
  ('errorDictDeclare -> <empty>','errorDictDeclare',0,'p_errorDictDeclare','CT.py',440),
  ('cyDeclare -> declare','cyDeclare',1,'p_cyDeclare','CT.py',446),
  ('cyDeclare -> empty','cyDeclare',1,'p_cyDeclare','CT.py',447),
  ('body -> errorBody cyInstruction','body',2,'p_body','CT.py',452),
  ('body -> empty','body',1,'p_body','CT.py',453),
  ('errorBody -> <empty>','errorBody',0,'p_errorBody','CT.py',458),
  ('cyInstruction -> instr body','cyInstruction',2,'p_cyInstruction','CT.py',464),
  ('cycle -> forCycle','cycle',1,'p_cycle','CT.py',469),
  ('cycle -> whileCycle','cycle',1,'p_cycle','CT.py',470),
  ('whileCycle -> errorWhileCycle WHILE ( expresion ) { body }','whileCycle',8,'p_whileCycle','CT.py',475),
  ('errorWhileCycle -> <empty>','errorWhileCycle',0,'p_errorWhileCycle','CT.py',480),
  ('forCycle -> errorForCycle FOR ( assign ; expresion ; assign ) { body }','forCycle',12,'p_forCycle','CT.py',486),
  ('errorForCycle -> <empty>','errorForCycle',0,'p_errorForCycle','CT.py',491),
  ('assign -> ID errorAssign assignOptions','assign',3,'p_assign','CT.py',497),
  ('errorAssign -> <empty>','errorAssign',0,'p_errorAssign','CT.py',502),
  ('assignOptions -> init','assignOptions',1,'p_assignOptions','CT.py',508),
  ('assignOptions -> initDict','assignOptions',1,'p_assignOptions','CT.py',509),
  ('assignOptions -> [ expresion ] assignMatrix init','assignOptions',5,'p_assignOptions','CT.py',510),
  ('assignMatrix -> [ expresion ] errorAssignMatrix','assignMatrix',4,'p_assignMatrix','CT.py',515),
  ('assignMatrix -> empty','assignMatrix',1,'p_assignMatrix','CT.py',516),
  ('errorAssignMatrix -> <empty>','errorAssignMatrix',0,'p_errorAssignMatrix','CT.py',521),
  ('funcCall -> ID ( opParamCall )','funcCall',4,'p_funcCall','CT.py',527),
  ('opParamCall -> expresion cyParamCall','opParamCall',2,'p_opParamCall','CT.py',532),
  ('opParamCall -> empty','opParamCall',1,'p_opParamCall','CT.py',533),
  ('cyParamCall -> , expresion cyParamCall','cyParamCall',3,'p_cyParamCall','CT.py',538),
  ('cyParamCall -> empty','cyParamCall',1,'p_cyParamCall','CT.py',539),
  ('struct -> structType [ CTED ] optionalMatrix','struct',5,'p_struct','CT.py',544),
  ('structType -> type','structType',1,'p_structType','CT.py',549),
  ('structType -> DICT dict','structType',2,'p_structType','CT.py',550),
  ('optionalMatrix -> [ CTED ]','optionalMatrix',3,'p_optionalMatrix','CT.py',555),
  ('optionalMatrix -> empty','optionalMatrix',1,'p_optionalMatrix','CT.py',556),
  ('condition -> errorCondition IF ( expresion ) { body } optionalElse','condition',9,'p_condition','CT.py',561),
  ('errorCondition -> <empty>','errorCondition',0,'p_errorCondition','CT.py',566),
  ('optionalElse -> errorElse ELSE { body }','optionalElse',5,'p_optionalElse','CT.py',572),
  ('optionalElse -> empty','optionalElse',1,'p_optionalElse','CT.py',573),
  ('errorElse -> <empty>','errorElse',0,'p_errorElse','CT.py',578),
  ('dict -> errorDict ( type : type )','dict',6,'p_dict','CT.py',584),
  ('errorDict -> <empty>','errorDict',0,'p_errorDict','CT.py',589),
  ('expresion -> sExp cyExpresion errorExpresion','expresion',3,'p_expresion','CT.py',595),
  ('errorExpresion -> <empty>','errorExpresion',0,'p_errorExpresion','CT.py',600),
  ('cyExpresion -> AND expresion','cyExpresion',2,'p_cyExpresion','CT.py',606),
  ('cyExpresion -> OR expresion','cyExpresion',2,'p_cyExpresion','CT.py',607),
  ('cyExpresion -> empty','cyExpresion',1,'p_cyExpresion','CT.py',608),
  ('sExp -> exp errorOpSExp opSExp','sExp',3,'p_sExp','CT.py',613),
  ('opSExp -> EQ exp','opSExp',2,'p_opSExp','CT.py',618),
  ('opSExp -> DIF exp','opSExp',2,'p_opSExp','CT.py',619),
  ('opSExp -> LTOEQ exp','opSExp',2,'p_opSExp','CT.py',620),
  ('opSExp -> GTOEQ exp','opSExp',2,'p_opSExp','CT.py',621),
  ('opSExp -> > exp','opSExp',2,'p_opSExp','CT.py',622),
  ('opSExp -> < exp','opSExp',2,'p_opSExp','CT.py',623),
  ('opSExp -> empty','opSExp',1,'p_opSExp','CT.py',624),
  ('errorOpSExp -> <empty>','errorOpSExp',0,'p_errorOpSExp','CT.py',629),
  ('exp -> term errorCyExp cyExp','exp',3,'p_exp','CT.py',635),
  ('cyExp -> + term','cyExp',2,'p_cyExp','CT.py',640),
  ('cyExp -> - term','cyExp',2,'p_cyExp','CT.py',641),
  ('cyExp -> empty','cyExp',1,'p_cyExp','CT.py',642),
  ('errorCyExp -> <empty>','errorCyExp',0,'p_errorCyExp','CT.py',647),
  ('term -> fact cyTerm','term',2,'p_term','CT.py',653),
  ('cyTerm -> * errorFact fact','cyTerm',3,'p_cyTerm','CT.py',658),
  ('cyTerm -> / fact','cyTerm',2,'p_cyTerm','CT.py',659),
  ('cyTerm -> empty','cyTerm',1,'p_cyTerm','CT.py',660),
  ('fact -> CTES','fact',1,'p_fact','CT.py',665),
  ('fact -> cte','fact',1,'p_fact','CT.py',666),
  ('fact -> funcCall','fact',1,'p_fact','CT.py',667),
  ('fact -> ( expresion )','fact',3,'p_fact','CT.py',668),
  ('fact -> ID opAccess errorOpAccess','fact',3,'p_fact','CT.py',669),
  ('errorFact -> <empty>','errorFact',0,'p_errorFact','CT.py',674),
  ('opAccess -> opStruct','opAccess',1,'p_opAccess','CT.py',680),
  ('opAccess -> opDictionary','opAccess',1,'p_opAccess','CT.py',681),
  ('opAccess -> empty','opAccess',1,'p_opAccess','CT.py',682),
  ('errorOpAccess -> <empty>','errorOpAccess',0,'p_errorOpAccess','CT.py',687),
  ('opStruct -> errorOpStruct [ expresion ] opMatrix','opStruct',5,'p_opStruct','CT.py',693),
  ('errorOpStruct -> <empty>','errorOpStruct',0,'p_errorOpStruct','CT.py',698),
  ('opMatrix -> errorOpMatrix [ expresion ]','opMatrix',4,'p_opMatrix','CT.py',704),
  ('opMatrix -> empty','opMatrix',1,'p_opMatrix','CT.py',705),
  ('errorOpMatrix -> <empty>','errorOpMatrix',0,'p_errorOpMatrix','CT.py',710),
  ('opDictionary -> . dictIndex','opDictionary',2,'p_opDictionary','CT.py',716),
  ('dictIndex -> FIRST','dictIndex',1,'p_dictIndex','CT.py',721),
  ('dictIndex -> LAST','dictIndex',1,'p_dictIndex','CT.py',722),
  ('cte -> CTED','cte',1,'p_cte','CT.py',727),
  ('cte -> CTEF','cte',1,'p_cte','CT.py',728),
  ('cte -> TRUE','cte',1,'p_cte','CT.py',729),
  ('cte -> FALSE','cte',1,'p_cte','CT.py',730),
  ('empty -> <empty>','empty',0,'p_empty','CT.py',735),
  ('printTables -> <empty>','printTables',0,'p_printTables','CT.py',740),
]
