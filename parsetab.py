
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'E695E7AC10AC713D91B83FD375673821'
    
_lr_action_items = {'VARS':([4,32,72,],[6,6,6,]),'CTEF':([83,86,88,91,92,99,117,133,135,138,139,140,141,142,144,148,153,154,159,160,161,164,195,197,209,212,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'DIF':([69,70,83,86,87,88,89,90,91,92,98,99,100,101,102,103,105,106,108,109,110,111,112,117,118,119,120,121,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,152,153,154,155,156,157,158,159,160,161,162,164,166,167,169,175,176,177,178,179,180,181,182,183,185,186,187,189,190,191,192,197,201,208,209,212,213,214,217,225,],[-17,-16,-106,-106,-52,-106,-50,-51,-106,-106,-104,-106,-106,-92,139,-106,-87,-106,-89,-88,-103,-102,-106,-106,-106,-22,-23,-21,-106,-67,-106,-70,-71,-106,-106,-106,-106,-106,-78,-106,-93,-91,-95,-106,-94,-79,-106,-106,-82,-105,-83,-86,-106,-106,-106,-56,-106,-106,-87,-88,-90,-68,-69,-72,-73,-75,-74,-77,-76,-100,-101,-99,-81,-80,-84,-85,-106,-106,-53,-106,-106,-98,-96,-24,-97,]),'OBJECT':([6,31,35,37,45,51,52,54,75,126,],[13,13,13,13,13,13,13,13,13,13,]),'WHILE':([7,8,14,15,16,23,32,44,51,52,54,56,57,59,61,66,72,76,77,78,79,80,93,94,188,199,215,219,223,224,226,227,230,231,],[-2,-3,-19,-18,-20,-6,-106,58,-106,-106,-106,58,-47,-46,-15,-14,-106,-38,-41,-42,-36,-37,-13,58,58,58,-48,-106,-63,-65,58,58,-49,-64,]),'PROGRAM':([0,],[2,]),'LTOEQ':([69,70,83,86,87,88,89,90,91,92,98,99,100,101,102,103,105,106,108,109,110,111,112,117,118,119,120,121,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,152,153,154,155,156,157,158,159,160,161,162,164,166,167,169,175,176,177,178,179,180,181,182,183,185,186,187,189,190,191,192,197,201,208,209,212,213,214,217,225,],[-17,-16,-106,-106,-52,-106,-50,-51,-106,-106,-104,-106,-106,-92,141,-106,-87,-106,-89,-88,-103,-102,-106,-106,-106,-22,-23,-21,-106,-67,-106,-70,-71,-106,-106,-106,-106,-106,-78,-106,-93,-91,-95,-106,-94,-79,-106,-106,-82,-105,-83,-86,-106,-106,-106,-56,-106,-106,-87,-88,-90,-68,-69,-72,-73,-75,-74,-77,-76,-100,-101,-99,-81,-80,-84,-85,-106,-106,-53,-106,-106,-98,-96,-24,-97,]),'LAST':([149,],[186,]),')':([13,17,18,19,21,41,48,53,69,70,74,83,86,87,88,89,90,92,95,96,98,99,100,101,102,103,104,105,106,108,109,110,111,112,115,116,117,118,119,120,121,123,125,127,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,152,153,154,155,156,157,158,159,160,162,163,164,165,166,167,169,173,175,176,177,178,179,180,181,182,183,185,186,187,189,190,191,192,194,201,204,205,206,207,208,209,213,214,216,217,225,],[-10,-7,-8,-9,-11,-40,73,-39,-17,-16,-106,-106,-106,-52,-106,-50,-51,-106,-106,128,-104,-106,-106,-92,-106,-106,151,-87,-106,-89,-88,-103,-102,-106,162,-106,-106,-106,-22,-23,-21,171,-28,-30,175,-106,-67,-106,-70,-71,-106,-106,-106,-106,-106,-78,-106,-93,-91,-95,-94,-79,-106,-106,-82,-105,-83,-86,-106,-106,-56,-57,-106,-59,-106,-87,-88,-29,-90,-68,-69,-72,-73,-75,-74,-77,-76,-100,-101,-99,-81,-80,-84,-85,-58,-106,-25,217,-26,-27,-53,-106,-98,-96,221,-24,-97,]),'(':([28,29,58,64,65,67,83,86,88,91,92,99,103,117,118,133,135,138,139,140,141,142,144,148,153,154,159,160,161,164,166,197,209,212,],[35,37,83,85,86,92,99,99,117,99,99,99,86,99,86,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,86,99,99,99,]),'+':([69,70,83,86,87,88,89,90,91,92,98,99,100,101,102,103,105,106,108,109,110,111,112,117,118,119,120,121,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,152,153,154,155,156,157,158,159,160,161,162,164,166,167,169,175,176,177,178,179,180,181,182,183,185,186,187,189,190,191,192,197,201,208,209,212,213,214,217,225,],[-17,-16,-106,-106,-52,-106,-50,-51,-106,-106,-104,-106,-106,-92,-106,-106,-87,154,-89,-88,-103,-102,-106,-106,-106,-22,-23,-21,-106,-67,-106,-70,-71,-106,-106,-106,-106,-106,-78,-106,-93,-91,-95,-106,-94,-79,-106,-106,-82,-105,-83,-86,-106,-106,-106,-56,-106,-106,-87,-88,-90,-68,-69,-72,-73,-75,-74,-77,-76,-100,-101,-99,-81,-80,-84,-85,-106,-106,-53,-106,-106,-98,-96,-24,-97,]),'*':([69,70,83,86,87,88,89,90,91,92,98,99,100,101,102,103,105,106,108,109,110,111,112,117,118,119,120,121,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,152,153,154,155,156,157,158,159,160,161,162,164,166,167,169,175,176,177,178,179,180,181,182,183,185,186,187,189,190,191,192,197,201,208,209,212,213,214,217,225,],[-17,-16,-106,-106,-52,-106,-50,-51,-106,-106,-104,-106,-106,-92,-106,-106,-87,-106,-89,-88,-103,-102,159,-106,-106,-22,-23,-21,-106,-67,-106,-70,-71,-106,-106,-106,-106,-106,-78,-106,-93,-91,-95,-106,-94,-79,-106,-106,-82,-105,-83,-86,-106,-106,-106,-56,-106,-106,-87,-88,-90,-68,-69,-72,-73,-75,-74,-77,-76,-100,-101,-99,-81,-80,-84,-85,-106,-106,-53,-106,-106,-98,-96,-24,-97,]),'-':([69,70,83,86,87,88,89,90,91,92,98,99,100,101,102,103,105,106,108,109,110,111,112,117,118,119,120,121,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,152,153,154,155,156,157,158,159,160,161,162,164,166,167,169,175,176,177,178,179,180,181,182,183,185,186,187,189,190,191,192,197,201,208,209,212,213,214,217,225,],[-17,-16,-106,-106,-52,-106,-50,-51,-106,-106,-104,-106,-106,-92,-106,-106,-87,153,-89,-88,-103,-102,-106,-106,-106,-22,-23,-21,-106,-67,-106,-70,-71,-106,-106,-106,-106,-106,-78,-106,-93,-91,-95,-106,-94,-79,-106,-106,-82,-105,-83,-86,-106,-106,-106,-56,-106,-106,-87,-88,-90,-68,-69,-72,-73,-75,-74,-77,-76,-100,-101,-99,-81,-80,-84,-85,-106,-106,-53,-106,-106,-98,-96,-24,-97,]),',':([30,69,70,74,86,87,88,89,90,98,100,101,102,103,105,106,108,109,110,111,112,116,118,119,120,121,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,152,153,154,155,156,157,158,159,160,162,164,175,176,177,178,179,180,181,182,183,185,186,187,189,190,191,192,201,208,209,213,214,217,225,],[40,-17,-16,40,-106,-52,-106,-50,-51,-104,-106,-92,-106,-106,-87,-106,-89,-88,-103,-102,-106,164,-106,-22,-23,-21,-106,-67,-106,-70,-71,-106,-106,-106,-106,-106,-78,-106,-93,-91,-95,-94,-79,-106,-106,-82,-105,-83,-86,-106,-106,-56,-106,-90,-68,-69,-72,-73,-75,-74,-77,-76,-100,-101,-99,-81,-80,-84,-85,-106,-53,-106,-98,-96,-24,-97,]),'/':([69,70,83,86,87,88,89,90,91,92,98,99,100,101,102,103,105,106,108,109,110,111,112,117,118,119,120,121,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,152,153,154,155,156,157,158,159,160,161,162,164,166,167,169,175,176,177,178,179,180,181,182,183,185,186,187,189,190,191,192,197,201,208,209,212,213,214,217,225,],[-17,-16,-106,-106,-52,-106,-50,-51,-106,-106,-104,-106,-106,-92,-106,-106,-87,-106,-89,-88,-103,-102,160,-106,-106,-22,-23,-21,-106,-67,-106,-70,-71,-106,-106,-106,-106,-106,-78,-106,-93,-91,-95,-106,-94,-79,-106,-106,-82,-105,-83,-86,-106,-106,-106,-56,-106,-106,-87,-88,-90,-68,-69,-72,-73,-75,-74,-77,-76,-100,-101,-99,-81,-80,-84,-85,-106,-106,-53,-106,-106,-98,-96,-24,-97,]),'.':([103,118,166,],[149,149,149,]),'FIRST':([149,],[185,]),'BOOL':([6,31,35,37,45,51,52,54,75,126,],[21,21,21,21,21,21,21,21,21,21,]),';':([30,38,39,41,42,53,68,69,70,74,87,88,89,90,95,97,98,100,101,102,103,105,106,108,109,110,111,112,114,118,119,120,121,128,129,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,152,153,154,155,156,157,158,159,160,161,162,175,176,177,178,179,180,181,182,183,185,186,187,189,190,191,192,193,200,201,208,209,213,214,217,225,],[-106,51,52,-40,54,-39,93,-17,-16,-106,-52,-106,-50,-51,126,-106,-104,-106,-92,-106,-106,-87,-106,-89,-88,-103,-102,-106,161,-106,-22,-23,-21,-66,-60,-62,-106,-67,-106,-70,-71,-106,-106,-106,-106,-106,-78,-106,-93,-91,-95,-94,-79,-106,-106,-82,-105,-83,-86,-106,-106,-106,-56,-90,-68,-69,-72,-73,-75,-74,-77,-76,-100,-101,-99,-81,-80,-84,-85,203,-61,-106,-53,-106,-98,-96,-24,-97,]),':':([13,17,18,19,21,50,69,70,87,88,89,90,98,100,101,102,103,105,106,108,109,110,111,112,118,119,120,121,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,152,153,154,155,156,157,158,159,160,162,166,167,168,169,175,176,177,178,179,180,181,182,183,185,186,187,189,190,191,192,201,208,209,213,214,217,225,],[-10,-7,-8,-9,-11,75,-17,-16,-52,-106,-50,-51,-104,-106,-92,-106,-106,-87,-106,-89,-88,-103,-102,-106,-106,-22,-23,-21,-106,-67,-106,-70,-71,-106,-106,-106,-106,-106,-78,-106,-93,-91,-95,-94,-79,-106,-106,-82,-105,-83,-86,-106,-106,-56,-27,-25,195,-26,-90,-68,-69,-72,-73,-75,-74,-77,-76,-100,-101,-99,-81,-80,-84,-85,-106,-53,-106,-98,-96,-24,-97,]),'=':([65,113,170,196,198,218,],[88,88,-106,209,-55,-54,]),'<':([69,70,83,86,87,88,89,90,91,92,98,99,100,101,102,103,105,106,108,109,110,111,112,117,118,119,120,121,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,152,153,154,155,156,157,158,159,160,161,162,164,166,167,169,175,176,177,178,179,180,181,182,183,185,186,187,189,190,191,192,197,201,208,209,212,213,214,217,225,],[-17,-16,-106,-106,-52,-106,-50,-51,-106,-106,-104,-106,-106,-92,142,-106,-87,-106,-89,-88,-103,-102,-106,-106,-106,-22,-23,-21,-106,-67,-106,-70,-71,-106,-106,-106,-106,-106,-78,-106,-93,-91,-95,-106,-94,-79,-106,-106,-82,-105,-83,-86,-106,-106,-106,-56,-106,-106,-87,-88,-90,-68,-69,-72,-73,-75,-74,-77,-76,-100,-101,-99,-81,-80,-84,-85,-106,-106,-53,-106,-106,-98,-96,-24,-97,]),'$end':([1,33,],[0,-1,]),'STRING':([6,31,35,37,45,51,52,54,75,126,],[19,19,19,19,19,19,19,19,19,19,]),'FOR':([7,8,14,15,16,23,32,44,51,52,54,56,57,59,61,66,72,76,77,78,79,80,93,94,188,199,215,219,223,224,226,227,230,231,],[-2,-3,-19,-18,-20,-6,-106,64,-106,-106,-106,64,-47,-46,-15,-14,-106,-38,-41,-42,-36,-37,-13,64,64,64,-48,-106,-63,-65,64,64,-49,-64,]),'ELSE':([219,],[222,]),'>':([69,70,83,86,87,88,89,90,91,92,98,99,100,101,102,103,105,106,108,109,110,111,112,117,118,119,120,121,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,152,153,154,155,156,157,158,159,160,161,162,164,166,167,169,175,176,177,178,179,180,181,182,183,185,186,187,189,190,191,192,197,201,208,209,212,213,214,217,225,],[-17,-16,-106,-106,-52,-106,-50,-51,-106,-106,-104,-106,-106,-92,144,-106,-87,-106,-89,-88,-103,-102,-106,-106,-106,-22,-23,-21,-106,-67,-106,-70,-71,-106,-106,-106,-106,-106,-78,-106,-93,-91,-95,-106,-94,-79,-106,-106,-82,-105,-83,-86,-106,-106,-106,-56,-106,-106,-87,-88,-90,-68,-69,-72,-73,-75,-74,-77,-76,-100,-101,-99,-81,-80,-84,-85,-106,-106,-53,-106,-106,-98,-96,-24,-97,]),'RETURNS':([28,34,36,73,],[-106,45,-33,-32,]),'FUNC':([4,5,7,8,9,14,15,16,23,51,52,54,76,77,78,79,80,172,],[-106,11,-2,-3,11,-19,-18,-20,-6,-106,-106,-106,-38,-41,-42,-36,-37,-31,]),'FALSE':([83,86,88,91,92,99,117,133,135,138,139,140,141,142,144,148,153,154,159,160,161,164,195,197,209,212,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'[':([13,17,18,19,21,43,65,97,103,113,118,166,170,201,],[-10,-7,-8,-9,-11,55,91,130,148,91,148,148,197,212,]),']':([69,70,81,87,88,89,90,91,98,100,101,102,103,105,106,108,109,110,111,112,118,119,120,121,122,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,152,153,154,155,156,157,158,159,160,162,174,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,191,192,197,201,208,209,210,212,213,214,217,220,225,],[-17,-16,97,-52,-106,-50,-51,-106,-104,-106,-92,-106,-106,-87,-106,-89,-88,-103,-102,-106,-106,-22,-23,-21,170,-106,-67,-106,-70,-71,-106,-106,-106,-106,-106,-78,-106,-93,-91,-95,-106,-94,-79,-106,-106,-82,-105,-83,-86,-106,-106,-56,200,-90,-68,-69,-72,-73,-75,-74,-77,-76,201,-100,-101,-99,-81,-80,-84,-85,-106,-106,-53,-106,218,-106,-98,-96,-24,225,-97,]),'ID':([2,7,8,11,13,14,15,16,17,18,19,20,21,22,23,24,32,40,44,49,51,52,54,56,57,59,61,66,72,76,77,78,79,80,83,85,86,88,91,92,93,94,99,107,117,133,135,138,139,140,141,142,144,148,153,154,159,160,161,164,188,195,197,199,203,209,212,215,219,223,224,226,227,230,231,],[3,-2,-3,28,-10,-19,-18,-20,-7,-8,-9,29,-11,30,-6,31,-106,53,65,74,-106,-106,-106,65,-47,-46,-15,-14,-106,-38,-41,-42,-36,-37,103,113,103,118,103,103,-13,65,103,65,166,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,65,207,103,65,113,118,103,-48,-106,-63,-65,65,65,-49,-64,]),'TRUE':([83,86,88,91,92,99,117,133,135,138,139,140,141,142,144,148,153,154,159,160,161,164,195,197,209,212,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'IF':([7,8,14,15,16,23,32,44,51,52,54,56,57,59,61,66,72,76,77,78,79,80,93,94,188,199,215,219,223,224,226,227,230,231,],[-2,-3,-19,-18,-20,-6,-106,67,-106,-106,-106,67,-47,-46,-15,-14,-106,-38,-41,-42,-36,-37,-13,67,67,67,-48,-106,-63,-65,67,67,-49,-64,]),'AND':([69,70,83,86,87,88,89,90,91,92,98,99,100,101,102,103,105,106,108,109,110,111,112,117,118,119,120,121,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,152,153,154,155,156,157,158,159,160,161,162,164,166,167,169,175,176,177,178,179,180,181,182,183,185,186,187,189,190,191,192,197,201,208,209,212,213,214,217,225,],[-17,-16,-106,-106,-52,-106,-50,-51,-106,-106,-104,-106,133,-92,-106,-106,-87,-106,-89,-88,-103,-102,-106,-106,-106,-22,-23,-21,-106,-67,-106,-70,-71,-106,-106,-106,-106,-106,-78,-106,-93,-91,-95,-106,-94,-79,-106,-106,-82,-105,-83,-86,-106,-106,-106,-56,-106,-106,-87,-88,-90,-68,-69,-72,-73,-75,-74,-77,-76,-100,-101,-99,-81,-80,-84,-85,-106,-106,-53,-106,-106,-98,-96,-24,-97,]),'CTES':([83,86,88,91,92,99,117,133,135,138,139,140,141,142,144,148,153,154,159,160,161,164,195,197,209,212,],[105,105,105,105,105,105,167,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,204,105,105,105,]),'EQ':([69,70,83,86,87,88,89,90,91,92,98,99,100,101,102,103,105,106,108,109,110,111,112,117,118,119,120,121,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,152,153,154,155,156,157,158,159,160,161,162,164,166,167,169,175,176,177,178,179,180,181,182,183,185,186,187,189,190,191,192,197,201,208,209,212,213,214,217,225,],[-17,-16,-106,-106,-52,-106,-50,-51,-106,-106,-104,-106,-106,-92,138,-106,-87,-106,-89,-88,-103,-102,-106,-106,-106,-22,-23,-21,-106,-67,-106,-70,-71,-106,-106,-106,-106,-106,-78,-106,-93,-91,-95,-106,-94,-79,-106,-106,-82,-105,-83,-86,-106,-106,-106,-56,-106,-106,-87,-88,-90,-68,-69,-72,-73,-75,-74,-77,-76,-100,-101,-99,-81,-80,-84,-85,-106,-106,-53,-106,-106,-98,-96,-24,-97,]),'STRUCT':([6,51,52,54,],[24,24,24,24,]),'INT':([6,31,35,37,45,51,52,54,75,126,],[17,17,17,17,17,17,17,17,17,17,]),'FLOAT':([6,31,35,37,45,51,52,54,75,126,],[18,18,18,18,18,18,18,18,18,18,]),'DICT':([6,51,52,54,],[20,20,20,20,]),'CTED':([55,83,86,88,91,92,99,117,130,133,135,138,139,140,141,142,144,148,153,154,159,160,161,164,195,197,209,212,],[81,111,111,111,111,111,111,111,174,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'GTOEQ':([69,70,83,86,87,88,89,90,91,92,98,99,100,101,102,103,105,106,108,109,110,111,112,117,118,119,120,121,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,152,153,154,155,156,157,158,159,160,161,162,164,166,167,169,175,176,177,178,179,180,181,182,183,185,186,187,189,190,191,192,197,201,208,209,212,213,214,217,225,],[-17,-16,-106,-106,-52,-106,-50,-51,-106,-106,-104,-106,-106,-92,140,-106,-87,-106,-89,-88,-103,-102,-106,-106,-106,-22,-23,-21,-106,-67,-106,-70,-71,-106,-106,-106,-106,-106,-78,-106,-93,-91,-95,-106,-94,-79,-106,-106,-82,-105,-83,-86,-106,-106,-106,-56,-106,-106,-87,-88,-90,-68,-69,-72,-73,-75,-74,-77,-76,-100,-101,-99,-81,-80,-84,-85,-106,-106,-53,-106,-106,-98,-96,-24,-97,]),'{':([3,13,17,18,19,21,26,28,34,36,46,47,71,73,151,171,221,222,],[4,-10,-7,-8,-9,-11,32,-106,-106,-33,-35,72,-34,-32,188,199,226,227,]),'MAIN':([4,5,7,8,9,10,12,14,15,16,23,25,51,52,54,76,77,78,79,80,172,],[-106,-106,-2,-3,-106,26,-5,-19,-18,-20,-6,-4,-106,-106,-106,-38,-41,-42,-36,-37,-31,]),'}':([7,8,14,15,16,23,27,32,44,51,52,54,56,57,59,60,61,62,63,66,72,76,77,78,79,80,82,84,93,94,124,188,199,202,211,215,219,223,224,226,227,228,229,230,231,],[-2,-3,-19,-18,-20,-6,33,-106,-106,-106,-106,-106,-106,-47,-46,-43,-15,-44,84,-14,-106,-38,-41,-42,-36,-37,-45,-12,-13,-106,172,-106,-106,215,219,-48,-106,-63,-65,-106,-106,230,231,-49,-64,]),'OR':([69,70,83,86,87,88,89,90,91,92,98,99,100,101,102,103,105,106,108,109,110,111,112,117,118,119,120,121,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,152,153,154,155,156,157,158,159,160,161,162,164,166,167,169,175,176,177,178,179,180,181,182,183,185,186,187,189,190,191,192,197,201,208,209,212,213,214,217,225,],[-17,-16,-106,-106,-52,-106,-50,-51,-106,-106,-104,-106,135,-92,-106,-106,-87,-106,-89,-88,-103,-102,-106,-106,-106,-22,-23,-21,-106,-67,-106,-70,-71,-106,-106,-106,-106,-106,-78,-106,-93,-91,-95,-106,-94,-79,-106,-106,-82,-105,-83,-86,-106,-106,-106,-56,-106,-106,-87,-88,-90,-68,-69,-72,-73,-75,-74,-77,-76,-100,-101,-99,-81,-80,-84,-85,-106,-106,-53,-106,-106,-98,-96,-24,-97,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cyExp':([106,],[152,]),'body':([44,56,94,188,199,226,227,],[63,82,124,202,211,228,229,]),'cySExp':([102,],[137,]),'vars':([4,32,72,],[7,7,7,]),'instr':([44,56,94,188,199,226,227,],[56,56,56,56,56,56,56,]),'optionalMatrix':([97,],[129,]),'cyTerm':([112,],[157,]),'whileCycle':([44,56,94,188,199,226,227,],[57,57,57,57,57,57,57,]),'opParamCall':([86,164,],[115,194,]),'optionalElse':([219,],[223,]),'forCycle':([44,56,94,188,199,226,227,],[59,59,59,59,59,59,59,]),'struct':([31,],[42,]),'cycleInstruction':([44,56,94,188,199,226,227,],[60,60,60,60,60,60,60,]),'opStruct':([103,118,166,],[145,145,145,]),'cyExpresion':([100,],[134,]),'param':([35,126,],[48,173,]),'sExp':([83,86,88,91,92,99,117,133,135,138,139,140,141,142,144,148,161,164,197,209,212,],[100,100,100,100,100,100,100,100,100,178,179,180,181,182,183,100,100,100,100,100,100,]),'init':([65,113,196,],[90,90,208,]),'program':([0,],[1,]),'dict':([29,],[38,]),'opMatrix':([201,],[214,]),'main':([10,],[27,]),'type':([6,31,35,37,45,51,52,54,75,126,],[22,43,49,50,71,22,22,22,96,49,]),'dictIndex':([149,],[187,]),'empty':([4,5,9,28,30,32,34,44,51,52,54,56,72,74,83,86,88,91,92,94,95,97,99,100,102,103,106,112,116,117,118,133,135,138,139,140,141,142,144,148,153,154,159,160,161,164,166,170,188,197,199,201,209,212,219,226,227,],[8,12,12,36,41,8,46,62,78,78,78,62,8,41,101,101,101,101,101,62,127,131,101,136,143,147,155,158,165,101,147,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,147,198,62,101,62,213,101,101,224,62,62,]),'opReturns':([34,],[47,]),'function':([5,9,],[9,9,]),'expresion':([83,86,88,91,92,99,117,133,135,148,161,164,197,209,212,],[104,116,119,122,123,132,132,176,177,184,193,116,210,119,220,]),'assignMatrix':([170,],[196,]),'opDictionary':([103,118,166,],[150,150,150,]),'term':([83,86,88,91,92,99,117,133,135,138,139,140,141,142,144,148,153,154,161,164,197,209,212,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,189,190,106,106,106,106,106,]),'assignOptions':([65,113,],[89,89,]),'opAccess':([103,118,166,],[146,146,146,]),'g':([30,74,],[39,95,]),'condition':([44,56,94,188,199,226,227,],[66,66,66,66,66,66,66,]),'cycle':([44,56,94,188,199,226,227,],[61,61,61,61,61,61,61,]),'a':([4,32,72,],[5,44,94,]),'c':([44,56,94,107,188,199,226,227,],[68,68,68,156,68,68,68,68,]),'b':([5,9,],[10,25,]),'e':([6,51,52,54,],[14,14,14,14,]),'d':([6,51,52,54,],[15,15,15,15,]),'funcCall':([44,56,83,86,88,91,92,94,99,107,117,133,135,138,139,140,141,142,144,148,153,154,159,160,161,164,188,197,199,209,212,226,227,],[69,69,108,108,120,108,108,69,108,69,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,69,108,69,120,108,69,69,]),'f':([6,51,52,54,],[16,16,16,16,]),'i':([88,209,],[121,121,]),'opParameters':([28,],[34,]),'initDict':([65,113,],[87,87,]),'j':([117,195,],[168,205,]),'assign':([44,56,85,94,107,188,199,203,226,227,],[70,70,114,70,70,70,70,216,70,70,]),'cte':([83,86,88,91,92,99,117,133,135,138,139,140,141,142,144,148,153,154,159,160,161,164,195,197,209,212,],[109,109,109,109,109,109,169,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,206,109,109,109,]),'exp':([83,86,88,91,92,99,117,133,135,138,139,140,141,142,144,148,161,164,197,209,212,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'h':([51,52,54,],[76,79,80,]),'k':([95,],[125,]),'cyParamCall':([116,],[163,]),'declare':([6,51,52,54,],[23,77,77,77,]),'fact':([83,86,88,91,92,99,117,133,135,138,139,140,141,142,144,148,153,154,159,160,161,164,197,209,212,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,191,192,112,112,112,112,112,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID { a b main }','program',7,'p_program','CT.py',56),
  ('a -> vars','a',1,'p_a','CT.py',61),
  ('a -> empty','a',1,'p_a','CT.py',62),
  ('b -> function b','b',2,'p_b','CT.py',67),
  ('b -> empty','b',1,'p_b','CT.py',68),
  ('vars -> VARS declare','vars',2,'p_vars','CT.py',72),
  ('type -> INT','type',1,'p_type','CT.py',77),
  ('type -> FLOAT','type',1,'p_type','CT.py',78),
  ('type -> STRING','type',1,'p_type','CT.py',79),
  ('type -> OBJECT','type',1,'p_type','CT.py',80),
  ('type -> BOOL','type',1,'p_type','CT.py',81),
  ('main -> MAIN { a body }','main',5,'p_main','CT.py',86),
  ('instr -> c ;','instr',2,'p_instr','CT.py',91),
  ('instr -> condition','instr',1,'p_instr','CT.py',92),
  ('instr -> cycle','instr',1,'p_instr','CT.py',93),
  ('c -> assign','c',1,'p_c','CT.py',97),
  ('c -> funcCall','c',1,'p_c','CT.py',98),
  ('declare -> d','declare',1,'p_declare','CT.py',102),
  ('declare -> e','declare',1,'p_declare','CT.py',103),
  ('declare -> f','declare',1,'p_declare','CT.py',104),
  ('init -> = i','init',2,'p_init','CT.py',109),
  ('i -> expresion','i',1,'p_i','CT.py',114),
  ('i -> funcCall','i',1,'p_i','CT.py',115),
  ('initDict -> = ( j : j )','initDict',6,'p_initDict','CT.py',120),
  ('j -> CTES','j',1,'p_j','CT.py',125),
  ('j -> cte','j',1,'p_j','CT.py',126),
  ('j -> ID','j',1,'p_j','CT.py',127),
  ('param -> type ID g k','param',4,'p_param','CT.py',132),
  ('k -> ; param','k',2,'p_k','CT.py',137),
  ('k -> empty','k',1,'p_k','CT.py',138),
  ('function -> FUNC ID opParameters opReturns { a body }','function',8,'p_function','CT.py',143),
  ('opParameters -> ( param )','opParameters',3,'p_opParameters','CT.py',148),
  ('opParameters -> empty','opParameters',1,'p_opParameters','CT.py',149),
  ('opReturns -> RETURNS type','opReturns',2,'p_opReturns','CT.py',154),
  ('opReturns -> empty','opReturns',1,'p_opReturns','CT.py',155),
  ('d -> type ID g ; h','d',5,'p_d','CT.py',160),
  ('e -> STRUCT ID struct ; h','e',5,'p_e','CT.py',165),
  ('f -> DICT ID dict ; h','f',5,'p_f','CT.py',170),
  ('g -> , ID','g',2,'p_g','CT.py',175),
  ('g -> empty','g',1,'p_g','CT.py',176),
  ('h -> declare','h',1,'p_h','CT.py',181),
  ('h -> empty','h',1,'p_h','CT.py',182),
  ('body -> cycleInstruction','body',1,'p_body','CT.py',187),
  ('body -> empty','body',1,'p_body','CT.py',188),
  ('cycleInstruction -> instr body','cycleInstruction',2,'p_cycleInstruction','CT.py',193),
  ('cycle -> forCycle','cycle',1,'p_cycle','CT.py',198),
  ('cycle -> whileCycle','cycle',1,'p_cycle','CT.py',199),
  ('whileCycle -> WHILE ( expresion ) { body }','whileCycle',7,'p_whileCycle','CT.py',204),
  ('forCycle -> FOR ( assign ; expresion ; assign ) { body }','forCycle',11,'p_forCycle','CT.py',209),
  ('assign -> ID assignOptions','assign',2,'p_assign','CT.py',214),
  ('assignOptions -> init','assignOptions',1,'p_assignOptions','CT.py',219),
  ('assignOptions -> initDict','assignOptions',1,'p_assignOptions','CT.py',220),
  ('assignOptions -> [ expresion ] assignMatrix init','assignOptions',5,'p_assignOptions','CT.py',221),
  ('assignMatrix -> [ expresion ]','assignMatrix',3,'p_assignMatrix','CT.py',226),
  ('assignMatrix -> empty','assignMatrix',1,'p_assignMatrix','CT.py',227),
  ('funcCall -> ID ( opParamCall )','funcCall',4,'p_funcCall','CT.py',232),
  ('opParamCall -> expresion cyParamCall','opParamCall',2,'p_opParamCall','CT.py',237),
  ('cyParamCall -> , opParamCall','cyParamCall',2,'p_cyParamCall','CT.py',242),
  ('cyParamCall -> empty','cyParamCall',1,'p_cyParamCall','CT.py',243),
  ('struct -> type [ CTED ] optionalMatrix','struct',5,'p_struct','CT.py',248),
  ('optionalMatrix -> [ CTED ]','optionalMatrix',3,'p_optionalMatrix','CT.py',253),
  ('optionalMatrix -> empty','optionalMatrix',1,'p_optionalMatrix','CT.py',254),
  ('condition -> IF ( expresion ) { body } optionalElse','condition',8,'p_condition','CT.py',259),
  ('optionalElse -> ELSE { body }','optionalElse',4,'p_optionalElse','CT.py',264),
  ('optionalElse -> empty','optionalElse',1,'p_optionalElse','CT.py',265),
  ('dict -> ( type : type )','dict',5,'p_dict','CT.py',270),
  ('expresion -> sExp cyExpresion','expresion',2,'p_expresion','CT.py',275),
  ('cyExpresion -> AND expresion','cyExpresion',2,'p_cyExpresion','CT.py',280),
  ('cyExpresion -> OR expresion','cyExpresion',2,'p_cyExpresion','CT.py',281),
  ('cyExpresion -> empty','cyExpresion',1,'p_cyExpresion','CT.py',282),
  ('sExp -> exp cySExp','sExp',2,'p_sExp','CT.py',287),
  ('cySExp -> EQ sExp','cySExp',2,'p_cySExp','CT.py',292),
  ('cySExp -> DIF sExp','cySExp',2,'p_cySExp','CT.py',293),
  ('cySExp -> LTOEQ sExp','cySExp',2,'p_cySExp','CT.py',294),
  ('cySExp -> GTOEQ sExp','cySExp',2,'p_cySExp','CT.py',295),
  ('cySExp -> > sExp','cySExp',2,'p_cySExp','CT.py',296),
  ('cySExp -> < sExp','cySExp',2,'p_cySExp','CT.py',297),
  ('cySExp -> empty','cySExp',1,'p_cySExp','CT.py',298),
  ('exp -> term cyExp','exp',2,'p_exp','CT.py',303),
  ('cyExp -> + term','cyExp',2,'p_cyExp','CT.py',308),
  ('cyExp -> - term','cyExp',2,'p_cyExp','CT.py',309),
  ('cyExp -> empty','cyExp',1,'p_cyExp','CT.py',310),
  ('term -> fact cyTerm','term',2,'p_term','CT.py',315),
  ('cyTerm -> * fact','cyTerm',2,'p_cyTerm','CT.py',320),
  ('cyTerm -> / fact','cyTerm',2,'p_cyTerm','CT.py',321),
  ('cyTerm -> empty','cyTerm',1,'p_cyTerm','CT.py',322),
  ('fact -> CTES','fact',1,'p_fact','CT.py',327),
  ('fact -> cte','fact',1,'p_fact','CT.py',328),
  ('fact -> funcCall','fact',1,'p_fact','CT.py',329),
  ('fact -> ( expresion )','fact',3,'p_fact','CT.py',330),
  ('fact -> ID opAccess','fact',2,'p_fact','CT.py',331),
  ('fact -> empty','fact',1,'p_fact','CT.py',332),
  ('opAccess -> opStruct','opAccess',1,'p_opAccess','CT.py',337),
  ('opAccess -> opDictionary','opAccess',1,'p_opAccess','CT.py',338),
  ('opAccess -> empty','opAccess',1,'p_opAccess','CT.py',339),
  ('opStruct -> [ expresion ] opMatrix','opStruct',4,'p_opStruct','CT.py',344),
  ('opMatrix -> [ expresion ]','opMatrix',3,'p_opMatrix','CT.py',349),
  ('opMatrix -> empty','opMatrix',1,'p_opMatrix','CT.py',350),
  ('opDictionary -> . dictIndex','opDictionary',2,'p_opDictionary','CT.py',355),
  ('dictIndex -> FIRST','dictIndex',1,'p_dictIndex','CT.py',360),
  ('dictIndex -> LAST','dictIndex',1,'p_dictIndex','CT.py',361),
  ('cte -> CTED','cte',1,'p_cte','CT.py',366),
  ('cte -> CTEF','cte',1,'p_cte','CT.py',367),
  ('cte -> TRUE','cte',1,'p_cte','CT.py',368),
  ('cte -> FALSE c','cte',2,'p_cte','CT.py',369),
  ('empty -> <empty>','empty',0,'p_empty','CT.py',374),
]
