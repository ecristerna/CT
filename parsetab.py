
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '63B5AC4768136DFBD8770D83C430CC02'
    
_lr_action_items = {'VARS':([4,32,69,],[6,6,6,]),'OBJECT':([6,31,34,36,40,44,47,50,51,52,53,68,71,87,98,99,100,112,],[13,13,13,13,-41,13,13,13,13,-40,13,-62,13,-62,-28,13,-30,-29,]),'PROGRAM':([0,],[2,]),')':([13,17,18,19,21,40,44,52,65,66,67,68,87,89,98,100,106,108,109,110,112,115,120,],[-10,-7,-8,-9,-11,-41,-62,-40,-33,86,-34,-62,-62,102,-28,-30,-25,-26,-27,-61,-29,-62,124,]),'(':([28,29,81,],[34,36,94,]),',':([30,68,],[39,39,]),'BOOL':([6,31,34,36,40,44,47,50,51,52,53,68,71,87,98,99,100,112,],[21,21,21,21,-41,21,21,21,21,-40,21,-62,21,-62,-28,21,-30,-29,]),';':([7,8,14,15,16,23,30,32,37,38,40,41,43,50,51,52,53,56,57,59,60,61,63,64,68,69,72,73,74,75,76,79,81,82,83,84,87,88,90,91,92,93,95,102,103,105,119,121,122,124,],[-2,-3,-19,-18,-20,-6,-62,-62,50,51,-41,53,-62,-62,-62,-40,-62,79,-17,-62,-16,-14,-47,-15,-62,-62,-39,-42,-43,-37,-38,-13,-62,-50,-48,-49,99,-62,-62,-22,-23,-21,-54,-59,-55,-57,-56,-51,-62,-24,]),':':([13,17,18,19,21,49,94,106,107,108,109,110,],[-10,-7,-8,-9,-11,71,-62,-25,115,-26,-27,-61,]),'=':([62,111,116,118,125,],[81,-62,122,-53,-52,]),'$end':([1,33,],[0,-1,]),'STRING':([6,31,34,36,40,44,47,50,51,52,53,68,71,87,98,99,100,112,],[19,19,19,19,-41,19,19,19,19,-40,19,-62,19,-62,-28,19,-30,-29,]),'RETURNS':([35,86,],[47,-32,]),'FUNC':([4,5,7,8,9,14,15,16,23,50,51,53,72,73,74,75,76,113,],[-62,11,-2,-3,11,-19,-18,-20,-6,-62,-62,-62,-39,-42,-43,-37,-38,-31,]),'[':([13,17,18,19,21,42,62,90,111,],[-10,-7,-8,-9,-11,54,85,104,117,]),']':([77,85,96,97,114,117,123,],[90,-62,111,-60,119,-62,125,]),'ID':([2,7,8,11,13,14,15,16,17,18,19,20,21,22,23,24,32,39,43,45,50,51,53,59,61,63,64,69,72,73,74,75,76,79,88,94,115,],[3,-2,-3,28,-10,-19,-18,-20,-7,-8,-9,29,-11,30,-6,31,-62,52,62,68,-62,-62,-62,62,-14,-47,-15,-62,-39,-42,-43,-37,-38,-13,62,109,109,]),'CTES':([94,115,],[106,106,]),'STRUCT':([6,50,51,53,],[24,24,24,24,]),'INT':([6,31,34,36,40,44,47,50,51,52,53,68,71,87,98,99,100,112,],[17,17,17,17,-41,17,17,17,17,-40,17,-62,17,-62,-28,17,-30,-29,]),'FLOAT':([6,31,34,36,40,44,47,50,51,52,53,68,71,87,98,99,100,112,],[18,18,18,18,-41,18,18,18,18,-40,18,-62,18,-62,-28,18,-30,-29,]),'DICT':([6,50,51,53,],[20,20,20,20,]),'CTED':([54,104,],[77,114,]),'{':([3,13,17,18,19,21,26,35,46,48,70,86,],[4,-10,-7,-8,-9,-11,32,-62,69,-36,-35,-32,]),'MAIN':([4,5,7,8,9,10,12,14,15,16,23,25,50,51,53,72,73,74,75,76,113,],[-62,-62,-2,-3,-62,26,-5,-19,-18,-20,-6,-4,-62,-62,-62,-39,-42,-43,-37,-38,-31,]),'}':([7,8,14,15,16,23,27,32,43,50,51,53,55,58,59,61,63,64,69,72,73,74,75,76,78,79,80,88,101,],[-2,-3,-19,-18,-20,-6,33,-62,-62,-62,-62,-62,78,-44,-62,-14,-45,-15,-62,-39,-42,-43,-37,-38,-12,-13,-46,-62,113,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'body':([43,59,88,],[55,80,101,]),'vars':([4,32,69,],[7,7,7,]),'instr':([43,59,88,],[59,59,59,]),'optionalMatrix':([90,],[103,]),'n':([44,],[66,]),'struct':([31,],[41,]),'cycleInstruction':([43,59,88,],[58,58,58,]),'param':([34,44,99,],[44,65,112,]),'init':([62,116,],[84,121,]),'program':([0,],[1,]),'dict':([29,],[37,]),'main':([10,],[27,]),'type':([6,31,34,36,44,47,50,51,53,71,99,],[22,42,45,49,45,70,22,22,22,89,45,]),'empty':([4,5,9,30,32,35,43,44,50,51,53,59,68,69,81,85,87,88,90,94,111,115,117,122,],[8,12,12,40,8,48,63,67,74,74,74,63,40,8,95,97,100,63,105,110,118,110,97,95,]),'function':([5,9,],[9,9,]),'expresion':([81,85,117,122,],[91,96,123,91,]),'assignMatrix':([111,],[116,]),'assignOptions':([62,],[83,]),'g':([30,68,],[38,87,]),'condition':([43,59,88,],[61,61,61,]),'cycle':([43,59,88,],[64,64,64,]),'a':([4,32,69,],[5,43,88,]),'c':([43,59,88,],[56,56,56,]),'b':([5,9,],[10,25,]),'e':([6,50,51,53,],[14,14,14,14,]),'d':([6,50,51,53,],[15,15,15,15,]),'funcCall':([43,59,81,88,122,],[57,57,92,57,92,]),'f':([6,50,51,53,],[16,16,16,16,]),'i':([81,122,],[93,93,]),'h':([50,51,53,],[72,75,76,]),'initDict':([62,],[82,]),'j':([94,115,],[107,120,]),'m':([35,],[46,]),'l':([28,],[35,]),'assign':([43,59,88,],[60,60,60,]),'cte':([94,115,],[108,108,]),'k':([87,],[98,]),'declare':([6,50,51,53,],[23,73,73,73,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID { a b main }','program',7,'p_program','CT.py',56),
  ('a -> vars','a',1,'p_a','CT.py',61),
  ('a -> empty','a',1,'p_a','CT.py',62),
  ('b -> function b','b',2,'p_b','CT.py',67),
  ('b -> empty','b',1,'p_b','CT.py',68),
  ('vars -> VARS declare','vars',2,'p_vars','CT.py',72),
  ('type -> INT','type',1,'p_type','CT.py',77),
  ('type -> FLOAT','type',1,'p_type','CT.py',78),
  ('type -> STRING','type',1,'p_type','CT.py',79),
  ('type -> OBJECT','type',1,'p_type','CT.py',80),
  ('type -> BOOL','type',1,'p_type','CT.py',81),
  ('main -> MAIN { a body }','main',5,'p_main','CT.py',86),
  ('instr -> c ;','instr',2,'p_instr','CT.py',91),
  ('instr -> condition','instr',1,'p_instr','CT.py',92),
  ('instr -> cycle','instr',1,'p_instr','CT.py',93),
  ('c -> assign','c',1,'p_c','CT.py',97),
  ('c -> funcCall','c',1,'p_c','CT.py',98),
  ('declare -> d','declare',1,'p_declare','CT.py',102),
  ('declare -> e','declare',1,'p_declare','CT.py',103),
  ('declare -> f','declare',1,'p_declare','CT.py',104),
  ('init -> = i','init',2,'p_init','CT.py',109),
  ('i -> expresion','i',1,'p_i','CT.py',114),
  ('i -> funcCall','i',1,'p_i','CT.py',115),
  ('initDict -> = ( j : j )','initDict',6,'p_initDict','CT.py',120),
  ('j -> CTES','j',1,'p_j','CT.py',125),
  ('j -> cte','j',1,'p_j','CT.py',126),
  ('j -> ID','j',1,'p_j','CT.py',127),
  ('param -> type ID g k','param',4,'p_param','CT.py',132),
  ('k -> ; param','k',2,'p_k','CT.py',137),
  ('k -> empty','k',1,'p_k','CT.py',138),
  ('function -> FUNC ID l m { a body }','function',8,'p_function','CT.py',143),
  ('l -> ( param n )','l',4,'p_l','CT.py',148),
  ('n -> param','n',1,'p_n','CT.py',153),
  ('n -> empty','n',1,'p_n','CT.py',154),
  ('m -> RETURNS type','m',2,'p_m','CT.py',159),
  ('m -> empty','m',1,'p_m','CT.py',160),
  ('d -> type ID g ; h','d',5,'p_d','CT.py',165),
  ('e -> STRUCT ID struct ; h','e',5,'p_e','CT.py',170),
  ('f -> DICT ID dict ; h','f',5,'p_f','CT.py',175),
  ('g -> , ID','g',2,'p_g','CT.py',180),
  ('g -> empty','g',1,'p_g','CT.py',181),
  ('h -> declare','h',1,'p_h','CT.py',186),
  ('h -> empty','h',1,'p_h','CT.py',187),
  ('body -> cycleInstruction','body',1,'p_body','CT.py',192),
  ('body -> empty','body',1,'p_body','CT.py',193),
  ('cycleInstruction -> instr body','cycleInstruction',2,'p_cycleInstruction','CT.py',198),
  ('cycle -> empty','cycle',1,'p_cycle','CT.py',203),
  ('assign -> ID assignOptions','assign',2,'p_assign','CT.py',208),
  ('assignOptions -> init','assignOptions',1,'p_assignOptions','CT.py',213),
  ('assignOptions -> initDict','assignOptions',1,'p_assignOptions','CT.py',214),
  ('assignOptions -> [ expresion ] assignMatrix init','assignOptions',5,'p_assignOptions','CT.py',215),
  ('assignMatrix -> [ expresion ]','assignMatrix',3,'p_assignMatrix','CT.py',220),
  ('assignMatrix -> empty','assignMatrix',1,'p_assignMatrix','CT.py',221),
  ('funcCall -> empty','funcCall',1,'p_funcCall','CT.py',226),
  ('struct -> type [ CTED ] optionalMatrix','struct',5,'p_struct','CT.py',231),
  ('optionalMatrix -> [ CTED ]','optionalMatrix',3,'p_optionalMatrix','CT.py',236),
  ('optionalMatrix -> empty','optionalMatrix',1,'p_optionalMatrix','CT.py',237),
  ('condition -> empty','condition',1,'p_condition','CT.py',242),
  ('dict -> ( type : type )','dict',5,'p_dict','CT.py',247),
  ('expresion -> empty','expresion',1,'p_expresion','CT.py',252),
  ('cte -> empty','cte',1,'p_cte','CT.py',257),
  ('empty -> <empty>','empty',0,'p_empty','CT.py',262),
]
