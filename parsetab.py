
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '7F8D3B421092F3588EDAE9C1DE44E591'
    
_lr_action_items = {'RETURN':([8,11,21,24,26,27,70,72,77,84,85,86,88,89,90,91,92,94,95,96,106,109,110,112,121,126,155,254,261,267,268,275,277,],[-5,-6,-28,-27,-26,-9,-144,-144,-65,-58,-62,-63,-56,-144,-144,-69,-68,-64,-22,-23,-144,-144,-67,-21,-54,-47,189,-70,-144,-92,-95,-72,-94,]),'VARS':([7,10,48,52,89,],[-11,16,-11,-11,-11,]),'DIF':([130,134,135,137,138,139,140,141,142,143,144,159,166,167,168,170,174,175,178,179,182,184,192,197,198,199,200,202,205,215,219,220,228,229,236,246,257,258,273,],[-142,-140,-144,-122,-117,-143,-124,-123,-141,-112,-144,-82,-128,-131,-130,-129,-144,207,-118,-121,-144,-124,-125,-126,-138,-139,-137,-113,-116,-120,-144,-123,-114,-115,-119,-144,-132,-135,-134,]),'OBJECT':([16,22,40,46,60,69,70,72,106,107,151,],[-2,34,34,34,34,34,-2,-2,-2,34,34,]),'WHILE':([8,11,21,24,26,27,48,52,61,65,70,72,76,84,85,86,88,89,90,91,92,93,95,96,106,109,112,121,224,242,254,261,267,268,269,274,275,277,],[-5,-6,-28,-27,-26,-9,-144,-144,-66,-66,-144,-144,-71,-58,-62,-63,-56,-144,-66,-69,-68,111,-22,-23,-144,-66,-21,-54,-66,-66,-70,-144,-92,-95,-66,-66,-72,-94,]),'PROGRAM':([0,2,],[-4,3,]),'TRUE':([114,127,131,145,149,150,161,163,172,176,177,181,189,191,196,203,204,206,207,208,209,210,211,214,237,240,251,263,],[130,130,130,130,130,130,130,130,130,-127,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,]),'LAST':([169,],[199,]),')':([31,32,34,35,43,50,67,79,103,105,114,118,119,120,122,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,156,159,160,162,164,166,167,168,170,171,173,174,175,178,179,180,182,183,184,186,187,192,193,194,195,197,198,199,200,201,202,205,212,213,215,216,219,220,227,228,229,230,231,232,233,234,235,236,238,246,247,248,249,250,255,257,258,259,264,273,],[-13,-14,-15,-16,-12,63,-61,-144,-144,-144,-144,-39,-42,-60,152,159,-142,-144,-84,-140,-144,-144,-122,-117,-143,-124,-123,-141,-112,-144,-77,-74,-76,190,-82,192,-100,-103,-128,-131,-130,-129,-83,-86,-144,-144,-118,-121,-30,-144,-31,-32,222,-41,-125,-101,-99,-102,-126,-138,-139,-137,-144,-113,-116,-111,-104,-120,-29,-144,-123,-85,-114,-115,-105,-106,-108,-109,-107,-110,-119,-35,-144,259,-36,-37,-78,262,-132,-135,-34,-33,-134,]),'(':([28,45,54,58,99,111,113,114,116,127,131,135,145,149,150,161,163,172,176,177,181,182,189,191,196,203,204,206,207,208,209,210,211,214,219,240,251,263,],[40,-98,69,-98,114,127,128,131,150,131,131,114,181,131,131,131,131,131,-127,131,131,114,131,131,131,131,131,131,131,131,131,131,131,131,114,131,131,131,]),'+':([130,134,135,137,138,139,140,141,142,144,159,166,167,168,170,174,178,179,182,184,192,197,198,199,200,215,219,220,236,246,257,258,273,],[-142,-140,-144,-122,-117,-143,-124,-123,-141,-144,-82,-128,-131,-130,-129,203,-118,-121,-144,-124,-125,-126,-138,-139,-137,-120,-144,-123,-119,-144,-132,-135,-134,]),'*':([130,134,135,137,139,140,141,142,144,159,166,167,168,170,182,184,192,197,198,199,200,219,220,246,257,258,273,],[-142,-140,-144,-122,-143,-124,-123,-141,176,-82,-128,-131,-130,-129,-144,-124,-125,-126,-138,-139,-137,-144,-123,-144,-132,-135,-134,]),'-':([130,134,135,137,138,139,140,141,142,144,159,166,167,168,170,174,178,179,182,184,192,197,198,199,200,215,219,220,236,246,257,258,273,],[-142,-140,-144,-122,-117,-143,-124,-123,-141,-144,-82,-128,-131,-130,-129,204,-118,-121,-144,-124,-125,-126,-138,-139,-137,-120,-144,-123,-119,-144,-132,-135,-134,]),',':([53,79,105,130,132,134,135,136,137,138,139,140,141,142,143,144,159,162,164,166,167,168,170,174,175,178,179,192,193,194,195,197,198,199,200,201,202,205,212,213,215,228,229,230,231,232,233,234,235,236,246,257,258,273,],[66,66,66,-142,-144,-140,-144,172,-122,-117,-143,-124,-123,-141,-112,-144,-82,-100,-103,-128,-131,-130,-129,-144,-144,-118,-121,-125,-101,-99,-102,-126,-138,-139,-137,172,-113,-116,-111,-104,-120,-114,-115,-105,-106,-108,-109,-107,-110,-119,-144,-132,-135,-134,]),'/':([130,134,135,137,139,140,141,142,144,159,166,167,168,170,182,184,192,197,198,199,200,219,220,246,257,258,273,],[-142,-140,-144,-122,-143,-124,-123,-141,177,-82,-128,-131,-130,-129,-144,-124,-125,-126,-138,-139,-137,-144,-123,-144,-132,-135,-134,]),'.':([135,182,219,],[169,169,169,]),'FIRST':([169,],[198,]),'DICT':([16,23,46,70,72,106,],[-59,37,58,-59,-59,-59,]),';':([53,55,57,67,68,79,82,97,100,102,103,105,108,117,120,123,125,130,132,134,135,137,138,139,140,141,142,143,144,146,147,148,152,158,159,162,164,166,167,168,170,174,175,178,179,180,182,183,184,188,192,193,194,195,197,198,199,200,202,205,212,213,215,216,223,225,228,229,230,231,232,233,234,235,236,246,250,257,258,259,264,273,],[-144,70,72,-61,-10,-144,106,112,-25,-24,-43,-144,-144,151,-60,-87,-91,-142,-144,-140,-144,-122,-117,-143,-124,-123,-141,-112,-144,-77,-74,-76,-97,191,-82,-100,-103,-128,-131,-130,-129,-144,-144,-118,-121,-30,-144,-31,-32,-90,-125,-101,-99,-102,-126,-138,-139,-137,-113,-116,-111,-104,-120,-29,243,245,-114,-115,-105,-106,-108,-109,-107,-110,-119,-144,-78,-132,-135,-34,-33,-134,]),':':([31,32,34,35,43,83,130,134,139,142,217,219,220,238,],[-13,-14,-15,-16,-12,107,-142,-140,-143,-141,237,-37,-36,-35,]),'=':([99,115,157,221,239,241,260,265,],[-75,145,-75,-144,251,-80,-81,-79,]),'<':([130,134,135,137,138,139,140,141,142,143,144,159,166,167,168,170,174,175,178,179,182,184,192,197,198,199,200,202,205,215,219,220,228,229,236,246,257,258,273,],[-142,-140,-144,-122,-117,-143,-124,-123,-141,-112,-144,-82,-128,-131,-130,-129,-144,211,-118,-121,-144,-124,-125,-126,-138,-139,-137,-113,-116,-120,-144,-123,-114,-115,-119,-144,-132,-135,-134,]),'$end':([1,29,],[0,-1,]),'STRING':([16,22,40,46,60,69,70,72,106,107,151,],[-2,32,32,32,32,32,-2,-2,-2,32,32,]),'FOR':([8,11,21,24,26,27,48,52,61,65,70,72,76,84,85,86,88,89,90,91,92,95,96,98,106,109,112,121,224,242,254,261,267,268,269,274,275,277,],[-5,-6,-28,-27,-26,-9,-144,-144,-66,-66,-144,-144,-73,-58,-62,-63,-56,-144,-66,-69,-68,-22,-23,113,-144,-66,-21,-54,-66,-66,-70,-144,-92,-95,-66,-66,-72,-94,]),'ELSE':([261,266,],[-96,271,]),'>':([130,134,135,137,138,139,140,141,142,143,144,159,166,167,168,170,174,175,178,179,182,184,192,197,198,199,200,202,205,215,219,220,228,229,236,246,257,258,273,],[-142,-140,-144,-122,-117,-143,-124,-123,-141,-112,-144,-82,-128,-131,-130,-129,-144,209,-118,-121,-144,-124,-125,-126,-138,-139,-137,-113,-116,-120,-144,-123,-114,-115,-119,-144,-132,-135,-134,]),'RETURNS':([28,39,41,47,63,78,],[-144,-53,-49,60,-50,-48,]),'FUNC':([7,8,9,11,12,13,21,24,26,27,62,70,72,84,85,86,88,106,121,],[-144,-5,-45,-6,-45,18,-28,-27,-26,-9,-44,-144,-144,-58,-62,-63,-56,-144,-54,]),'[':([31,32,34,35,43,56,59,73,99,108,115,135,152,157,165,182,219,221,246,256,],[-13,-14,-15,-16,-12,71,-88,-89,-75,124,149,-133,-97,-75,196,-133,-133,240,-136,263,]),']':([87,130,132,134,135,137,138,139,140,141,142,143,144,153,159,162,164,166,167,168,170,174,175,178,179,185,192,193,194,195,197,198,199,200,202,205,212,213,215,226,228,229,230,231,232,233,234,235,236,246,252,257,258,270,273,],[108,-142,-144,-140,-144,-122,-117,-143,-124,-123,-141,-112,-144,188,-82,-100,-103,-128,-131,-130,-129,-144,-144,-118,-121,221,-125,-101,-99,-102,-126,-138,-139,-137,-113,-116,-111,-104,-120,246,-114,-115,-105,-106,-108,-109,-107,-110,-119,-144,260,-132,-135,273,-134,]),'ID':([3,4,8,11,18,21,24,26,27,31,32,34,35,36,37,38,43,44,48,51,52,61,64,65,66,70,72,76,81,84,85,86,88,89,90,91,92,95,96,106,109,112,114,121,127,128,131,145,149,150,161,163,172,176,177,181,189,191,196,203,204,206,207,208,209,210,211,214,224,237,240,242,245,251,254,261,263,267,268,269,274,275,277,],[-2,5,-5,-6,28,-28,-27,-26,-9,-13,-14,-15,-16,-55,45,46,-12,53,-144,-40,-144,-66,79,-66,-10,-144,-144,99,105,-58,-62,-63,-56,-144,-66,-69,-68,-22,-23,-144,-66,-21,135,-54,135,157,135,182,135,135,135,135,135,-127,135,219,135,135,135,135,135,135,135,135,135,135,135,135,-66,249,135,-66,157,182,-70,-144,135,-92,-95,-66,-66,-72,-94,]),'IF':([8,11,21,24,26,27,48,52,61,65,70,72,76,84,85,86,88,89,90,91,92,95,96,101,106,109,112,121,224,242,254,261,267,268,269,274,275,277,],[-5,-6,-28,-27,-26,-9,-144,-144,-66,-66,-144,-144,-93,-58,-62,-63,-56,-144,-66,-69,-68,-22,-23,116,-144,-66,-21,-54,-66,-66,-70,-144,-92,-95,-66,-66,-72,-94,]),'AND':([130,132,134,135,137,138,139,140,141,142,143,144,159,166,167,168,170,174,175,178,179,182,184,192,197,198,199,200,202,205,212,213,215,219,220,228,229,230,231,232,233,234,235,236,246,257,258,273,],[-142,161,-140,-144,-122,-117,-143,-124,-123,-141,-112,-144,-82,-128,-131,-130,-129,-144,-144,-118,-121,-144,-124,-125,-126,-138,-139,-137,-113,-116,-111,-104,-120,-144,-123,-114,-115,-105,-106,-108,-109,-107,-110,-119,-144,-132,-135,-134,]),'CTES':([114,127,131,145,149,150,161,163,172,176,177,181,189,191,196,203,204,206,207,208,209,210,211,214,218,237,240,251,263,],[137,137,137,137,137,137,137,137,137,-127,137,137,137,137,137,137,137,137,137,137,137,137,137,137,238,-38,137,137,137,]),'LTOEQ':([130,134,135,137,138,139,140,141,142,143,144,159,166,167,168,170,174,175,178,179,182,184,192,197,198,199,200,202,205,215,219,220,228,229,236,246,257,258,273,],[-142,-140,-144,-122,-117,-143,-124,-123,-141,-112,-144,-82,-128,-131,-130,-129,-144,210,-118,-121,-144,-124,-125,-126,-138,-139,-137,-113,-116,-120,-144,-123,-114,-115,-119,-144,-132,-135,-134,]),'FALSE':([114,127,131,145,149,150,161,163,172,176,177,181,189,191,196,203,204,206,207,208,209,210,211,214,237,240,251,263,],[139,139,139,139,139,139,139,139,139,-127,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,]),'STRUCT':([16,25,70,72,106,],[-57,38,-57,-57,-57,]),'INT':([16,22,33,40,46,60,69,70,72,106,107,151,],[-2,-17,43,-17,-17,-17,-17,-2,-2,-2,-17,-17,]),'EQ':([130,134,135,137,138,139,140,141,142,143,144,159,166,167,168,170,174,175,178,179,182,184,192,197,198,199,200,202,205,215,219,220,228,229,236,246,257,258,273,],[-142,-140,-144,-122,-117,-143,-124,-123,-141,-112,-144,-82,-128,-131,-130,-129,-144,206,-118,-121,-144,-124,-125,-126,-138,-139,-137,-113,-116,-120,-144,-123,-114,-115,-119,-144,-132,-135,-134,]),'FLOAT':([16,22,40,46,60,69,70,72,106,107,151,],[-2,31,31,31,31,31,-2,-2,-2,31,31,]),'OR':([130,132,134,135,137,138,139,140,141,142,143,144,159,166,167,168,170,174,175,178,179,182,184,192,197,198,199,200,202,205,212,213,215,219,220,228,229,230,231,232,233,234,235,236,246,257,258,273,],[-142,163,-140,-144,-122,-117,-143,-124,-123,-141,-112,-144,-82,-128,-131,-130,-129,-144,-144,-118,-121,-144,-124,-125,-126,-138,-139,-137,-113,-116,-111,-104,-120,-144,-123,-114,-115,-105,-106,-108,-109,-107,-110,-119,-144,-132,-135,-134,]),'BOOL':([16,22,40,46,60,69,70,72,106,107,151,],[-2,35,35,35,35,35,-2,-2,-2,35,35,]),'CTED':([71,114,124,127,131,145,149,150,161,163,172,176,177,181,189,191,196,203,204,206,207,208,209,210,211,214,237,240,251,263,],[87,134,153,134,134,134,134,134,134,134,134,-127,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,]),'GTOEQ':([130,134,135,137,138,139,140,141,142,143,144,159,166,167,168,170,174,175,178,179,182,184,192,197,198,199,200,202,205,215,219,220,228,229,236,246,257,258,273,],[-142,-140,-144,-122,-117,-143,-124,-123,-141,-112,-144,-82,-128,-131,-130,-129,-144,208,-118,-121,-144,-124,-125,-126,-138,-139,-137,-113,-116,-120,-144,-123,-114,-115,-119,-144,-132,-135,-134,]),'{':([5,6,28,30,31,32,34,35,39,41,42,43,63,74,78,190,222,262,271,],[-3,7,-144,-19,-13,-14,-15,-16,48,-49,52,-12,-50,89,-48,224,242,269,274,]),'MAIN':([7,8,9,11,12,14,15,17,20,21,24,26,27,62,70,72,84,85,86,88,106,121,],[-144,-5,-144,-6,-144,-8,-20,-7,30,-28,-27,-26,-9,-44,-144,-144,-58,-62,-63,-56,-144,-54,]),'}':([8,11,19,21,24,26,27,48,49,52,61,65,70,72,75,77,80,84,85,86,88,90,91,92,94,95,96,104,106,110,112,121,154,224,242,243,244,253,254,261,267,268,269,272,274,275,276,277,],[-5,-6,29,-28,-27,-26,-9,-144,62,-144,-144,-144,-144,-144,-52,-65,104,-58,-62,-63,-56,-144,-69,-68,-64,-22,-23,-18,-144,-67,-21,-54,-51,-144,-144,-46,254,261,-70,-144,-92,-95,-144,275,-144,-72,277,-94,]),'CTEF':([114,127,131,145,149,150,161,163,172,176,177,181,189,191,196,203,204,206,207,208,209,210,211,214,237,240,251,263,],[142,142,142,142,142,142,142,142,142,-127,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vars':([7,48,52,89,],[8,8,8,8,]),'errorOpSExp':([143,],[175,]),'errorMain':([15,],[20,]),'errorCyExp':([138,],[174,]),'opParamCall':([114,],[129,]),'cyTypeParam':([53,79,105,],[68,103,120,]),'forCycle':([76,],[92,]),'structType':([46,],[56,]),'struct':([46,],[57,]),'param':([40,151,],[50,187,]),'init':([115,239,],[148,250,]),'program':([0,],[1,]),'dict':([45,58,],[55,73,]),'opMatrix':([246,],[257,]),'errorExpresion':([162,],[194,]),'main':([15,],[19,]),'return':([126,],[154,]),'errorParam':([51,],[64,]),'errorElse':([261,],[266,]),'errorReturn':([126,],[155,]),'assignOptions':([115,],[147,]),'basicDeclare':([16,70,72,106,],[26,26,26,26,]),'cyInstruction':([76,],[94,]),'condition':([76,],[95,]),'expresion':([114,127,131,145,149,150,161,163,172,181,189,191,196,240,251,263,],[136,156,160,183,185,186,193,195,201,160,223,225,226,252,183,270,]),'term':([114,127,131,145,149,150,161,163,172,181,189,191,196,203,204,206,207,208,209,210,211,240,251,263,],[138,138,138,138,138,138,138,138,138,138,138,138,138,228,229,138,138,138,138,138,138,138,138,138,]),'funcCall':([76,114,127,131,145,149,150,161,163,172,177,181,189,191,196,203,204,206,207,208,209,210,211,214,240,251,263,],[100,140,140,140,184,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,184,140,]),'initDict':([115,],[146,]),'opSExp':([175,],[213,]),'dictDeclare':([16,70,72,106,],[21,21,21,21,]),'saveMain':([30,],[42,]),'errorVars':([7,48,52,89,],[10,10,10,10,]),'whileCycle':([76,],[91,]),'errorDictDeclare':([16,70,72,106,],[23,23,23,23,]),'opFunctions':([9,12,],[15,17,]),'errorOpStruct':([135,182,219,],[165,165,165,]),'opVars':([7,48,52,89,],[9,61,65,109,]),'errorInit':([180,],[216,]),'cyExpresion':([132,],[162,]),'body':([61,65,90,109,224,242,269,274,],[75,80,110,126,244,253,272,276,]),'errorOpReturns':([39,],[47,]),'opParameters':([28,],[39,]),'errorCondition':([76,],[101,]),'cte':([114,127,131,145,149,150,161,163,172,177,181,189,191,196,203,204,206,207,208,209,210,211,214,237,240,251,263,],[141,141,141,141,141,141,141,141,141,141,220,141,141,141,141,141,141,141,141,141,141,141,141,248,141,141,141,]),'saveProc':([5,],[6,]),'assign':([76,128,245,],[102,158,255,]),'errorStructDeclare':([16,70,72,106,],[25,25,25,25,]),'cyExp':([174,],[202,]),'instr':([76,],[90,]),'errorFact':([176,],[214,]),'errorProgram':([0,],[2,]),'cyTerm':([144,],[178,]),'errorAssignMatrix':([260,],[265,]),'cyDeclare':([70,72,106,],[84,88,121,]),'errorBody':([61,65,90,109,224,242,269,274,],[76,76,76,76,76,76,76,76,]),'opStruct':([135,182,219,],[166,166,166,]),'errorOpAccess':([167,],[197,]),'type':([22,40,46,60,69,107,151,],[36,51,59,74,83,122,51,]),'dictIndex':([169,],[200,]),'empty':([7,9,12,28,48,52,53,61,65,70,72,79,89,90,103,105,106,108,109,114,132,135,136,144,174,175,182,201,219,221,224,242,246,261,269,274,],[11,14,14,41,11,11,67,77,77,86,86,67,11,77,119,67,86,125,77,133,164,168,173,179,205,212,168,173,168,241,77,77,258,268,77,77,]),'errorBasicDeclare':([36,],[44,]),'function':([9,12,],[12,12,]),'errorOpMatrix':([246,],[256,]),'opDictionary':([135,182,219,],[170,170,170,]),'errorType':([22,40,46,60,69,107,151,],[33,33,33,33,33,33,33,]),'errorForCycle':([76,],[98,]),'opAccess':([135,182,219,],[167,167,167,]),'basicStatements':([76,],[97,]),'structDeclare':([16,70,72,106,],[24,24,24,24,]),'errorAssign':([99,157,],[115,115,]),'cyParam':([103,],[118,]),'errorOpParameters':([63,],[78,]),'cyParamCall':([136,201,],[171,227,]),'declare':([16,70,72,106,],[27,85,85,85,]),'optionalMatrix':([108,],[123,]),'optionalElse':([261,],[267,]),'dictType':([181,237,],[217,247,]),'initWith':([145,251,],[180,180,]),'errorWhileCycle':([76,],[93,]),'sExp':([114,127,131,145,149,150,161,163,172,181,189,191,196,240,251,263,],[132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,]),'errorCyParam':([103,],[117,]),'opReturns':([39,],[49,]),'errorDictType':([181,237,],[218,218,]),'assignMatrix':([221,],[239,]),'errorDict':([45,58,],[54,54,]),'errorInitDict':([259,],[264,]),'saveType':([3,16,70,72,106,],[4,22,22,22,22,]),'saveID':([66,68,],[81,82,]),'cycle':([76,],[96,]),'errorFunction':([9,12,],[13,13,]),'exp':([114,127,131,145,149,150,161,163,172,181,189,191,196,206,207,208,209,210,211,240,251,263,],[143,143,143,143,143,143,143,143,143,143,143,143,143,230,231,232,233,234,235,143,143,143,]),'fact':([114,127,131,145,149,150,161,163,172,177,181,189,191,196,203,204,206,207,208,209,210,211,214,240,251,263,],[144,144,144,144,144,144,144,144,144,215,144,144,144,144,144,144,144,144,144,144,144,144,236,144,144,144,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> errorProgram PROGRAM saveType ID saveProc { opVars opFunctions main }','program',10,'p_program','CT.py',79),
  ('saveType -> <empty>','saveType',0,'p_saveType','CT.py',83),
  ('saveProc -> <empty>','saveProc',0,'p_saveProc','CT.py',93),
  ('errorProgram -> <empty>','errorProgram',0,'p_errorProgram','CT.py',102),
  ('opVars -> vars','opVars',1,'p_opVars','CT.py',108),
  ('opVars -> empty','opVars',1,'p_opVars','CT.py',109),
  ('opFunctions -> function opFunctions','opFunctions',2,'p_opFunctions','CT.py',114),
  ('opFunctions -> empty','opFunctions',1,'p_opFunctions','CT.py',115),
  ('vars -> errorVars VARS declare','vars',3,'p_vars','CT.py',119),
  ('saveID -> <empty>','saveID',0,'p_saveID','CT.py',124),
  ('errorVars -> <empty>','errorVars',0,'p_errorVars','CT.py',145),
  ('type -> errorType INT','type',2,'p_type','CT.py',151),
  ('type -> FLOAT','type',1,'p_type','CT.py',152),
  ('type -> STRING','type',1,'p_type','CT.py',153),
  ('type -> OBJECT','type',1,'p_type','CT.py',154),
  ('type -> BOOL','type',1,'p_type','CT.py',155),
  ('errorType -> <empty>','errorType',0,'p_errorType','CT.py',160),
  ('main -> errorMain MAIN saveMain { opVars body }','main',7,'p_main','CT.py',166),
  ('saveMain -> <empty>','saveMain',0,'p_saveMain','CT.py',170),
  ('errorMain -> <empty>','errorMain',0,'p_errorMain','CT.py',179),
  ('instr -> basicStatements ;','instr',2,'p_instr','CT.py',185),
  ('instr -> condition','instr',1,'p_instr','CT.py',186),
  ('instr -> cycle','instr',1,'p_instr','CT.py',187),
  ('basicStatements -> assign','basicStatements',1,'p_basicStatements','CT.py',191),
  ('basicStatements -> funcCall','basicStatements',1,'p_basicStatements','CT.py',192),
  ('declare -> basicDeclare','declare',1,'p_declare','CT.py',196),
  ('declare -> structDeclare','declare',1,'p_declare','CT.py',197),
  ('declare -> dictDeclare','declare',1,'p_declare','CT.py',198),
  ('init -> = initWith errorInit','init',3,'p_init','CT.py',203),
  ('errorInit -> <empty>','errorInit',0,'p_errorInit','CT.py',208),
  ('initWith -> expresion','initWith',1,'p_initWith','CT.py',214),
  ('initWith -> funcCall','initWith',1,'p_initWith','CT.py',215),
  ('initDict -> = ( dictType : dictType ) errorInitDict','initDict',7,'p_initDict','CT.py',220),
  ('errorInitDict -> <empty>','errorInitDict',0,'p_errorInitDict','CT.py',225),
  ('dictType -> errorDictType CTES','dictType',2,'p_dictType','CT.py',231),
  ('dictType -> cte','dictType',1,'p_dictType','CT.py',232),
  ('dictType -> ID','dictType',1,'p_dictType','CT.py',233),
  ('errorDictType -> <empty>','errorDictType',0,'p_errorDictType','CT.py',238),
  ('param -> type errorParam ID cyTypeParam cyParam','param',5,'p_param','CT.py',244),
  ('errorParam -> <empty>','errorParam',0,'p_errorParam','CT.py',249),
  ('cyParam -> errorCyParam ; param','cyParam',3,'p_cyParam','CT.py',255),
  ('cyParam -> empty','cyParam',1,'p_cyParam','CT.py',256),
  ('errorCyParam -> <empty>','errorCyParam',0,'p_errorCyParam','CT.py',261),
  ('function -> errorFunction FUNC ID opParameters opReturns }','function',6,'p_function','CT.py',267),
  ('errorFunction -> <empty>','errorFunction',0,'p_errorFunction','CT.py',272),
  ('return -> errorReturn RETURN expresion ;','return',4,'p_return','CT.py',278),
  ('errorReturn -> <empty>','errorReturn',0,'p_errorReturn','CT.py',283),
  ('opParameters -> ( param ) errorOpParameters','opParameters',4,'p_opParameters','CT.py',289),
  ('opParameters -> empty','opParameters',1,'p_opParameters','CT.py',290),
  ('errorOpParameters -> <empty>','errorOpParameters',0,'p_errorOpParameters','CT.py',295),
  ('opReturns -> errorOpReturns RETURNS type { opVars body return','opReturns',7,'p_opReturns','CT.py',301),
  ('opReturns -> { opVars body','opReturns',3,'p_opReturns','CT.py',302),
  ('errorOpReturns -> <empty>','errorOpReturns',0,'p_errorOpReturns','CT.py',307),
  ('basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare','basicDeclare',8,'p_basicDeclare','CT.py',313),
  ('errorBasicDeclare -> <empty>','errorBasicDeclare',0,'p_errorBasicDeclare','CT.py',318),
  ('structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare','structDeclare',6,'p_structDeclare','CT.py',324),
  ('errorStructDeclare -> <empty>','errorStructDeclare',0,'p_errorStructDeclare','CT.py',329),
  ('dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare','dictDeclare',6,'p_dictDeclare','CT.py',335),
  ('errorDictDeclare -> <empty>','errorDictDeclare',0,'p_errorDictDeclare','CT.py',340),
  ('cyTypeParam -> , saveID ID cyTypeParam','cyTypeParam',4,'p_cyTypeParam','CT.py',346),
  ('cyTypeParam -> empty','cyTypeParam',1,'p_cyTypeParam','CT.py',347),
  ('cyDeclare -> declare','cyDeclare',1,'p_cyDeclare','CT.py',352),
  ('cyDeclare -> empty','cyDeclare',1,'p_cyDeclare','CT.py',353),
  ('body -> errorBody cyInstruction','body',2,'p_body','CT.py',358),
  ('body -> empty','body',1,'p_body','CT.py',359),
  ('errorBody -> <empty>','errorBody',0,'p_errorBody','CT.py',364),
  ('cyInstruction -> instr body','cyInstruction',2,'p_cyInstruction','CT.py',370),
  ('cycle -> forCycle','cycle',1,'p_cycle','CT.py',375),
  ('cycle -> whileCycle','cycle',1,'p_cycle','CT.py',376),
  ('whileCycle -> errorWhileCycle WHILE ( expresion ) { body }','whileCycle',8,'p_whileCycle','CT.py',381),
  ('errorWhileCycle -> <empty>','errorWhileCycle',0,'p_errorWhileCycle','CT.py',386),
  ('forCycle -> errorForCycle FOR ( assign ; expresion ; assign ) { body }','forCycle',12,'p_forCycle','CT.py',392),
  ('errorForCycle -> <empty>','errorForCycle',0,'p_errorForCycle','CT.py',397),
  ('assign -> ID errorAssign assignOptions','assign',3,'p_assign','CT.py',403),
  ('errorAssign -> <empty>','errorAssign',0,'p_errorAssign','CT.py',408),
  ('assignOptions -> init','assignOptions',1,'p_assignOptions','CT.py',414),
  ('assignOptions -> initDict','assignOptions',1,'p_assignOptions','CT.py',415),
  ('assignOptions -> [ expresion ] assignMatrix init','assignOptions',5,'p_assignOptions','CT.py',416),
  ('assignMatrix -> [ expresion ] errorAssignMatrix','assignMatrix',4,'p_assignMatrix','CT.py',421),
  ('assignMatrix -> empty','assignMatrix',1,'p_assignMatrix','CT.py',422),
  ('errorAssignMatrix -> <empty>','errorAssignMatrix',0,'p_errorAssignMatrix','CT.py',427),
  ('funcCall -> ID ( opParamCall )','funcCall',4,'p_funcCall','CT.py',433),
  ('opParamCall -> expresion cyParamCall','opParamCall',2,'p_opParamCall','CT.py',438),
  ('opParamCall -> empty','opParamCall',1,'p_opParamCall','CT.py',439),
  ('cyParamCall -> , expresion cyParamCall','cyParamCall',3,'p_cyParamCall','CT.py',444),
  ('cyParamCall -> empty','cyParamCall',1,'p_cyParamCall','CT.py',445),
  ('struct -> structType [ CTED ] optionalMatrix','struct',5,'p_struct','CT.py',450),
  ('structType -> type','structType',1,'p_structType','CT.py',455),
  ('structType -> DICT dict','structType',2,'p_structType','CT.py',456),
  ('optionalMatrix -> [ CTED ]','optionalMatrix',3,'p_optionalMatrix','CT.py',461),
  ('optionalMatrix -> empty','optionalMatrix',1,'p_optionalMatrix','CT.py',462),
  ('condition -> errorCondition IF ( expresion ) { body } optionalElse','condition',9,'p_condition','CT.py',467),
  ('errorCondition -> <empty>','errorCondition',0,'p_errorCondition','CT.py',472),
  ('optionalElse -> errorElse ELSE { body }','optionalElse',5,'p_optionalElse','CT.py',478),
  ('optionalElse -> empty','optionalElse',1,'p_optionalElse','CT.py',479),
  ('errorElse -> <empty>','errorElse',0,'p_errorElse','CT.py',484),
  ('dict -> errorDict ( type : type )','dict',6,'p_dict','CT.py',490),
  ('errorDict -> <empty>','errorDict',0,'p_errorDict','CT.py',495),
  ('expresion -> sExp cyExpresion errorExpresion','expresion',3,'p_expresion','CT.py',501),
  ('errorExpresion -> <empty>','errorExpresion',0,'p_errorExpresion','CT.py',506),
  ('cyExpresion -> AND expresion','cyExpresion',2,'p_cyExpresion','CT.py',512),
  ('cyExpresion -> OR expresion','cyExpresion',2,'p_cyExpresion','CT.py',513),
  ('cyExpresion -> empty','cyExpresion',1,'p_cyExpresion','CT.py',514),
  ('sExp -> exp errorOpSExp opSExp','sExp',3,'p_sExp','CT.py',519),
  ('opSExp -> EQ exp','opSExp',2,'p_opSExp','CT.py',524),
  ('opSExp -> DIF exp','opSExp',2,'p_opSExp','CT.py',525),
  ('opSExp -> LTOEQ exp','opSExp',2,'p_opSExp','CT.py',526),
  ('opSExp -> GTOEQ exp','opSExp',2,'p_opSExp','CT.py',527),
  ('opSExp -> > exp','opSExp',2,'p_opSExp','CT.py',528),
  ('opSExp -> < exp','opSExp',2,'p_opSExp','CT.py',529),
  ('opSExp -> empty','opSExp',1,'p_opSExp','CT.py',530),
  ('errorOpSExp -> <empty>','errorOpSExp',0,'p_errorOpSExp','CT.py',535),
  ('exp -> term errorCyExp cyExp','exp',3,'p_exp','CT.py',541),
  ('cyExp -> + term','cyExp',2,'p_cyExp','CT.py',546),
  ('cyExp -> - term','cyExp',2,'p_cyExp','CT.py',547),
  ('cyExp -> empty','cyExp',1,'p_cyExp','CT.py',548),
  ('errorCyExp -> <empty>','errorCyExp',0,'p_errorCyExp','CT.py',553),
  ('term -> fact cyTerm','term',2,'p_term','CT.py',559),
  ('cyTerm -> * errorFact fact','cyTerm',3,'p_cyTerm','CT.py',564),
  ('cyTerm -> / fact','cyTerm',2,'p_cyTerm','CT.py',565),
  ('cyTerm -> empty','cyTerm',1,'p_cyTerm','CT.py',566),
  ('fact -> CTES','fact',1,'p_fact','CT.py',571),
  ('fact -> cte','fact',1,'p_fact','CT.py',572),
  ('fact -> funcCall','fact',1,'p_fact','CT.py',573),
  ('fact -> ( expresion )','fact',3,'p_fact','CT.py',574),
  ('fact -> ID opAccess errorOpAccess','fact',3,'p_fact','CT.py',575),
  ('errorFact -> <empty>','errorFact',0,'p_errorFact','CT.py',580),
  ('opAccess -> opStruct','opAccess',1,'p_opAccess','CT.py',586),
  ('opAccess -> opDictionary','opAccess',1,'p_opAccess','CT.py',587),
  ('opAccess -> empty','opAccess',1,'p_opAccess','CT.py',588),
  ('errorOpAccess -> <empty>','errorOpAccess',0,'p_errorOpAccess','CT.py',593),
  ('opStruct -> errorOpStruct [ expresion ] opMatrix','opStruct',5,'p_opStruct','CT.py',599),
  ('errorOpStruct -> <empty>','errorOpStruct',0,'p_errorOpStruct','CT.py',604),
  ('opMatrix -> errorOpMatrix [ expresion ]','opMatrix',4,'p_opMatrix','CT.py',610),
  ('opMatrix -> empty','opMatrix',1,'p_opMatrix','CT.py',611),
  ('errorOpMatrix -> <empty>','errorOpMatrix',0,'p_errorOpMatrix','CT.py',616),
  ('opDictionary -> . dictIndex','opDictionary',2,'p_opDictionary','CT.py',622),
  ('dictIndex -> FIRST','dictIndex',1,'p_dictIndex','CT.py',627),
  ('dictIndex -> LAST','dictIndex',1,'p_dictIndex','CT.py',628),
  ('cte -> CTED','cte',1,'p_cte','CT.py',633),
  ('cte -> CTEF','cte',1,'p_cte','CT.py',634),
  ('cte -> TRUE','cte',1,'p_cte','CT.py',635),
  ('cte -> FALSE','cte',1,'p_cte','CT.py',636),
  ('empty -> <empty>','empty',0,'p_empty','CT.py',643),
]
