
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '551F0A50CF2D5D754A965316308869D6'
    
_lr_action_items = {'VARS':([4,32,74,],[6,6,6,]),'OBJECT':([6,31,34,36,40,44,47,50,51,52,53,73,76,95,109,110,111,129,],[13,13,13,13,-41,13,13,13,13,-40,13,-70,13,-70,-28,13,-30,-29,]),'WHILE':([7,8,14,15,16,23,32,43,50,51,53,55,56,58,60,65,74,77,78,79,80,81,93,96,132,138,147,151,154,155,156,157,160,161,],[-2,-3,-19,-18,-20,-6,-70,57,-70,-70,-70,57,-48,-47,-15,-14,-70,-39,-42,-43,-37,-38,-13,57,57,57,-49,-70,-61,-63,57,57,-50,-62,]),'PROGRAM':([0,],[2,]),'TRUE':([105,134,],[126,126,]),')':([13,17,18,19,21,40,44,52,70,71,72,73,84,87,88,89,90,92,95,97,99,100,102,103,104,106,108,109,111,119,120,122,123,124,125,126,129,142,143,144,148,149,],[-10,-7,-8,-9,-11,-41,-70,-40,-33,94,-34,-70,-70,-70,-53,-51,-52,-70,-70,113,117,-65,-22,-23,-21,-57,128,-28,-30,-25,-69,-26,-67,-66,-27,-68,-29,149,-54,-70,152,-24,]),'(':([28,29,57,63,66,87,],[34,36,84,86,92,105,]),',':([30,73,],[39,39,]),'BOOL':([6,31,34,36,40,44,47,50,51,52,53,73,76,95,109,110,111,129,],[21,21,21,21,-41,21,21,21,21,-40,21,-70,21,-70,-28,21,-30,-29,]),';':([7,8,14,15,16,23,30,32,37,38,40,41,43,50,51,52,53,55,56,58,60,61,65,67,68,69,73,74,77,78,79,80,81,87,88,89,90,93,95,96,98,100,101,102,103,104,106,113,114,116,118,132,133,138,139,143,144,147,149,151,154,155,156,157,160,161,],[-2,-3,-19,-18,-20,-6,-70,-70,50,51,-41,53,-70,-70,-70,-40,-70,-70,-48,-47,-15,-57,-14,93,-17,-16,-70,-70,-39,-42,-43,-37,-38,-70,-53,-51,-52,-13,110,-70,-70,-65,118,-22,-23,-21,-57,-64,-58,-60,-70,-70,141,-70,-59,-54,-70,-49,-24,-70,-61,-63,-70,-70,-50,-62,]),':':([13,17,18,19,21,49,119,120,121,122,123,124,125,126,],[-10,-7,-8,-9,-11,76,-25,-69,134,-26,-67,-66,-27,-68,]),'=':([64,127,135,137,150,],[87,-70,144,-56,-55,]),'$end':([1,33,],[0,-1,]),'STRING':([6,31,34,36,40,44,47,50,51,52,53,73,76,95,109,110,111,129,],[19,19,19,19,-41,19,19,19,19,-40,19,-70,19,-70,-28,19,-30,-29,]),'FOR':([7,8,14,15,16,23,32,43,50,51,53,55,56,58,60,65,74,77,78,79,80,81,93,96,132,138,147,151,154,155,156,157,160,161,],[-2,-3,-19,-18,-20,-6,-70,63,-70,-70,-70,63,-48,-47,-15,-14,-70,-39,-42,-43,-37,-38,-13,63,63,63,-49,-70,-61,-63,63,63,-50,-62,]),'ELSE':([151,],[153,]),'RETURNS':([35,94,],[47,-32,]),'FUNC':([4,5,7,8,9,14,15,16,23,50,51,53,77,78,79,80,81,130,],[-70,11,-2,-3,11,-19,-18,-20,-6,-70,-70,-70,-39,-42,-43,-37,-38,-31,]),'[':([13,17,18,19,21,42,64,98,127,],[-10,-7,-8,-9,-11,54,91,115,136,]),']':([82,91,100,107,131,136,145,],[98,-70,-65,127,139,-70,150,]),'ID':([2,7,8,11,13,14,15,16,17,18,19,20,21,22,23,24,32,39,43,45,50,51,53,55,56,58,60,65,74,77,78,79,80,81,86,93,96,105,132,134,138,141,147,151,154,155,156,157,160,161,],[3,-2,-3,28,-10,-19,-18,-20,-7,-8,-9,29,-11,30,-6,31,-70,52,64,73,-70,-70,-70,64,-48,-47,-15,-14,-70,-39,-42,-43,-37,-38,64,-13,64,125,64,125,64,64,-49,-70,-61,-63,64,64,-50,-62,]),'IF':([7,8,14,15,16,23,32,43,50,51,53,55,56,58,60,65,74,77,78,79,80,81,93,96,132,138,147,151,154,155,156,157,160,161,],[-2,-3,-19,-18,-20,-6,-70,66,-70,-70,-70,66,-48,-47,-15,-14,-70,-39,-42,-43,-37,-38,-13,66,66,66,-49,-70,-61,-63,66,66,-50,-62,]),'CTES':([105,134,],[119,119,]),'FALSE':([105,134,],[120,120,]),'STRUCT':([6,50,51,53,],[24,24,24,24,]),'INT':([6,31,34,36,40,44,47,50,51,52,53,73,76,95,109,110,111,129,],[17,17,17,17,-41,17,17,17,17,-40,17,-70,17,-70,-28,17,-30,-29,]),'FLOAT':([6,31,34,36,40,44,47,50,51,52,53,73,76,95,109,110,111,129,],[18,18,18,18,-41,18,18,18,18,-40,18,-70,18,-70,-28,18,-30,-29,]),'DICT':([6,50,51,53,],[20,20,20,20,]),'CTED':([54,105,115,134,],[82,124,131,124,]),'{':([3,13,17,18,19,21,26,35,46,48,75,94,117,128,152,153,],[4,-10,-7,-8,-9,-11,32,-70,74,-36,-35,-32,132,138,156,157,]),'MAIN':([4,5,7,8,9,10,12,14,15,16,23,25,50,51,53,77,78,79,80,81,130,],[-70,-70,-2,-3,-70,26,-5,-19,-18,-20,-6,-4,-70,-70,-70,-39,-42,-43,-37,-38,-31,]),'}':([7,8,14,15,16,23,27,32,43,50,51,53,55,56,58,59,60,61,62,65,74,77,78,79,80,81,83,85,93,96,112,132,138,140,146,147,151,154,155,156,157,158,159,160,161,],[-2,-3,-19,-18,-20,-6,33,-70,-70,-70,-70,-70,-70,-48,-47,-44,-15,-45,85,-14,-70,-39,-42,-43,-37,-38,-46,-12,-13,-70,130,-70,-70,147,151,-49,-70,-61,-63,-70,-70,160,161,-50,-62,]),'CTEF':([105,134,],[123,123,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'body':([43,55,96,132,138,156,157,],[62,83,112,140,146,158,159,]),'vars':([4,32,74,],[7,7,7,]),'instr':([43,55,96,132,138,156,157,],[55,55,55,55,55,55,55,]),'optionalMatrix':([98,],[114,]),'whileCycle':([43,55,96,132,138,156,157,],[56,56,56,56,56,56,56,]),'n':([44,],[71,]),'forCycle':([43,55,96,132,138,156,157,],[58,58,58,58,58,58,58,]),'optionalElse':([151,],[154,]),'struct':([31,],[41,]),'cycleInstruction':([43,55,96,132,138,156,157,],[59,59,59,59,59,59,59,]),'param':([34,44,110,],[44,70,129,]),'init':([64,135,],[90,143,]),'program':([0,],[1,]),'dict':([29,],[37,]),'main':([10,],[27,]),'type':([6,31,34,36,44,47,50,51,53,76,110,],[22,42,45,49,45,75,22,22,22,97,45,]),'empty':([4,5,9,30,32,35,43,44,50,51,53,55,73,74,84,87,91,92,95,96,98,118,127,132,136,138,144,151,156,157,],[8,12,12,40,8,48,61,72,79,79,79,61,40,8,100,106,100,100,111,61,116,100,137,61,100,61,106,155,61,61,]),'function':([5,9,],[9,9,]),'expresion':([84,87,91,92,118,136,144,],[99,102,107,108,133,145,102,]),'assignMatrix':([127,],[135,]),'assignOptions':([64,],[89,]),'g':([30,73,],[38,95,]),'condition':([43,55,96,132,138,156,157,],[65,65,65,65,65,65,65,]),'cycle':([43,55,96,132,138,156,157,],[60,60,60,60,60,60,60,]),'a':([4,32,74,],[5,43,96,]),'c':([43,55,96,132,138,156,157,],[67,67,67,67,67,67,67,]),'b':([5,9,],[10,25,]),'e':([6,50,51,53,],[14,14,14,14,]),'d':([6,50,51,53,],[15,15,15,15,]),'funcCall':([43,55,87,96,132,138,144,156,157,],[68,68,103,68,68,68,103,68,68,]),'f':([6,50,51,53,],[16,16,16,16,]),'i':([87,144,],[104,104,]),'h':([50,51,53,],[77,80,81,]),'initDict':([64,],[88,]),'j':([105,134,],[121,142,]),'m':([35,],[46,]),'l':([28,],[35,]),'assign':([43,55,86,96,132,138,141,156,157,],[69,69,101,69,69,69,148,69,69,]),'cte':([105,134,],[122,122,]),'k':([95,],[109,]),'declare':([6,50,51,53,],[23,78,78,78,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID { a b main }','program',7,'p_program','CT.py',56),
  ('a -> vars','a',1,'p_a','CT.py',61),
  ('a -> empty','a',1,'p_a','CT.py',62),
  ('b -> function b','b',2,'p_b','CT.py',67),
  ('b -> empty','b',1,'p_b','CT.py',68),
  ('vars -> VARS declare','vars',2,'p_vars','CT.py',72),
  ('type -> INT','type',1,'p_type','CT.py',77),
  ('type -> FLOAT','type',1,'p_type','CT.py',78),
  ('type -> STRING','type',1,'p_type','CT.py',79),
  ('type -> OBJECT','type',1,'p_type','CT.py',80),
  ('type -> BOOL','type',1,'p_type','CT.py',81),
  ('main -> MAIN { a body }','main',5,'p_main','CT.py',86),
  ('instr -> c ;','instr',2,'p_instr','CT.py',91),
  ('instr -> condition','instr',1,'p_instr','CT.py',92),
  ('instr -> cycle','instr',1,'p_instr','CT.py',93),
  ('c -> assign','c',1,'p_c','CT.py',97),
  ('c -> funcCall','c',1,'p_c','CT.py',98),
  ('declare -> d','declare',1,'p_declare','CT.py',102),
  ('declare -> e','declare',1,'p_declare','CT.py',103),
  ('declare -> f','declare',1,'p_declare','CT.py',104),
  ('init -> = i','init',2,'p_init','CT.py',109),
  ('i -> expresion','i',1,'p_i','CT.py',114),
  ('i -> funcCall','i',1,'p_i','CT.py',115),
  ('initDict -> = ( j : j )','initDict',6,'p_initDict','CT.py',120),
  ('j -> CTES','j',1,'p_j','CT.py',125),
  ('j -> cte','j',1,'p_j','CT.py',126),
  ('j -> ID','j',1,'p_j','CT.py',127),
  ('param -> type ID g k','param',4,'p_param','CT.py',132),
  ('k -> ; param','k',2,'p_k','CT.py',137),
  ('k -> empty','k',1,'p_k','CT.py',138),
  ('function -> FUNC ID l m { a body }','function',8,'p_function','CT.py',143),
  ('l -> ( param n )','l',4,'p_l','CT.py',148),
  ('n -> param','n',1,'p_n','CT.py',153),
  ('n -> empty','n',1,'p_n','CT.py',154),
  ('m -> RETURNS type','m',2,'p_m','CT.py',159),
  ('m -> empty','m',1,'p_m','CT.py',160),
  ('d -> type ID g ; h','d',5,'p_d','CT.py',165),
  ('e -> STRUCT ID struct ; h','e',5,'p_e','CT.py',170),
  ('f -> DICT ID dict ; h','f',5,'p_f','CT.py',175),
  ('g -> , ID','g',2,'p_g','CT.py',180),
  ('g -> empty','g',1,'p_g','CT.py',181),
  ('h -> declare','h',1,'p_h','CT.py',186),
  ('h -> empty','h',1,'p_h','CT.py',187),
  ('body -> cycleInstruction','body',1,'p_body','CT.py',192),
  ('body -> empty','body',1,'p_body','CT.py',193),
  ('cycleInstruction -> instr body','cycleInstruction',2,'p_cycleInstruction','CT.py',198),
  ('cycle -> forCycle','cycle',1,'p_cycle','CT.py',203),
  ('cycle -> whileCycle','cycle',1,'p_cycle','CT.py',204),
  ('whileCycle -> WHILE ( expresion ) { body }','whileCycle',7,'p_whileCycle','CT.py',209),
  ('forCycle -> FOR ( assign ; expresion ; assign ) { body }','forCycle',11,'p_forCycle','CT.py',214),
  ('assign -> ID assignOptions','assign',2,'p_assign','CT.py',219),
  ('assignOptions -> init','assignOptions',1,'p_assignOptions','CT.py',224),
  ('assignOptions -> initDict','assignOptions',1,'p_assignOptions','CT.py',225),
  ('assignOptions -> [ expresion ] assignMatrix init','assignOptions',5,'p_assignOptions','CT.py',226),
  ('assignMatrix -> [ expresion ]','assignMatrix',3,'p_assignMatrix','CT.py',231),
  ('assignMatrix -> empty','assignMatrix',1,'p_assignMatrix','CT.py',232),
  ('funcCall -> empty','funcCall',1,'p_funcCall','CT.py',237),
  ('struct -> type [ CTED ] optionalMatrix','struct',5,'p_struct','CT.py',242),
  ('optionalMatrix -> [ CTED ]','optionalMatrix',3,'p_optionalMatrix','CT.py',247),
  ('optionalMatrix -> empty','optionalMatrix',1,'p_optionalMatrix','CT.py',248),
  ('condition -> IF ( expresion ) { body } optionalElse','condition',8,'p_condition','CT.py',253),
  ('optionalElse -> ELSE { body }','optionalElse',4,'p_optionalElse','CT.py',258),
  ('optionalElse -> empty','optionalElse',1,'p_optionalElse','CT.py',259),
  ('dict -> ( type : type )','dict',5,'p_dict','CT.py',264),
  ('expresion -> empty','expresion',1,'p_expresion','CT.py',269),
  ('cte -> CTED','cte',1,'p_cte','CT.py',274),
  ('cte -> CTEF','cte',1,'p_cte','CT.py',275),
  ('cte -> TRUE','cte',1,'p_cte','CT.py',276),
  ('cte -> FALSE','cte',1,'p_cte','CT.py',277),
  ('empty -> <empty>','empty',0,'p_empty','CT.py',282),
]
