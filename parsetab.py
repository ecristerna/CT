
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'E1C1975B8306B5CB9A74D9BED90D6A3D'
    
_lr_action_items = {'$end':([1,36,43,],[0,-151,-1,]),'RETURN':([8,11,18,21,23,24,59,61,68,69,70,72,75,78,82,83,84,86,87,91,100,106,108,269,279,280,289,291,292,299,305,306,310,],[-6,-7,-28,-27,-26,-10,-150,-150,-66,-68,-69,-64,-71,-150,-150,-75,-74,-70,-23,-22,-62,-73,-21,-76,-150,-150,-98,-101,-150,-52,309,-78,-100,]),'VARS':([7,10,53,164,280,],[-12,13,-12,-12,-12,]),'DIF':([123,126,127,129,130,131,132,133,134,135,137,151,153,157,158,160,177,178,179,181,183,193,194,214,215,216,217,219,222,230,244,245,262,263,275,276,277,278,287,288,307,],[-148,-146,-152,-128,-158,-149,-130,-129,-147,-118,-157,-88,-150,-123,186,-150,-135,-134,-137,-136,-150,-124,-127,-132,-144,-145,-143,-119,-122,-155,-130,-157,-131,-126,-150,-120,-121,-125,-138,-141,-140,]),'WHILE':([8,11,18,21,23,24,53,59,61,63,68,69,70,72,74,78,82,83,84,85,87,91,100,108,164,200,202,233,269,279,280,289,291,292,294,303,306,310,],[-6,-7,-28,-27,-26,-10,-150,-150,-150,-72,-66,-68,-69,-64,-77,-150,-72,-75,-74,107,-23,-22,-62,-21,-150,-72,-72,-72,-76,-150,-150,-98,-101,-72,-72,-72,-78,-100,]),'PROGRAM':([0,2,],[-5,3,]),'DIV':([123,126,127,129,131,132,133,134,137,151,153,160,177,178,179,181,214,215,216,217,230,244,245,262,275,287,288,307,],[-148,-146,-152,-128,-149,-130,-129,-147,-157,-88,-150,195,-135,-134,-137,-136,-132,-144,-145,-143,-155,-130,-157,-131,-150,-138,-141,-140,]),'.':([127,153,],[-152,180,]),'TRUE':([111,119,136,138,148,150,155,159,167,169,170,172,173,184,185,186,187,188,189,195,196,204,210,211,213,220,221,223,224,225,226,227,228,231,232,246,249,254,255,264,272,297,309,],[123,123,-154,123,-153,123,123,123,123,-30,123,-153,-153,-153,-153,-153,-153,-153,-153,-153,-153,123,123,123,123,-153,-153,123,123,123,123,123,123,123,-133,123,123,123,123,123,-153,123,123,]),'[':([29,30,32,39,49,52,62,80,90,110,117,121,127,144,153,176,209,275,286,],[-14,-15,-16,-13,60,-94,-95,103,-152,-81,-103,150,-152,-152,-139,213,249,-142,297,]),'MULT':([123,126,127,129,131,132,133,134,137,151,153,160,177,178,179,181,214,215,216,217,230,244,245,262,275,287,288,307,],[-148,-146,-152,-128,-149,-130,-129,-147,-157,-88,-150,196,-135,-134,-137,-136,-132,-144,-145,-143,-155,-130,-157,-131,-150,-138,-141,-140,]),'LAST':([180,],[216,]),'MINUS':([123,126,127,129,130,131,132,133,134,137,151,153,157,160,177,178,179,181,183,193,194,214,215,216,217,230,244,245,262,263,275,278,287,288,307,],[-148,-146,-152,-128,-158,-149,-130,-129,-147,-157,-88,-150,-123,-150,-135,-134,-137,-136,221,-124,-127,-132,-144,-145,-143,-155,-130,-157,-131,-126,-150,-125,-138,-141,-140,]),'LTOEQ':([123,126,127,129,130,131,132,133,134,135,137,151,153,157,158,160,177,178,179,181,183,193,194,214,215,216,217,219,222,230,244,245,262,263,275,276,277,278,287,288,307,],[-148,-146,-152,-128,-158,-149,-130,-129,-147,-118,-157,-88,-150,-123,185,-150,-135,-134,-137,-136,-150,-124,-127,-132,-144,-145,-143,-119,-122,-155,-130,-157,-131,-126,-150,-120,-121,-125,-138,-141,-140,]),',':([46,99,123,124,126,127,128,129,130,131,132,133,134,135,137,151,152,153,157,158,160,165,174,175,177,178,179,181,182,183,190,191,193,194,212,214,215,216,217,219,222,229,230,251,252,256,257,258,259,260,261,262,263,275,276,277,278,287,288,307,],[55,55,-148,-160,-146,-152,155,-128,-158,-149,-130,-129,-147,-118,-157,-88,-150,-150,-123,-150,-150,55,-106,-109,-135,-134,-137,-136,155,-150,-117,-159,-124,-127,-105,-132,-144,-145,-143,-119,-122,-110,-155,-107,-108,-115,-113,-112,-116,-114,-111,-131,-126,-150,-120,-121,-125,-138,-141,-140,]),'ASGN':([90,110,121,144,209,248,250,285,296,],[-152,-81,148,-152,-150,272,-86,-87,-85,]),'FIRST':([180,],[215,]),'LT':([123,126,127,129,130,131,132,133,134,135,137,151,153,157,158,160,177,178,179,181,183,193,194,214,215,216,217,219,222,230,244,245,262,263,275,276,277,278,287,288,307,],[-148,-146,-152,-128,-158,-149,-130,-129,-147,-118,-157,-88,-150,-123,187,-150,-135,-134,-137,-136,-150,-124,-127,-132,-144,-145,-143,-119,-122,-155,-130,-157,-131,-126,-150,-120,-121,-125,-138,-141,-140,]),'PLUS':([123,126,127,129,130,131,132,133,134,137,151,153,157,160,177,178,179,181,183,193,194,214,215,216,217,230,244,245,262,263,275,278,287,288,307,],[-148,-146,-152,-128,-158,-149,-130,-129,-147,-157,-88,-150,-123,-150,-135,-134,-137,-136,220,-124,-127,-132,-144,-145,-143,-155,-130,-157,-131,-126,-150,-125,-138,-141,-140,]),'BOOL':([13,19,42,58,59,61,76,78,79,97,199,293,],[-3,32,32,32,-3,-3,-3,-3,32,32,32,-3,]),';':([46,48,50,56,57,66,80,88,92,94,99,102,104,116,117,123,124,126,127,129,130,131,132,133,134,135,137,142,145,146,147,149,151,152,153,157,158,160,165,168,174,175,177,178,179,181,183,190,191,193,194,201,203,212,214,215,216,217,219,222,229,230,238,242,243,244,245,251,252,256,257,258,259,260,261,262,263,268,273,275,276,277,278,282,284,287,288,295,307,311,],[-150,59,61,-45,-11,78,-150,108,-25,-24,-150,-93,-97,-44,-103,-148,-160,-146,-152,-128,-158,-149,-130,-129,-147,-118,-157,-96,167,-83,-156,-82,-88,-150,-150,-123,-150,-150,-150,-80,-106,-109,-135,-134,-137,-136,-150,-117,-159,-124,-127,-47,241,-105,-132,-144,-145,-143,-119,-122,-110,-155,-11,-29,-31,-33,-32,-107,-108,-115,-113,-112,-116,-114,-111,-131,-126,-46,-84,-150,-120,-121,-125,293,-35,-138,-141,-34,-140,312,]),':':([29,30,32,39,67,123,126,131,134,205,207,208,247,],[-14,-15,-16,-13,79,-148,-146,-149,-147,246,-37,-38,-36,]),'PARINI':([41,45,47,51,54,64,90,107,109,111,112,119,127,136,138,148,150,155,159,167,169,172,173,184,185,186,187,188,189,195,196,204,210,211,213,220,221,223,224,225,226,227,228,231,232,249,254,255,264,272,297,309,],[-104,-4,58,-104,-55,76,111,119,120,136,138,136,111,-154,136,170,136,136,136,136,-30,-153,-153,-153,-153,-153,-153,-153,-153,-153,-153,136,136,136,136,-153,-153,136,136,136,136,136,136,136,-133,136,136,136,136,-153,136,136,]),'GT':([123,126,127,129,130,131,132,133,134,135,137,151,153,157,158,160,177,178,179,181,183,193,194,214,215,216,217,219,222,230,244,245,262,263,275,276,277,278,287,288,307,],[-148,-146,-152,-128,-158,-149,-130,-129,-147,-118,-157,-88,-150,-123,184,-150,-135,-134,-137,-136,-150,-124,-127,-132,-144,-145,-143,-119,-122,-155,-130,-157,-131,-126,-150,-120,-121,-125,-138,-141,-140,]),'STRING':([13,19,42,58,59,61,76,78,79,97,199,293,],[-3,30,30,30,-3,-3,-3,-3,30,30,30,-3,]),'FOR':([8,11,18,21,23,24,53,59,61,63,68,69,70,72,74,78,82,83,84,87,89,91,100,108,164,200,202,233,269,279,280,289,291,292,294,303,306,310,],[-6,-7,-28,-27,-26,-10,-150,-150,-150,-72,-66,-68,-69,-64,-79,-150,-72,-75,-74,-23,109,-22,-62,-21,-150,-72,-72,-72,-76,-150,-150,-98,-101,-72,-72,-72,-78,-100,]),'ELSE':([279,290,],[-102,298,]),'RETURNS':([113,139,163,],[-55,-61,199,]),'FUNC':([7,8,9,11,12,16,17,18,21,23,24,59,61,68,69,70,72,78,100,198,234,],[-150,-6,-2,-7,-49,-49,28,-28,-27,-26,-10,-150,-150,-66,-68,-69,-64,-150,-62,-50,-48,]),'PARFIN':([29,30,32,39,56,76,95,96,98,99,101,111,114,116,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,140,143,146,147,149,151,152,153,154,156,157,158,160,161,165,168,174,175,177,178,179,181,182,183,190,191,192,193,194,201,207,208,212,214,215,216,217,218,219,222,229,230,237,239,242,243,244,245,247,251,252,256,257,258,259,260,261,262,263,267,270,271,273,275,276,277,278,281,284,287,288,295,300,307,],[-14,-15,-16,-13,-45,-150,113,-56,-54,-150,117,-150,-57,-44,151,-148,-160,-90,-146,-152,-150,-128,-158,-149,-130,-129,-147,-118,-157,-53,166,-83,-156,-82,-88,-150,-150,-89,-92,-123,-150,-150,197,-150,-80,-106,-109,-135,-134,-137,-136,-150,-150,-117,-159,230,-124,-127,-150,-37,-38,-105,-132,-144,-145,-143,-91,-119,-122,-110,-155,-11,-40,-29,-31,-33,-32,-36,-107,-108,-115,-113,-112,-116,-114,-111,-131,-126,-46,283,284,-84,-150,-120,-121,-125,-43,-35,-138,-141,-34,-42,-140,]),']':([71,118,123,124,126,127,129,130,131,132,133,134,135,137,151,152,153,157,158,160,171,174,175,177,178,179,181,183,190,191,193,194,212,214,215,216,217,219,222,229,230,251,252,253,256,257,258,259,260,261,262,263,274,275,276,277,278,287,288,302,307,],[80,142,-148,-160,-146,-152,-128,-158,-149,-130,-129,-147,-118,-157,-88,-150,-150,-123,-150,-150,209,-106,-109,-135,-134,-137,-136,-150,-117,-159,-124,-127,-105,-132,-144,-145,-143,-119,-122,-110,-155,-107,-108,275,-115,-113,-112,-116,-114,-111,-131,-126,285,-150,-120,-121,-125,-138,-141,307,-140,]),'ID':([3,4,8,11,18,21,23,24,28,29,30,32,33,34,35,38,39,40,53,55,59,61,63,65,68,69,70,72,74,77,78,82,83,84,87,91,100,108,111,115,119,120,136,138,141,148,150,155,159,164,167,169,170,172,173,184,185,186,187,188,189,195,196,200,202,204,210,211,213,220,221,223,224,225,226,227,228,231,232,233,241,246,249,254,255,264,269,272,279,280,289,291,292,294,297,303,306,309,310,],[-3,5,-6,-7,-28,-27,-26,-10,-3,-14,-15,-16,-63,41,42,45,-13,46,-150,-11,-150,-150,-72,-46,-66,-68,-69,-64,90,99,-150,-72,-75,-74,-23,-22,-62,-21,127,-41,127,144,-154,127,165,-153,127,127,127,-150,127,-30,208,-153,-153,-153,-153,-153,-153,-153,-153,-153,-153,-72,-72,127,127,127,127,-153,-153,127,127,127,127,127,127,127,-133,-72,144,208,127,127,127,127,-76,-153,-150,-150,-98,-101,-72,-72,127,-72,-78,127,-100,]),'IF':([8,11,18,21,23,24,53,59,61,63,68,69,70,72,74,78,82,83,84,87,91,93,100,108,164,200,202,233,269,279,280,289,291,292,294,303,306,310,],[-6,-7,-28,-27,-26,-10,-150,-150,-150,-72,-66,-68,-69,-64,-99,-150,-72,-75,-74,-23,-22,112,-62,-21,-150,-72,-72,-72,-76,-150,-150,-98,-101,-72,-72,-72,-78,-100,]),'AND':([123,124,126,127,129,130,131,132,133,134,135,137,151,152,153,157,158,160,177,178,179,181,183,190,191,193,194,214,215,216,217,219,222,229,230,244,245,256,257,258,259,260,261,262,263,275,276,277,278,287,288,307,],[-148,-160,-146,-152,-128,-158,-149,-130,-129,-147,-118,-157,-88,172,-150,-123,-150,-150,-135,-134,-137,-136,-150,-117,-159,-124,-127,-132,-144,-145,-143,-119,-122,-110,-155,-130,-157,-115,-113,-112,-116,-114,-111,-131,-126,-150,-120,-121,-125,-138,-141,-140,]),'CTES':([111,119,136,138,148,150,155,159,167,169,170,172,173,184,185,186,187,188,189,195,196,204,206,210,211,213,220,221,223,224,225,226,227,228,231,232,246,249,254,255,264,272,297,309,],[129,129,-154,129,-153,129,129,129,129,-30,-39,-153,-153,-153,-153,-153,-153,-153,-153,-153,-153,129,247,129,129,129,-153,-153,129,129,129,129,129,129,129,-133,-39,129,129,129,129,-153,129,129,]),'FALSE':([111,119,136,138,148,150,155,159,167,169,170,172,173,184,185,186,187,188,189,195,196,204,210,211,213,220,221,223,224,225,226,227,228,231,232,246,249,254,255,264,272,297,309,],[131,131,-154,131,-153,131,131,131,131,-30,131,-153,-153,-153,-153,-153,-153,-153,-153,-153,-153,131,131,131,131,-153,-153,131,131,131,131,131,131,131,-133,131,131,131,131,131,-153,131,131,]),'STRUCT':([13,22,59,61,78,],[-65,35,-65,-65,-65,]),'INT':([13,19,31,42,58,59,61,76,78,79,97,199,293,],[-3,-17,39,-17,-17,-3,-3,-3,-3,-17,-17,-17,-3,]),'EQ':([123,126,127,129,130,131,132,133,134,135,137,151,153,157,158,160,177,178,179,181,183,193,194,214,215,216,217,219,222,230,244,245,262,263,275,276,277,278,287,288,307,],[-148,-146,-152,-128,-158,-149,-130,-129,-147,-118,-157,-88,-150,-123,189,-150,-135,-134,-137,-136,-150,-124,-127,-132,-144,-145,-143,-119,-122,-155,-130,-157,-131,-126,-150,-120,-121,-125,-138,-141,-140,]),'FLOAT':([13,19,42,58,59,61,76,78,79,97,199,293,],[-3,29,29,29,-3,-3,-3,-3,29,29,29,-3,]),'OR':([123,124,126,127,129,130,131,132,133,134,135,137,151,152,153,157,158,160,177,178,179,181,183,190,191,193,194,214,215,216,217,219,222,229,230,244,245,256,257,258,259,260,261,262,263,275,276,277,278,287,288,307,],[-148,-160,-146,-152,-128,-158,-149,-130,-129,-147,-118,-157,-88,173,-150,-123,-150,-150,-135,-134,-137,-136,-150,-117,-159,-124,-127,-132,-144,-145,-143,-119,-122,-110,-155,-130,-157,-115,-113,-112,-116,-114,-111,-131,-126,-150,-120,-121,-125,-138,-141,-140,]),'DICT':([13,20,42,59,61,78,],[-67,34,51,-67,-67,-67,]),'CTED':([60,103,111,119,136,138,148,150,155,159,167,169,170,172,173,184,185,186,187,188,189,195,196,204,210,211,213,220,221,223,224,225,226,227,228,231,232,246,249,254,255,264,272,297,309,],[71,118,126,126,-154,126,-153,126,126,126,126,-30,126,-153,-153,-153,-153,-153,-153,-153,-153,-153,-153,126,126,126,126,-153,-153,126,126,126,126,126,126,126,-133,126,126,126,126,126,-153,126,126,]),'GTOEQ':([123,126,127,129,130,131,132,133,134,135,137,151,153,157,158,160,177,178,179,181,183,193,194,214,215,216,217,219,222,230,244,245,262,263,275,276,277,278,287,288,307,],[-148,-146,-152,-128,-158,-149,-130,-129,-147,-118,-157,-88,-150,-123,188,-150,-135,-134,-137,-136,-150,-124,-127,-132,-144,-145,-143,-119,-122,-155,-130,-157,-131,-126,-150,-120,-121,-125,-138,-141,-140,]),'{':([5,6,29,30,32,37,39,44,113,139,166,197,235,266,283,298,],[-4,7,-14,-15,-16,-19,-13,53,-55,164,202,233,-60,280,294,303,]),'MAIN':([7,8,9,11,12,14,15,16,18,21,23,24,26,27,59,61,68,69,70,72,78,100,198,234,],[-150,-6,-2,-7,-150,-20,-9,-150,-28,-27,-26,-10,37,-8,-150,-150,-66,-68,-69,-64,-150,-62,-50,-48,]),'}':([8,11,18,21,23,24,25,53,59,61,63,68,69,70,72,73,75,78,81,82,83,84,86,87,91,100,105,106,108,162,164,200,202,233,236,240,265,269,279,289,291,294,301,303,304,306,308,310,312,],[-6,-7,-28,-27,-26,-10,36,-150,-150,-150,-150,-66,-68,-69,-64,81,-71,-150,-50,-150,-75,-74,-70,-23,-22,-62,-18,-73,-21,198,-150,-150,-150,-150,-59,269,279,-76,-150,-98,-101,-150,306,-150,-58,-78,310,-100,-51,]),'CTEF':([111,119,136,138,148,150,155,159,167,169,170,172,173,184,185,186,187,188,189,195,196,204,210,211,213,220,221,223,224,225,226,227,228,231,232,246,249,254,255,264,272,297,309,],[134,134,-154,134,-153,134,134,134,134,-30,134,-153,-153,-153,-153,-153,-153,-153,-153,-153,-153,134,134,134,134,-153,-153,134,134,134,134,134,134,134,-133,134,134,134,134,134,-153,134,134,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vars':([7,53,164,280,],[8,8,8,8,]),'errorOpSExp':([135,],[158,]),'errorMain':([14,],[26,]),'errorCyExp':([157,],[183,]),'opParamCall':([111,],[122,]),'cyTypeParam':([46,99,165,],[57,116,201,]),'takeFondo':([230,],[262,]),'forCycle':([74,],[84,]),'structType':([42,],[49,]),'changeCurrentScope':([9,],[12,]),'struct':([42,],[50,]),'param':([76,293,],[96,300,]),'init':([121,248,],[149,273,]),'program':([0,],[1,]),'dict':([41,51,],[48,62,]),'opMatrix':([275,],[287,]),'errorExpresion':([174,],[212,]),'main':([14,],[25,]),'return':([299,],[304,]),'errorParam':([115,],[141,]),'errorElse':([279,],[290,]),'errorReturn':([299,],[305,]),'assignOptions':([121,],[147,]),'flagParameters':([54,113,],[64,139,]),'basicDeclare':([13,59,61,78,],[23,23,23,23,]),'cyInstruction':([74,],[86,]),'condition':([74,],[91,]),'expresion':([111,119,138,150,155,159,167,204,210,211,213,249,297,309,],[128,143,161,171,182,192,203,243,251,252,253,274,302,311,]),'term':([111,119,138,150,155,159,167,204,210,211,213,223,224,225,226,227,228,231,249,254,255,264,297,309,],[130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,263,130,130,130,278,130,130,]),'funcCall':([74,111,119,138,150,155,159,167,204,210,211,213,223,224,225,226,227,228,231,249,254,255,264,297,309,],[92,132,132,132,132,132,132,132,244,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,]),'initDict':([121,],[146,]),'saveTypeParam':([65,267,268,],[77,281,282,]),'dictDeclare':([13,59,61,78,],[18,18,18,18,]),'saveMain':([37,],[44,]),'errorVars':([7,53,164,280,],[10,10,10,10,]),'whileCycle':([74,],[83,]),'errorDictDeclare':([13,59,61,78,],[20,20,20,20,]),'performAndOr':([124,],[152,]),'opFunctions':([12,16,],[14,27,]),'errorOpStruct':([153,],[176,]),'saveVariable':([90,127,144,],[110,153,110,]),'opVars':([7,53,164,280,],[9,63,200,292,]),'saveOperator':([148,172,173,184,185,186,187,188,189,195,196,220,221,272,],[169,210,211,223,224,225,226,227,228,231,232,254,255,169,]),'errorInit':([169,],[204,]),'performAssign':([147,],[168,]),'cyExpresion':([152,],[174,]),'body':([63,82,200,202,233,292,294,303,],[73,106,236,240,265,299,301,308,]),'errorOpParameters':([114,],[140,]),'printTables':([36,],[43,]),'saveParamToDirProc':([96,],[114,]),'saveReturnType':([235,],[266,]),'opParameters':([76,],[95,]),'errorCondition':([74,],[93,]),'cte':([111,119,138,150,155,159,167,170,204,210,211,213,223,224,225,226,227,228,231,246,249,254,255,264,297,309,],[133,133,133,133,133,133,133,207,133,133,133,133,133,133,133,133,133,133,133,207,133,133,133,133,133,133,]),'saveProc':([5,45,],[6,54,]),'assign':([74,120,241,],[94,145,270,]),'errorStructDeclare':([13,59,61,78,],[22,22,22,22,]),'cyExp':([183,],[219,]),'instr':([74,],[82,]),'errorFact':([232,],[264,]),'errorProgram':([0,],[2,]),'cyTerm':([160,],[193,]),'errorAssignMatrix':([285,],[296,]),'cyDeclare':([59,61,78,],[68,72,100,]),'errorBody':([63,82,200,202,233,292,294,303,],[74,74,74,74,74,74,74,74,]),'opStruct':([153,],[178,]),'errorOpAccess':([179,],[214,]),'type':([19,42,58,79,97,199,],[33,52,67,101,115,235,]),'dictIndex':([180,],[217,]),'empty':([7,12,16,46,53,59,61,63,76,78,80,82,99,111,128,152,153,158,160,164,165,182,183,200,201,202,209,233,275,279,280,292,294,303,],[11,15,15,56,11,70,70,75,98,70,104,75,56,125,156,175,181,190,194,11,56,156,222,75,237,75,250,75,288,291,11,75,75,75,]),'errorBasicDeclare':([33,],[40,]),'function':([12,16,],[16,16,]),'performMulDiv':([137,245,],[160,160,]),'errorOpMatrix':([275,],[286,]),'opDictionary':([153,],[177,]),'errorType':([19,42,58,79,97,199,],[31,31,31,31,31,31,]),'errorForCycle':([74,],[89,]),'opAccess':([153,],[179,]),'basicStatements':([74,],[88,]),'structDeclare':([13,59,61,78,],[21,21,21,21,]),'putFondo':([136,],[159,]),'errorAssign':([110,],[121,]),'cyParam':([201,],[239,]),'opSExp':([158,],[191,]),'errorOpReturns':([139,],[163,]),'performAddSub':([130,],[157,]),'cyParamCall':([128,182,],[154,218,]),'declare':([13,59,61,78,],[24,69,69,69,]),'optionalMatrix':([80,],[102,]),'clearVarsTable':([81,198,],[105,234,]),'optionalElse':([279,],[289,]),'dictType':([170,246,],[205,271,]),'initWith':([204,],[242,]),'errorWhileCycle':([74,],[85,]),'sExp':([111,119,138,150,155,159,167,204,210,211,213,249,297,309,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'performRelational':([191,],[229,]),'errorCyParam':([201,],[238,]),'opReturns':([139,],[162,]),'errorDictType':([170,246,],[206,206,]),'assignMatrix':([209,],[248,]),'errorDict':([41,51,],[47,47,]),'errorInitDict':([284,],[295,]),'saveType':([3,13,28,59,61,76,78,293,],[4,19,38,19,19,97,19,97,]),'saveID':([55,57,237,238,],[65,66,267,268,]),'cycle':([74,],[87,]),'errorFunction':([12,16,],[17,17,]),'exp':([111,119,138,150,155,159,167,204,210,211,213,223,224,225,226,227,228,249,254,255,297,309,],[135,135,135,135,135,135,135,135,135,135,135,256,257,258,259,260,261,135,276,277,135,135,]),'fact':([111,119,138,150,155,159,167,204,210,211,213,223,224,225,226,227,228,231,249,254,255,264,297,309,],[137,137,137,137,137,137,137,245,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables','program',12,'p_program','CT.py',290),
  ('changeCurrentScope -> <empty>','changeCurrentScope',0,'p_changeCurrentScope','CT.py',294),
  ('saveType -> <empty>','saveType',0,'p_saveType','CT.py',299),
  ('saveProc -> <empty>','saveProc',0,'p_saveProc','CT.py',306),
  ('errorProgram -> <empty>','errorProgram',0,'p_errorProgram','CT.py',323),
  ('opVars -> vars','opVars',1,'p_opVars','CT.py',329),
  ('opVars -> empty','opVars',1,'p_opVars','CT.py',330),
  ('opFunctions -> function opFunctions','opFunctions',2,'p_opFunctions','CT.py',335),
  ('opFunctions -> empty','opFunctions',1,'p_opFunctions','CT.py',336),
  ('vars -> errorVars VARS declare','vars',3,'p_vars','CT.py',340),
  ('saveID -> <empty>','saveID',0,'p_saveID','CT.py',345),
  ('errorVars -> <empty>','errorVars',0,'p_errorVars','CT.py',373),
  ('type -> errorType INT','type',2,'p_type','CT.py',379),
  ('type -> FLOAT','type',1,'p_type','CT.py',380),
  ('type -> STRING','type',1,'p_type','CT.py',381),
  ('type -> BOOL','type',1,'p_type','CT.py',382),
  ('errorType -> <empty>','errorType',0,'p_errorType','CT.py',387),
  ('main -> errorMain MAIN saveMain { opVars body } clearVarsTable','main',8,'p_main','CT.py',393),
  ('saveMain -> <empty>','saveMain',0,'p_saveMain','CT.py',397),
  ('errorMain -> <empty>','errorMain',0,'p_errorMain','CT.py',405),
  ('instr -> basicStatements ;','instr',2,'p_instr','CT.py',411),
  ('instr -> condition','instr',1,'p_instr','CT.py',412),
  ('instr -> cycle','instr',1,'p_instr','CT.py',413),
  ('basicStatements -> assign','basicStatements',1,'p_basicStatements','CT.py',417),
  ('basicStatements -> funcCall','basicStatements',1,'p_basicStatements','CT.py',418),
  ('declare -> basicDeclare','declare',1,'p_declare','CT.py',422),
  ('declare -> structDeclare','declare',1,'p_declare','CT.py',423),
  ('declare -> dictDeclare','declare',1,'p_declare','CT.py',424),
  ('init -> ASGN saveOperator errorInit initWith','init',4,'p_init','CT.py',429),
  ('errorInit -> <empty>','errorInit',0,'p_errorInit','CT.py',433),
  ('initWith -> expresion','initWith',1,'p_initWith','CT.py',439),
  ('initWith -> fact','initWith',1,'p_initWith','CT.py',440),
  ('initWith -> funcCall','initWith',1,'p_initWith','CT.py',441),
  ('initDict -> ASGN PARINI dictType : dictType PARFIN errorInitDict','initDict',7,'p_initDict','CT.py',446),
  ('errorInitDict -> <empty>','errorInitDict',0,'p_errorInitDict','CT.py',451),
  ('dictType -> errorDictType CTES','dictType',2,'p_dictType','CT.py',457),
  ('dictType -> cte','dictType',1,'p_dictType','CT.py',458),
  ('dictType -> ID','dictType',1,'p_dictType','CT.py',459),
  ('errorDictType -> <empty>','errorDictType',0,'p_errorDictType','CT.py',464),
  ('param -> saveType type errorParam ID cyTypeParam cyParam','param',6,'p_param','CT.py',470),
  ('errorParam -> <empty>','errorParam',0,'p_errorParam','CT.py',475),
  ('cyParam -> errorCyParam saveID saveTypeParam ; param','cyParam',5,'p_cyParam','CT.py',481),
  ('cyParam -> empty saveID saveTypeParam','cyParam',3,'p_cyParam','CT.py',482),
  ('cyTypeParam -> , saveID saveTypeParam ID cyTypeParam','cyTypeParam',5,'p_cyTypeParam','CT.py',487),
  ('cyTypeParam -> empty','cyTypeParam',1,'p_cyTypeParam','CT.py',488),
  ('saveTypeParam -> <empty>','saveTypeParam',0,'p_saveTypeParam','CT.py',492),
  ('errorCyParam -> <empty>','errorCyParam',0,'p_errorCyParam','CT.py',502),
  ('function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable','function',13,'p_function','CT.py',508),
  ('errorFunction -> <empty>','errorFunction',0,'p_errorFunction','CT.py',512),
  ('clearVarsTable -> <empty>','clearVarsTable',0,'p_clearVarsTable','CT.py',517),
  ('return -> errorReturn RETURN expresion ;','return',4,'p_return','CT.py',522),
  ('errorReturn -> <empty>','errorReturn',0,'p_errorReturn','CT.py',527),
  ('opParameters -> param saveParamToDirProc errorOpParameters','opParameters',3,'p_opParameters','CT.py',533),
  ('opParameters -> empty','opParameters',1,'p_opParameters','CT.py',534),
  ('flagParameters -> <empty>','flagParameters',0,'p_flagParameters','CT.py',538),
  ('saveParamToDirProc -> <empty>','saveParamToDirProc',0,'p_saveParamToDirProc','CT.py',543),
  ('errorOpParameters -> <empty>','errorOpParameters',0,'p_errorOpParameters','CT.py',551),
  ('opReturns -> errorOpReturns RETURNS type saveReturnType { opVars body return','opReturns',8,'p_opReturns','CT.py',557),
  ('opReturns -> { opVars body','opReturns',3,'p_opReturns','CT.py',558),
  ('saveReturnType -> <empty>','saveReturnType',0,'p_saveReturnType','CT.py',563),
  ('errorOpReturns -> <empty>','errorOpReturns',0,'p_errorOpReturns','CT.py',569),
  ('basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare','basicDeclare',8,'p_basicDeclare','CT.py',575),
  ('errorBasicDeclare -> <empty>','errorBasicDeclare',0,'p_errorBasicDeclare','CT.py',580),
  ('structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare','structDeclare',6,'p_structDeclare','CT.py',586),
  ('errorStructDeclare -> <empty>','errorStructDeclare',0,'p_errorStructDeclare','CT.py',591),
  ('dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare','dictDeclare',6,'p_dictDeclare','CT.py',597),
  ('errorDictDeclare -> <empty>','errorDictDeclare',0,'p_errorDictDeclare','CT.py',602),
  ('cyDeclare -> declare','cyDeclare',1,'p_cyDeclare','CT.py',608),
  ('cyDeclare -> empty','cyDeclare',1,'p_cyDeclare','CT.py',609),
  ('body -> errorBody cyInstruction','body',2,'p_body','CT.py',614),
  ('body -> empty','body',1,'p_body','CT.py',615),
  ('errorBody -> <empty>','errorBody',0,'p_errorBody','CT.py',620),
  ('cyInstruction -> instr body','cyInstruction',2,'p_cyInstruction','CT.py',626),
  ('cycle -> forCycle','cycle',1,'p_cycle','CT.py',631),
  ('cycle -> whileCycle','cycle',1,'p_cycle','CT.py',632),
  ('whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body }','whileCycle',8,'p_whileCycle','CT.py',637),
  ('errorWhileCycle -> <empty>','errorWhileCycle',0,'p_errorWhileCycle','CT.py',642),
  ('forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body }','forCycle',12,'p_forCycle','CT.py',648),
  ('errorForCycle -> <empty>','errorForCycle',0,'p_errorForCycle','CT.py',653),
  ('assign -> ID saveVariable errorAssign assignOptions performAssign','assign',5,'p_assign','CT.py',659),
  ('errorAssign -> <empty>','errorAssign',0,'p_errorAssign','CT.py',664),
  ('assignOptions -> init','assignOptions',1,'p_assignOptions','CT.py',670),
  ('assignOptions -> initDict','assignOptions',1,'p_assignOptions','CT.py',671),
  ('assignOptions -> [ expresion ] assignMatrix init','assignOptions',5,'p_assignOptions','CT.py',672),
  ('assignMatrix -> [ expresion ] errorAssignMatrix','assignMatrix',4,'p_assignMatrix','CT.py',677),
  ('assignMatrix -> empty','assignMatrix',1,'p_assignMatrix','CT.py',678),
  ('errorAssignMatrix -> <empty>','errorAssignMatrix',0,'p_errorAssignMatrix','CT.py',683),
  ('funcCall -> ID PARINI opParamCall PARFIN','funcCall',4,'p_funcCall','CT.py',689),
  ('opParamCall -> expresion cyParamCall','opParamCall',2,'p_opParamCall','CT.py',694),
  ('opParamCall -> empty','opParamCall',1,'p_opParamCall','CT.py',695),
  ('cyParamCall -> , expresion cyParamCall','cyParamCall',3,'p_cyParamCall','CT.py',700),
  ('cyParamCall -> empty','cyParamCall',1,'p_cyParamCall','CT.py',701),
  ('struct -> structType [ CTED ] optionalMatrix','struct',5,'p_struct','CT.py',706),
  ('structType -> type','structType',1,'p_structType','CT.py',711),
  ('structType -> DICT dict','structType',2,'p_structType','CT.py',712),
  ('optionalMatrix -> [ CTED ]','optionalMatrix',3,'p_optionalMatrix','CT.py',717),
  ('optionalMatrix -> empty','optionalMatrix',1,'p_optionalMatrix','CT.py',718),
  ('condition -> errorCondition IF PARINI expresion PARFIN { body } optionalElse','condition',9,'p_condition','CT.py',723),
  ('errorCondition -> <empty>','errorCondition',0,'p_errorCondition','CT.py',728),
  ('optionalElse -> errorElse ELSE { body }','optionalElse',5,'p_optionalElse','CT.py',734),
  ('optionalElse -> empty','optionalElse',1,'p_optionalElse','CT.py',735),
  ('errorElse -> <empty>','errorElse',0,'p_errorElse','CT.py',740),
  ('dict -> errorDict PARINI type : type PARFIN','dict',6,'p_dict','CT.py',746),
  ('errorDict -> <empty>','errorDict',0,'p_errorDict','CT.py',751),
  ('expresion -> sExp performAndOr cyExpresion errorExpresion','expresion',4,'p_expresion','CT.py',757),
  ('errorExpresion -> <empty>','errorExpresion',0,'p_errorExpresion','CT.py',763),
  ('cyExpresion -> AND saveOperator expresion','cyExpresion',3,'p_cyExpresion','CT.py',769),
  ('cyExpresion -> OR saveOperator expresion','cyExpresion',3,'p_cyExpresion','CT.py',770),
  ('cyExpresion -> empty','cyExpresion',1,'p_cyExpresion','CT.py',771),
  ('sExp -> exp errorOpSExp opSExp performRelational','sExp',4,'p_sExp','CT.py',776),
  ('opSExp -> EQ saveOperator exp','opSExp',3,'p_opSExp','CT.py',781),
  ('opSExp -> DIF saveOperator exp','opSExp',3,'p_opSExp','CT.py',782),
  ('opSExp -> LTOEQ saveOperator exp','opSExp',3,'p_opSExp','CT.py',783),
  ('opSExp -> GTOEQ saveOperator exp','opSExp',3,'p_opSExp','CT.py',784),
  ('opSExp -> GT saveOperator exp','opSExp',3,'p_opSExp','CT.py',785),
  ('opSExp -> LT saveOperator exp','opSExp',3,'p_opSExp','CT.py',786),
  ('opSExp -> empty','opSExp',1,'p_opSExp','CT.py',787),
  ('errorOpSExp -> <empty>','errorOpSExp',0,'p_errorOpSExp','CT.py',791),
  ('exp -> term performAddSub errorCyExp cyExp','exp',4,'p_exp','CT.py',797),
  ('cyExp -> PLUS saveOperator exp','cyExp',3,'p_cyExp','CT.py',802),
  ('cyExp -> MINUS saveOperator exp','cyExp',3,'p_cyExp','CT.py',803),
  ('cyExp -> empty','cyExp',1,'p_cyExp','CT.py',804),
  ('errorCyExp -> <empty>','errorCyExp',0,'p_errorCyExp','CT.py',809),
  ('term -> fact performMulDiv cyTerm','term',3,'p_term','CT.py',814),
  ('cyTerm -> MULT saveOperator errorFact term','cyTerm',4,'p_cyTerm','CT.py',819),
  ('cyTerm -> DIV saveOperator term','cyTerm',3,'p_cyTerm','CT.py',820),
  ('cyTerm -> empty','cyTerm',1,'p_cyTerm','CT.py',821),
  ('fact -> CTES','fact',1,'p_fact','CT.py',826),
  ('fact -> cte','fact',1,'p_fact','CT.py',827),
  ('fact -> funcCall','fact',1,'p_fact','CT.py',828),
  ('fact -> PARINI putFondo expresion PARFIN takeFondo','fact',5,'p_fact','CT.py',829),
  ('fact -> ID saveVariable opAccess errorOpAccess','fact',4,'p_fact','CT.py',830),
  ('errorFact -> <empty>','errorFact',0,'p_errorFact','CT.py',835),
  ('opAccess -> opStruct','opAccess',1,'p_opAccess','CT.py',841),
  ('opAccess -> opDictionary','opAccess',1,'p_opAccess','CT.py',842),
  ('opAccess -> empty','opAccess',1,'p_opAccess','CT.py',843),
  ('errorOpAccess -> <empty>','errorOpAccess',0,'p_errorOpAccess','CT.py',848),
  ('opStruct -> errorOpStruct [ expresion ] opMatrix','opStruct',5,'p_opStruct','CT.py',853),
  ('errorOpStruct -> <empty>','errorOpStruct',0,'p_errorOpStruct','CT.py',858),
  ('opMatrix -> errorOpMatrix [ expresion ]','opMatrix',4,'p_opMatrix','CT.py',864),
  ('opMatrix -> empty','opMatrix',1,'p_opMatrix','CT.py',865),
  ('errorOpMatrix -> <empty>','errorOpMatrix',0,'p_errorOpMatrix','CT.py',870),
  ('opDictionary -> . dictIndex','opDictionary',2,'p_opDictionary','CT.py',876),
  ('dictIndex -> FIRST','dictIndex',1,'p_dictIndex','CT.py',881),
  ('dictIndex -> LAST','dictIndex',1,'p_dictIndex','CT.py',882),
  ('cte -> CTED','cte',1,'p_cte','CT.py',887),
  ('cte -> CTEF','cte',1,'p_cte','CT.py',888),
  ('cte -> TRUE','cte',1,'p_cte','CT.py',889),
  ('cte -> FALSE','cte',1,'p_cte','CT.py',890),
  ('empty -> <empty>','empty',0,'p_empty','CT.py',894),
  ('printTables -> <empty>','printTables',0,'p_printTables','CT.py',899),
  ('saveVariable -> <empty>','saveVariable',0,'p_saveVariable','CT.py',912),
  ('saveOperator -> <empty>','saveOperator',0,'p_saveOperator','CT.py',936),
  ('putFondo -> <empty>','putFondo',0,'p_putFondo','CT.py',967),
  ('takeFondo -> <empty>','takeFondo',0,'p_takeFondo','CT.py',972),
  ('performAssign -> <empty>','performAssign',0,'p_performAssign','CT.py',982),
  ('performMulDiv -> <empty>','performMulDiv',0,'p_performMulDiv','CT.py',1003),
  ('performAddSub -> <empty>','performAddSub',0,'p_performAddSub','CT.py',1024),
  ('performRelational -> <empty>','performRelational',0,'p_performRelational','CT.py',1045),
  ('performAndOr -> <empty>','performAndOr',0,'p_performAndOr','CT.py',1066),
]
