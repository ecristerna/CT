
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '5C68FAFC24C0508F8B01A38F81BFB9D1'
    
_lr_action_items = {'RETURN':([8,11,19,21,22,46,54,55,56,65,70,74,82,84,86,90,94,95,104,110,293,318,330,331,336,341,343,344,349,353,356,375,379,380,],[-6,-7,-37,-36,-10,-175,-69,-71,-72,-175,-67,-74,-175,-78,-77,-24,-73,-23,-76,-22,-175,-64,-175,-175,-80,-177,-116,-56,-79,-113,362,-115,-87,-83,]),'VARS':([7,10,57,140,293,],[-12,13,-12,-12,-12,]),'READ':([8,11,19,21,22,46,54,55,56,57,62,65,67,70,73,82,84,86,90,95,110,140,173,210,285,293,304,318,330,331,336,341,343,349,353,366,370,374,375,379,380,],[-6,-7,-37,-36,-10,-175,-69,-71,-72,-175,-19,-175,-75,-67,83,-75,-78,-77,-24,-23,-22,-175,-64,-75,-75,-175,-75,-64,-175,-75,-80,-177,-116,-79,-113,-75,-86,-75,-115,-87,-83,]),'NEG':([106,120,122,135,137,145,160,162,165,182,190,192,195,196,199,200,204,227,228,231,232,233,234,236,240,241,242,246,247,248,249,250,251,264,265,266,270,280,282,283,286,287,288,289,290,291,297,338,362,363,],[-186,-186,150,-186,-186,-186,-186,-185,-186,-186,-35,-185,-185,-185,-39,-186,-81,-185,-185,-186,-186,-186,-158,-186,-186,-185,-185,-185,-185,-185,-185,-185,-185,-186,-186,-186,-186,-186,-186,-186,-186,-186,-186,-186,-186,-186,-186,-186,-186,-186,]),'DIF':([121,123,124,125,126,127,128,129,130,132,146,148,152,153,154,155,156,157,159,170,178,180,181,183,185,186,187,188,193,194,207,218,219,221,223,225,226,229,261,268,269,273,275,277,298,300,301,303,306,334,335,347,348,358,377,],[-180,-184,-182,-183,-190,-182,-145,-144,-181,-189,-171,-187,-175,-173,-143,-136,-174,-172,-175,-131,-156,-142,-154,-155,-159,-161,-160,-175,-137,-141,248,-187,-151,-149,-150,-147,-132,-135,-146,-140,-139,-184,-145,-97,-148,-133,-134,-138,-96,-152,-175,-163,-168,-162,-167,]),'WHILE':([8,11,19,21,22,46,54,55,56,57,62,65,67,70,73,82,84,86,87,90,95,110,140,173,210,285,293,304,318,330,331,336,341,343,349,353,366,370,374,375,379,380,],[-6,-7,-37,-36,-10,-175,-69,-71,-72,-175,-19,-175,-75,-67,-82,-75,-78,-77,107,-24,-23,-22,-175,-64,-75,-75,-175,-75,-64,-175,-75,-80,-177,-116,-79,-113,-75,-86,-75,-115,-87,-83,]),'PROGRAM':([0,2,],[-5,3,]),'PRINT':([8,11,19,21,22,46,54,55,56,57,62,65,67,70,73,82,84,86,90,95,110,140,173,210,285,293,304,318,330,331,336,341,343,349,353,366,370,374,375,379,380,],[-6,-7,-37,-36,-10,-175,-69,-71,-72,-175,-19,-175,-75,-67,85,-75,-78,-77,-24,-23,-22,-175,-64,-75,-75,-175,-75,-64,-175,-75,-80,-177,-116,-79,-113,-75,-86,-75,-115,-87,-83,]),'PARINI':([49,58,63,83,85,88,106,107,109,111,112,120,123,133,135,137,145,147,149,150,151,160,162,165,182,190,192,195,196,199,200,204,227,228,231,232,233,234,236,240,241,242,246,247,248,249,250,251,264,265,266,270,273,280,282,283,286,287,288,289,290,291,297,338,362,363,],[-4,-59,68,105,106,-98,120,-81,135,136,137,-186,-98,160,-186,120,120,179,179,182,179,120,-185,120,120,-35,-185,-185,-185,-39,120,-81,-185,-185,120,120,120,-158,120,120,-185,-185,-185,-185,-185,-185,-185,-185,120,120,120,120,-98,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'DIV':([121,123,124,125,127,128,129,130,132,146,148,152,153,154,156,157,159,178,180,181,183,185,186,187,218,219,221,223,225,261,273,275,277,298,306,334,335,347,348,358,377,],[-180,-184,-182,-183,-182,-145,-144,-181,-189,-171,-187,-175,-173,-143,-174,-172,195,-156,-142,-154,-155,-159,-161,-160,-187,-151,-149,-150,-147,-146,-184,-145,-97,-148,-96,-152,-175,-163,-168,-162,-167,]),'TRUE':([106,120,135,137,145,160,162,165,182,190,192,195,196,199,200,204,227,228,231,232,233,234,236,240,241,242,246,247,248,249,250,251,264,265,266,270,280,282,283,286,287,288,289,290,291,297,338,362,363,],[124,-186,-186,124,124,124,-185,124,124,-35,-185,-185,-185,-39,124,-81,-185,-185,124,124,124,-158,124,124,-185,-185,-185,-185,-185,-185,-185,-185,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'PARFIN':([51,68,69,75,76,78,79,100,114,119,121,123,124,125,126,127,128,129,130,131,132,135,141,144,146,148,152,153,154,155,156,157,158,159,161,163,165,168,169,170,174,176,177,178,180,181,183,185,186,187,188,189,191,193,194,197,198,201,202,203,205,207,211,213,216,217,218,219,221,222,223,225,226,229,238,239,243,244,252,253,256,261,263,267,268,269,272,273,274,275,277,278,279,284,292,294,296,298,300,301,302,303,306,307,309,310,312,313,314,315,316,317,320,321,323,328,332,333,334,335,339,345,347,348,350,352,358,360,377,],[-47,-175,-175,99,-60,-58,-46,-61,-57,-184,-180,-184,-182,-183,-190,-182,-145,-144,-181,-193,-189,-186,-175,-194,-171,-187,-175,-173,-143,-136,-174,-172,-175,-175,-188,-91,-175,-192,206,-131,-175,-175,218,-156,-142,-154,-155,-159,-161,-160,-175,230,-31,-137,-141,235,-89,-187,-100,-103,-175,-175,-48,-42,260,-34,-187,-151,-149,-157,-150,-147,-132,-135,277,-175,-119,-122,-130,-191,-11,-146,298,-193,-140,-139,-38,-184,-40,-41,-97,-99,-102,-118,-123,-45,-184,-148,-133,-134,-175,-138,-96,-103,-120,-121,-128,-126,-125,-129,-127,-124,-194,334,-30,-175,-44,-175,-152,-175,-101,-33,-163,-168,-92,-85,-162,365,-167,]),'MULT':([121,123,124,125,127,128,129,130,132,146,148,152,153,154,156,157,159,178,180,181,183,185,186,187,218,219,221,223,225,261,273,275,277,298,306,334,335,347,348,358,377,],[-180,-184,-182,-183,-182,-145,-144,-181,-189,-171,-187,-175,-173,-143,-174,-172,196,-156,-142,-154,-155,-159,-161,-160,-187,-151,-149,-150,-147,-146,-184,-145,-97,-148,-96,-152,-175,-163,-168,-162,-167,]),'MINUS':([121,123,124,125,126,127,128,129,130,132,146,148,152,153,154,155,156,157,159,178,180,181,183,185,186,187,188,193,194,218,219,221,223,225,261,268,269,273,275,277,298,303,306,334,335,347,348,358,377,],[-180,-184,-182,-183,-190,-182,-145,-144,-181,-189,-171,-187,-175,-173,-143,-136,-174,-172,-175,-156,-142,-154,-155,-159,-161,-160,228,-137,-141,-187,-151,-149,-150,-147,-146,-140,-139,-184,-145,-97,-148,-138,-96,-152,-175,-163,-168,-162,-167,]),'LTOEQ':([121,123,124,125,126,127,128,129,130,132,146,148,152,153,154,155,156,157,159,170,178,180,181,183,185,186,187,188,193,194,207,218,219,221,223,225,226,229,261,268,269,273,275,277,298,300,301,303,306,334,335,347,348,358,377,],[-180,-184,-182,-183,-190,-182,-145,-144,-181,-189,-171,-187,-175,-173,-143,-136,-174,-172,-175,-131,-156,-142,-154,-155,-159,-161,-160,-175,-137,-141,247,-187,-151,-149,-150,-147,-132,-135,-146,-140,-139,-184,-145,-97,-148,-133,-134,-138,-96,-152,-175,-163,-168,-162,-167,]),',':([44,69,119,121,123,124,125,126,127,128,129,130,131,132,141,144,146,148,152,153,154,155,156,157,158,159,168,170,176,178,180,181,183,185,186,187,188,193,194,203,205,207,218,219,220,221,223,225,226,229,239,243,244,252,253,261,262,267,268,269,277,284,292,296,298,300,301,302,303,306,307,309,310,312,313,314,315,316,317,320,328,333,334,335,347,348,358,377,],[50,50,-184,-180,-184,-182,-183,-190,-182,-145,-144,-181,-193,-189,50,-194,-171,-187,-175,-173,-143,-136,-174,-172,190,-175,-192,-131,215,-156,-142,-154,-155,-159,-161,-160,-175,-137,-141,-103,-175,-175,-187,-151,-153,-149,-150,-147,-132,-135,280,-119,-122,-130,-191,-146,297,-193,-140,-139,-97,-118,-123,-184,-148,-133,-134,190,-138,-96,-103,-120,-121,-128,-126,-125,-129,-127,-124,-194,280,215,-152,-175,-163,-168,-162,-167,]),'ASGN':([88,108,134,166,305,325,327,337,364,369,],[-184,-90,162,-184,-175,-163,-94,162,-95,-93,]),'LT':([121,123,124,125,126,127,128,129,130,132,146,148,152,153,154,155,156,157,159,170,178,180,181,183,185,186,187,188,193,194,207,218,219,221,223,225,226,229,261,268,269,273,275,277,298,300,301,303,306,334,335,347,348,358,377,],[-180,-184,-182,-183,-190,-182,-145,-144,-181,-189,-171,-187,-175,-173,-143,-136,-174,-172,-175,-131,-156,-142,-154,-155,-159,-161,-160,-175,-137,-141,249,-187,-151,-149,-150,-147,-132,-135,-146,-140,-139,-184,-145,-97,-148,-133,-134,-138,-96,-152,-175,-163,-168,-162,-167,]),'PLUS':([121,123,124,125,126,127,128,129,130,132,146,148,152,153,154,155,156,157,159,178,180,181,183,185,186,187,188,193,194,218,219,221,223,225,261,268,269,273,275,277,298,303,306,334,335,347,348,358,377,],[-180,-184,-182,-183,-190,-182,-145,-144,-181,-189,-171,-187,-175,-173,-143,-136,-174,-172,-175,-156,-142,-154,-155,-159,-161,-160,227,-137,-141,-187,-151,-149,-150,-147,-146,-140,-139,-184,-145,-97,-148,-138,-96,-152,-175,-163,-168,-162,-167,]),'RES':([121,123,124,125,127,128,129,130,132,146,148,152,153,154,156,157,159,178,180,181,183,185,186,187,218,219,221,223,225,261,273,275,277,298,306,334,335,347,348,358,377,],[-180,-184,-182,-183,-182,-145,-144,-181,-189,-171,-187,-175,-173,-143,-174,-172,192,-156,-142,-154,-155,-159,-161,-160,-187,-151,-149,-150,-147,-146,-184,-145,-97,-148,-96,-152,-175,-163,-168,-162,-167,]),'CTEF':([106,120,135,137,145,160,162,165,182,190,192,195,196,199,200,204,227,228,231,232,233,234,236,240,241,242,246,247,248,249,250,251,264,265,266,270,280,282,283,286,287,288,289,290,291,297,338,362,363,],[130,-186,-186,130,130,130,-185,130,130,-35,-185,-185,-185,-39,130,-81,-185,-185,130,130,130,-158,130,130,-185,-185,-185,-185,-185,-185,-185,-185,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,]),';':([39,44,51,52,60,69,79,89,91,92,96,98,102,116,118,121,123,124,125,126,127,128,129,130,132,141,142,146,148,152,153,154,155,156,157,159,161,163,167,168,170,174,178,180,181,183,185,186,187,188,193,194,198,205,207,212,218,219,221,223,225,226,229,230,243,244,252,253,257,258,260,261,268,269,272,273,274,275,277,281,284,292,295,298,300,301,303,306,308,309,310,312,313,314,315,316,317,334,335,347,348,350,358,367,372,377,],[46,-175,-47,-11,65,-175,-46,-27,-28,110,-26,-25,-175,-105,-110,-180,-184,-182,-183,-190,-182,-145,-144,-181,-189,-175,-104,-171,-187,-175,-173,-143,-136,-174,-172,-175,-188,-91,204,-192,-131,-49,-156,-142,-154,-155,-159,-161,-160,-175,-137,-141,-89,-175,-175,-48,-187,-151,-149,-150,-147,-132,-135,-29,-119,-122,-130,-191,-11,-109,-32,-146,-140,-139,-38,-184,-40,-41,-97,-178,-118,-123,319,-148,-133,-134,-138,-96,329,-120,-121,-128,-126,-125,-129,-127,-124,-152,-175,-163,-168,-92,-162,-55,376,-167,]),'$end':([1,33,41,],[0,-176,-1,]),'GT':([121,123,124,125,126,127,128,129,130,132,146,148,152,153,154,155,156,157,159,170,178,180,181,183,185,186,187,188,193,194,207,218,219,221,223,225,226,229,261,268,269,273,275,277,298,300,301,303,306,334,335,347,348,358,377,],[-180,-184,-182,-183,-190,-182,-145,-144,-181,-189,-171,-187,-175,-173,-143,-136,-174,-172,-175,-131,-156,-142,-154,-155,-159,-161,-160,-175,-137,-141,246,-187,-151,-149,-150,-147,-132,-135,-146,-140,-139,-184,-145,-97,-148,-133,-134,-138,-96,-152,-175,-163,-168,-162,-167,]),'STRING':([13,18,32,40,46,65,68,77,172,319,],[-3,28,-3,28,-3,-3,-3,28,28,-3,]),'FOR':([8,11,19,21,22,46,54,55,56,57,62,65,67,70,73,82,84,86,90,93,95,110,140,173,210,285,293,304,318,330,331,336,341,343,349,353,366,370,374,375,379,380,],[-6,-7,-37,-36,-10,-175,-69,-71,-72,-175,-19,-175,-75,-67,-88,-75,-78,-77,-24,111,-23,-22,-175,-64,-75,-75,-175,-75,-64,-175,-75,-80,-177,-116,-79,-113,-75,-86,-75,-115,-87,-83,]),'AVERAGE':([106,120,122,135,137,145,160,162,165,182,190,192,195,196,199,200,204,227,228,231,232,233,234,236,240,241,242,246,247,248,249,250,251,264,265,266,270,280,282,283,286,287,288,289,290,291,297,338,362,363,],[-186,-186,149,-186,-186,-186,-186,-185,-186,-186,-35,-185,-185,-185,-39,-186,-81,-185,-185,-186,-186,-186,-158,-186,-186,-185,-185,-185,-185,-185,-185,-185,-185,-186,-186,-186,-186,-186,-186,-186,-186,-186,-186,-186,-186,-186,-186,-186,-186,-186,]),'ELSE':([330,342,],[-117,354,]),'RETURNS':([99,113,139,],[-59,-66,172,]),'FUNC':([7,8,9,11,12,16,17,19,21,22,26,46,54,55,56,65,70,171,208,],[-175,-6,-2,-7,-52,-52,-51,-37,-36,-10,35,-175,-69,-71,-72,-175,-67,-53,-50,]),'STDEVIATION':([106,120,122,135,137,145,160,162,165,182,190,192,195,196,199,200,204,227,228,231,232,233,234,236,240,241,242,246,247,248,249,250,251,264,265,266,270,280,282,283,286,287,288,289,290,291,297,338,362,363,],[-186,-186,147,-186,-186,-186,-186,-185,-186,-186,-35,-185,-185,-185,-39,-186,-81,-185,-185,-186,-186,-186,-158,-186,-186,-185,-185,-185,-185,-185,-185,-185,-185,-186,-186,-186,-186,-186,-186,-186,-186,-186,-186,-186,-186,-186,-186,-186,-186,-186,]),'[':([45,53,61,88,102,108,117,123,134,152,164,166,184,224,273,305,326,335,346,357,],[-11,-107,66,-184,-112,-90,143,-184,-165,-166,200,-184,-165,264,-184,-169,338,-170,-169,363,]),']':([71,80,121,123,124,125,126,127,128,129,130,132,146,148,152,153,154,155,156,157,159,168,170,175,178,180,181,183,185,186,187,188,193,194,205,207,214,218,219,221,223,225,226,229,237,243,244,252,253,261,268,269,276,277,284,292,298,299,300,301,303,306,309,310,312,313,314,315,316,317,322,334,335,347,348,351,358,359,368,373,377,],[-106,102,-180,-184,-182,-183,-190,-182,-145,-144,-181,-189,-171,-187,-175,-173,-143,-136,-174,-172,-175,-192,-131,-111,-156,-142,-154,-155,-159,-161,-160,-175,-137,-141,-175,-175,258,-187,-151,-149,-150,-147,-132,-135,-164,-119,-122,-130,-191,-146,-140,-139,305,-97,-118,-123,-148,-164,-133,-134,-138,-96,-120,-121,-128,-126,-125,-129,-127,-124,335,-152,-175,-163,-168,-164,-162,364,-164,377,-167,]),'ID':([3,4,8,11,19,21,22,27,28,30,31,35,36,37,38,43,46,47,50,54,55,56,57,59,62,64,65,67,70,73,82,84,86,90,95,101,105,106,110,115,120,135,136,137,140,145,160,162,165,173,179,182,190,192,195,196,199,200,204,210,215,227,228,231,232,233,234,236,240,241,242,246,247,248,249,250,251,259,264,265,266,270,280,282,283,285,286,287,288,289,290,291,293,297,304,318,329,330,331,336,338,340,341,343,349,353,362,363,366,370,374,375,379,380,],[-3,5,-6,-7,-37,-36,-10,-14,-15,-16,-68,-3,-13,44,45,49,-175,-108,-48,-69,-71,-72,-175,-11,-19,69,-175,-75,-67,88,-75,-78,-77,-24,-23,-43,119,123,-22,141,-186,-186,166,123,-175,123,123,-185,123,-64,220,123,-35,-185,-185,-185,-39,123,-81,-75,-35,-185,-185,123,123,123,-158,273,123,-185,-185,-185,-185,-185,-185,-185,-185,296,123,123,123,123,123,123,123,-75,123,123,123,123,123,123,-175,123,-75,-64,-84,-175,-75,-80,123,166,-177,-116,-79,-113,123,123,-75,-86,-75,-115,-87,-83,]),'IF':([8,11,19,21,22,46,54,55,56,57,62,65,67,70,73,82,84,86,90,95,97,110,140,173,210,285,293,304,318,330,331,336,341,343,349,353,366,370,374,375,379,380,],[-6,-7,-37,-36,-10,-175,-69,-71,-72,-175,-19,-175,-75,-67,-114,-75,-78,-77,-24,-23,112,-22,-175,-64,-75,-75,-175,-75,-64,-175,-75,-80,-177,-116,-79,-113,-75,-86,-75,-115,-87,-83,]),'AND':([121,123,124,125,126,127,128,129,130,132,146,148,152,153,154,155,156,157,159,168,170,178,180,181,183,185,186,187,188,193,194,205,207,218,219,221,223,225,226,229,252,253,261,268,269,273,275,277,292,298,300,301,303,306,312,313,314,315,316,317,334,335,347,348,358,377,],[-180,-184,-182,-183,-190,-182,-145,-144,-181,-189,-171,-187,-175,-173,-143,-136,-174,-172,-175,-192,-131,-156,-142,-154,-155,-159,-161,-160,-175,-137,-141,241,-175,-187,-151,-149,-150,-147,-132,-135,-130,-191,-146,-140,-139,-184,-145,-97,-123,-148,-133,-134,-138,-96,-128,-126,-125,-129,-127,-124,-152,-175,-163,-168,-162,-167,]),'CTES':([106,120,135,137,145,160,162,165,182,190,192,195,196,199,200,204,227,228,231,232,233,234,236,240,241,242,246,247,248,249,250,251,264,265,266,270,280,282,283,286,287,288,289,290,291,297,338,362,363,],[125,-186,-186,125,125,125,-185,125,125,-35,-185,-185,-185,-39,125,-81,-185,-185,125,125,125,-158,125,125,-185,-185,-185,-185,-185,-185,-185,-185,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,]),'FALSE':([106,120,135,137,145,160,162,165,182,190,192,195,196,199,200,204,227,228,231,232,233,234,236,240,241,242,246,247,248,249,250,251,264,265,266,270,280,282,283,286,287,288,289,290,291,297,338,362,363,],[127,-186,-186,127,127,127,-185,127,127,-35,-185,-185,-185,-39,127,-81,-185,-185,127,127,127,-158,127,127,-185,-185,-185,-185,-185,-185,-185,-185,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'STRUCT':([13,20,46,65,],[-70,32,-70,-70,]),'INT':([13,18,29,32,40,46,65,68,77,172,319,],[-3,-17,36,-3,-17,-3,-3,-3,-17,-17,-3,]),'EQ':([121,123,124,125,126,127,128,129,130,132,146,148,152,153,154,155,156,157,159,170,178,180,181,183,185,186,187,188,193,194,207,218,219,221,223,225,226,229,261,268,269,273,275,277,298,300,301,303,306,334,335,347,348,358,377,],[-180,-184,-182,-183,-190,-182,-145,-144,-181,-189,-171,-187,-175,-173,-143,-136,-174,-172,-175,-131,-156,-142,-154,-155,-159,-161,-160,-175,-137,-141,251,-187,-151,-149,-150,-147,-132,-135,-146,-140,-139,-184,-145,-97,-148,-133,-134,-138,-96,-152,-175,-163,-168,-162,-167,]),'FLOAT':([13,18,32,40,46,65,68,77,172,319,],[-3,27,-3,27,-3,-3,-3,27,27,-3,]),'BOOL':([13,18,32,40,46,65,68,77,172,319,],[-3,30,-3,30,-3,-3,-3,30,30,-3,]),'CTED':([66,106,120,135,137,143,145,160,162,165,182,190,192,195,196,199,200,204,227,228,231,232,233,234,236,240,241,242,246,247,248,249,250,251,264,265,266,270,280,282,283,286,287,288,289,290,291,297,338,362,363,],[71,121,-186,-186,121,175,121,121,-185,121,121,-35,-185,-185,-185,-39,121,-81,-185,-185,121,121,121,-158,121,121,-185,-185,-185,-185,-185,-185,-185,-185,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'GTOEQ':([121,123,124,125,126,127,128,129,130,132,146,148,152,153,154,155,156,157,159,170,178,180,181,183,185,186,187,188,193,194,207,218,219,221,223,225,226,229,261,268,269,273,275,277,298,300,301,303,306,334,335,347,348,358,377,],[-180,-184,-182,-183,-190,-182,-145,-144,-181,-189,-171,-187,-175,-173,-143,-136,-174,-172,-175,-131,-156,-142,-154,-155,-159,-161,-160,-175,-137,-141,250,-187,-151,-149,-150,-147,-132,-135,-146,-140,-139,-184,-145,-97,-148,-133,-134,-138,-96,-152,-175,-163,-168,-162,-167,]),'VARIANCE':([106,120,122,135,137,145,160,162,165,182,190,192,195,196,199,200,204,227,228,231,232,233,234,236,240,241,242,246,247,248,249,250,251,264,265,266,270,280,282,283,286,287,288,289,290,291,297,338,362,363,],[-186,-186,151,-186,-186,-186,-186,-185,-186,-186,-35,-185,-185,-185,-39,-186,-81,-185,-185,-186,-186,-186,-158,-186,-186,-185,-185,-185,-185,-185,-185,-185,-185,-186,-186,-186,-186,-186,-186,-186,-186,-186,-186,-186,-186,-186,-186,-186,-186,-186,]),'{':([5,6,27,28,30,34,36,42,48,99,113,206,209,235,245,254,271,354,361,365,],[-4,7,-14,-15,-16,-51,-13,-20,57,-59,140,-178,-65,-178,285,293,304,-179,366,370,]),'MAIN':([7,8,9,11,12,14,15,16,19,21,22,24,25,46,54,55,56,65,70,171,208,],[-175,-6,-2,-7,-175,-21,-9,-175,-37,-36,-10,34,-8,-175,-69,-71,-72,-175,-67,-53,-50,]),'}':([8,11,19,21,22,23,46,54,55,56,57,62,65,67,70,72,74,81,82,84,86,90,94,95,103,104,110,138,140,173,210,255,285,304,311,324,330,336,341,343,349,353,355,366,370,371,374,375,376,378,379,380,],[-6,-7,-37,-36,-10,33,-175,-69,-71,-72,-175,-19,-175,-175,-67,81,-74,-53,-175,-78,-77,-24,-73,-23,-18,-76,-22,171,-175,-64,-175,-63,-175,-175,330,336,-175,-80,-177,-116,-79,-113,-62,-175,-86,375,-175,-115,-54,379,-87,-83,]),'OR':([121,123,124,125,126,127,128,129,130,132,146,148,152,153,154,155,156,157,159,168,170,178,180,181,183,185,186,187,188,193,194,205,207,218,219,221,223,225,226,229,252,253,261,268,269,273,275,277,292,298,300,301,303,306,312,313,314,315,316,317,334,335,347,348,358,377,],[-180,-184,-182,-183,-190,-182,-145,-144,-181,-189,-171,-187,-175,-173,-143,-136,-174,-172,-175,-192,-131,-156,-142,-154,-155,-159,-161,-160,-175,-137,-141,242,-175,-187,-151,-149,-150,-147,-132,-135,-130,-191,-146,-140,-139,-184,-145,-97,-123,-148,-133,-134,-138,-96,-128,-126,-125,-129,-127,-124,-152,-175,-163,-168,-162,-167,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vars':([7,57,140,293,],[8,8,8,8,]),'errorOpSExp':([170,],[207,]),'errorMain':([14,],[24,]),'errorCyExp':([155,],[188,]),'opParamCall':([165,],[201,]),'cyTypeParam':([44,69,141,],[52,79,174,]),'saveReturnValue':([367,],[372,]),'takeFondo':([148,201,218,],[180,238,261,]),'forCycle':([73,],[86,]),'structType':([32,],[38,]),'changeCurrentScope':([9,],[12,]),'struct':([32,],[39,]),'secondLap':([116,],[142,]),'checkFunction':([88,123,273,],[109,109,109,]),'param':([68,319,],[76,332,]),'init':([134,337,],[163,350,]),'program':([0,],[1,]),'opMatrix':([335,],[347,]),'errorExpresion':([243,],[284,]),'main':([14,],[23,]),'return':([344,],[355,]),'errorParam':([101,],[115,]),'read':([73,],[91,]),'basicFunc':([147,149,151,],[178,181,183,]),'errorReturn':([344,],[356,]),'assignOptions':([134,],[161,]),'saveDimensionSize':([71,],[80,]),'flagParameters':([58,99,],[63,113,]),'cyRead':([176,333,],[216,345,]),'basicDeclare':([13,46,65,],[21,21,21,]),'cyInstruction':([73,],[94,]),'condition':([73,],[95,]),'expresion':([137,145,160,165,182,200,236,240,264,280,282,283,297,338,362,363,],[169,177,197,203,222,237,274,281,299,307,309,310,321,351,367,368,]),'term':([106,137,145,160,165,182,200,231,232,233,236,240,264,265,266,270,280,282,283,286,287,288,289,290,291,297,338,362,363,],[126,126,126,126,126,126,126,126,268,269,126,126,126,126,126,303,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'funcCall':([73,106,137,145,160,165,182,200,231,232,233,236,240,264,265,266,270,280,282,283,286,287,288,289,290,291,297,338,362,363,],[96,128,128,128,128,128,128,128,128,128,128,275,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,]),'saveCurrentTemps':([17,34,],[26,42,]),'returnFor':([352,],[360,]),'returnAssign':([379,],[380,]),'saveTypeParam':([50,211,212,],[59,256,257,]),'saltoBody':([329,],[340,]),'saveMain':([42,],[48,]),'errorVars':([7,57,140,293,],[10,10,10,10,]),'generateInitialQuadruple':([62,],[67,]),'whileCycle':([73,],[84,]),'performAvg':([181,],[221,]),'performAndOr':([168,],[205,]),'opFunctions':([12,16,],[14,25,]),'errorOpStruct':([152,],[184,]),'saveVariable':([88,119,123,166,273,296,],[108,144,152,108,152,320,]),'opVars':([7,57,140,293,],[9,62,173,318,]),'saveOperator':([162,192,195,196,227,228,241,242,246,247,248,249,250,251,],[199,232,233,234,265,266,282,283,286,287,288,289,290,291,]),'errorInit':([199,],[236,]),'saveToDimensionStacks':([134,184,],[164,224,]),'performVariance':([183,],[223,]),'performAssign':([161,],[198,]),'cyExpresion':([205,],[243,]),'performRead':([144,320,],[176,333,]),'print':([73,],[89,]),'body':([67,82,210,285,304,331,366,374,],[72,104,255,311,324,344,371,378,]),'saveSecondDimensionSize':([175,],[214,]),'errorOpParameters':([100,],[114,]),'repeatWhile':([336,],[349,]),'printTables':([33,],[41,]),'saveParamToDirProc':([76,],[100,]),'performStdDev':([178,],[219,]),'saveReturnType':([209,],[254,]),'opParameters':([68,],[75,]),'errorCondition':([73,],[97,]),'cte':([106,137,145,160,165,182,200,231,232,233,236,240,264,265,266,270,280,282,283,286,287,288,289,290,291,297,338,362,363,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'saveProc':([5,49,],[6,58,]),'assign':([73,136,340,],[98,167,352,]),'errorStructDeclare':([13,46,65,],[20,20,20,]),'cyExp':([188,],[226,]),'fix':([190,215,],[231,259,]),'instr':([73,],[82,]),'errorFact':([234,],[270,]),'errorProgram':([0,],[2,]),'cyTerm':([159,],[193,]),'createSecondDimension':([102,],[117,]),'rellenaBody':([370,],[374,]),'errorAssignMatrix':([364,],[369,]),'errorElse':([330,],[342,]),'cyDeclare':([46,65,],[54,70,]),'errorBody':([67,82,210,285,304,331,366,374,],[73,73,73,73,73,73,73,73,]),'basicLanguageFunctions':([122,],[148,]),'opStruct':([152,],[185,]),'errorOpAccess':([186,],[225,]),'checkNumParams':([277,],[306,]),'saveConstantBool':([124,127,],[153,156,]),'type':([18,40,77,172,],[31,47,101,209,]),'empty':([7,12,16,44,46,57,65,67,68,69,82,102,140,141,152,158,159,165,174,176,188,205,207,210,239,285,293,302,304,305,328,330,331,333,335,366,374,],[11,15,15,51,56,11,56,74,78,51,74,118,11,51,187,191,194,202,211,217,229,244,252,74,279,74,11,191,74,327,279,343,74,217,348,74,74,]),'errorBasicDeclare':([31,],[37,]),'function':([12,16,],[16,16,]),'performMulDiv':([132,],[159,]),'saveConstantString':([125,],[154,]),'checkParamType':([203,307,],[239,328,]),'errorType':([18,40,77,172,],[29,29,29,29,]),'errorForCycle':([73,],[93,]),'opAccess':([152,],[186,]),'basicStatements':([73,],[92,]),'structDeclare':([13,46,65,],[19,19,19,]),'verifyIndex':([237,299,351,368,],[276,322,359,373,]),'putFondo':([106,120,135,137,145,160,165,182,200,231,232,233,236,240,264,265,266,270,280,282,283,286,287,288,289,290,291,297,338,362,363,],[122,145,165,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'errorAssign':([108,],[134,]),'saveReturn':([107,204,],[133,240,]),'cyParam':([174,],[213,]),'cyPrint':([158,302,],[189,323,]),'saveConstantFloat':([130,],[157,]),'errorOpReturns':([113,],[139,]),'performAddSub':([126,],[155,]),'cyParamCall':([239,328,],[278,339,]),'declare':([13,46,65,],[22,55,55,]),'saveQuadruple':([173,318,],[210,331,]),'opSExp':([207,],[253,]),'optionalMatrix':([102,],[116,]),'performPrint':([131,267,],[158,302,]),'saveFalso':([206,235,281,],[245,271,308,]),'clearVarsTable':([81,171,],[103,208,]),'optionalElse':([330,],[341,]),'errorOpMatrix':([335,],[346,]),'initWith':([236,],[272,]),'createDimension':([53,],[61,]),'saveConstantInt':([121,],[146,]),'errorWhileCycle':([73,],[87,]),'sExp':([137,145,160,165,182,200,236,240,264,280,282,283,297,338,362,363,],[168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,]),'accessStruct':([325,347,],[337,358,]),'performRelational':([253,],[292,]),'errorCyParam':([174,],[212,]),'opReturns':([113,],[138,]),'saveStructID':([220,],[262,]),'assignMatrix':([305,],[325,]),'saveVerdadero':([354,],[361,]),'rellenaFalso':([341,],[353,]),'saveType':([3,13,32,35,46,65,68,319,],[4,18,40,43,18,18,77,77,]),'updateDimension':([305,346,],[326,357,]),'saveID':([45,52,59,256,257,],[53,60,64,294,295,]),'cycle':([73,],[90,]),'performNeg':([222,],[263,]),'errorFunction':([12,16,],[17,17,]),'exp':([106,137,145,160,165,182,200,231,236,240,264,265,266,280,282,283,286,287,288,289,290,291,297,338,362,363,],[131,170,170,170,170,170,170,267,170,170,170,300,301,170,170,170,312,313,314,315,316,317,170,170,170,170,]),'fact':([106,137,145,160,165,182,200,231,232,233,236,240,264,265,266,270,280,282,283,286,287,288,289,290,291,297,338,362,363,],[132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables','program',12,'p_program','CT.py',362),
  ('changeCurrentScope -> <empty>','changeCurrentScope',0,'p_changeCurrentScope','CT.py',366),
  ('saveType -> <empty>','saveType',0,'p_saveType','CT.py',376),
  ('saveProc -> <empty>','saveProc',0,'p_saveProc','CT.py',383),
  ('errorProgram -> <empty>','errorProgram',0,'p_errorProgram','CT.py',406),
  ('opVars -> vars','opVars',1,'p_opVars','CT.py',417),
  ('opVars -> empty','opVars',1,'p_opVars','CT.py',418),
  ('opFunctions -> function opFunctions','opFunctions',2,'p_opFunctions','CT.py',423),
  ('opFunctions -> empty','opFunctions',1,'p_opFunctions','CT.py',424),
  ('vars -> errorVars VARS declare','vars',3,'p_vars','CT.py',428),
  ('saveID -> <empty>','saveID',0,'p_saveID','CT.py',433),
  ('errorVars -> <empty>','errorVars',0,'p_errorVars','CT.py',477),
  ('type -> errorType INT','type',2,'p_type','CT.py',483),
  ('type -> FLOAT','type',1,'p_type','CT.py',484),
  ('type -> STRING','type',1,'p_type','CT.py',485),
  ('type -> BOOL','type',1,'p_type','CT.py',486),
  ('errorType -> <empty>','errorType',0,'p_errorType','CT.py',491),
  ('main -> errorMain MAIN saveCurrentTemps saveMain { opVars generateInitialQuadruple body } clearVarsTable','main',10,'p_main','CT.py',497),
  ('generateInitialQuadruple -> <empty>','generateInitialQuadruple',0,'p_generateInitialQuadruple','CT.py',501),
  ('saveMain -> <empty>','saveMain',0,'p_saveMain','CT.py',510),
  ('errorMain -> <empty>','errorMain',0,'p_errorMain','CT.py',519),
  ('instr -> basicStatements ;','instr',2,'p_instr','CT.py',525),
  ('instr -> condition','instr',1,'p_instr','CT.py',526),
  ('instr -> cycle','instr',1,'p_instr','CT.py',527),
  ('basicStatements -> assign','basicStatements',1,'p_basicStatements','CT.py',531),
  ('basicStatements -> funcCall','basicStatements',1,'p_basicStatements','CT.py',532),
  ('basicStatements -> print','basicStatements',1,'p_basicStatements','CT.py',533),
  ('basicStatements -> read','basicStatements',1,'p_basicStatements','CT.py',534),
  ('print -> PRINT PARINI exp performPrint cyPrint PARFIN','print',6,'p_print','CT.py',537),
  ('cyPrint -> , fix exp performPrint cyPrint','cyPrint',5,'p_cyPrint','CT.py',540),
  ('cyPrint -> empty','cyPrint',1,'p_cyPrint','CT.py',541),
  ('read -> READ PARINI ID saveVariable performRead cyRead PARFIN','read',7,'p_read','CT.py',544),
  ('cyRead -> , fix ID saveVariable performRead cyRead','cyRead',6,'p_cyRead','CT.py',547),
  ('cyRead -> empty','cyRead',1,'p_cyRead','CT.py',548),
  ('fix -> <empty>','fix',0,'p_fix','CT.py',551),
  ('declare -> basicDeclare','declare',1,'p_declare','CT.py',556),
  ('declare -> structDeclare','declare',1,'p_declare','CT.py',557),
  ('init -> ASGN saveOperator errorInit initWith','init',4,'p_init','CT.py',562),
  ('errorInit -> <empty>','errorInit',0,'p_errorInit','CT.py',566),
  ('initWith -> expresion','initWith',1,'p_initWith','CT.py',572),
  ('initWith -> funcCall','initWith',1,'p_initWith','CT.py',573),
  ('param -> saveType type errorParam ID cyTypeParam cyParam','param',6,'p_param','CT.py',578),
  ('errorParam -> <empty>','errorParam',0,'p_errorParam','CT.py',583),
  ('cyParam -> errorCyParam saveTypeParam saveID ; param','cyParam',5,'p_cyParam','CT.py',589),
  ('cyParam -> empty saveTypeParam saveID','cyParam',3,'p_cyParam','CT.py',590),
  ('cyTypeParam -> , saveTypeParam saveID ID cyTypeParam','cyTypeParam',5,'p_cyTypeParam','CT.py',595),
  ('cyTypeParam -> empty','cyTypeParam',1,'p_cyTypeParam','CT.py',596),
  ('saveTypeParam -> <empty>','saveTypeParam',0,'p_saveTypeParam','CT.py',600),
  ('errorCyParam -> <empty>','errorCyParam',0,'p_errorCyParam','CT.py',610),
  ('function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable','function',14,'p_function','CT.py',616),
  ('saveCurrentTemps -> <empty>','saveCurrentTemps',0,'p_saveCurrentTemps','CT.py',620),
  ('errorFunction -> <empty>','errorFunction',0,'p_errorFunction','CT.py',632),
  ('clearVarsTable -> <empty>','clearVarsTable',0,'p_clearVarsTable','CT.py',637),
  ('return -> errorReturn RETURN expresion saveReturnValue ;','return',5,'p_return','CT.py',680),
  ('saveReturnValue -> <empty>','saveReturnValue',0,'p_saveReturnValue','CT.py',684),
  ('errorReturn -> <empty>','errorReturn',0,'p_errorReturn','CT.py',705),
  ('opParameters -> param saveParamToDirProc errorOpParameters','opParameters',3,'p_opParameters','CT.py',711),
  ('opParameters -> empty','opParameters',1,'p_opParameters','CT.py',712),
  ('flagParameters -> <empty>','flagParameters',0,'p_flagParameters','CT.py',716),
  ('saveParamToDirProc -> <empty>','saveParamToDirProc',0,'p_saveParamToDirProc','CT.py',721),
  ('errorOpParameters -> <empty>','errorOpParameters',0,'p_errorOpParameters','CT.py',728),
  ('opReturns -> errorOpReturns RETURNS type saveReturnType { opVars saveQuadruple body return','opReturns',9,'p_opReturns','CT.py',734),
  ('opReturns -> { opVars saveQuadruple body','opReturns',4,'p_opReturns','CT.py',735),
  ('saveQuadruple -> <empty>','saveQuadruple',0,'p_saveQuadruple','CT.py',739),
  ('saveReturnType -> <empty>','saveReturnType',0,'p_saveReturnType','CT.py',745),
  ('errorOpReturns -> <empty>','errorOpReturns',0,'p_errorOpReturns','CT.py',754),
  ('basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare','basicDeclare',8,'p_basicDeclare','CT.py',760),
  ('errorBasicDeclare -> <empty>','errorBasicDeclare',0,'p_errorBasicDeclare','CT.py',765),
  ('structDeclare -> errorStructDeclare STRUCT struct ; cyDeclare','structDeclare',5,'p_structDeclare','CT.py',771),
  ('errorStructDeclare -> <empty>','errorStructDeclare',0,'p_errorStructDeclare','CT.py',776),
  ('cyDeclare -> declare','cyDeclare',1,'p_cyDeclare','CT.py',781),
  ('cyDeclare -> empty','cyDeclare',1,'p_cyDeclare','CT.py',782),
  ('body -> errorBody cyInstruction','body',2,'p_body','CT.py',787),
  ('body -> empty','body',1,'p_body','CT.py',788),
  ('errorBody -> <empty>','errorBody',0,'p_errorBody','CT.py',793),
  ('cyInstruction -> instr body','cyInstruction',2,'p_cyInstruction','CT.py',799),
  ('cycle -> forCycle','cycle',1,'p_cycle','CT.py',804),
  ('cycle -> whileCycle','cycle',1,'p_cycle','CT.py',805),
  ('whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile','whileCycle',11,'p_whileCycle','CT.py',810),
  ('repeatWhile -> <empty>','repeatWhile',0,'p_repeatWhile','CT.py',814),
  ('saveReturn -> <empty>','saveReturn',0,'p_saveReturn','CT.py',821),
  ('errorWhileCycle -> <empty>','errorWhileCycle',0,'p_errorWhileCycle','CT.py',825),
  ('forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign','forCycle',18,'p_forCycle','CT.py',831),
  ('saltoBody -> <empty>','saltoBody',0,'p_saltoBody','CT.py',835),
  ('returnFor -> <empty>','returnFor',0,'p_returnFor','CT.py',841),
  ('rellenaBody -> <empty>','rellenaBody',0,'p_rellenaBody','CT.py',853),
  ('returnAssign -> <empty>','returnAssign',0,'p_returnAssign','CT.py',861),
  ('errorForCycle -> <empty>','errorForCycle',0,'p_errorForCycle','CT.py',866),
  ('assign -> ID saveVariable errorAssign assignOptions performAssign','assign',5,'p_assign','CT.py',872),
  ('errorAssign -> <empty>','errorAssign',0,'p_errorAssign','CT.py',877),
  ('assignOptions -> init','assignOptions',1,'p_assignOptions','CT.py',883),
  ('assignOptions -> saveToDimensionStacks [ expresion verifyIndex ] assignMatrix accessStruct init','assignOptions',8,'p_assignOptions','CT.py',884),
  ('assignMatrix -> updateDimension [ expresion verifyIndex ] errorAssignMatrix','assignMatrix',6,'p_assignMatrix','CT.py',889),
  ('assignMatrix -> empty','assignMatrix',1,'p_assignMatrix','CT.py',890),
  ('errorAssignMatrix -> <empty>','errorAssignMatrix',0,'p_errorAssignMatrix','CT.py',895),
  ('funcCall -> ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams','funcCall',8,'p_funcCall','CT.py',900),
  ('checkNumParams -> <empty>','checkNumParams',0,'p_checkNumParams','CT.py',904),
  ('checkFunction -> <empty>','checkFunction',0,'p_checkFunction','CT.py',936),
  ('opParamCall -> expresion checkParamType cyParamCall','opParamCall',3,'p_opParamCall','CT.py',952),
  ('opParamCall -> empty','opParamCall',1,'p_opParamCall','CT.py',953),
  ('cyParamCall -> , expresion checkParamType cyParamCall','cyParamCall',4,'p_cyParamCall','CT.py',958),
  ('cyParamCall -> empty','cyParamCall',1,'p_cyParamCall','CT.py',959),
  ('checkParamType -> <empty>','checkParamType',0,'p_checkParamType','CT.py',964),
  ('struct -> structType ID saveID createDimension [ CTED saveDimensionSize ] optionalMatrix secondLap','struct',10,'p_struct','CT.py',991),
  ('secondLap -> <empty>','secondLap',0,'p_secondLap','CT.py',995),
  ('saveDimensionSize -> <empty>','saveDimensionSize',0,'p_saveDimensionSize','CT.py',1071),
  ('createDimension -> <empty>','createDimension',0,'p_createDimension','CT.py',1095),
  ('structType -> saveType type','structType',2,'p_structType','CT.py',1114),
  ('optionalMatrix -> createSecondDimension [ CTED saveSecondDimensionSize ]','optionalMatrix',5,'p_optionalMatrix','CT.py',1119),
  ('optionalMatrix -> empty','optionalMatrix',1,'p_optionalMatrix','CT.py',1120),
  ('saveSecondDimensionSize -> <empty>','saveSecondDimensionSize',0,'p_saveSecondDimensionSize','CT.py',1124),
  ('createSecondDimension -> <empty>','createSecondDimension',0,'p_createSecondDimension','CT.py',1151),
  ('condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso','condition',11,'p_condition','CT.py',1169),
  ('errorCondition -> <empty>','errorCondition',0,'p_errorCondition','CT.py',1174),
  ('optionalElse -> errorElse ELSE saveVerdadero { body }','optionalElse',6,'p_optionalElse','CT.py',1180),
  ('optionalElse -> empty','optionalElse',1,'p_optionalElse','CT.py',1181),
  ('errorElse -> <empty>','errorElse',0,'p_errorElse','CT.py',1186),
  ('expresion -> sExp performAndOr cyExpresion errorExpresion','expresion',4,'p_expresion','CT.py',1192),
  ('errorExpresion -> <empty>','errorExpresion',0,'p_errorExpresion','CT.py',1198),
  ('cyExpresion -> AND saveOperator expresion','cyExpresion',3,'p_cyExpresion','CT.py',1204),
  ('cyExpresion -> OR saveOperator expresion','cyExpresion',3,'p_cyExpresion','CT.py',1205),
  ('cyExpresion -> empty','cyExpresion',1,'p_cyExpresion','CT.py',1206),
  ('sExp -> exp errorOpSExp opSExp performRelational','sExp',4,'p_sExp','CT.py',1211),
  ('opSExp -> EQ saveOperator exp','opSExp',3,'p_opSExp','CT.py',1216),
  ('opSExp -> DIF saveOperator exp','opSExp',3,'p_opSExp','CT.py',1217),
  ('opSExp -> LTOEQ saveOperator exp','opSExp',3,'p_opSExp','CT.py',1218),
  ('opSExp -> GTOEQ saveOperator exp','opSExp',3,'p_opSExp','CT.py',1219),
  ('opSExp -> GT saveOperator exp','opSExp',3,'p_opSExp','CT.py',1220),
  ('opSExp -> LT saveOperator exp','opSExp',3,'p_opSExp','CT.py',1221),
  ('opSExp -> empty','opSExp',1,'p_opSExp','CT.py',1222),
  ('errorOpSExp -> <empty>','errorOpSExp',0,'p_errorOpSExp','CT.py',1226),
  ('exp -> term performAddSub errorCyExp cyExp','exp',4,'p_exp','CT.py',1232),
  ('cyExp -> PLUS saveOperator exp','cyExp',3,'p_cyExp','CT.py',1237),
  ('cyExp -> MINUS saveOperator exp','cyExp',3,'p_cyExp','CT.py',1238),
  ('cyExp -> empty','cyExp',1,'p_cyExp','CT.py',1239),
  ('errorCyExp -> <empty>','errorCyExp',0,'p_errorCyExp','CT.py',1244),
  ('term -> fact performMulDiv cyTerm','term',3,'p_term','CT.py',1249),
  ('cyTerm -> MULT saveOperator errorFact term','cyTerm',4,'p_cyTerm','CT.py',1254),
  ('cyTerm -> DIV saveOperator term','cyTerm',3,'p_cyTerm','CT.py',1255),
  ('cyTerm -> RES saveOperator term','cyTerm',3,'p_cyTerm','CT.py',1256),
  ('cyTerm -> empty','cyTerm',1,'p_cyTerm','CT.py',1257),
  ('fact -> putFondo basicLanguageFunctions takeFondo','fact',3,'p_fact','CT.py',1262),
  ('fact -> CTES saveConstantString','fact',2,'p_fact','CT.py',1263),
  ('fact -> cte','fact',1,'p_fact','CT.py',1264),
  ('fact -> funcCall','fact',1,'p_fact','CT.py',1265),
  ('fact -> PARINI putFondo expresion PARFIN takeFondo','fact',5,'p_fact','CT.py',1266),
  ('fact -> ID saveVariable opAccess errorOpAccess','fact',4,'p_fact','CT.py',1267),
  ('basicLanguageFunctions -> NEG PARINI expresion performNeg PARFIN','basicLanguageFunctions',5,'p_basicLanguageFunctions','CT.py',1272),
  ('basicLanguageFunctions -> AVERAGE basicFunc performAvg','basicLanguageFunctions',3,'p_basicLanguageFunctions','CT.py',1273),
  ('basicLanguageFunctions -> VARIANCE basicFunc performVariance','basicLanguageFunctions',3,'p_basicLanguageFunctions','CT.py',1274),
  ('basicLanguageFunctions -> STDEVIATION basicFunc performStdDev','basicLanguageFunctions',3,'p_basicLanguageFunctions','CT.py',1275),
  ('basicFunc -> PARINI ID saveStructID , expresion PARFIN','basicFunc',6,'p_basicFunc','CT.py',1278),
  ('saveStructID -> <empty>','saveStructID',0,'p_saveStructID','CT.py',1281),
  ('performAvg -> <empty>','performAvg',0,'p_performAvg','CT.py',1312),
  ('performVariance -> <empty>','performVariance',0,'p_performVariance','CT.py',1336),
  ('performStdDev -> <empty>','performStdDev',0,'p_performStdDev','CT.py',1360),
  ('performNeg -> <empty>','performNeg',0,'p_performNeg','CT.py',1384),
  ('errorFact -> <empty>','errorFact',0,'p_errorFact','CT.py',1405),
  ('opAccess -> opStruct','opAccess',1,'p_opAccess','CT.py',1411),
  ('opAccess -> empty','opAccess',1,'p_opAccess','CT.py',1412),
  ('errorOpAccess -> <empty>','errorOpAccess',0,'p_errorOpAccess','CT.py',1417),
  ('opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct','opStruct',8,'p_opStruct','CT.py',1422),
  ('accessStruct -> <empty>','accessStruct',0,'p_accessStruct','CT.py',1426),
  ('verifyIndex -> <empty>','verifyIndex',0,'p_verifyIndex','CT.py',1454),
  ('saveToDimensionStacks -> <empty>','saveToDimensionStacks',0,'p_saveToDimensionStacks','CT.py',1494),
  ('errorOpStruct -> <empty>','errorOpStruct',0,'p_errorOpStruct','CT.py',1529),
  ('opMatrix -> errorOpMatrix updateDimension [ expresion verifyIndex ]','opMatrix',6,'p_opMatrix','CT.py',1535),
  ('opMatrix -> empty','opMatrix',1,'p_opMatrix','CT.py',1536),
  ('updateDimension -> <empty>','updateDimension',0,'p_updateDimension','CT.py',1540),
  ('errorOpMatrix -> <empty>','errorOpMatrix',0,'p_errorOpMatrix','CT.py',1556),
  ('cte -> CTED saveConstantInt','cte',2,'p_cte','CT.py',1561),
  ('cte -> CTEF saveConstantFloat','cte',2,'p_cte','CT.py',1562),
  ('cte -> TRUE saveConstantBool','cte',2,'p_cte','CT.py',1563),
  ('cte -> FALSE saveConstantBool','cte',2,'p_cte','CT.py',1564),
  ('empty -> <empty>','empty',0,'p_empty','CT.py',1568),
  ('printTables -> <empty>','printTables',0,'p_printTables','CT.py',1573),
  ('rellenaFalso -> <empty>','rellenaFalso',0,'p_rellenaFalso','CT.py',1597),
  ('saveFalso -> <empty>','saveFalso',0,'p_saveFalso','CT.py',1602),
  ('saveVerdadero -> <empty>','saveVerdadero',0,'p_saveVerdadero','CT.py',1615),
  ('saveConstantInt -> <empty>','saveConstantInt',0,'p_saveConstantInt','CT.py',1622),
  ('saveConstantFloat -> <empty>','saveConstantFloat',0,'p_saveConstantFloat','CT.py',1639),
  ('saveConstantBool -> <empty>','saveConstantBool',0,'p_saveConstantBool','CT.py',1656),
  ('saveConstantString -> <empty>','saveConstantString',0,'p_saveConstantString','CT.py',1673),
  ('saveVariable -> <empty>','saveVariable',0,'p_saveVariable','CT.py',1692),
  ('saveOperator -> <empty>','saveOperator',0,'p_saveOperator','CT.py',1715),
  ('putFondo -> <empty>','putFondo',0,'p_putFondo','CT.py',1747),
  ('takeFondo -> <empty>','takeFondo',0,'p_takeFondo','CT.py',1752),
  ('performAssign -> <empty>','performAssign',0,'p_performAssign','CT.py',1759),
  ('performMulDiv -> <empty>','performMulDiv',0,'p_performMulDiv','CT.py',1780),
  ('performAddSub -> <empty>','performAddSub',0,'p_performAddSub','CT.py',1801),
  ('performRelational -> <empty>','performRelational',0,'p_performRelational','CT.py',1822),
  ('performAndOr -> <empty>','performAndOr',0,'p_performAndOr','CT.py',1843),
  ('performPrint -> <empty>','performPrint',0,'p_performPrint','CT.py',1864),
  ('performRead -> <empty>','performRead',0,'p_performRead','CT.py',1868),
]
