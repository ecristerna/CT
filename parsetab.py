
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '455BD8570657B62F9E02EE245340D913'
    
_lr_action_items = {'$end':([1,36,43,],[0,-159,-1,]),'RETURN':([8,11,18,21,23,24,59,61,68,69,70,72,75,78,82,83,84,86,87,91,100,106,108,268,284,285,294,296,297,304,310,311,315,],[-6,-7,-28,-27,-26,-10,-158,-158,-66,-68,-69,-64,-71,-158,-158,-75,-74,-70,-23,-22,-62,-73,-21,-76,-158,-158,-98,-101,-158,-52,314,-78,-100,]),'VARS':([7,10,53,164,285,],[-12,13,-12,-12,-12,]),'DIF':([123,126,127,129,130,131,132,133,134,135,137,151,153,157,158,160,176,177,178,180,182,192,193,204,206,216,217,218,219,221,224,231,261,262,274,275,276,283,292,293,312,],[-156,-154,-140,-133,-122,-157,-135,-134,-155,-120,-129,-88,-158,-127,185,-158,-143,-142,-145,-144,-158,-128,-132,-140,-135,-137,-152,-153,-151,-121,-125,-139,-136,-131,-158,-123,-124,-130,-146,-149,-148,]),'WHILE':([8,11,18,21,23,24,53,59,61,63,68,69,70,72,74,78,82,83,84,85,87,91,100,108,164,199,201,234,268,284,285,294,296,297,299,308,311,315,],[-6,-7,-28,-27,-26,-10,-158,-158,-158,-72,-66,-68,-69,-64,-77,-158,-72,-75,-74,107,-23,-22,-62,-21,-158,-72,-72,-72,-76,-158,-158,-98,-101,-72,-72,-72,-78,-100,]),'PROGRAM':([0,2,],[-5,3,]),'DIV':([123,126,127,129,131,132,133,134,137,151,153,160,176,177,178,180,204,206,216,217,218,219,231,261,274,292,293,312,],[-156,-154,-140,-133,-157,-135,-134,-155,-129,-88,-158,194,-143,-142,-145,-144,-140,-135,-137,-152,-153,-151,-139,-136,-158,-146,-149,-148,]),'.':([127,153,204,],[-140,179,-140,]),'TRUE':([111,119,136,138,148,150,155,159,167,168,169,171,172,183,184,185,186,187,188,194,195,212,213,215,222,223,225,226,227,228,229,230,232,233,245,248,253,254,263,271,302,314,],[123,123,-138,123,-126,123,123,123,123,123,123,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,123,123,123,-126,-126,123,123,123,123,123,123,123,-141,123,123,123,123,123,-126,123,123,]),'[':([29,30,32,39,49,52,62,80,90,110,117,121,127,144,153,175,204,211,274,291,],[-14,-15,-16,-13,60,-94,-95,103,-140,-81,-103,150,-140,-140,-147,215,-140,248,-150,302,]),'MULT':([123,126,127,129,131,132,133,134,137,151,153,160,176,177,178,180,204,206,216,217,218,219,231,261,274,292,293,312,],[-156,-154,-140,-133,-157,-135,-134,-155,-129,-88,-158,195,-143,-142,-145,-144,-140,-135,-137,-152,-153,-151,-139,-136,-158,-146,-149,-148,]),'LAST':([179,],[218,]),'MINUS':([123,126,127,129,130,131,132,133,134,137,151,153,157,160,176,177,178,180,182,192,193,204,206,216,217,218,219,231,261,262,274,283,292,293,312,],[-156,-154,-140,-133,-122,-157,-135,-134,-155,-129,-88,-158,-127,-158,-143,-142,-145,-144,223,-128,-132,-140,-135,-137,-152,-153,-151,-139,-136,-131,-158,-130,-146,-149,-148,]),')':([111,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,146,147,149,151,152,153,154,156,157,158,160,161,173,174,176,177,178,180,181,182,189,190,192,193,203,204,205,206,214,216,217,218,219,220,221,224,231,243,244,250,251,255,256,257,258,259,260,261,262,269,272,274,275,276,277,278,279,280,281,282,283,289,292,293,300,312,],[-158,151,-156,-106,-90,-154,-140,-158,-133,-122,-157,-135,-134,-155,-120,-129,-83,-80,-82,-88,-158,-158,-89,-92,-127,-158,-158,196,-107,-110,-143,-142,-145,-144,-158,-158,-119,-111,-128,-132,-30,-140,-33,-32,-105,-137,-152,-153,-151,-91,-121,-125,-139,-29,-31,-108,-109,-112,-112,-112,-112,-112,-112,-136,-131,288,-84,-158,-123,-124,-117,-115,-114,-118,-116,-113,-130,-35,-146,-149,-34,-148,]),'LTOEQ':([123,126,127,129,130,131,132,133,134,135,137,151,153,157,158,160,176,177,178,180,182,192,193,204,206,216,217,218,219,221,224,231,261,262,274,275,276,283,292,293,312,],[-156,-154,-140,-133,-122,-157,-135,-134,-155,-120,-129,-88,-158,-127,184,-158,-143,-142,-145,-144,-158,-128,-132,-140,-135,-137,-152,-153,-151,-121,-125,-139,-136,-131,-158,-123,-124,-130,-146,-149,-148,]),',':([46,99,123,124,126,127,128,129,130,131,132,133,134,135,137,151,152,153,157,158,160,165,173,174,176,177,178,180,181,182,189,190,192,193,214,216,217,218,219,221,224,231,250,251,255,256,257,258,259,260,261,262,274,275,276,277,278,279,280,281,282,283,292,293,312,],[55,55,-156,-106,-154,-140,155,-133,-122,-157,-135,-134,-155,-120,-129,-88,-158,-158,-127,-158,-158,55,-107,-110,-143,-142,-145,-144,155,-158,-119,-111,-128,-132,-105,-137,-152,-153,-151,-121,-125,-139,-108,-109,-112,-112,-112,-112,-112,-112,-136,-131,-158,-123,-124,-117,-115,-114,-118,-116,-113,-130,-146,-149,-148,]),'ASGN':([90,110,121,144,211,247,249,290,301,],[-140,-81,148,-140,-158,271,-86,-87,-85,]),'FIRST':([179,],[217,]),'LT':([123,126,127,129,130,131,132,133,134,135,137,151,153,157,158,160,176,177,178,180,182,192,193,204,206,216,217,218,219,221,224,231,261,262,274,275,276,283,292,293,312,],[-156,-154,-140,-133,-122,-157,-135,-134,-155,-120,-129,-88,-158,-127,186,-158,-143,-142,-145,-144,-158,-128,-132,-140,-135,-137,-152,-153,-151,-121,-125,-139,-136,-131,-158,-123,-124,-130,-146,-149,-148,]),'PLUS':([123,126,127,129,130,131,132,133,134,137,151,153,157,160,176,177,178,180,182,192,193,204,206,216,217,218,219,231,261,262,274,283,292,293,312,],[-156,-154,-140,-133,-122,-157,-135,-134,-155,-129,-88,-158,-127,-158,-143,-142,-145,-144,222,-128,-132,-140,-135,-137,-152,-153,-151,-139,-136,-131,-158,-130,-146,-149,-148,]),'BOOL':([13,19,42,58,59,61,76,78,79,97,198,298,],[-3,32,32,32,-3,-3,-3,-3,32,32,32,-3,]),';':([46,48,50,56,57,66,80,88,92,94,99,102,104,116,117,123,124,126,127,129,130,131,132,133,134,135,137,142,145,146,147,149,151,152,153,157,158,160,165,173,174,176,177,178,180,182,189,190,192,193,200,202,203,204,205,206,214,216,217,218,219,221,224,231,239,243,244,250,251,255,256,257,258,259,260,261,262,267,272,274,275,276,277,278,279,280,281,282,283,287,289,292,293,300,312,316,],[-158,59,61,-45,-11,78,-158,108,-25,-24,-158,-93,-97,-44,-103,-156,-106,-154,-140,-133,-122,-157,-135,-134,-155,-120,-129,-96,167,-83,-80,-82,-88,-158,-158,-127,-158,-158,-158,-107,-110,-143,-142,-145,-144,-158,-119,-111,-128,-132,-47,242,-30,-140,-33,-32,-105,-137,-152,-153,-151,-121,-125,-139,-11,-29,-31,-108,-109,-112,-112,-112,-112,-112,-112,-136,-131,-46,-84,-158,-123,-124,-117,-115,-114,-118,-116,-113,-130,298,-35,-146,-149,-34,-148,317,]),':':([29,30,32,39,67,123,126,131,134,207,209,210,246,],[-14,-15,-16,-13,79,-156,-154,-157,-155,245,-37,-38,-36,]),'PARINI':([41,45,47,51,54,64,90,107,109,111,112,119,127,136,138,148,150,155,159,167,168,171,172,183,184,185,186,187,188,194,195,204,212,213,215,222,223,225,226,227,228,229,230,232,233,248,253,254,263,271,302,314,],[-104,-4,58,-104,-55,76,111,119,120,136,138,136,111,-138,136,169,136,136,136,136,136,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,111,136,136,136,-126,-126,136,136,136,136,136,136,136,-141,136,136,136,136,-126,136,136,]),'GT':([123,126,127,129,130,131,132,133,134,135,137,151,153,157,158,160,176,177,178,180,182,192,193,204,206,216,217,218,219,221,224,231,261,262,274,275,276,283,292,293,312,],[-156,-154,-140,-133,-122,-157,-135,-134,-155,-120,-129,-88,-158,-127,183,-158,-143,-142,-145,-144,-158,-128,-132,-140,-135,-137,-152,-153,-151,-121,-125,-139,-136,-131,-158,-123,-124,-130,-146,-149,-148,]),'STRING':([13,19,42,58,59,61,76,78,79,97,198,298,],[-3,30,30,30,-3,-3,-3,-3,30,30,30,-3,]),'FOR':([8,11,18,21,23,24,53,59,61,63,68,69,70,72,74,78,82,83,84,87,89,91,100,108,164,199,201,234,268,284,285,294,296,297,299,308,311,315,],[-6,-7,-28,-27,-26,-10,-158,-158,-158,-72,-66,-68,-69,-64,-79,-158,-72,-75,-74,-23,109,-22,-62,-21,-158,-72,-72,-72,-76,-158,-158,-98,-101,-72,-72,-72,-78,-100,]),'ELSE':([284,295,],[-102,303,]),'RETURNS':([113,139,163,],[-55,-61,198,]),'FUNC':([7,8,9,11,12,16,17,18,21,23,24,59,61,68,69,70,72,78,100,197,235,],[-158,-6,-2,-7,-49,-49,28,-28,-27,-26,-10,-158,-158,-66,-68,-69,-64,-158,-62,-50,-48,]),'PARFIN':([29,30,32,39,56,76,95,96,98,99,101,114,116,123,124,126,127,129,130,131,132,133,134,135,137,140,143,151,152,153,157,158,160,165,173,174,176,177,178,180,182,189,190,191,192,193,200,209,210,214,216,217,218,219,221,224,231,238,240,246,250,251,255,256,257,258,259,260,261,262,266,270,274,275,276,277,278,279,280,281,282,283,286,292,293,305,312,],[-14,-15,-16,-13,-45,-158,113,-56,-54,-158,117,-57,-44,-156,-106,-154,-140,-133,-122,-157,-135,-134,-155,-120,-129,-53,166,-88,-158,-158,-127,-158,-158,-158,-107,-110,-143,-142,-145,-144,-158,-119,-111,231,-128,-132,-158,-37,-38,-105,-137,-152,-153,-151,-121,-125,-139,-11,-40,-36,-108,-109,-112,-112,-112,-112,-112,-112,-136,-131,-46,289,-158,-123,-124,-117,-115,-114,-118,-116,-113,-130,-43,-146,-149,-42,-148,]),']':([71,118,123,124,126,127,129,130,131,132,133,134,135,137,151,152,153,157,158,160,170,173,174,176,177,178,180,182,189,190,192,193,214,216,217,218,219,221,224,231,250,251,252,255,256,257,258,259,260,261,262,273,274,275,276,277,278,279,280,281,282,283,292,293,307,312,],[80,142,-156,-106,-154,-140,-133,-122,-157,-135,-134,-155,-120,-129,-88,-158,-158,-127,-158,-158,211,-107,-110,-143,-142,-145,-144,-158,-119,-111,-128,-132,-105,-137,-152,-153,-151,-121,-125,-139,-108,-109,274,-112,-112,-112,-112,-112,-112,-136,-131,290,-158,-123,-124,-117,-115,-114,-118,-116,-113,-130,-146,-149,312,-148,]),'ID':([3,4,8,11,18,21,23,24,28,29,30,32,33,34,35,38,39,40,53,55,59,61,63,65,68,69,70,72,74,77,78,82,83,84,87,91,100,108,111,115,119,120,136,138,141,148,150,155,159,164,167,168,169,171,172,183,184,185,186,187,188,194,195,199,201,212,213,215,222,223,225,226,227,228,229,230,232,233,234,242,245,248,253,254,263,268,271,284,285,294,296,297,299,302,308,311,314,315,],[-3,5,-6,-7,-28,-27,-26,-10,-3,-14,-15,-16,-63,41,42,45,-13,46,-158,-11,-158,-158,-72,-46,-66,-68,-69,-64,90,99,-158,-72,-75,-74,-23,-22,-62,-21,127,-41,127,144,-138,127,165,-126,127,127,127,-158,127,204,210,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-72,-72,127,127,127,-126,-126,127,127,127,127,127,127,127,-141,-72,144,210,127,127,127,127,-76,-126,-158,-158,-98,-101,-72,-72,127,-72,-78,127,-100,]),'IF':([8,11,18,21,23,24,53,59,61,63,68,69,70,72,74,78,82,83,84,87,91,93,100,108,164,199,201,234,268,284,285,294,296,297,299,308,311,315,],[-6,-7,-28,-27,-26,-10,-158,-158,-158,-72,-66,-68,-69,-64,-99,-158,-72,-75,-74,-23,-22,112,-62,-21,-158,-72,-72,-72,-76,-158,-158,-98,-101,-72,-72,-72,-78,-100,]),'AND':([123,124,126,127,129,130,131,132,133,134,135,137,151,152,153,157,158,160,176,177,178,180,182,189,190,192,193,204,206,216,217,218,219,221,224,231,255,256,257,258,259,260,261,262,274,275,276,277,278,279,280,281,282,283,292,293,312,],[-156,-106,-154,-140,-133,-122,-157,-135,-134,-155,-120,-129,-88,171,-158,-127,-158,-158,-143,-142,-145,-144,-158,-119,-111,-128,-132,-140,-135,-137,-152,-153,-151,-121,-125,-139,-112,-112,-112,-112,-112,-112,-136,-131,-158,-123,-124,-117,-115,-114,-118,-116,-113,-130,-146,-149,-148,]),'CTES':([111,119,136,138,148,150,155,159,167,168,169,171,172,183,184,185,186,187,188,194,195,208,212,213,215,222,223,225,226,227,228,229,230,232,233,245,248,253,254,263,271,302,314,],[129,129,-138,129,-126,129,129,129,129,129,-39,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,246,129,129,129,-126,-126,129,129,129,129,129,129,129,-141,-39,129,129,129,129,-126,129,129,]),'FALSE':([111,119,136,138,148,150,155,159,167,168,169,171,172,183,184,185,186,187,188,194,195,212,213,215,222,223,225,226,227,228,229,230,232,233,245,248,253,254,263,271,302,314,],[131,131,-138,131,-126,131,131,131,131,131,131,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,131,131,131,-126,-126,131,131,131,131,131,131,131,-141,131,131,131,131,131,-126,131,131,]),'STRUCT':([13,22,59,61,78,],[-65,35,-65,-65,-65,]),'INT':([13,19,31,42,58,59,61,76,78,79,97,198,298,],[-3,-17,39,-17,-17,-3,-3,-3,-3,-17,-17,-17,-3,]),'EQ':([123,126,127,129,130,131,132,133,134,135,137,151,153,157,158,160,176,177,178,180,182,192,193,204,206,216,217,218,219,221,224,231,261,262,274,275,276,283,292,293,312,],[-156,-154,-140,-133,-122,-157,-135,-134,-155,-120,-129,-88,-158,-127,188,-158,-143,-142,-145,-144,-158,-128,-132,-140,-135,-137,-152,-153,-151,-121,-125,-139,-136,-131,-158,-123,-124,-130,-146,-149,-148,]),'FLOAT':([13,19,42,58,59,61,76,78,79,97,198,298,],[-3,29,29,29,-3,-3,-3,-3,29,29,29,-3,]),'OR':([123,124,126,127,129,130,131,132,133,134,135,137,151,152,153,157,158,160,176,177,178,180,182,189,190,192,193,204,206,216,217,218,219,221,224,231,255,256,257,258,259,260,261,262,274,275,276,277,278,279,280,281,282,283,292,293,312,],[-156,-106,-154,-140,-133,-122,-157,-135,-134,-155,-120,-129,-88,172,-158,-127,-158,-158,-143,-142,-145,-144,-158,-119,-111,-128,-132,-140,-135,-137,-152,-153,-151,-121,-125,-139,-112,-112,-112,-112,-112,-112,-136,-131,-158,-123,-124,-117,-115,-114,-118,-116,-113,-130,-146,-149,-148,]),'DICT':([13,20,42,59,61,78,],[-67,34,51,-67,-67,-67,]),'CTED':([60,103,111,119,136,138,148,150,155,159,167,168,169,171,172,183,184,185,186,187,188,194,195,212,213,215,222,223,225,226,227,228,229,230,232,233,245,248,253,254,263,271,302,314,],[71,118,126,126,-138,126,-126,126,126,126,126,126,126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,126,126,126,-126,-126,126,126,126,126,126,126,126,-141,126,126,126,126,126,-126,126,126,]),'GTOEQ':([123,126,127,129,130,131,132,133,134,135,137,151,153,157,158,160,176,177,178,180,182,192,193,204,206,216,217,218,219,221,224,231,261,262,274,275,276,283,292,293,312,],[-156,-154,-140,-133,-122,-157,-135,-134,-155,-120,-129,-88,-158,-127,187,-158,-143,-142,-145,-144,-158,-128,-132,-140,-135,-137,-152,-153,-151,-121,-125,-139,-136,-131,-158,-123,-124,-130,-146,-149,-148,]),'{':([5,6,29,30,32,37,39,44,113,139,166,196,236,265,288,303,],[-4,7,-14,-15,-16,-19,-13,53,-55,164,201,234,-60,285,299,308,]),'MAIN':([7,8,9,11,12,14,15,16,18,21,23,24,26,27,59,61,68,69,70,72,78,100,197,235,],[-158,-6,-2,-7,-158,-20,-9,-158,-28,-27,-26,-10,37,-8,-158,-158,-66,-68,-69,-64,-158,-62,-50,-48,]),'}':([8,11,18,21,23,24,25,53,59,61,63,68,69,70,72,73,75,78,81,82,83,84,86,87,91,100,105,106,108,162,164,199,201,234,237,241,264,268,284,294,296,299,306,308,309,311,313,315,317,],[-6,-7,-28,-27,-26,-10,36,-158,-158,-158,-158,-66,-68,-69,-64,81,-71,-158,-50,-158,-75,-74,-70,-23,-22,-62,-18,-73,-21,197,-158,-158,-158,-158,-59,268,284,-76,-158,-98,-101,-158,311,-158,-58,-78,315,-100,-51,]),'CTEF':([111,119,136,138,148,150,155,159,167,168,169,171,172,183,184,185,186,187,188,194,195,212,213,215,222,223,225,226,227,228,229,230,232,233,245,248,253,254,263,271,302,314,],[134,134,-138,134,-126,134,134,134,134,134,134,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,134,134,134,-126,-126,134,134,134,134,134,134,134,-141,134,134,134,134,134,-126,134,134,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vars':([7,53,164,285,],[8,8,8,8,]),'errorOpSExp':([135,],[158,]),'errorMain':([14,],[26,]),'errorCyExp':([157,],[182,]),'opParamCall':([111,],[122,]),'cyTypeParam':([46,99,165,],[57,116,200,]),'takeFondo':([231,],[261,]),'forCycle':([74,],[84,]),'structType':([42,],[49,]),'changeCurrentScope':([9,],[12,]),'struct':([42,],[50,]),'param':([76,298,],[96,305,]),'init':([121,247,],[149,272,]),'program':([0,],[1,]),'dict':([41,51,],[48,62,]),'opMatrix':([274,],[292,]),'errorExpresion':([173,],[214,]),'main':([14,],[25,]),'return':([304,],[309,]),'errorParam':([115,],[141,]),'errorElse':([284,],[295,]),'errorReturn':([304,],[310,]),'assignOptions':([121,],[147,]),'flagParameters':([54,113,],[64,139,]),'basicDeclare':([13,59,61,78,],[23,23,23,23,]),'cyInstruction':([74,],[86,]),'condition':([74,],[91,]),'expresion':([111,119,138,150,155,159,167,168,212,213,215,248,302,314,],[128,143,161,170,181,191,202,205,250,251,252,273,307,316,]),'term':([111,119,138,150,155,159,167,168,212,213,215,225,226,227,228,229,230,232,248,253,254,263,302,314,],[130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,262,130,130,130,283,130,130,]),'funcCall':([74,111,119,138,150,155,159,167,168,212,213,215,225,226,227,228,229,230,232,248,253,254,263,302,314,],[92,132,132,132,132,132,132,132,206,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,]),'initDict':([121,],[146,]),'saveTypeParam':([65,266,267,],[77,286,287,]),'dictDeclare':([13,59,61,78,],[18,18,18,18,]),'saveMain':([37,],[44,]),'errorVars':([7,53,164,285,],[10,10,10,10,]),'whileCycle':([74,],[83,]),'errorDictDeclare':([13,59,61,78,],[20,20,20,20,]),'performAndOr':([124,],[152,]),'opFunctions':([12,16,],[14,27,]),'errorOpStruct':([153,],[175,]),'saveVariable':([90,127,144,204,],[110,153,110,153,]),'opVars':([7,53,164,285,],[9,63,199,297,]),'saveOperator':([148,171,172,183,184,185,186,187,188,194,195,222,223,271,],[168,212,213,225,226,227,228,229,230,232,233,253,254,168,]),'errorInit':([203,],[243,]),'performAssign':([205,],[244,]),'cyExpresion':([152,],[173,]),'body':([63,82,199,201,234,297,299,308,],[73,106,237,241,264,304,306,313,]),'errorOpParameters':([114,],[140,]),'printTables':([36,],[43,]),'saveParamToDirProc':([96,],[114,]),'saveReturnType':([236,],[265,]),'opParameters':([76,],[95,]),'errorCondition':([74,],[93,]),'cte':([111,119,138,150,155,159,167,168,169,212,213,215,225,226,227,228,229,230,232,245,248,253,254,263,302,314,],[133,133,133,133,133,133,133,133,209,133,133,133,133,133,133,133,133,133,133,209,133,133,133,133,133,133,]),'saveProc':([5,45,],[6,54,]),'assign':([74,120,242,],[94,145,269,]),'errorStructDeclare':([13,59,61,78,],[22,22,22,22,]),'cyExp':([182,],[221,]),'instr':([74,],[82,]),'errorFact':([233,],[263,]),'errorProgram':([0,],[2,]),'cyTerm':([160,],[192,]),'errorAssignMatrix':([290,],[301,]),'cyDeclare':([59,61,78,],[68,72,100,]),'errorBody':([63,82,199,201,234,297,299,308,],[74,74,74,74,74,74,74,74,]),'opStruct':([153,],[177,]),'errorOpAccess':([178,],[216,]),'type':([19,42,58,79,97,198,],[33,52,67,101,115,236,]),'dictIndex':([179,],[219,]),'empty':([7,12,16,46,53,59,61,63,76,78,80,82,99,111,128,152,153,158,160,164,165,181,182,199,200,201,211,234,274,284,285,297,299,308,],[11,15,15,56,11,70,70,75,98,70,104,75,56,125,156,174,180,189,193,11,56,156,224,75,238,75,249,75,293,296,11,75,75,75,]),'errorBasicDeclare':([33,],[40,]),'function':([12,16,],[16,16,]),'performMulDiv':([137,],[160,]),'errorOpMatrix':([274,],[291,]),'opDictionary':([153,],[176,]),'errorType':([19,42,58,79,97,198,],[31,31,31,31,31,31,]),'errorForCycle':([74,],[89,]),'opAccess':([153,],[178,]),'basicStatements':([74,],[88,]),'structDeclare':([13,59,61,78,],[21,21,21,21,]),'putFondo':([136,],[159,]),'errorAssign':([110,],[121,]),'cyParam':([200,],[240,]),'opSExp':([158,],[190,]),'errorOpReturns':([139,],[163,]),'performAddSub':([130,],[157,]),'cyParamCall':([128,181,],[154,220,]),'declare':([13,59,61,78,],[24,69,69,69,]),'optionalMatrix':([80,],[102,]),'clearVarsTable':([81,197,],[105,235,]),'optionalElse':([284,],[294,]),'dictType':([169,245,],[207,270,]),'initWith':([168,],[203,]),'errorWhileCycle':([74,],[85,]),'sExp':([111,119,138,150,155,159,167,168,212,213,215,248,302,314,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'performRelational':([255,256,257,258,259,260,],[277,278,279,280,281,282,]),'errorCyParam':([200,],[239,]),'opReturns':([139,],[162,]),'errorDictType':([169,245,],[208,208,]),'assignMatrix':([211,],[247,]),'errorDict':([41,51,],[47,47,]),'errorInitDict':([289,],[300,]),'saveType':([3,13,28,59,61,76,78,298,],[4,19,38,19,19,97,19,97,]),'saveID':([55,57,238,239,],[65,66,266,267,]),'cycle':([74,],[87,]),'errorFunction':([12,16,],[17,17,]),'exp':([111,119,138,150,155,159,167,168,212,213,215,225,226,227,228,229,230,248,253,254,302,314,],[135,135,135,135,135,135,135,135,135,135,135,255,256,257,258,259,260,135,275,276,135,135,]),'fact':([111,119,138,150,155,159,167,168,212,213,215,225,226,227,228,229,230,232,248,253,254,263,302,314,],[137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables','program',12,'p_program','CT.py',290),
  ('changeCurrentScope -> <empty>','changeCurrentScope',0,'p_changeCurrentScope','CT.py',294),
  ('saveType -> <empty>','saveType',0,'p_saveType','CT.py',299),
  ('saveProc -> <empty>','saveProc',0,'p_saveProc','CT.py',306),
  ('errorProgram -> <empty>','errorProgram',0,'p_errorProgram','CT.py',323),
  ('opVars -> vars','opVars',1,'p_opVars','CT.py',329),
  ('opVars -> empty','opVars',1,'p_opVars','CT.py',330),
  ('opFunctions -> function opFunctions','opFunctions',2,'p_opFunctions','CT.py',335),
  ('opFunctions -> empty','opFunctions',1,'p_opFunctions','CT.py',336),
  ('vars -> errorVars VARS declare','vars',3,'p_vars','CT.py',340),
  ('saveID -> <empty>','saveID',0,'p_saveID','CT.py',345),
  ('errorVars -> <empty>','errorVars',0,'p_errorVars','CT.py',373),
  ('type -> errorType INT','type',2,'p_type','CT.py',379),
  ('type -> FLOAT','type',1,'p_type','CT.py',380),
  ('type -> STRING','type',1,'p_type','CT.py',381),
  ('type -> BOOL','type',1,'p_type','CT.py',382),
  ('errorType -> <empty>','errorType',0,'p_errorType','CT.py',387),
  ('main -> errorMain MAIN saveMain { opVars body } clearVarsTable','main',8,'p_main','CT.py',393),
  ('saveMain -> <empty>','saveMain',0,'p_saveMain','CT.py',397),
  ('errorMain -> <empty>','errorMain',0,'p_errorMain','CT.py',405),
  ('instr -> basicStatements ;','instr',2,'p_instr','CT.py',411),
  ('instr -> condition','instr',1,'p_instr','CT.py',412),
  ('instr -> cycle','instr',1,'p_instr','CT.py',413),
  ('basicStatements -> assign','basicStatements',1,'p_basicStatements','CT.py',417),
  ('basicStatements -> funcCall','basicStatements',1,'p_basicStatements','CT.py',418),
  ('declare -> basicDeclare','declare',1,'p_declare','CT.py',422),
  ('declare -> structDeclare','declare',1,'p_declare','CT.py',423),
  ('declare -> dictDeclare','declare',1,'p_declare','CT.py',424),
  ('init -> ASGN saveOperator initWith errorInit','init',4,'p_init','CT.py',429),
  ('errorInit -> <empty>','errorInit',0,'p_errorInit','CT.py',433),
  ('initWith -> expresion performAssign','initWith',2,'p_initWith','CT.py',439),
  ('initWith -> funcCall','initWith',1,'p_initWith','CT.py',440),
  ('performAssign -> <empty>','performAssign',0,'p_performAssign','CT.py',444),
  ('initDict -> ASGN PARINI dictType : dictType PARFIN errorInitDict','initDict',7,'p_initDict','CT.py',466),
  ('errorInitDict -> <empty>','errorInitDict',0,'p_errorInitDict','CT.py',471),
  ('dictType -> errorDictType CTES','dictType',2,'p_dictType','CT.py',477),
  ('dictType -> cte','dictType',1,'p_dictType','CT.py',478),
  ('dictType -> ID','dictType',1,'p_dictType','CT.py',479),
  ('errorDictType -> <empty>','errorDictType',0,'p_errorDictType','CT.py',484),
  ('param -> saveType type errorParam ID cyTypeParam cyParam','param',6,'p_param','CT.py',490),
  ('errorParam -> <empty>','errorParam',0,'p_errorParam','CT.py',495),
  ('cyParam -> errorCyParam saveID saveTypeParam ; param','cyParam',5,'p_cyParam','CT.py',501),
  ('cyParam -> empty saveID saveTypeParam','cyParam',3,'p_cyParam','CT.py',502),
  ('cyTypeParam -> , saveID saveTypeParam ID cyTypeParam','cyTypeParam',5,'p_cyTypeParam','CT.py',507),
  ('cyTypeParam -> empty','cyTypeParam',1,'p_cyTypeParam','CT.py',508),
  ('saveTypeParam -> <empty>','saveTypeParam',0,'p_saveTypeParam','CT.py',512),
  ('errorCyParam -> <empty>','errorCyParam',0,'p_errorCyParam','CT.py',522),
  ('function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable','function',13,'p_function','CT.py',528),
  ('errorFunction -> <empty>','errorFunction',0,'p_errorFunction','CT.py',532),
  ('clearVarsTable -> <empty>','clearVarsTable',0,'p_clearVarsTable','CT.py',537),
  ('return -> errorReturn RETURN expresion ;','return',4,'p_return','CT.py',548),
  ('errorReturn -> <empty>','errorReturn',0,'p_errorReturn','CT.py',553),
  ('opParameters -> param saveParamToDirProc errorOpParameters','opParameters',3,'p_opParameters','CT.py',559),
  ('opParameters -> empty','opParameters',1,'p_opParameters','CT.py',560),
  ('flagParameters -> <empty>','flagParameters',0,'p_flagParameters','CT.py',564),
  ('saveParamToDirProc -> <empty>','saveParamToDirProc',0,'p_saveParamToDirProc','CT.py',569),
  ('errorOpParameters -> <empty>','errorOpParameters',0,'p_errorOpParameters','CT.py',577),
  ('opReturns -> errorOpReturns RETURNS type saveReturnType { opVars body return','opReturns',8,'p_opReturns','CT.py',583),
  ('opReturns -> { opVars body','opReturns',3,'p_opReturns','CT.py',584),
  ('saveReturnType -> <empty>','saveReturnType',0,'p_saveReturnType','CT.py',589),
  ('errorOpReturns -> <empty>','errorOpReturns',0,'p_errorOpReturns','CT.py',595),
  ('basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare','basicDeclare',8,'p_basicDeclare','CT.py',601),
  ('errorBasicDeclare -> <empty>','errorBasicDeclare',0,'p_errorBasicDeclare','CT.py',606),
  ('structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare','structDeclare',6,'p_structDeclare','CT.py',612),
  ('errorStructDeclare -> <empty>','errorStructDeclare',0,'p_errorStructDeclare','CT.py',617),
  ('dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare','dictDeclare',6,'p_dictDeclare','CT.py',623),
  ('errorDictDeclare -> <empty>','errorDictDeclare',0,'p_errorDictDeclare','CT.py',628),
  ('cyDeclare -> declare','cyDeclare',1,'p_cyDeclare','CT.py',634),
  ('cyDeclare -> empty','cyDeclare',1,'p_cyDeclare','CT.py',635),
  ('body -> errorBody cyInstruction','body',2,'p_body','CT.py',640),
  ('body -> empty','body',1,'p_body','CT.py',641),
  ('errorBody -> <empty>','errorBody',0,'p_errorBody','CT.py',646),
  ('cyInstruction -> instr body','cyInstruction',2,'p_cyInstruction','CT.py',652),
  ('cycle -> forCycle','cycle',1,'p_cycle','CT.py',657),
  ('cycle -> whileCycle','cycle',1,'p_cycle','CT.py',658),
  ('whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body }','whileCycle',8,'p_whileCycle','CT.py',663),
  ('errorWhileCycle -> <empty>','errorWhileCycle',0,'p_errorWhileCycle','CT.py',668),
  ('forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign ) { body }','forCycle',12,'p_forCycle','CT.py',674),
  ('errorForCycle -> <empty>','errorForCycle',0,'p_errorForCycle','CT.py',679),
  ('assign -> ID saveVariable errorAssign assignOptions','assign',4,'p_assign','CT.py',685),
  ('errorAssign -> <empty>','errorAssign',0,'p_errorAssign','CT.py',690),
  ('assignOptions -> init','assignOptions',1,'p_assignOptions','CT.py',696),
  ('assignOptions -> initDict','assignOptions',1,'p_assignOptions','CT.py',697),
  ('assignOptions -> [ expresion ] assignMatrix init','assignOptions',5,'p_assignOptions','CT.py',698),
  ('assignMatrix -> [ expresion ] errorAssignMatrix','assignMatrix',4,'p_assignMatrix','CT.py',703),
  ('assignMatrix -> empty','assignMatrix',1,'p_assignMatrix','CT.py',704),
  ('errorAssignMatrix -> <empty>','errorAssignMatrix',0,'p_errorAssignMatrix','CT.py',709),
  ('funcCall -> ID PARINI opParamCall )','funcCall',4,'p_funcCall','CT.py',715),
  ('opParamCall -> expresion cyParamCall','opParamCall',2,'p_opParamCall','CT.py',720),
  ('opParamCall -> empty','opParamCall',1,'p_opParamCall','CT.py',721),
  ('cyParamCall -> , expresion cyParamCall','cyParamCall',3,'p_cyParamCall','CT.py',726),
  ('cyParamCall -> empty','cyParamCall',1,'p_cyParamCall','CT.py',727),
  ('struct -> structType [ CTED ] optionalMatrix','struct',5,'p_struct','CT.py',732),
  ('structType -> type','structType',1,'p_structType','CT.py',737),
  ('structType -> DICT dict','structType',2,'p_structType','CT.py',738),
  ('optionalMatrix -> [ CTED ]','optionalMatrix',3,'p_optionalMatrix','CT.py',743),
  ('optionalMatrix -> empty','optionalMatrix',1,'p_optionalMatrix','CT.py',744),
  ('condition -> errorCondition IF PARINI expresion ) { body } optionalElse','condition',9,'p_condition','CT.py',749),
  ('errorCondition -> <empty>','errorCondition',0,'p_errorCondition','CT.py',754),
  ('optionalElse -> errorElse ELSE { body }','optionalElse',5,'p_optionalElse','CT.py',760),
  ('optionalElse -> empty','optionalElse',1,'p_optionalElse','CT.py',761),
  ('errorElse -> <empty>','errorElse',0,'p_errorElse','CT.py',766),
  ('dict -> errorDict PARINI type : type PARFIN','dict',6,'p_dict','CT.py',772),
  ('errorDict -> <empty>','errorDict',0,'p_errorDict','CT.py',777),
  ('expresion -> sExp performAndOr cyExpresion errorExpresion','expresion',4,'p_expresion','CT.py',783),
  ('performAndOr -> <empty>','performAndOr',0,'p_performAndOr','CT.py',787),
  ('errorExpresion -> <empty>','errorExpresion',0,'p_errorExpresion','CT.py',808),
  ('cyExpresion -> AND saveOperator expresion','cyExpresion',3,'p_cyExpresion','CT.py',814),
  ('cyExpresion -> OR saveOperator expresion','cyExpresion',3,'p_cyExpresion','CT.py',815),
  ('cyExpresion -> empty','cyExpresion',1,'p_cyExpresion','CT.py',816),
  ('sExp -> exp errorOpSExp opSExp','sExp',3,'p_sExp','CT.py',821),
  ('performRelational -> <empty>','performRelational',0,'p_performRelational','CT.py',825),
  ('opSExp -> EQ saveOperator exp performRelational','opSExp',4,'p_opSExp','CT.py',846),
  ('opSExp -> DIF saveOperator exp performRelational','opSExp',4,'p_opSExp','CT.py',847),
  ('opSExp -> LTOEQ saveOperator exp performRelational','opSExp',4,'p_opSExp','CT.py',848),
  ('opSExp -> GTOEQ saveOperator exp performRelational','opSExp',4,'p_opSExp','CT.py',849),
  ('opSExp -> GT saveOperator exp performRelational','opSExp',4,'p_opSExp','CT.py',850),
  ('opSExp -> LT saveOperator exp performRelational','opSExp',4,'p_opSExp','CT.py',851),
  ('opSExp -> empty','opSExp',1,'p_opSExp','CT.py',852),
  ('errorOpSExp -> <empty>','errorOpSExp',0,'p_errorOpSExp','CT.py',856),
  ('exp -> term performAddSub errorCyExp cyExp','exp',4,'p_exp','CT.py',862),
  ('performAddSub -> <empty>','performAddSub',0,'p_performAddSub','CT.py',866),
  ('cyExp -> PLUS saveOperator exp','cyExp',3,'p_cyExp','CT.py',925),
  ('cyExp -> MINUS saveOperator exp','cyExp',3,'p_cyExp','CT.py',926),
  ('cyExp -> empty','cyExp',1,'p_cyExp','CT.py',927),
  ('saveOperator -> <empty>','saveOperator',0,'p_saveOperator','CT.py',931),
  ('errorCyExp -> <empty>','errorCyExp',0,'p_errorCyExp','CT.py',965),
  ('term -> fact performMulDiv cyTerm','term',3,'p_term','CT.py',970),
  ('performMulDiv -> <empty>','performMulDiv',0,'p_performMulDiv','CT.py',974),
  ('cyTerm -> MULT saveOperator errorFact term','cyTerm',4,'p_cyTerm','CT.py',995),
  ('cyTerm -> DIV saveOperator term','cyTerm',3,'p_cyTerm','CT.py',996),
  ('cyTerm -> empty','cyTerm',1,'p_cyTerm','CT.py',997),
  ('fact -> CTES','fact',1,'p_fact','CT.py',1002),
  ('fact -> cte','fact',1,'p_fact','CT.py',1003),
  ('fact -> funcCall','fact',1,'p_fact','CT.py',1004),
  ('fact -> PARINI putFondo expresion PARFIN takeFondo','fact',5,'p_fact','CT.py',1005),
  ('fact -> ID saveVariable opAccess errorOpAccess','fact',4,'p_fact','CT.py',1006),
  ('putFondo -> <empty>','putFondo',0,'p_putFondo','CT.py',1010),
  ('takeFondo -> <empty>','takeFondo',0,'p_takeFondo','CT.py',1014),
  ('saveVariable -> <empty>','saveVariable',0,'p_saveVariable','CT.py',1022),
  ('errorFact -> <empty>','errorFact',0,'p_errorFact','CT.py',1044),
  ('opAccess -> opStruct','opAccess',1,'p_opAccess','CT.py',1050),
  ('opAccess -> opDictionary','opAccess',1,'p_opAccess','CT.py',1051),
  ('opAccess -> empty','opAccess',1,'p_opAccess','CT.py',1052),
  ('errorOpAccess -> <empty>','errorOpAccess',0,'p_errorOpAccess','CT.py',1057),
  ('opStruct -> errorOpStruct [ expresion ] opMatrix','opStruct',5,'p_opStruct','CT.py',1062),
  ('errorOpStruct -> <empty>','errorOpStruct',0,'p_errorOpStruct','CT.py',1067),
  ('opMatrix -> errorOpMatrix [ expresion ]','opMatrix',4,'p_opMatrix','CT.py',1073),
  ('opMatrix -> empty','opMatrix',1,'p_opMatrix','CT.py',1074),
  ('errorOpMatrix -> <empty>','errorOpMatrix',0,'p_errorOpMatrix','CT.py',1079),
  ('opDictionary -> . dictIndex','opDictionary',2,'p_opDictionary','CT.py',1085),
  ('dictIndex -> FIRST','dictIndex',1,'p_dictIndex','CT.py',1090),
  ('dictIndex -> LAST','dictIndex',1,'p_dictIndex','CT.py',1091),
  ('cte -> CTED','cte',1,'p_cte','CT.py',1096),
  ('cte -> CTEF','cte',1,'p_cte','CT.py',1097),
  ('cte -> TRUE','cte',1,'p_cte','CT.py',1098),
  ('cte -> FALSE','cte',1,'p_cte','CT.py',1099),
  ('empty -> <empty>','empty',0,'p_empty','CT.py',1104),
  ('printTables -> <empty>','printTables',0,'p_printTables','CT.py',1109),
]
