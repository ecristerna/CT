
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'E9B73C552435DBCE1C1ACCA1F016C697'
    
_lr_action_items = {'RETURN':([8,11,18,21,23,24,59,61,68,69,70,72,76,82,89,98,100,102,106,110,111,120,126,303,319,330,331,334,338,340,341,343,345,348,360,362,363,],[-6,-7,-38,-37,-36,-10,-168,-168,-77,-79,-80,-75,-168,-73,-82,-168,-86,-85,-24,-81,-23,-84,-22,-168,-70,-168,-168,-88,-170,-118,-62,-87,-115,352,-117,-95,-91,]),'VARS':([7,10,53,156,303,],[-12,13,-12,-12,-12,]),'READ':([8,11,18,21,23,24,53,59,61,63,68,69,70,72,73,76,79,82,88,98,100,102,106,111,126,156,186,229,302,303,312,319,330,331,334,338,340,343,345,354,356,359,360,362,363,],[-6,-7,-38,-37,-36,-10,-168,-168,-168,-70,-77,-79,-80,-75,-19,-168,-83,-73,99,-83,-86,-85,-24,-23,-22,-168,-70,-83,-83,-168,-83,-70,-168,-83,-88,-170,-118,-87,-115,-83,-94,-83,-117,-95,-91,]),'RES':([133,135,136,137,139,140,141,142,144,159,161,162,163,165,166,168,175,193,194,195,197,235,237,238,239,240,275,285,287,307,323,324,349,],[-175,-173,-177,-176,-175,-148,-147,-174,-182,-166,-164,-168,-146,-167,-165,202,-105,-153,-152,-155,-154,-180,-150,-162,-163,-161,-149,-177,-148,-168,-156,-159,-158,]),'DIF':([133,135,136,137,138,139,140,141,142,144,151,159,161,162,163,164,165,166,168,175,180,193,194,195,197,198,203,204,235,237,238,239,240,241,244,275,280,281,285,287,307,308,309,311,323,324,349,],[-175,-173,-177,-176,-183,-175,-148,-147,-174,-182,-135,-166,-164,-168,-146,-140,-167,-165,-168,-105,219,-153,-152,-155,-154,-168,-141,-145,-180,-150,-162,-163,-161,-136,-139,-149,-144,-143,-177,-148,-168,-137,-138,-142,-156,-159,-158,]),'WHILE':([8,11,18,21,23,24,53,59,61,63,68,69,70,72,73,76,79,82,88,98,100,102,103,106,111,126,156,186,229,302,303,312,319,330,331,334,338,340,343,345,354,356,359,360,362,363,],[-6,-7,-38,-37,-36,-10,-168,-168,-168,-70,-77,-79,-80,-75,-19,-168,-83,-73,-90,-83,-86,-85,123,-24,-23,-22,-168,-70,-83,-83,-168,-83,-70,-168,-83,-88,-170,-118,-87,-115,-83,-94,-83,-117,-95,-91,]),'PROGRAM':([0,2,],[-5,3,]),'PRINT':([8,11,18,21,23,24,53,59,61,63,68,69,70,72,73,76,79,82,88,98,100,102,106,111,126,156,186,229,302,303,312,319,330,331,334,338,340,343,345,354,356,359,360,362,363,],[-6,-7,-38,-37,-36,-10,-168,-168,-168,-70,-77,-79,-80,-75,-19,-168,-83,-73,101,-83,-86,-85,-24,-23,-22,-168,-70,-83,-83,-168,-83,-70,-168,-83,-88,-170,-118,-87,-115,-83,-94,-83,-117,-95,-91,]),'PARINI':([41,47,51,54,64,74,99,101,104,122,123,125,127,128,134,136,145,153,160,169,172,174,178,200,202,205,206,209,212,213,217,218,219,220,221,222,225,236,242,243,246,247,248,249,251,257,258,261,262,263,264,265,266,268,277,278,282,285,291,314,333,352,],[-121,58,-121,-4,-65,80,121,122,125,134,-89,134,152,153,-179,125,169,134,134,134,210,134,134,-35,-178,-178,-178,-40,-178,-178,-178,-178,-178,-178,-178,-178,-89,134,-178,-178,134,134,134,-151,134,134,134,134,134,134,134,134,134,134,134,134,134,125,134,-178,134,134,]),'DIV':([133,135,136,137,139,140,141,142,144,159,161,162,163,165,166,168,175,193,194,195,197,235,237,238,239,240,275,285,287,307,323,324,349,],[-175,-173,-177,-176,-175,-148,-147,-174,-182,-166,-164,-168,-146,-167,-165,205,-105,-153,-152,-155,-154,-180,-150,-162,-163,-161,-149,-177,-148,-168,-156,-159,-158,]),'.':([136,162,285,],[-177,196,-177,]),'TRUE':([122,125,134,153,160,169,172,174,178,200,202,205,206,209,210,212,213,217,218,219,220,221,222,225,236,242,243,246,247,248,249,251,257,258,261,262,263,264,265,266,268,277,278,282,288,291,314,333,352,],[133,133,-179,133,133,133,-178,133,133,-35,-178,-178,-178,-40,133,-178,-178,-178,-178,-178,-178,-178,-178,-89,133,-178,-178,133,133,133,-151,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,-178,133,133,]),'[':([29,30,32,39,49,52,62,78,95,104,124,136,146,162,181,192,256,285,307,322,],[-14,-15,-16,-13,60,-111,-112,85,-120,-177,-98,-177,174,-157,-177,236,291,-177,-160,333,]),'MULT':([133,135,136,137,139,140,141,142,144,159,161,162,163,165,166,168,175,193,194,195,197,235,237,238,239,240,275,285,287,307,323,324,349,],[-175,-173,-177,-176,-175,-148,-147,-174,-182,-166,-164,-168,-146,-167,-165,206,-105,-153,-152,-155,-154,-180,-150,-162,-163,-161,-149,-177,-148,-168,-156,-159,-158,]),'LAST':([196,],[239,]),'MINUS':([133,135,136,137,138,139,140,141,142,144,159,161,162,163,164,165,166,168,175,193,194,195,197,198,203,204,235,237,238,239,240,275,280,281,285,287,307,311,323,324,349,],[-175,-173,-177,-176,-183,-175,-148,-147,-174,-182,-166,-164,-168,-146,-140,-167,-165,-168,-105,-153,-152,-155,-154,243,-141,-145,-180,-150,-162,-163,-161,-149,-144,-143,-177,-148,-168,-142,-156,-159,-158,]),'LTOEQ':([133,135,136,137,138,139,140,141,142,144,151,159,161,162,163,164,165,166,168,175,180,193,194,195,197,198,203,204,235,237,238,239,240,241,244,275,280,281,285,287,307,308,309,311,323,324,349,],[-175,-173,-177,-176,-183,-175,-148,-147,-174,-182,-135,-166,-164,-168,-146,-140,-167,-165,-168,-105,218,-153,-152,-155,-154,-168,-141,-145,-180,-150,-162,-163,-161,-136,-139,-149,-144,-143,-177,-148,-168,-137,-138,-142,-156,-159,-158,]),',':([46,81,132,133,135,136,137,138,139,140,141,142,143,144,148,150,151,157,158,159,161,162,163,164,165,166,167,168,175,176,180,193,194,195,197,198,203,204,214,215,216,223,224,235,237,238,239,240,241,244,259,267,274,275,279,280,281,293,294,295,296,297,298,299,300,306,307,308,309,310,311,323,324,349,],[55,55,-187,-175,-173,-177,-176,-183,-175,-148,-147,-174,-186,-182,-185,178,-135,55,188,-166,-164,-168,-146,-140,-167,-165,200,-168,-105,-168,-168,-153,-152,-155,-154,-168,-141,-145,-123,-126,178,-134,-184,-180,-150,-162,-163,-161,-136,-139,-122,-127,-187,-149,-186,-144,-143,-124,-125,-132,-130,-129,-133,-131,-128,188,-168,-137,-138,200,-142,-156,-159,-158,]),'ASGN':([104,124,146,181,256,290,292,328,336,],[-177,-98,172,-177,-168,314,-103,-104,-102,]),'FIRST':([196,],[238,]),'LT':([133,135,136,137,138,139,140,141,142,144,151,159,161,162,163,164,165,166,168,175,180,193,194,195,197,198,203,204,235,237,238,239,240,241,244,275,280,281,285,287,307,308,309,311,323,324,349,],[-175,-173,-177,-176,-183,-175,-148,-147,-174,-182,-135,-166,-164,-168,-146,-140,-167,-165,-168,-105,220,-153,-152,-155,-154,-168,-141,-145,-180,-150,-162,-163,-161,-136,-139,-149,-144,-143,-177,-148,-168,-137,-138,-142,-156,-159,-158,]),'PLUS':([133,135,136,137,138,139,140,141,142,144,159,161,162,163,164,165,166,168,175,193,194,195,197,198,203,204,235,237,238,239,240,275,280,281,285,287,307,311,323,324,349,],[-175,-173,-177,-176,-183,-175,-148,-147,-174,-182,-166,-164,-168,-146,-140,-167,-165,-168,-105,-153,-152,-155,-154,242,-141,-145,-180,-150,-162,-163,-161,-149,-144,-143,-177,-148,-168,-142,-156,-159,-158,]),'BOOL':([13,19,42,58,59,61,76,77,80,92,185,320,],[-3,32,32,32,-3,-3,-3,32,-3,32,32,-3,]),';':([46,48,50,56,57,66,78,81,84,86,94,95,105,107,108,112,114,118,133,135,136,137,138,139,140,141,142,144,148,151,157,159,161,162,163,164,165,166,168,170,171,173,175,176,180,182,187,193,194,195,197,198,203,204,208,214,215,223,224,231,234,235,237,238,239,240,241,244,245,259,267,273,275,280,281,284,285,286,287,293,294,295,296,297,298,299,300,301,305,307,308,309,311,315,317,323,324,327,335,349,355,],[-168,59,61,-54,-11,76,-168,-168,-110,-114,-53,-120,-27,-28,126,-26,-25,-113,-175,-173,-177,-176,-183,-175,-148,-147,-174,-182,-185,-135,-168,-166,-164,-168,-146,-140,-167,-165,-168,-100,-181,-99,-105,-168,-168,225,-56,-153,-152,-155,-154,-168,-141,-145,-97,-123,-126,-134,-184,-11,-32,-180,-150,-162,-163,-161,-136,-139,-29,-122,-127,-55,-149,-144,-143,-39,-177,-41,-42,-124,-125,-132,-130,-129,-133,-131,-128,-171,320,-168,-137,-138,-142,-101,329,-156,-159,-44,-43,-158,358,]),':':([29,30,32,39,67,133,135,139,142,159,161,165,166,252,254,255,289,],[-14,-15,-16,-13,77,-175,-173,-175,-174,-166,-164,-167,-165,288,-46,-47,-45,]),'$end':([1,36,43,],[0,-169,-1,]),'GT':([133,135,136,137,138,139,140,141,142,144,151,159,161,162,163,164,165,166,168,175,180,193,194,195,197,198,203,204,235,237,238,239,240,241,244,275,280,281,285,287,307,308,309,311,323,324,349,],[-175,-173,-177,-176,-183,-175,-148,-147,-174,-182,-135,-166,-164,-168,-146,-140,-167,-165,-168,-105,217,-153,-152,-155,-154,-168,-141,-145,-180,-150,-162,-163,-161,-136,-139,-149,-144,-143,-177,-148,-168,-137,-138,-142,-156,-159,-158,]),'STRING':([13,19,42,58,59,61,76,77,80,92,185,320,],[-3,30,30,30,-3,-3,-3,30,-3,30,30,-3,]),'FOR':([8,11,18,21,23,24,53,59,61,63,68,69,70,72,73,76,79,82,88,98,100,102,106,109,111,126,156,186,229,302,303,312,319,330,331,334,338,340,343,345,354,356,359,360,362,363,],[-6,-7,-38,-37,-36,-10,-168,-168,-168,-70,-77,-79,-80,-75,-19,-168,-83,-73,-96,-83,-86,-85,-24,127,-23,-22,-168,-70,-83,-83,-168,-83,-70,-168,-83,-88,-170,-118,-87,-115,-83,-94,-83,-117,-95,-91,]),'ELSE':([330,339,],[-119,346,]),'RETURNS':([115,129,155,],[-65,-72,185,]),'FUNC':([7,8,9,11,12,16,17,18,21,23,24,28,59,61,68,69,70,72,76,82,184,227,],[-168,-6,-2,-7,-59,-59,-58,-38,-37,-36,-10,38,-168,-168,-77,-79,-80,-75,-168,-73,-60,-57,]),'PARFIN':([29,30,32,39,56,80,81,83,90,91,93,94,116,125,130,132,133,135,136,137,138,139,140,141,142,143,144,147,148,149,150,151,157,158,159,161,162,163,164,165,166,167,168,170,171,173,175,176,177,179,180,183,187,189,190,191,193,194,195,197,198,199,201,203,204,207,208,214,215,216,223,224,230,232,235,237,238,239,240,241,244,254,255,259,260,267,272,274,275,279,280,281,284,285,286,287,289,293,294,295,296,297,298,299,300,304,306,307,308,309,310,311,313,315,321,323,324,325,327,332,335,344,349,350,],[-14,-15,-16,-13,-54,-168,-168,95,115,-66,-64,-53,-67,-168,-63,-187,-175,-173,-177,-176,-183,-175,-148,-147,-174,-186,-182,175,-185,-107,-168,-135,-168,-168,-166,-164,-168,-146,-140,-167,-165,-168,-168,-100,-181,-99,-105,-168,-106,-109,-168,226,-168,234,-34,235,-153,-152,-155,-154,-168,245,-31,-141,-145,250,-97,-123,-126,-168,-134,-184,-11,-49,-180,-150,-162,-163,-161,-136,-139,-46,-47,-122,-108,-127,-55,-187,-149,-186,-144,-143,-39,-177,-41,-42,-45,-124,-125,-132,-130,-129,-133,-131,-128,-52,-168,-168,-137,-138,-168,-142,327,-101,-33,-156,-159,-30,-44,-51,-43,-93,-158,353,]),']':([71,96,133,135,136,137,138,139,140,141,142,144,148,151,159,161,162,163,164,165,166,168,175,176,180,193,194,195,197,198,203,204,211,214,215,223,224,235,237,238,239,240,241,244,259,267,275,276,280,281,293,294,295,296,297,298,299,300,307,308,309,311,316,323,324,342,349,],[78,118,-175,-173,-177,-176,-183,-175,-148,-147,-174,-182,-185,-135,-166,-164,-168,-146,-140,-167,-165,-168,-105,-168,-168,-153,-152,-155,-154,-168,-141,-145,256,-123,-126,-134,-184,-180,-150,-162,-163,-161,-136,-139,-122,-127,-149,307,-144,-143,-124,-125,-132,-130,-129,-133,-131,-128,-168,-137,-138,-142,328,-156,-159,349,-158,]),'ID':([3,4,8,11,18,21,23,24,29,30,32,33,34,35,38,39,40,45,53,55,59,61,63,65,68,69,70,72,73,75,76,79,82,88,98,100,102,106,111,117,121,122,125,126,131,134,152,153,156,160,169,172,174,178,186,188,200,202,205,206,209,210,212,213,217,218,219,220,221,222,225,229,233,236,242,243,246,247,248,249,251,257,258,261,262,263,264,265,266,268,277,278,282,288,291,302,303,312,314,319,329,330,331,333,334,337,338,340,343,345,352,354,356,359,360,362,363,],[-3,5,-6,-7,-38,-37,-36,-10,-14,-15,-16,-74,41,42,-3,-13,46,54,-168,-11,-168,-168,-70,-55,-77,-79,-80,-75,-19,81,-168,-83,-73,104,-83,-86,-85,-24,-23,-50,132,136,136,-22,157,-179,181,136,-168,136,136,-178,136,136,-70,-35,-35,-178,-178,-178,-40,255,-178,-178,-178,-178,-178,-178,-178,-178,-89,-83,274,136,-178,-178,136,136,136,-151,285,136,136,136,136,136,136,136,136,136,136,136,136,255,136,-83,-168,-83,-178,-70,-92,-168,-83,136,-88,181,-170,-118,-87,-115,136,-83,-94,-83,-117,-95,-91,]),'IF':([8,11,18,21,23,24,53,59,61,63,68,69,70,72,73,76,79,82,88,98,100,102,106,111,113,126,156,186,229,302,303,312,319,330,331,334,338,340,343,345,354,356,359,360,362,363,],[-6,-7,-38,-37,-36,-10,-168,-168,-168,-70,-77,-79,-80,-75,-19,-168,-83,-73,-116,-83,-86,-85,-24,-23,128,-22,-168,-70,-83,-83,-168,-83,-70,-168,-83,-88,-170,-118,-87,-115,-83,-94,-83,-117,-95,-91,]),'AND':([133,135,136,137,138,139,140,141,142,144,148,151,159,161,162,163,164,165,166,168,175,176,180,193,194,195,197,198,203,204,223,224,235,237,238,239,240,241,244,267,275,280,281,285,287,295,296,297,298,299,300,307,308,309,311,323,324,349,],[-175,-173,-177,-176,-183,-175,-148,-147,-174,-182,-185,-135,-166,-164,-168,-146,-140,-167,-165,-168,-105,212,-168,-153,-152,-155,-154,-168,-141,-145,-134,-184,-180,-150,-162,-163,-161,-136,-139,-127,-149,-144,-143,-177,-148,-132,-130,-129,-133,-131,-128,-168,-137,-138,-142,-156,-159,-158,]),'CTES':([122,125,134,153,160,169,172,174,178,200,202,205,206,209,210,212,213,217,218,219,220,221,222,225,236,242,243,246,247,248,249,251,253,257,258,261,262,263,264,265,266,268,277,278,282,288,291,314,333,352,],[137,137,-179,137,137,137,-178,137,137,-35,-178,-178,-178,-40,-48,-178,-178,-178,-178,-178,-178,-178,-178,-89,137,-178,-178,137,137,137,-151,137,289,137,137,137,137,137,137,137,137,137,137,137,137,-48,137,-178,137,137,]),'FALSE':([122,125,134,153,160,169,172,174,178,200,202,205,206,209,210,212,213,217,218,219,220,221,222,225,236,242,243,246,247,248,249,251,257,258,261,262,263,264,265,266,268,277,278,282,288,291,314,333,352,],[139,139,-179,139,139,139,-178,139,139,-35,-178,-178,-178,-40,139,-178,-178,-178,-178,-178,-178,-178,-178,-89,139,-178,-178,139,139,139,-151,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,-178,139,139,]),'STRUCT':([13,22,59,61,76,],[-76,35,-76,-76,-76,]),'INT':([13,19,31,42,58,59,61,76,77,80,92,185,320,],[-3,-17,39,-17,-17,-3,-3,-3,-17,-3,-17,-17,-3,]),'EQ':([133,135,136,137,138,139,140,141,142,144,151,159,161,162,163,164,165,166,168,175,180,193,194,195,197,198,203,204,235,237,238,239,240,241,244,275,280,281,285,287,307,308,309,311,323,324,349,],[-175,-173,-177,-176,-183,-175,-148,-147,-174,-182,-135,-166,-164,-168,-146,-140,-167,-165,-168,-105,222,-153,-152,-155,-154,-168,-141,-145,-180,-150,-162,-163,-161,-136,-139,-149,-144,-143,-177,-148,-168,-137,-138,-142,-156,-159,-158,]),'FLOAT':([13,19,42,58,59,61,76,77,80,92,185,320,],[-3,29,29,29,-3,-3,-3,29,-3,29,29,-3,]),'OR':([133,135,136,137,138,139,140,141,142,144,148,151,159,161,162,163,164,165,166,168,175,176,180,193,194,195,197,198,203,204,223,224,235,237,238,239,240,241,244,267,275,280,281,285,287,295,296,297,298,299,300,307,308,309,311,323,324,349,],[-175,-173,-177,-176,-183,-175,-148,-147,-174,-182,-185,-135,-166,-164,-168,-146,-140,-167,-165,-168,-105,213,-168,-153,-152,-155,-154,-168,-141,-145,-134,-184,-180,-150,-162,-163,-161,-136,-139,-127,-149,-144,-143,-177,-148,-132,-130,-129,-133,-131,-128,-168,-137,-138,-142,-156,-159,-158,]),'DICT':([13,20,42,59,61,76,],[-78,34,51,-78,-78,-78,]),'CTED':([60,85,122,125,134,153,160,169,172,174,178,200,202,205,206,209,210,212,213,217,218,219,220,221,222,225,236,242,243,246,247,248,249,251,257,258,261,262,263,264,265,266,268,277,278,282,288,291,314,333,352,],[71,96,135,135,-179,135,135,135,-178,135,135,-35,-178,-178,-178,-40,135,-178,-178,-178,-178,-178,-178,-178,-178,-89,135,-178,-178,135,135,135,-151,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,-178,135,135,]),'GTOEQ':([133,135,136,137,138,139,140,141,142,144,151,159,161,162,163,164,165,166,168,175,180,193,194,195,197,198,203,204,235,237,238,239,240,241,244,275,280,281,285,287,307,308,309,311,323,324,349,],[-175,-173,-177,-176,-183,-175,-148,-147,-174,-182,-135,-166,-164,-168,-146,-140,-167,-165,-168,-105,221,-153,-152,-155,-154,-168,-141,-145,-180,-150,-162,-163,-161,-136,-139,-149,-144,-143,-177,-148,-168,-137,-138,-142,-156,-159,-158,]),'{':([5,6,29,30,32,37,39,44,115,129,226,228,250,269,270,283,346,351,353,],[-4,7,-14,-15,-16,-20,-13,53,-65,156,-171,-71,-171,302,303,312,-172,354,356,]),'MAIN':([7,8,9,11,12,14,15,16,18,21,23,24,26,27,59,61,68,69,70,72,76,82,184,227,],[-168,-6,-2,-7,-168,-21,-9,-168,-38,-37,-36,-10,37,-8,-168,-168,-77,-79,-80,-75,-168,-73,-60,-57,]),'}':([8,11,18,21,23,24,25,53,59,61,63,68,69,70,72,73,76,79,82,87,89,97,98,100,102,106,110,111,119,120,126,154,156,186,229,271,302,312,318,326,330,334,338,340,343,345,347,354,356,357,358,359,360,361,362,363,],[-6,-7,-38,-37,-36,-10,36,-168,-168,-168,-70,-77,-79,-80,-75,-19,-168,-168,-73,97,-82,-60,-168,-86,-85,-24,-81,-23,-18,-84,-22,184,-168,-70,-168,-69,-168,-168,330,334,-168,-88,-170,-118,-87,-115,-68,-168,-94,360,-61,-168,-117,362,-95,-91,]),'CTEF':([122,125,134,153,160,169,172,174,178,200,202,205,206,209,210,212,213,217,218,219,220,221,222,225,236,242,243,246,247,248,249,251,257,258,261,262,263,264,265,266,268,277,278,282,288,291,314,333,352,],[142,142,-179,142,142,142,-178,142,142,-35,-178,-178,-178,-40,142,-178,-178,-178,-178,-178,-178,-178,-178,-89,142,-178,-178,142,142,142,-151,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,-178,142,142,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vars':([7,53,156,303,],[8,8,8,8,]),'errorOpSExp':([151,],[180,]),'errorMain':([14,],[26,]),'errorCyExp':([164,],[198,]),'opParamCall':([125,],[147,]),'cyTypeParam':([46,81,157,],[57,94,187,]),'takeFondo':([235,],[275,]),'forCycle':([88,],[102,]),'structType':([42,],[49,]),'changeCurrentScope':([9,],[12,]),'struct':([42,],[50,]),'fix':([188,200,],[233,246,]),'param':([80,320,],[91,332,]),'init':([146,290,],[173,315,]),'program':([0,],[1,]),'dict':([41,51,],[48,62,]),'opMatrix':([307,],[323,]),'errorExpresion':([214,],[259,]),'main':([14,],[25,]),'return':([341,],[347,]),'errorParam':([117,],[131,]),'read':([88,],[107,]),'errorReturn':([341,],[348,]),'assignOptions':([146,],[171,]),'flagParameters':([64,115,],[74,129,]),'cyRead':([158,306,],[189,321,]),'basicDeclare':([13,59,61,76,],[23,23,23,23,]),'cyInstruction':([88,],[110,]),'condition':([88,],[111,]),'expresion':([125,153,160,169,174,178,236,251,257,258,268,291,333,352,],[150,183,191,207,211,216,276,286,293,294,301,316,342,355,]),'term':([122,125,153,160,169,174,178,236,246,247,248,251,257,258,261,262,263,264,265,266,268,277,278,282,291,333,352,],[138,138,138,138,138,138,138,138,138,280,281,138,138,138,138,138,138,138,138,138,138,138,138,311,138,138,138,]),'funcCall':([88,122,125,153,160,169,174,178,236,246,247,248,251,257,258,261,262,263,264,265,266,268,277,278,282,291,333,352,],[112,140,140,140,140,140,140,140,140,140,140,140,287,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,]),'initDict':([146,],[170,]),'saveCurrentTemps':([17,],[28,]),'returnFor':([344,],[350,]),'returnAssign':([362,],[363,]),'saveTypeParam':([65,272,273,],[75,304,305,]),'saltoBody':([329,],[337,]),'dictDeclare':([13,59,61,76,],[18,18,18,18,]),'saveMain':([37,],[44,]),'errorVars':([7,53,156,303,],[10,10,10,10,]),'generateInitialQuadruple':([73,],[79,]),'whileCycle':([88,],[100,]),'errorDictDeclare':([13,59,61,76,],[20,20,20,20,]),'performAndOr':([148,],[176,]),'opFunctions':([12,16,],[14,27,]),'errorOpStruct':([162,],[192,]),'saveVariable':([104,136,181,285,],[124,162,124,162,]),'opVars':([7,53,156,303,],[9,63,186,319,]),'saveOperator':([172,202,205,206,212,213,217,218,219,220,221,222,242,243,314,],[209,247,248,249,257,258,261,262,263,264,265,266,277,278,209,]),'errorInit':([209,],[251,]),'performAssign':([171,],[208,]),'cyExpresion':([176,],[214,]),'performRead':([132,274,],[158,306,]),'print':([88,],[105,]),'body':([79,98,229,302,312,331,354,359,],[87,120,271,318,326,341,357,361,]),'errorOpParameters':([116,],[130,]),'repeatWhile':([334,],[343,]),'printTables':([36,],[43,]),'saveParamToDirProc':([91,],[116,]),'saveReturnType':([228,],[270,]),'opParameters':([80,],[90,]),'errorCondition':([88,],[113,]),'cte':([122,125,153,160,169,174,178,210,236,246,247,248,251,257,258,261,262,263,264,265,266,268,277,278,282,288,291,333,352,],[141,141,141,141,141,141,141,254,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,254,141,141,141,]),'saveProc':([5,54,],[6,64,]),'assign':([88,152,337,],[114,182,344,]),'errorStructDeclare':([13,59,61,76,],[22,22,22,22,]),'cyExp':([198,],[241,]),'instr':([88,],[98,]),'errorFact':([249,],[282,]),'errorProgram':([0,],[2,]),'cyTerm':([168,],[203,]),'rellenaBody':([356,],[359,]),'errorAssignMatrix':([328,],[336,]),'cyDeclare':([59,61,76,],[68,72,82,]),'errorBody':([79,98,229,302,312,331,354,359,],[88,88,88,88,88,88,88,88,]),'opStruct':([162,],[194,]),'errorOpAccess':([195,],[237,]),'saveConstantBool':([133,139,],[159,165,]),'type':([19,42,58,77,92,185,],[33,52,67,83,117,228,]),'dictIndex':([196,],[240,]),'empty':([7,12,16,46,53,59,61,76,78,79,80,81,98,125,150,156,157,158,162,167,168,176,180,187,198,216,229,256,302,303,306,307,310,312,330,331,354,359,],[11,15,15,56,11,70,70,70,86,89,93,56,89,149,179,11,56,190,197,201,204,215,223,230,244,179,89,292,89,11,190,324,201,89,340,89,89,89,]),'errorBasicDeclare':([33,],[40,]),'function':([12,16,],[16,16,]),'performMulDiv':([144,],[168,]),'saveConstantString':([137,],[163,]),'errorOpMatrix':([307,],[322,]),'opDictionary':([162,],[193,]),'errorType':([19,42,58,77,92,185,],[31,31,31,31,31,31,]),'errorForCycle':([88,],[109,]),'opAccess':([162,],[195,]),'basicStatements':([88,],[108,]),'structDeclare':([13,59,61,76,],[21,21,21,21,]),'putFondo':([134,],[160,]),'errorAssign':([124,],[146,]),'saveReturn':([123,225,],[145,268,]),'cyParam':([187,],[232,]),'cyPrint':([167,310,],[199,325,]),'saveConstantFloat':([142,],[166,]),'errorOpReturns':([129,],[155,]),'performAddSub':([138,],[164,]),'cyParamCall':([150,216,],[177,260,]),'declare':([13,59,61,76,],[24,69,69,69,]),'saveQuadruple':([63,186,319,],[73,229,331,]),'opSExp':([180,],[224,]),'optionalMatrix':([78,],[84,]),'performPrint':([143,279,],[167,310,]),'saveFalso':([226,250,301,],[269,283,317,]),'clearVarsTable':([97,184,],[119,227,]),'optionalElse':([330,],[338,]),'dictType':([210,288,],[252,313,]),'initWith':([251,],[284,]),'saveConstantInt':([135,],[161,]),'errorWhileCycle':([88,],[103,]),'sExp':([125,153,160,169,174,178,236,251,257,258,268,291,333,352,],[148,148,148,148,148,148,148,148,148,148,148,148,148,148,]),'errorElse':([330,],[339,]),'performRelational':([224,],[267,]),'errorCyParam':([187,],[231,]),'opReturns':([129,],[154,]),'errorDictType':([210,288,],[253,253,]),'assignMatrix':([256,],[290,]),'saveVerdadero':([346,],[351,]),'rellenaFalso':([338,],[345,]),'errorDict':([41,51,],[47,47,]),'errorInitDict':([327,],[335,]),'saveType':([3,13,38,59,61,76,80,320,],[4,19,45,19,19,19,92,92,]),'saveID':([55,57,230,231,],[65,66,272,273,]),'cycle':([88,],[106,]),'errorFunction':([12,16,],[17,17,]),'exp':([122,125,153,160,169,174,178,236,246,251,257,258,261,262,263,264,265,266,268,277,278,291,333,352,],[143,151,151,151,151,151,151,151,279,151,151,151,295,296,297,298,299,300,151,308,309,151,151,151,]),'fact':([122,125,153,160,169,174,178,236,246,247,248,251,257,258,261,262,263,264,265,266,268,277,278,282,291,333,352,],[144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables','program',12,'p_program','CT.py',346),
  ('changeCurrentScope -> <empty>','changeCurrentScope',0,'p_changeCurrentScope','CT.py',350),
  ('saveType -> <empty>','saveType',0,'p_saveType','CT.py',355),
  ('saveProc -> <empty>','saveProc',0,'p_saveProc','CT.py',362),
  ('errorProgram -> <empty>','errorProgram',0,'p_errorProgram','CT.py',385),
  ('opVars -> vars','opVars',1,'p_opVars','CT.py',391),
  ('opVars -> empty','opVars',1,'p_opVars','CT.py',392),
  ('opFunctions -> function opFunctions','opFunctions',2,'p_opFunctions','CT.py',397),
  ('opFunctions -> empty','opFunctions',1,'p_opFunctions','CT.py',398),
  ('vars -> errorVars VARS declare','vars',3,'p_vars','CT.py',402),
  ('saveID -> <empty>','saveID',0,'p_saveID','CT.py',407),
  ('errorVars -> <empty>','errorVars',0,'p_errorVars','CT.py',448),
  ('type -> errorType INT','type',2,'p_type','CT.py',454),
  ('type -> FLOAT','type',1,'p_type','CT.py',455),
  ('type -> STRING','type',1,'p_type','CT.py',456),
  ('type -> BOOL','type',1,'p_type','CT.py',457),
  ('errorType -> <empty>','errorType',0,'p_errorType','CT.py',462),
  ('main -> errorMain MAIN saveMain { opVars saveQuadruple generateInitialQuadruple body } clearVarsTable','main',10,'p_main','CT.py',468),
  ('generateInitialQuadruple -> <empty>','generateInitialQuadruple',0,'p_generateInitialQuadruple','CT.py',472),
  ('saveMain -> <empty>','saveMain',0,'p_saveMain','CT.py',476),
  ('errorMain -> <empty>','errorMain',0,'p_errorMain','CT.py',485),
  ('instr -> basicStatements ;','instr',2,'p_instr','CT.py',491),
  ('instr -> condition','instr',1,'p_instr','CT.py',492),
  ('instr -> cycle','instr',1,'p_instr','CT.py',493),
  ('basicStatements -> assign','basicStatements',1,'p_basicStatements','CT.py',497),
  ('basicStatements -> funcCall','basicStatements',1,'p_basicStatements','CT.py',498),
  ('basicStatements -> print','basicStatements',1,'p_basicStatements','CT.py',499),
  ('basicStatements -> read','basicStatements',1,'p_basicStatements','CT.py',500),
  ('print -> PRINT PARINI exp performPrint cyPrint PARFIN','print',6,'p_print','CT.py',503),
  ('cyPrint -> , fix exp performPrint cyPrint','cyPrint',5,'p_cyPrint','CT.py',506),
  ('cyPrint -> empty','cyPrint',1,'p_cyPrint','CT.py',507),
  ('read -> READ PARINI ID performRead cyRead PARFIN','read',6,'p_read','CT.py',510),
  ('cyRead -> , fix ID performRead cyRead','cyRead',5,'p_cyRead','CT.py',513),
  ('cyRead -> empty','cyRead',1,'p_cyRead','CT.py',514),
  ('fix -> <empty>','fix',0,'p_fix','CT.py',517),
  ('declare -> basicDeclare','declare',1,'p_declare','CT.py',522),
  ('declare -> structDeclare','declare',1,'p_declare','CT.py',523),
  ('declare -> dictDeclare','declare',1,'p_declare','CT.py',524),
  ('init -> ASGN saveOperator errorInit initWith','init',4,'p_init','CT.py',529),
  ('errorInit -> <empty>','errorInit',0,'p_errorInit','CT.py',533),
  ('initWith -> expresion','initWith',1,'p_initWith','CT.py',539),
  ('initWith -> funcCall','initWith',1,'p_initWith','CT.py',540),
  ('initDict -> ASGN PARINI dictType : dictType PARFIN errorInitDict','initDict',7,'p_initDict','CT.py',545),
  ('errorInitDict -> <empty>','errorInitDict',0,'p_errorInitDict','CT.py',550),
  ('dictType -> errorDictType CTES','dictType',2,'p_dictType','CT.py',556),
  ('dictType -> cte','dictType',1,'p_dictType','CT.py',557),
  ('dictType -> ID','dictType',1,'p_dictType','CT.py',558),
  ('errorDictType -> <empty>','errorDictType',0,'p_errorDictType','CT.py',563),
  ('param -> saveType type errorParam ID cyTypeParam cyParam','param',6,'p_param','CT.py',569),
  ('errorParam -> <empty>','errorParam',0,'p_errorParam','CT.py',574),
  ('cyParam -> errorCyParam saveID saveTypeParam ; param','cyParam',5,'p_cyParam','CT.py',580),
  ('cyParam -> empty saveID saveTypeParam','cyParam',3,'p_cyParam','CT.py',581),
  ('cyTypeParam -> , saveID saveTypeParam ID cyTypeParam','cyTypeParam',5,'p_cyTypeParam','CT.py',586),
  ('cyTypeParam -> empty','cyTypeParam',1,'p_cyTypeParam','CT.py',587),
  ('saveTypeParam -> <empty>','saveTypeParam',0,'p_saveTypeParam','CT.py',591),
  ('errorCyParam -> <empty>','errorCyParam',0,'p_errorCyParam','CT.py',601),
  ('function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable','function',14,'p_function','CT.py',607),
  ('saveCurrentTemps -> <empty>','saveCurrentTemps',0,'p_saveCurrentTemps','CT.py',611),
  ('errorFunction -> <empty>','errorFunction',0,'p_errorFunction','CT.py',623),
  ('clearVarsTable -> <empty>','clearVarsTable',0,'p_clearVarsTable','CT.py',628),
  ('return -> errorReturn RETURN expresion ;','return',4,'p_return','CT.py',661),
  ('errorReturn -> <empty>','errorReturn',0,'p_errorReturn','CT.py',666),
  ('opParameters -> param saveParamToDirProc errorOpParameters','opParameters',3,'p_opParameters','CT.py',672),
  ('opParameters -> empty','opParameters',1,'p_opParameters','CT.py',673),
  ('flagParameters -> <empty>','flagParameters',0,'p_flagParameters','CT.py',677),
  ('saveParamToDirProc -> <empty>','saveParamToDirProc',0,'p_saveParamToDirProc','CT.py',682),
  ('errorOpParameters -> <empty>','errorOpParameters',0,'p_errorOpParameters','CT.py',690),
  ('opReturns -> errorOpReturns RETURNS type saveReturnType { opVars saveQuadruple body return','opReturns',9,'p_opReturns','CT.py',696),
  ('opReturns -> { opVars saveQuadruple body','opReturns',4,'p_opReturns','CT.py',697),
  ('saveQuadruple -> <empty>','saveQuadruple',0,'p_saveQuadruple','CT.py',701),
  ('saveReturnType -> <empty>','saveReturnType',0,'p_saveReturnType','CT.py',708),
  ('errorOpReturns -> <empty>','errorOpReturns',0,'p_errorOpReturns','CT.py',714),
  ('basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare','basicDeclare',8,'p_basicDeclare','CT.py',720),
  ('errorBasicDeclare -> <empty>','errorBasicDeclare',0,'p_errorBasicDeclare','CT.py',725),
  ('structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare','structDeclare',6,'p_structDeclare','CT.py',731),
  ('errorStructDeclare -> <empty>','errorStructDeclare',0,'p_errorStructDeclare','CT.py',736),
  ('dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare','dictDeclare',6,'p_dictDeclare','CT.py',742),
  ('errorDictDeclare -> <empty>','errorDictDeclare',0,'p_errorDictDeclare','CT.py',747),
  ('cyDeclare -> declare','cyDeclare',1,'p_cyDeclare','CT.py',753),
  ('cyDeclare -> empty','cyDeclare',1,'p_cyDeclare','CT.py',754),
  ('body -> errorBody cyInstruction','body',2,'p_body','CT.py',759),
  ('body -> empty','body',1,'p_body','CT.py',760),
  ('errorBody -> <empty>','errorBody',0,'p_errorBody','CT.py',765),
  ('cyInstruction -> instr body','cyInstruction',2,'p_cyInstruction','CT.py',771),
  ('cycle -> forCycle','cycle',1,'p_cycle','CT.py',776),
  ('cycle -> whileCycle','cycle',1,'p_cycle','CT.py',777),
  ('whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile','whileCycle',11,'p_whileCycle','CT.py',782),
  ('repeatWhile -> <empty>','repeatWhile',0,'p_repeatWhile','CT.py',786),
  ('saveReturn -> <empty>','saveReturn',0,'p_saveReturn','CT.py',793),
  ('errorWhileCycle -> <empty>','errorWhileCycle',0,'p_errorWhileCycle','CT.py',797),
  ('forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign','forCycle',18,'p_forCycle','CT.py',803),
  ('saltoBody -> <empty>','saltoBody',0,'p_saltoBody','CT.py',807),
  ('returnFor -> <empty>','returnFor',0,'p_returnFor','CT.py',813),
  ('rellenaBody -> <empty>','rellenaBody',0,'p_rellenaBody','CT.py',825),
  ('returnAssign -> <empty>','returnAssign',0,'p_returnAssign','CT.py',833),
  ('errorForCycle -> <empty>','errorForCycle',0,'p_errorForCycle','CT.py',838),
  ('assign -> ID saveVariable errorAssign assignOptions performAssign','assign',5,'p_assign','CT.py',844),
  ('errorAssign -> <empty>','errorAssign',0,'p_errorAssign','CT.py',849),
  ('assignOptions -> init','assignOptions',1,'p_assignOptions','CT.py',855),
  ('assignOptions -> initDict','assignOptions',1,'p_assignOptions','CT.py',856),
  ('assignOptions -> [ expresion ] assignMatrix init','assignOptions',5,'p_assignOptions','CT.py',857),
  ('assignMatrix -> [ expresion ] errorAssignMatrix','assignMatrix',4,'p_assignMatrix','CT.py',862),
  ('assignMatrix -> empty','assignMatrix',1,'p_assignMatrix','CT.py',863),
  ('errorAssignMatrix -> <empty>','errorAssignMatrix',0,'p_errorAssignMatrix','CT.py',868),
  ('funcCall -> ID PARINI opParamCall PARFIN','funcCall',4,'p_funcCall','CT.py',874),
  ('opParamCall -> expresion cyParamCall','opParamCall',2,'p_opParamCall','CT.py',879),
  ('opParamCall -> empty','opParamCall',1,'p_opParamCall','CT.py',880),
  ('cyParamCall -> , expresion cyParamCall','cyParamCall',3,'p_cyParamCall','CT.py',885),
  ('cyParamCall -> empty','cyParamCall',1,'p_cyParamCall','CT.py',886),
  ('struct -> structType [ CTED ] optionalMatrix','struct',5,'p_struct','CT.py',891),
  ('structType -> type','structType',1,'p_structType','CT.py',896),
  ('structType -> DICT dict','structType',2,'p_structType','CT.py',897),
  ('optionalMatrix -> [ CTED ]','optionalMatrix',3,'p_optionalMatrix','CT.py',902),
  ('optionalMatrix -> empty','optionalMatrix',1,'p_optionalMatrix','CT.py',903),
  ('condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso','condition',11,'p_condition','CT.py',908),
  ('errorCondition -> <empty>','errorCondition',0,'p_errorCondition','CT.py',913),
  ('optionalElse -> errorElse ELSE saveVerdadero { body }','optionalElse',6,'p_optionalElse','CT.py',919),
  ('optionalElse -> empty','optionalElse',1,'p_optionalElse','CT.py',920),
  ('errorElse -> <empty>','errorElse',0,'p_errorElse','CT.py',925),
  ('dict -> errorDict PARINI type : type PARFIN','dict',6,'p_dict','CT.py',931),
  ('errorDict -> <empty>','errorDict',0,'p_errorDict','CT.py',936),
  ('expresion -> sExp performAndOr cyExpresion errorExpresion','expresion',4,'p_expresion','CT.py',942),
  ('errorExpresion -> <empty>','errorExpresion',0,'p_errorExpresion','CT.py',948),
  ('cyExpresion -> AND saveOperator expresion','cyExpresion',3,'p_cyExpresion','CT.py',954),
  ('cyExpresion -> OR saveOperator expresion','cyExpresion',3,'p_cyExpresion','CT.py',955),
  ('cyExpresion -> empty','cyExpresion',1,'p_cyExpresion','CT.py',956),
  ('sExp -> exp errorOpSExp opSExp performRelational','sExp',4,'p_sExp','CT.py',961),
  ('opSExp -> EQ saveOperator exp','opSExp',3,'p_opSExp','CT.py',966),
  ('opSExp -> DIF saveOperator exp','opSExp',3,'p_opSExp','CT.py',967),
  ('opSExp -> LTOEQ saveOperator exp','opSExp',3,'p_opSExp','CT.py',968),
  ('opSExp -> GTOEQ saveOperator exp','opSExp',3,'p_opSExp','CT.py',969),
  ('opSExp -> GT saveOperator exp','opSExp',3,'p_opSExp','CT.py',970),
  ('opSExp -> LT saveOperator exp','opSExp',3,'p_opSExp','CT.py',971),
  ('opSExp -> empty','opSExp',1,'p_opSExp','CT.py',972),
  ('errorOpSExp -> <empty>','errorOpSExp',0,'p_errorOpSExp','CT.py',976),
  ('exp -> term performAddSub errorCyExp cyExp','exp',4,'p_exp','CT.py',982),
  ('cyExp -> PLUS saveOperator exp','cyExp',3,'p_cyExp','CT.py',987),
  ('cyExp -> MINUS saveOperator exp','cyExp',3,'p_cyExp','CT.py',988),
  ('cyExp -> empty','cyExp',1,'p_cyExp','CT.py',989),
  ('errorCyExp -> <empty>','errorCyExp',0,'p_errorCyExp','CT.py',994),
  ('term -> fact performMulDiv cyTerm','term',3,'p_term','CT.py',999),
  ('cyTerm -> MULT saveOperator errorFact term','cyTerm',4,'p_cyTerm','CT.py',1004),
  ('cyTerm -> DIV saveOperator term','cyTerm',3,'p_cyTerm','CT.py',1005),
  ('cyTerm -> RES saveOperator term','cyTerm',3,'p_cyTerm','CT.py',1006),
  ('cyTerm -> empty','cyTerm',1,'p_cyTerm','CT.py',1007),
  ('fact -> CTES saveConstantString','fact',2,'p_fact','CT.py',1012),
  ('fact -> cte','fact',1,'p_fact','CT.py',1013),
  ('fact -> funcCall','fact',1,'p_fact','CT.py',1014),
  ('fact -> PARINI putFondo expresion PARFIN takeFondo','fact',5,'p_fact','CT.py',1015),
  ('fact -> ID saveVariable opAccess errorOpAccess','fact',4,'p_fact','CT.py',1016),
  ('errorFact -> <empty>','errorFact',0,'p_errorFact','CT.py',1021),
  ('opAccess -> opStruct','opAccess',1,'p_opAccess','CT.py',1027),
  ('opAccess -> opDictionary','opAccess',1,'p_opAccess','CT.py',1028),
  ('opAccess -> empty','opAccess',1,'p_opAccess','CT.py',1029),
  ('errorOpAccess -> <empty>','errorOpAccess',0,'p_errorOpAccess','CT.py',1034),
  ('opStruct -> errorOpStruct [ expresion ] opMatrix','opStruct',5,'p_opStruct','CT.py',1039),
  ('errorOpStruct -> <empty>','errorOpStruct',0,'p_errorOpStruct','CT.py',1044),
  ('opMatrix -> errorOpMatrix [ expresion ]','opMatrix',4,'p_opMatrix','CT.py',1050),
  ('opMatrix -> empty','opMatrix',1,'p_opMatrix','CT.py',1051),
  ('errorOpMatrix -> <empty>','errorOpMatrix',0,'p_errorOpMatrix','CT.py',1056),
  ('opDictionary -> . dictIndex','opDictionary',2,'p_opDictionary','CT.py',1062),
  ('dictIndex -> FIRST','dictIndex',1,'p_dictIndex','CT.py',1067),
  ('dictIndex -> LAST','dictIndex',1,'p_dictIndex','CT.py',1068),
  ('cte -> CTED saveConstantInt','cte',2,'p_cte','CT.py',1073),
  ('cte -> CTEF saveConstantFloat','cte',2,'p_cte','CT.py',1074),
  ('cte -> TRUE saveConstantBool','cte',2,'p_cte','CT.py',1075),
  ('cte -> FALSE saveConstantBool','cte',2,'p_cte','CT.py',1076),
  ('empty -> <empty>','empty',0,'p_empty','CT.py',1080),
  ('printTables -> <empty>','printTables',0,'p_printTables','CT.py',1085),
  ('rellenaFalso -> <empty>','rellenaFalso',0,'p_rellenaFalso','CT.py',1104),
  ('saveFalso -> <empty>','saveFalso',0,'p_saveFalso','CT.py',1109),
  ('saveVerdadero -> <empty>','saveVerdadero',0,'p_saveVerdadero','CT.py',1122),
  ('saveConstantInt -> <empty>','saveConstantInt',0,'p_saveConstantInt','CT.py',1129),
  ('saveConstantFloat -> <empty>','saveConstantFloat',0,'p_saveConstantFloat','CT.py',1141),
  ('saveConstantBool -> <empty>','saveConstantBool',0,'p_saveConstantBool','CT.py',1153),
  ('saveConstantString -> <empty>','saveConstantString',0,'p_saveConstantString','CT.py',1165),
  ('saveVariable -> <empty>','saveVariable',0,'p_saveVariable','CT.py',1177),
  ('saveOperator -> <empty>','saveOperator',0,'p_saveOperator','CT.py',1200),
  ('putFondo -> <empty>','putFondo',0,'p_putFondo','CT.py',1232),
  ('takeFondo -> <empty>','takeFondo',0,'p_takeFondo','CT.py',1237),
  ('performAssign -> <empty>','performAssign',0,'p_performAssign','CT.py',1244),
  ('performMulDiv -> <empty>','performMulDiv',0,'p_performMulDiv','CT.py',1265),
  ('performAddSub -> <empty>','performAddSub',0,'p_performAddSub','CT.py',1286),
  ('performRelational -> <empty>','performRelational',0,'p_performRelational','CT.py',1307),
  ('performAndOr -> <empty>','performAndOr',0,'p_performAndOr','CT.py',1328),
  ('performPrint -> <empty>','performPrint',0,'p_performPrint','CT.py',1349),
  ('performRead -> <empty>','performRead',0,'p_performeRead','CT.py',1353),
]
