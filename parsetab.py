
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'ABA07C94C21BC38371222891AC0B5DF3'
    
_lr_action_items = {'RETURN':([8,11,18,21,23,24,59,61,68,69,70,72,75,78,82,84,86,90,94,95,104,110,116,309,321,322,325,329,331,332,335,337,340,352,354,355,],[-6,-7,-37,-36,-35,-10,-164,-164,-74,-76,-77,-72,-79,-164,-164,-83,-82,-23,-78,-22,-70,-81,-21,-164,-164,-164,-85,-166,-115,-60,-84,-112,344,-114,-92,-88,]),'VARS':([7,10,53,179,309,],[-12,13,-12,-12,-12,]),'READ':([8,11,18,21,23,24,53,59,61,63,68,69,70,72,74,78,82,84,86,90,95,104,116,179,221,292,302,309,321,322,325,329,331,335,337,346,348,351,352,354,355,],[-6,-7,-37,-36,-35,-10,-164,-164,-164,-80,-74,-76,-77,-72,83,-164,-80,-83,-82,-23,-22,-70,-21,-164,-80,-80,-80,-164,-164,-80,-85,-166,-115,-84,-112,-80,-91,-80,-114,-92,-88,]),'DIF':([126,128,129,130,131,132,133,134,135,137,144,152,154,155,156,157,158,159,161,168,173,186,187,188,190,191,195,196,225,227,228,229,230,231,234,266,271,275,277,297,298,299,301,314,315,341,],[-171,-169,-173,-172,-179,-171,-144,-143,-170,-178,-132,-162,-160,-164,-142,-137,-163,-161,-164,-102,211,-149,-148,-151,-150,-164,-138,-141,-176,-146,-158,-159,-157,-133,-136,-145,-140,-173,-144,-164,-134,-135,-139,-152,-155,-154,]),'WHILE':([8,11,18,21,23,24,53,59,61,63,68,69,70,72,74,78,82,84,86,87,90,95,104,116,179,221,292,302,309,321,322,325,329,331,335,337,346,348,351,352,354,355,],[-6,-7,-37,-36,-35,-10,-164,-164,-164,-80,-74,-76,-77,-72,-87,-164,-80,-83,-82,113,-23,-22,-70,-21,-164,-80,-80,-80,-164,-164,-80,-85,-166,-115,-84,-112,-80,-91,-80,-114,-92,-88,]),'PROGRAM':([0,2,],[-5,3,]),'PRINT':([8,11,18,21,23,24,53,59,61,63,68,69,70,72,74,78,82,84,86,90,95,104,116,179,221,292,302,309,321,322,325,329,331,335,337,346,348,351,352,354,355,],[-6,-7,-37,-36,-35,-10,-164,-164,-164,-80,-74,-76,-77,-72,85,-164,-80,-83,-82,-23,-22,-70,-21,-164,-80,-80,-80,-164,-164,-80,-85,-166,-115,-84,-112,-80,-91,-80,-114,-92,-88,]),'PARINI':([41,45,47,51,54,64,83,85,88,112,113,115,117,118,127,129,138,146,153,162,165,167,171,193,197,198,201,204,205,209,210,211,212,213,214,217,226,232,233,236,237,238,240,246,247,250,251,252,253,254,255,257,268,269,272,275,281,304,324,344,],[-118,-4,58,-118,-63,76,111,112,115,127,-86,127,145,146,-175,115,162,127,127,127,202,127,127,-34,-174,-174,-39,-174,-174,-174,-174,-174,-174,-174,-174,-86,127,-174,-174,127,127,-147,127,127,127,127,127,127,127,127,127,127,127,127,127,115,127,-174,127,127,]),'DIV':([126,128,129,130,132,133,134,135,137,152,154,155,156,158,159,161,168,186,187,188,190,225,227,228,229,230,266,275,277,297,314,315,341,],[-171,-169,-173,-172,-171,-144,-143,-170,-178,-162,-160,-164,-142,-163,-161,197,-102,-149,-148,-151,-150,-176,-146,-158,-159,-157,-145,-173,-144,-164,-152,-155,-154,]),'.':([129,155,275,],[-173,189,-173,]),'TRUE':([112,115,127,146,153,162,165,167,171,193,197,198,201,202,204,205,209,210,211,212,213,214,217,226,232,233,236,237,238,240,246,247,250,251,252,253,254,255,257,268,269,272,278,281,304,324,344,],[126,126,-175,126,126,126,-174,126,126,-34,-174,-174,-39,126,-174,-174,-174,-174,-174,-174,-174,-174,-86,126,-174,-174,126,126,-147,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,-174,126,126,]),'[':([29,30,32,39,49,52,62,80,88,114,123,129,139,155,174,185,245,275,297,313,],[-14,-15,-16,-13,60,-108,-109,107,-173,-95,-117,-173,167,-153,-173,226,281,-173,-156,324,]),'MULT':([126,128,129,130,132,133,134,135,137,152,154,155,156,158,159,161,168,186,187,188,190,225,227,228,229,230,266,275,277,297,314,315,341,],[-171,-169,-173,-172,-171,-144,-143,-170,-178,-162,-160,-164,-142,-163,-161,198,-102,-149,-148,-151,-150,-176,-146,-158,-159,-157,-145,-173,-144,-164,-152,-155,-154,]),'LAST':([189,],[229,]),'MINUS':([126,128,129,130,131,132,133,134,135,137,152,154,155,156,157,158,159,161,168,186,187,188,190,191,195,196,225,227,228,229,230,266,271,275,277,297,301,314,315,341,],[-171,-169,-173,-172,-179,-171,-144,-143,-170,-178,-162,-160,-164,-142,-137,-163,-161,-164,-102,-149,-148,-151,-150,233,-138,-141,-176,-146,-158,-159,-157,-145,-140,-173,-144,-164,-139,-152,-155,-154,]),'LTOEQ':([126,128,129,130,131,132,133,134,135,137,144,152,154,155,156,157,158,159,161,168,173,186,187,188,190,191,195,196,225,227,228,229,230,231,234,266,271,275,277,297,298,299,301,314,315,341,],[-171,-169,-173,-172,-179,-171,-144,-143,-170,-178,-132,-162,-160,-164,-142,-137,-163,-161,-164,-102,210,-149,-148,-151,-150,-164,-138,-141,-176,-146,-158,-159,-157,-133,-136,-145,-140,-173,-144,-164,-134,-135,-139,-152,-155,-154,]),',':([46,103,125,126,128,129,130,131,132,133,134,135,136,137,141,143,144,151,152,154,155,156,157,158,159,160,161,168,169,173,180,186,187,188,190,191,195,196,206,207,208,215,216,225,227,228,229,230,231,234,248,256,265,266,270,271,283,284,285,286,287,288,289,290,296,297,298,299,300,301,314,315,341,],[55,55,-183,-171,-169,-173,-172,-179,-171,-144,-143,-170,-182,-178,-181,171,-132,181,-162,-160,-164,-142,-137,-163,-161,193,-164,-102,-164,-164,55,-149,-148,-151,-150,-164,-138,-141,-120,-123,171,-131,-180,-176,-146,-158,-159,-157,-133,-136,-119,-124,-183,-145,-182,-140,-121,-122,-129,-127,-126,-130,-128,-125,181,-164,-134,-135,193,-139,-152,-155,-154,]),'ASGN':([88,114,139,174,245,280,282,319,327,],[-173,-95,165,-173,-164,304,-100,-101,-99,]),'FIRST':([189,],[228,]),'LT':([126,128,129,130,131,132,133,134,135,137,144,152,154,155,156,157,158,159,161,168,173,186,187,188,190,191,195,196,225,227,228,229,230,231,234,266,271,275,277,297,298,299,301,314,315,341,],[-171,-169,-173,-172,-179,-171,-144,-143,-170,-178,-132,-162,-160,-164,-142,-137,-163,-161,-164,-102,212,-149,-148,-151,-150,-164,-138,-141,-176,-146,-158,-159,-157,-133,-136,-145,-140,-173,-144,-164,-134,-135,-139,-152,-155,-154,]),'PLUS':([126,128,129,130,131,132,133,134,135,137,152,154,155,156,157,158,159,161,168,186,187,188,190,191,195,196,225,227,228,229,230,266,271,275,277,297,301,314,315,341,],[-171,-169,-173,-172,-179,-171,-144,-143,-170,-178,-162,-160,-164,-142,-137,-163,-161,-164,-102,-149,-148,-151,-150,232,-138,-141,-176,-146,-158,-159,-157,-145,-140,-173,-144,-164,-139,-152,-155,-154,]),'BOOL':([13,19,42,58,59,61,76,78,79,101,220,323,],[-3,32,32,32,-3,-3,-3,-3,32,32,32,-3,]),';':([46,48,50,56,57,66,80,89,91,92,96,98,103,106,108,122,123,126,128,129,130,131,132,133,134,135,137,141,144,150,152,154,155,156,157,158,159,161,163,164,166,168,169,173,175,180,186,187,188,190,191,195,196,200,206,207,215,216,222,224,225,227,228,229,230,231,234,235,248,256,263,266,271,274,275,276,277,283,284,285,286,287,288,289,290,291,295,297,298,299,301,305,307,311,314,315,318,326,341,347,],[-164,59,61,-53,-11,78,-164,-26,-27,116,-25,-24,-164,-107,-111,-52,-117,-171,-169,-173,-172,-179,-171,-144,-143,-170,-178,-181,-132,-110,-162,-160,-164,-142,-137,-163,-161,-164,-97,-177,-96,-102,-164,-164,217,-164,-149,-148,-151,-150,-164,-138,-141,-94,-120,-123,-131,-180,-55,-31,-176,-146,-158,-159,-157,-133,-136,-28,-119,-124,-11,-145,-140,-38,-173,-40,-41,-121,-122,-129,-127,-126,-130,-128,-125,-167,-54,-164,-134,-135,-139,-98,320,323,-152,-155,-43,-42,-154,350,]),':':([29,30,32,39,67,126,128,132,135,152,154,158,159,241,243,244,279,],[-14,-15,-16,-13,79,-171,-169,-171,-170,-162,-160,-163,-161,278,-45,-46,-44,]),'$end':([1,36,43,],[0,-165,-1,]),'GT':([126,128,129,130,131,132,133,134,135,137,144,152,154,155,156,157,158,159,161,168,173,186,187,188,190,191,195,196,225,227,228,229,230,231,234,266,271,275,277,297,298,299,301,314,315,341,],[-171,-169,-173,-172,-179,-171,-144,-143,-170,-178,-132,-162,-160,-164,-142,-137,-163,-161,-164,-102,209,-149,-148,-151,-150,-164,-138,-141,-176,-146,-158,-159,-157,-133,-136,-145,-140,-173,-144,-164,-134,-135,-139,-152,-155,-154,]),'STRING':([13,19,42,58,59,61,76,78,79,101,220,323,],[-3,30,30,30,-3,-3,-3,-3,30,30,30,-3,]),'FOR':([8,11,18,21,23,24,53,59,61,63,68,69,70,72,74,78,82,84,86,90,93,95,104,116,179,221,292,302,309,321,322,325,329,331,335,337,346,348,351,352,354,355,],[-6,-7,-37,-36,-35,-10,-164,-164,-164,-80,-74,-76,-77,-72,-93,-164,-80,-83,-82,-23,117,-22,-70,-21,-164,-80,-80,-80,-164,-164,-80,-85,-166,-115,-84,-112,-80,-91,-80,-114,-92,-88,]),'ELSE':([321,330,],[-116,338,]),'RETURNS':([119,147,178,],[-63,-69,220,]),'FUNC':([7,8,9,11,12,16,17,18,21,23,24,59,61,68,69,70,72,78,104,219,259,],[-164,-6,-2,-7,-57,-57,28,-37,-36,-35,-10,-164,-164,-74,-76,-77,-72,-164,-70,-58,-56,]),'PARFIN':([29,30,32,39,56,76,99,100,102,103,105,115,120,122,125,126,128,129,130,131,132,133,134,135,136,137,140,141,142,143,144,148,151,152,154,155,156,157,158,159,160,161,163,164,166,168,169,170,172,173,176,180,182,183,184,186,187,188,190,191,192,194,195,196,199,200,206,207,208,215,216,222,225,227,228,229,230,231,234,243,244,248,249,256,262,264,265,266,270,271,274,275,276,277,279,283,284,285,286,287,288,289,290,294,296,297,298,299,300,301,303,305,310,312,314,315,316,318,326,333,336,341,342,],[-14,-15,-16,-13,-53,-164,119,-64,-62,-164,123,-164,-65,-52,-183,-171,-169,-173,-172,-179,-171,-144,-143,-170,-182,-178,168,-181,-104,-164,-132,-61,-164,-162,-160,-164,-142,-137,-163,-161,-164,-164,-97,-177,-96,-102,-164,-103,-106,-164,218,-164,224,-33,225,-149,-148,-151,-150,-164,235,-30,-138,-141,239,-94,-120,-123,-164,-131,-180,-164,-176,-146,-158,-159,-157,-133,-136,-45,-46,-119,-105,-124,-11,-48,-183,-145,-182,-140,-38,-173,-40,-41,-44,-121,-122,-129,-127,-126,-130,-128,-125,-54,-164,-164,-134,-135,-164,-139,318,-98,-51,-32,-152,-155,-29,-43,-42,-50,-90,-154,345,]),']':([71,124,126,128,129,130,131,132,133,134,135,137,141,144,152,154,155,156,157,158,159,161,168,169,173,186,187,188,190,191,195,196,203,206,207,215,216,225,227,228,229,230,231,234,248,256,266,267,271,283,284,285,286,287,288,289,290,297,298,299,301,306,314,315,334,341,],[80,150,-171,-169,-173,-172,-179,-171,-144,-143,-170,-178,-181,-132,-162,-160,-164,-142,-137,-163,-161,-164,-102,-164,-164,-149,-148,-151,-150,-164,-138,-141,245,-120,-123,-131,-180,-176,-146,-158,-159,-157,-133,-136,-119,-124,-145,297,-140,-121,-122,-129,-127,-126,-130,-128,-125,-164,-134,-135,-139,319,-152,-155,341,-154,]),'ID':([3,4,8,11,18,21,23,24,28,29,30,32,33,34,35,38,39,40,53,55,59,61,63,65,68,69,70,72,74,77,78,82,84,86,90,95,104,111,112,115,116,121,127,145,146,149,153,162,165,167,171,179,181,193,197,198,201,202,204,205,209,210,211,212,213,214,217,221,223,226,232,233,236,237,238,240,246,247,250,251,252,253,254,255,257,268,269,272,278,281,292,302,304,309,320,321,322,324,325,328,329,331,335,337,344,346,348,351,352,354,355,],[-3,5,-6,-7,-37,-36,-35,-10,-3,-14,-15,-16,-71,41,42,45,-13,46,-164,-11,-164,-164,-80,-54,-74,-76,-77,-72,88,103,-164,-80,-83,-82,-23,-22,-70,125,129,129,-21,-49,-175,174,129,180,129,129,-174,129,129,-164,-34,-34,-174,-174,-39,244,-174,-174,-174,-174,-174,-174,-174,-174,-86,-80,265,129,-174,-174,129,129,-147,275,129,129,129,129,129,129,129,129,129,129,129,129,244,129,-80,-80,-174,-164,-89,-164,-80,129,-85,174,-166,-115,-84,-112,129,-80,-91,-80,-114,-92,-88,]),'IF':([8,11,18,21,23,24,53,59,61,63,68,69,70,72,74,78,82,84,86,90,95,97,104,116,179,221,292,302,309,321,322,325,329,331,335,337,346,348,351,352,354,355,],[-6,-7,-37,-36,-35,-10,-164,-164,-164,-80,-74,-76,-77,-72,-113,-164,-80,-83,-82,-23,-22,118,-70,-21,-164,-80,-80,-80,-164,-164,-80,-85,-166,-115,-84,-112,-80,-91,-80,-114,-92,-88,]),'AND':([126,128,129,130,131,132,133,134,135,137,141,144,152,154,155,156,157,158,159,161,168,169,173,186,187,188,190,191,195,196,215,216,225,227,228,229,230,231,234,256,266,271,275,277,285,286,287,288,289,290,297,298,299,301,314,315,341,],[-171,-169,-173,-172,-179,-171,-144,-143,-170,-178,-181,-132,-162,-160,-164,-142,-137,-163,-161,-164,-102,204,-164,-149,-148,-151,-150,-164,-138,-141,-131,-180,-176,-146,-158,-159,-157,-133,-136,-124,-145,-140,-173,-144,-129,-127,-126,-130,-128,-125,-164,-134,-135,-139,-152,-155,-154,]),'CTES':([112,115,127,146,153,162,165,167,171,193,197,198,201,202,204,205,209,210,211,212,213,214,217,226,232,233,236,237,238,240,242,246,247,250,251,252,253,254,255,257,268,269,272,278,281,304,324,344,],[130,130,-175,130,130,130,-174,130,130,-34,-174,-174,-39,-47,-174,-174,-174,-174,-174,-174,-174,-174,-86,130,-174,-174,130,130,-147,130,279,130,130,130,130,130,130,130,130,130,130,130,130,-47,130,-174,130,130,]),'FALSE':([112,115,127,146,153,162,165,167,171,193,197,198,201,202,204,205,209,210,211,212,213,214,217,226,232,233,236,237,238,240,246,247,250,251,252,253,254,255,257,268,269,272,278,281,304,324,344,],[132,132,-175,132,132,132,-174,132,132,-34,-174,-174,-39,132,-174,-174,-174,-174,-174,-174,-174,-174,-86,132,-174,-174,132,132,-147,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,-174,132,132,]),'STRUCT':([13,22,59,61,78,],[-73,35,-73,-73,-73,]),'INT':([13,19,31,42,58,59,61,76,78,79,101,220,323,],[-3,-17,39,-17,-17,-3,-3,-3,-3,-17,-17,-17,-3,]),'EQ':([126,128,129,130,131,132,133,134,135,137,144,152,154,155,156,157,158,159,161,168,173,186,187,188,190,191,195,196,225,227,228,229,230,231,234,266,271,275,277,297,298,299,301,314,315,341,],[-171,-169,-173,-172,-179,-171,-144,-143,-170,-178,-132,-162,-160,-164,-142,-137,-163,-161,-164,-102,214,-149,-148,-151,-150,-164,-138,-141,-176,-146,-158,-159,-157,-133,-136,-145,-140,-173,-144,-164,-134,-135,-139,-152,-155,-154,]),'FLOAT':([13,19,42,58,59,61,76,78,79,101,220,323,],[-3,29,29,29,-3,-3,-3,-3,29,29,29,-3,]),'OR':([126,128,129,130,131,132,133,134,135,137,141,144,152,154,155,156,157,158,159,161,168,169,173,186,187,188,190,191,195,196,215,216,225,227,228,229,230,231,234,256,266,271,275,277,285,286,287,288,289,290,297,298,299,301,314,315,341,],[-171,-169,-173,-172,-179,-171,-144,-143,-170,-178,-181,-132,-162,-160,-164,-142,-137,-163,-161,-164,-102,205,-164,-149,-148,-151,-150,-164,-138,-141,-131,-180,-176,-146,-158,-159,-157,-133,-136,-124,-145,-140,-173,-144,-129,-127,-126,-130,-128,-125,-164,-134,-135,-139,-152,-155,-154,]),'DICT':([13,20,42,59,61,78,],[-75,34,51,-75,-75,-75,]),'CTED':([60,107,112,115,127,146,153,162,165,167,171,193,197,198,201,202,204,205,209,210,211,212,213,214,217,226,232,233,236,237,238,240,246,247,250,251,252,253,254,255,257,268,269,272,278,281,304,324,344,],[71,124,128,128,-175,128,128,128,-174,128,128,-34,-174,-174,-39,128,-174,-174,-174,-174,-174,-174,-174,-174,-86,128,-174,-174,128,128,-147,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,-174,128,128,]),'GTOEQ':([126,128,129,130,131,132,133,134,135,137,144,152,154,155,156,157,158,159,161,168,173,186,187,188,190,191,195,196,225,227,228,229,230,231,234,266,271,275,277,297,298,299,301,314,315,341,],[-171,-169,-173,-172,-179,-171,-144,-143,-170,-178,-132,-162,-160,-164,-142,-137,-163,-161,-164,-102,213,-149,-148,-151,-150,-164,-138,-141,-176,-146,-158,-159,-157,-133,-136,-145,-140,-173,-144,-164,-134,-135,-139,-152,-155,-154,]),'{':([5,6,29,30,32,37,39,44,119,147,218,239,258,260,273,293,338,343,345,],[-4,7,-14,-15,-16,-19,-13,53,-63,179,-167,-167,292,-68,302,309,-168,346,348,]),'MAIN':([7,8,9,11,12,14,15,16,18,21,23,24,26,27,59,61,68,69,70,72,78,104,219,259,],[-164,-6,-2,-7,-164,-20,-9,-164,-37,-36,-35,-10,37,-8,-164,-164,-74,-76,-77,-72,-164,-70,-58,-56,]),'}':([8,11,18,21,23,24,25,53,59,61,63,68,69,70,72,73,75,78,81,82,84,86,90,94,95,104,109,110,116,177,179,221,261,292,302,308,317,321,325,329,331,335,337,339,346,348,349,350,351,352,353,354,355,],[-6,-7,-37,-36,-35,-10,36,-164,-164,-164,-164,-74,-76,-77,-72,81,-79,-164,-58,-164,-83,-82,-23,-78,-22,-70,-18,-81,-21,219,-164,-164,-67,-164,-164,321,325,-164,-85,-166,-115,-84,-112,-66,-164,-91,352,-59,-164,-114,354,-92,-88,]),'CTEF':([112,115,127,146,153,162,165,167,171,193,197,198,201,202,204,205,209,210,211,212,213,214,217,226,232,233,236,237,238,240,246,247,250,251,252,253,254,255,257,268,269,272,278,281,304,324,344,],[135,135,-175,135,135,135,-174,135,135,-34,-174,-174,-39,135,-174,-174,-174,-174,-174,-174,-174,-174,-86,135,-174,-174,135,135,-147,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,-174,135,135,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vars':([7,53,179,309,],[8,8,8,8,]),'errorOpSExp':([144,],[173,]),'errorMain':([14,],[26,]),'errorCyExp':([157,],[191,]),'opParamCall':([115,],[140,]),'cyTypeParam':([46,103,180,],[57,122,222,]),'takeFondo':([225,],[266,]),'forCycle':([74,],[86,]),'structType':([42,],[49,]),'changeCurrentScope':([9,],[12,]),'struct':([42,],[50,]),'fix':([181,193,],[223,236,]),'param':([76,323,],[100,333,]),'init':([139,280,],[166,305,]),'program':([0,],[1,]),'dict':([41,51,],[48,62,]),'opMatrix':([297,],[314,]),'errorExpresion':([206,],[248,]),'main':([14,],[25,]),'return':([332,],[339,]),'errorParam':([121,],[149,]),'read':([74,],[91,]),'errorReturn':([332,],[340,]),'assignOptions':([139,],[164,]),'flagParameters':([54,119,],[64,147,]),'cyRead':([151,296,],[182,312,]),'basicDeclare':([13,59,61,78,],[23,23,23,23,]),'cyInstruction':([74,],[94,]),'condition':([74,],[95,]),'expresion':([115,146,153,162,167,171,226,240,246,247,257,281,324,344,],[143,176,184,199,203,208,267,276,283,284,291,306,334,347,]),'term':([112,115,146,153,162,167,171,226,236,237,240,246,247,250,251,252,253,254,255,257,268,269,272,281,324,344,],[131,131,131,131,131,131,131,131,131,271,131,131,131,131,131,131,131,131,131,131,131,131,301,131,131,131,]),'funcCall':([74,112,115,146,153,162,167,171,226,236,237,240,246,247,250,251,252,253,254,255,257,268,269,272,281,324,344,],[96,133,133,133,133,133,133,133,133,133,133,277,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,]),'initDict':([139,],[163,]),'returnFor':([336,],[342,]),'returnAssign':([354,],[355,]),'saveTypeParam':([65,294,295,],[77,310,311,]),'saltoBody':([320,],[328,]),'dictDeclare':([13,59,61,78,],[18,18,18,18,]),'saveMain':([37,],[44,]),'errorVars':([7,53,179,309,],[10,10,10,10,]),'whileCycle':([74,],[84,]),'errorDictDeclare':([13,59,61,78,],[20,20,20,20,]),'performAndOr':([141,],[169,]),'opFunctions':([12,16,],[14,27,]),'errorOpStruct':([155,],[185,]),'saveVariable':([88,129,174,275,],[114,155,114,155,]),'opVars':([7,53,179,309,],[9,63,221,322,]),'saveOperator':([165,197,198,204,205,209,210,211,212,213,214,232,233,304,],[201,237,238,246,247,250,251,252,253,254,255,268,269,201,]),'errorInit':([201,],[240,]),'performAssign':([164,],[200,]),'cyExpresion':([169,],[206,]),'performRead':([125,265,],[151,296,]),'print':([74,],[89,]),'body':([63,82,221,292,302,322,346,351,],[73,110,261,308,317,332,349,353,]),'errorOpParameters':([120,],[148,]),'repeatWhile':([325,],[335,]),'printTables':([36,],[43,]),'saveParamToDirProc':([100,],[120,]),'saveReturnType':([260,],[293,]),'opParameters':([76,],[99,]),'errorCondition':([74,],[97,]),'cte':([112,115,146,153,162,167,171,202,226,236,237,240,246,247,250,251,252,253,254,255,257,268,269,272,278,281,324,344,],[134,134,134,134,134,134,134,243,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,243,134,134,134,]),'saveProc':([5,45,],[6,54,]),'assign':([74,145,328,],[98,175,336,]),'errorStructDeclare':([13,59,61,78,],[22,22,22,22,]),'cyExp':([191,],[231,]),'instr':([74,],[82,]),'errorFact':([238,],[272,]),'errorProgram':([0,],[2,]),'cyTerm':([161,],[195,]),'rellenaBody':([348,],[351,]),'errorAssignMatrix':([319,],[327,]),'cyDeclare':([59,61,78,],[68,72,104,]),'errorBody':([63,82,221,292,302,322,346,351,],[74,74,74,74,74,74,74,74,]),'opStruct':([155,],[187,]),'errorOpAccess':([188,],[227,]),'saveConstantBool':([126,132,],[152,158,]),'type':([19,42,58,79,101,220,],[33,52,67,105,121,260,]),'dictIndex':([189,],[230,]),'empty':([7,12,16,46,53,59,61,63,76,78,80,82,103,115,143,151,155,160,161,169,173,179,180,191,208,221,222,245,292,296,297,300,302,309,321,322,346,351,],[11,15,15,56,11,70,70,75,102,70,108,75,56,142,172,183,190,194,196,207,215,11,56,234,172,75,262,282,75,183,315,194,75,11,331,75,75,75,]),'errorBasicDeclare':([33,],[40,]),'function':([12,16,],[16,16,]),'performMulDiv':([137,],[161,]),'saveConstantString':([130,],[156,]),'errorOpMatrix':([297,],[313,]),'opDictionary':([155,],[186,]),'errorType':([19,42,58,79,101,220,],[31,31,31,31,31,31,]),'errorForCycle':([74,],[93,]),'opAccess':([155,],[188,]),'basicStatements':([74,],[92,]),'structDeclare':([13,59,61,78,],[21,21,21,21,]),'putFondo':([127,],[153,]),'errorAssign':([114,],[139,]),'saveReturn':([113,217,],[138,257,]),'cyParam':([222,],[264,]),'cyPrint':([160,300,],[192,316,]),'saveConstantFloat':([135,],[159,]),'errorOpReturns':([147,],[178,]),'performAddSub':([131,],[157,]),'cyParamCall':([143,208,],[170,249,]),'declare':([13,59,61,78,],[24,69,69,69,]),'opSExp':([173,],[216,]),'optionalMatrix':([80,],[106,]),'performPrint':([136,270,],[160,300,]),'saveFalso':([218,239,291,],[258,273,307,]),'clearVarsTable':([81,219,],[109,259,]),'optionalElse':([321,],[329,]),'dictType':([202,278,],[241,303,]),'initWith':([240,],[274,]),'saveConstantInt':([128,],[154,]),'errorWhileCycle':([74,],[87,]),'sExp':([115,146,153,162,167,171,226,240,246,247,257,281,324,344,],[141,141,141,141,141,141,141,141,141,141,141,141,141,141,]),'errorElse':([321,],[330,]),'performRelational':([216,],[256,]),'errorCyParam':([222,],[263,]),'opReturns':([147,],[177,]),'errorDictType':([202,278,],[242,242,]),'assignMatrix':([245,],[280,]),'saveVerdadero':([338,],[343,]),'rellenaFalso':([329,],[337,]),'errorDict':([41,51,],[47,47,]),'errorInitDict':([318,],[326,]),'saveType':([3,13,28,59,61,76,78,323,],[4,19,38,19,19,101,19,101,]),'saveID':([55,57,262,263,],[65,66,294,295,]),'cycle':([74,],[90,]),'errorFunction':([12,16,],[17,17,]),'exp':([112,115,146,153,162,167,171,226,236,240,246,247,250,251,252,253,254,255,257,268,269,281,324,344,],[136,144,144,144,144,144,144,144,270,144,144,144,285,286,287,288,289,290,144,298,299,144,144,144,]),'fact':([112,115,146,153,162,167,171,226,236,237,240,246,247,250,251,252,253,254,255,257,268,269,272,281,324,344,],[137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables','program',12,'p_program','CT.py',307),
  ('changeCurrentScope -> <empty>','changeCurrentScope',0,'p_changeCurrentScope','CT.py',311),
  ('saveType -> <empty>','saveType',0,'p_saveType','CT.py',316),
  ('saveProc -> <empty>','saveProc',0,'p_saveProc','CT.py',323),
  ('errorProgram -> <empty>','errorProgram',0,'p_errorProgram','CT.py',340),
  ('opVars -> vars','opVars',1,'p_opVars','CT.py',346),
  ('opVars -> empty','opVars',1,'p_opVars','CT.py',347),
  ('opFunctions -> function opFunctions','opFunctions',2,'p_opFunctions','CT.py',352),
  ('opFunctions -> empty','opFunctions',1,'p_opFunctions','CT.py',353),
  ('vars -> errorVars VARS declare','vars',3,'p_vars','CT.py',357),
  ('saveID -> <empty>','saveID',0,'p_saveID','CT.py',362),
  ('errorVars -> <empty>','errorVars',0,'p_errorVars','CT.py',390),
  ('type -> errorType INT','type',2,'p_type','CT.py',396),
  ('type -> FLOAT','type',1,'p_type','CT.py',397),
  ('type -> STRING','type',1,'p_type','CT.py',398),
  ('type -> BOOL','type',1,'p_type','CT.py',399),
  ('errorType -> <empty>','errorType',0,'p_errorType','CT.py',404),
  ('main -> errorMain MAIN saveMain { opVars body } clearVarsTable','main',8,'p_main','CT.py',410),
  ('saveMain -> <empty>','saveMain',0,'p_saveMain','CT.py',414),
  ('errorMain -> <empty>','errorMain',0,'p_errorMain','CT.py',422),
  ('instr -> basicStatements ;','instr',2,'p_instr','CT.py',428),
  ('instr -> condition','instr',1,'p_instr','CT.py',429),
  ('instr -> cycle','instr',1,'p_instr','CT.py',430),
  ('basicStatements -> assign','basicStatements',1,'p_basicStatements','CT.py',434),
  ('basicStatements -> funcCall','basicStatements',1,'p_basicStatements','CT.py',435),
  ('basicStatements -> print','basicStatements',1,'p_basicStatements','CT.py',436),
  ('basicStatements -> read','basicStatements',1,'p_basicStatements','CT.py',437),
  ('print -> PRINT PARINI exp performPrint cyPrint PARFIN','print',6,'p_print','CT.py',440),
  ('cyPrint -> , fix exp performPrint cyPrint','cyPrint',5,'p_cyPrint','CT.py',443),
  ('cyPrint -> empty','cyPrint',1,'p_cyPrint','CT.py',444),
  ('read -> READ PARINI ID performRead cyRead PARFIN','read',6,'p_read','CT.py',447),
  ('cyRead -> , fix ID performRead cyRead','cyRead',5,'p_cyRead','CT.py',450),
  ('cyRead -> empty','cyRead',1,'p_cyRead','CT.py',451),
  ('fix -> <empty>','fix',0,'p_fix','CT.py',454),
  ('declare -> basicDeclare','declare',1,'p_declare','CT.py',459),
  ('declare -> structDeclare','declare',1,'p_declare','CT.py',460),
  ('declare -> dictDeclare','declare',1,'p_declare','CT.py',461),
  ('init -> ASGN saveOperator errorInit initWith','init',4,'p_init','CT.py',466),
  ('errorInit -> <empty>','errorInit',0,'p_errorInit','CT.py',470),
  ('initWith -> expresion','initWith',1,'p_initWith','CT.py',476),
  ('initWith -> funcCall','initWith',1,'p_initWith','CT.py',477),
  ('initDict -> ASGN PARINI dictType : dictType PARFIN errorInitDict','initDict',7,'p_initDict','CT.py',482),
  ('errorInitDict -> <empty>','errorInitDict',0,'p_errorInitDict','CT.py',487),
  ('dictType -> errorDictType CTES','dictType',2,'p_dictType','CT.py',493),
  ('dictType -> cte','dictType',1,'p_dictType','CT.py',494),
  ('dictType -> ID','dictType',1,'p_dictType','CT.py',495),
  ('errorDictType -> <empty>','errorDictType',0,'p_errorDictType','CT.py',500),
  ('param -> saveType type errorParam ID cyTypeParam cyParam','param',6,'p_param','CT.py',506),
  ('errorParam -> <empty>','errorParam',0,'p_errorParam','CT.py',511),
  ('cyParam -> errorCyParam saveID saveTypeParam ; param','cyParam',5,'p_cyParam','CT.py',517),
  ('cyParam -> empty saveID saveTypeParam','cyParam',3,'p_cyParam','CT.py',518),
  ('cyTypeParam -> , saveID saveTypeParam ID cyTypeParam','cyTypeParam',5,'p_cyTypeParam','CT.py',523),
  ('cyTypeParam -> empty','cyTypeParam',1,'p_cyTypeParam','CT.py',524),
  ('saveTypeParam -> <empty>','saveTypeParam',0,'p_saveTypeParam','CT.py',528),
  ('errorCyParam -> <empty>','errorCyParam',0,'p_errorCyParam','CT.py',538),
  ('function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable','function',13,'p_function','CT.py',544),
  ('errorFunction -> <empty>','errorFunction',0,'p_errorFunction','CT.py',548),
  ('clearVarsTable -> <empty>','clearVarsTable',0,'p_clearVarsTable','CT.py',553),
  ('return -> errorReturn RETURN expresion ;','return',4,'p_return','CT.py',558),
  ('errorReturn -> <empty>','errorReturn',0,'p_errorReturn','CT.py',563),
  ('opParameters -> param saveParamToDirProc errorOpParameters','opParameters',3,'p_opParameters','CT.py',569),
  ('opParameters -> empty','opParameters',1,'p_opParameters','CT.py',570),
  ('flagParameters -> <empty>','flagParameters',0,'p_flagParameters','CT.py',574),
  ('saveParamToDirProc -> <empty>','saveParamToDirProc',0,'p_saveParamToDirProc','CT.py',579),
  ('errorOpParameters -> <empty>','errorOpParameters',0,'p_errorOpParameters','CT.py',587),
  ('opReturns -> errorOpReturns RETURNS type saveReturnType { opVars body return','opReturns',8,'p_opReturns','CT.py',593),
  ('opReturns -> { opVars body','opReturns',3,'p_opReturns','CT.py',594),
  ('saveReturnType -> <empty>','saveReturnType',0,'p_saveReturnType','CT.py',599),
  ('errorOpReturns -> <empty>','errorOpReturns',0,'p_errorOpReturns','CT.py',605),
  ('basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare','basicDeclare',8,'p_basicDeclare','CT.py',611),
  ('errorBasicDeclare -> <empty>','errorBasicDeclare',0,'p_errorBasicDeclare','CT.py',616),
  ('structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare','structDeclare',6,'p_structDeclare','CT.py',622),
  ('errorStructDeclare -> <empty>','errorStructDeclare',0,'p_errorStructDeclare','CT.py',627),
  ('dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare','dictDeclare',6,'p_dictDeclare','CT.py',633),
  ('errorDictDeclare -> <empty>','errorDictDeclare',0,'p_errorDictDeclare','CT.py',638),
  ('cyDeclare -> declare','cyDeclare',1,'p_cyDeclare','CT.py',644),
  ('cyDeclare -> empty','cyDeclare',1,'p_cyDeclare','CT.py',645),
  ('body -> errorBody cyInstruction','body',2,'p_body','CT.py',650),
  ('body -> empty','body',1,'p_body','CT.py',651),
  ('errorBody -> <empty>','errorBody',0,'p_errorBody','CT.py',656),
  ('cyInstruction -> instr body','cyInstruction',2,'p_cyInstruction','CT.py',662),
  ('cycle -> forCycle','cycle',1,'p_cycle','CT.py',667),
  ('cycle -> whileCycle','cycle',1,'p_cycle','CT.py',668),
  ('whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile','whileCycle',11,'p_whileCycle','CT.py',673),
  ('repeatWhile -> <empty>','repeatWhile',0,'p_repeatWhile','CT.py',677),
  ('saveReturn -> <empty>','saveReturn',0,'p_saveReturn','CT.py',684),
  ('errorWhileCycle -> <empty>','errorWhileCycle',0,'p_errorWhileCycle','CT.py',688),
  ('forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign','forCycle',18,'p_forCycle','CT.py',694),
  ('saltoBody -> <empty>','saltoBody',0,'p_saltoBody','CT.py',698),
  ('returnFor -> <empty>','returnFor',0,'p_returnFor','CT.py',704),
  ('rellenaBody -> <empty>','rellenaBody',0,'p_rellenaBody','CT.py',716),
  ('returnAssign -> <empty>','returnAssign',0,'p_returnAssign','CT.py',724),
  ('errorForCycle -> <empty>','errorForCycle',0,'p_errorForCycle','CT.py',729),
  ('assign -> ID saveVariable errorAssign assignOptions performAssign','assign',5,'p_assign','CT.py',735),
  ('errorAssign -> <empty>','errorAssign',0,'p_errorAssign','CT.py',740),
  ('assignOptions -> init','assignOptions',1,'p_assignOptions','CT.py',746),
  ('assignOptions -> initDict','assignOptions',1,'p_assignOptions','CT.py',747),
  ('assignOptions -> [ expresion ] assignMatrix init','assignOptions',5,'p_assignOptions','CT.py',748),
  ('assignMatrix -> [ expresion ] errorAssignMatrix','assignMatrix',4,'p_assignMatrix','CT.py',753),
  ('assignMatrix -> empty','assignMatrix',1,'p_assignMatrix','CT.py',754),
  ('errorAssignMatrix -> <empty>','errorAssignMatrix',0,'p_errorAssignMatrix','CT.py',759),
  ('funcCall -> ID PARINI opParamCall PARFIN','funcCall',4,'p_funcCall','CT.py',765),
  ('opParamCall -> expresion cyParamCall','opParamCall',2,'p_opParamCall','CT.py',770),
  ('opParamCall -> empty','opParamCall',1,'p_opParamCall','CT.py',771),
  ('cyParamCall -> , expresion cyParamCall','cyParamCall',3,'p_cyParamCall','CT.py',776),
  ('cyParamCall -> empty','cyParamCall',1,'p_cyParamCall','CT.py',777),
  ('struct -> structType [ CTED ] optionalMatrix','struct',5,'p_struct','CT.py',782),
  ('structType -> type','structType',1,'p_structType','CT.py',787),
  ('structType -> DICT dict','structType',2,'p_structType','CT.py',788),
  ('optionalMatrix -> [ CTED ]','optionalMatrix',3,'p_optionalMatrix','CT.py',793),
  ('optionalMatrix -> empty','optionalMatrix',1,'p_optionalMatrix','CT.py',794),
  ('condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso','condition',11,'p_condition','CT.py',799),
  ('errorCondition -> <empty>','errorCondition',0,'p_errorCondition','CT.py',804),
  ('optionalElse -> errorElse ELSE saveVerdadero { body }','optionalElse',6,'p_optionalElse','CT.py',810),
  ('optionalElse -> empty','optionalElse',1,'p_optionalElse','CT.py',811),
  ('errorElse -> <empty>','errorElse',0,'p_errorElse','CT.py',816),
  ('dict -> errorDict PARINI type : type PARFIN','dict',6,'p_dict','CT.py',822),
  ('errorDict -> <empty>','errorDict',0,'p_errorDict','CT.py',827),
  ('expresion -> sExp performAndOr cyExpresion errorExpresion','expresion',4,'p_expresion','CT.py',833),
  ('errorExpresion -> <empty>','errorExpresion',0,'p_errorExpresion','CT.py',839),
  ('cyExpresion -> AND saveOperator expresion','cyExpresion',3,'p_cyExpresion','CT.py',845),
  ('cyExpresion -> OR saveOperator expresion','cyExpresion',3,'p_cyExpresion','CT.py',846),
  ('cyExpresion -> empty','cyExpresion',1,'p_cyExpresion','CT.py',847),
  ('sExp -> exp errorOpSExp opSExp performRelational','sExp',4,'p_sExp','CT.py',852),
  ('opSExp -> EQ saveOperator exp','opSExp',3,'p_opSExp','CT.py',857),
  ('opSExp -> DIF saveOperator exp','opSExp',3,'p_opSExp','CT.py',858),
  ('opSExp -> LTOEQ saveOperator exp','opSExp',3,'p_opSExp','CT.py',859),
  ('opSExp -> GTOEQ saveOperator exp','opSExp',3,'p_opSExp','CT.py',860),
  ('opSExp -> GT saveOperator exp','opSExp',3,'p_opSExp','CT.py',861),
  ('opSExp -> LT saveOperator exp','opSExp',3,'p_opSExp','CT.py',862),
  ('opSExp -> empty','opSExp',1,'p_opSExp','CT.py',863),
  ('errorOpSExp -> <empty>','errorOpSExp',0,'p_errorOpSExp','CT.py',867),
  ('exp -> term performAddSub errorCyExp cyExp','exp',4,'p_exp','CT.py',873),
  ('cyExp -> PLUS saveOperator exp','cyExp',3,'p_cyExp','CT.py',878),
  ('cyExp -> MINUS saveOperator exp','cyExp',3,'p_cyExp','CT.py',879),
  ('cyExp -> empty','cyExp',1,'p_cyExp','CT.py',880),
  ('errorCyExp -> <empty>','errorCyExp',0,'p_errorCyExp','CT.py',885),
  ('term -> fact performMulDiv cyTerm','term',3,'p_term','CT.py',890),
  ('cyTerm -> MULT saveOperator errorFact term','cyTerm',4,'p_cyTerm','CT.py',895),
  ('cyTerm -> DIV saveOperator term','cyTerm',3,'p_cyTerm','CT.py',896),
  ('cyTerm -> empty','cyTerm',1,'p_cyTerm','CT.py',897),
  ('fact -> CTES saveConstantString','fact',2,'p_fact','CT.py',902),
  ('fact -> cte','fact',1,'p_fact','CT.py',903),
  ('fact -> funcCall','fact',1,'p_fact','CT.py',904),
  ('fact -> PARINI putFondo expresion PARFIN takeFondo','fact',5,'p_fact','CT.py',905),
  ('fact -> ID saveVariable opAccess errorOpAccess','fact',4,'p_fact','CT.py',906),
  ('errorFact -> <empty>','errorFact',0,'p_errorFact','CT.py',911),
  ('opAccess -> opStruct','opAccess',1,'p_opAccess','CT.py',917),
  ('opAccess -> opDictionary','opAccess',1,'p_opAccess','CT.py',918),
  ('opAccess -> empty','opAccess',1,'p_opAccess','CT.py',919),
  ('errorOpAccess -> <empty>','errorOpAccess',0,'p_errorOpAccess','CT.py',924),
  ('opStruct -> errorOpStruct [ expresion ] opMatrix','opStruct',5,'p_opStruct','CT.py',929),
  ('errorOpStruct -> <empty>','errorOpStruct',0,'p_errorOpStruct','CT.py',934),
  ('opMatrix -> errorOpMatrix [ expresion ]','opMatrix',4,'p_opMatrix','CT.py',940),
  ('opMatrix -> empty','opMatrix',1,'p_opMatrix','CT.py',941),
  ('errorOpMatrix -> <empty>','errorOpMatrix',0,'p_errorOpMatrix','CT.py',946),
  ('opDictionary -> . dictIndex','opDictionary',2,'p_opDictionary','CT.py',952),
  ('dictIndex -> FIRST','dictIndex',1,'p_dictIndex','CT.py',957),
  ('dictIndex -> LAST','dictIndex',1,'p_dictIndex','CT.py',958),
  ('cte -> CTED saveConstantInt','cte',2,'p_cte','CT.py',963),
  ('cte -> CTEF saveConstantFloat','cte',2,'p_cte','CT.py',964),
  ('cte -> TRUE saveConstantBool','cte',2,'p_cte','CT.py',965),
  ('cte -> FALSE saveConstantBool','cte',2,'p_cte','CT.py',966),
  ('empty -> <empty>','empty',0,'p_empty','CT.py',970),
  ('printTables -> <empty>','printTables',0,'p_printTables','CT.py',975),
  ('rellenaFalso -> <empty>','rellenaFalso',0,'p_rellenaFalso','CT.py',989),
  ('saveFalso -> <empty>','saveFalso',0,'p_saveFalso','CT.py',994),
  ('saveVerdadero -> <empty>','saveVerdadero',0,'p_saveVerdadero','CT.py',1007),
  ('saveConstantInt -> <empty>','saveConstantInt',0,'p_saveConstantInt','CT.py',1014),
  ('saveConstantFloat -> <empty>','saveConstantFloat',0,'p_saveConstantFloat','CT.py',1021),
  ('saveConstantBool -> <empty>','saveConstantBool',0,'p_saveConstantBool','CT.py',1028),
  ('saveConstantString -> <empty>','saveConstantString',0,'p_saveConstantString','CT.py',1035),
  ('saveVariable -> <empty>','saveVariable',0,'p_saveVariable','CT.py',1042),
  ('saveOperator -> <empty>','saveOperator',0,'p_saveOperator','CT.py',1065),
  ('putFondo -> <empty>','putFondo',0,'p_putFondo','CT.py',1095),
  ('takeFondo -> <empty>','takeFondo',0,'p_takeFondo','CT.py',1100),
  ('performAssign -> <empty>','performAssign',0,'p_performAssign','CT.py',1107),
  ('performMulDiv -> <empty>','performMulDiv',0,'p_performMulDiv','CT.py',1128),
  ('performAddSub -> <empty>','performAddSub',0,'p_performAddSub','CT.py',1149),
  ('performRelational -> <empty>','performRelational',0,'p_performRelational','CT.py',1170),
  ('performAndOr -> <empty>','performAndOr',0,'p_performAndOr','CT.py',1191),
  ('performPrint -> <empty>','performPrint',0,'p_performPrint','CT.py',1212),
  ('performRead -> <empty>','performRead',0,'p_performeRead','CT.py',1216),
]
