
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '92E4A9B314C5D733C03DCF93C670DA3D'
    
_lr_action_items = {'RETURN':([8,11,18,21,23,24,53,62,64,65,66,72,77,83,88,97,99,101,105,109,110,119,125,313,339,352,353,358,364,366,367,373,378,381,400,404,405,],[-6,-7,-38,-37,-36,-10,-187,-187,-76,-80,-81,-78,-187,-74,-83,-187,-87,-86,-24,-82,-23,-85,-22,-187,-71,-187,-187,-89,-189,-127,-63,-88,-124,387,-126,-96,-92,]),'VARS':([7,10,67,155,313,],[-12,13,-12,-12,-12,]),'READ':([8,11,18,21,23,24,53,62,64,65,66,67,72,74,77,80,83,87,97,99,101,105,110,125,155,187,224,305,313,324,339,352,353,358,364,366,373,378,391,395,399,400,404,405,],[-6,-7,-38,-37,-36,-10,-187,-187,-76,-80,-81,-187,-78,-19,-187,-84,-74,98,-84,-87,-86,-24,-23,-22,-187,-71,-84,-84,-187,-84,-71,-187,-84,-89,-189,-127,-88,-124,-84,-95,-84,-126,-96,-92,]),'NEG':([121,136,138,150,152,161,173,175,179,193,203,205,208,209,211,212,218,241,242,245,246,247,248,251,258,259,260,264,265,266,267,268,269,282,283,284,288,300,302,303,306,307,308,309,310,311,317,360,374,387,388,],[-198,-198,164,-198,-198,-198,-198,-197,-198,-198,-35,-197,-197,-197,-198,-40,-90,-197,-197,-198,-198,-198,-166,-198,-198,-197,-197,-197,-197,-197,-197,-197,-197,-198,-198,-198,-198,-198,-198,-198,-198,-198,-198,-198,-198,-198,-198,-198,-197,-198,-198,]),'DIF':([135,137,139,140,141,142,143,144,145,147,160,162,165,166,167,168,169,170,172,184,194,196,197,198,200,201,206,207,221,232,236,237,238,239,240,243,279,286,287,292,294,297,318,320,321,323,327,357,369,371,372,383,402,],[-194,-192,-196,-195,-202,-194,-158,-157,-193,-201,-185,-183,-199,-187,-156,-149,-186,-184,-187,-144,-155,-168,-167,-170,-169,-187,-150,-154,266,-199,-160,-181,-182,-180,-145,-148,-159,-153,-152,-196,-158,-107,-161,-146,-147,-151,-106,-187,-162,-172,-177,-171,-176,]),'WHILE':([8,11,18,21,23,24,53,62,64,65,66,67,72,74,77,80,83,87,97,99,101,102,105,110,125,155,187,224,305,313,324,339,352,353,358,364,366,373,378,391,395,399,400,404,405,],[-6,-7,-38,-37,-36,-10,-187,-187,-76,-80,-81,-187,-78,-19,-187,-84,-74,-91,-84,-87,-86,122,-24,-23,-22,-187,-71,-84,-84,-187,-84,-71,-187,-84,-89,-189,-127,-88,-124,-84,-95,-84,-126,-96,-92,]),'PROGRAM':([0,2,],[-5,3,]),'PRINT':([8,11,18,21,23,24,53,62,64,65,66,67,72,74,77,80,83,87,97,99,101,105,110,125,155,187,224,305,313,324,339,352,353,358,364,366,373,378,391,395,399,400,404,405,],[-6,-7,-38,-37,-36,-10,-187,-187,-76,-80,-81,-187,-78,-19,-187,-84,-74,100,-84,-87,-86,-24,-23,-22,-187,-71,-84,-84,-187,-84,-71,-187,-84,-89,-189,-127,-88,-124,-84,-95,-84,-126,-96,-92,]),'PARINI':([41,44,50,57,68,75,98,100,103,121,122,124,126,127,136,139,148,150,152,161,163,164,173,175,179,193,203,205,208,209,211,212,218,241,242,245,246,247,248,251,258,259,260,264,265,266,267,268,269,282,283,284,288,292,300,302,303,306,307,308,309,310,311,317,360,374,387,388,],[-130,-130,61,-4,-66,81,120,121,-108,136,-90,150,151,152,-198,-108,173,-198,136,136,192,193,136,213,136,136,-35,-197,-197,-197,136,-40,-90,-197,-197,136,136,136,-166,136,136,-197,-197,-197,-197,-197,-197,-197,-197,136,136,136,136,-108,136,136,136,136,136,136,136,136,136,136,136,-197,136,136,]),'DIV':([135,137,139,140,142,143,144,145,147,160,162,165,166,167,169,170,172,194,196,197,198,200,232,236,237,238,239,279,292,294,297,318,327,357,369,371,372,383,402,],[-194,-192,-196,-195,-194,-158,-157,-193,-201,-185,-183,-199,-187,-156,-186,-184,208,-155,-168,-167,-170,-169,-199,-160,-181,-182,-180,-159,-196,-158,-107,-161,-106,-187,-162,-172,-177,-171,-176,]),'.':([139,166,292,],[-196,199,-196,]),'TRUE':([121,136,150,152,161,173,175,179,193,203,205,208,209,211,212,213,218,241,242,245,246,247,248,251,258,259,260,264,265,266,267,268,269,282,283,284,288,295,300,302,303,306,307,308,309,310,311,317,360,374,387,388,],[135,-198,-198,135,135,135,-197,135,135,-35,-197,-197,-197,135,-40,135,-90,-197,-197,135,135,135,-166,135,135,-197,-197,-197,-197,-197,-197,-197,-197,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,-197,135,135,]),'[':([52,63,73,103,117,123,132,139,149,166,174,180,195,235,292,325,347,357,370,382,],[-11,-117,79,-196,-123,-99,158,-196,-174,-175,211,-196,-174,282,-196,-178,360,-179,-178,388,]),'MULT':([135,137,139,140,142,143,144,145,147,160,162,165,166,167,169,170,172,194,196,197,198,200,232,236,237,238,239,279,292,294,297,318,327,357,369,371,372,383,402,],[-194,-192,-196,-195,-194,-158,-157,-193,-201,-185,-183,-199,-187,-156,-186,-184,209,-155,-168,-167,-170,-169,-199,-160,-181,-182,-180,-159,-196,-158,-107,-161,-106,-187,-162,-172,-177,-171,-176,]),'LAST':([199,],[238,]),'MINUS':([135,137,139,140,141,142,143,144,145,147,160,162,165,166,167,168,169,170,172,194,196,197,198,200,201,206,207,232,236,237,238,239,279,286,287,292,294,297,318,323,327,357,369,371,372,383,402,],[-194,-192,-196,-195,-202,-194,-158,-157,-193,-201,-185,-183,-199,-187,-156,-149,-186,-184,-187,-155,-168,-167,-170,-169,242,-150,-154,-199,-160,-181,-182,-180,-159,-153,-152,-196,-158,-107,-161,-151,-106,-187,-162,-172,-177,-171,-176,]),'LTOEQ':([135,137,139,140,141,142,143,144,145,147,160,162,165,166,167,168,169,170,172,184,194,196,197,198,200,201,206,207,221,232,236,237,238,239,240,243,279,286,287,292,294,297,318,320,321,323,327,357,369,371,372,383,402,],[-194,-192,-196,-195,-202,-194,-158,-157,-193,-201,-185,-183,-199,-187,-156,-149,-186,-184,-187,-144,-155,-168,-167,-170,-169,-187,-150,-154,265,-199,-160,-181,-182,-180,-145,-148,-159,-153,-152,-196,-158,-107,-161,-146,-147,-151,-106,-187,-162,-172,-177,-171,-176,]),',':([49,82,134,135,137,139,140,141,142,143,144,145,146,147,156,159,160,162,165,166,167,168,169,170,171,172,182,184,190,194,196,197,198,200,201,206,207,217,219,221,232,233,236,237,238,239,240,243,257,261,262,270,271,279,280,285,286,287,297,304,312,316,318,320,321,322,323,327,328,330,331,333,334,335,336,337,338,341,350,355,357,369,371,372,383,402,],[58,58,-196,-194,-192,-196,-195,-202,-194,-158,-157,-193,-205,-201,58,-206,-185,-183,-199,-187,-156,-149,-186,-184,203,-187,-204,-144,229,-155,-168,-167,-170,-169,-187,-150,-154,-113,-187,-187,-199,-163,-160,-181,-182,-180,-145,-148,300,-132,-135,-143,-203,-159,317,-205,-153,-152,-107,-131,-136,-196,-161,-146,-147,203,-151,-106,-113,-133,-134,-141,-139,-138,-142,-140,-137,-206,300,229,-187,-162,-172,-177,-171,-176,]),'ASGN':([103,123,149,180,325,346,348,359,389,394,],[-196,-99,175,-196,-187,-172,-104,374,-105,-103,]),'FIRST':([199,],[237,]),'LT':([135,137,139,140,141,142,143,144,145,147,160,162,165,166,167,168,169,170,172,184,194,196,197,198,200,201,206,207,221,232,236,237,238,239,240,243,279,286,287,292,294,297,318,320,321,323,327,357,369,371,372,383,402,],[-194,-192,-196,-195,-202,-194,-158,-157,-193,-201,-185,-183,-199,-187,-156,-149,-186,-184,-187,-144,-155,-168,-167,-170,-169,-187,-150,-154,267,-199,-160,-181,-182,-180,-145,-148,-159,-153,-152,-196,-158,-107,-161,-146,-147,-151,-106,-187,-162,-172,-177,-171,-176,]),'PLUS':([135,137,139,140,141,142,143,144,145,147,160,162,165,166,167,168,169,170,172,194,196,197,198,200,201,206,207,232,236,237,238,239,279,286,287,292,294,297,318,323,327,357,369,371,372,383,402,],[-194,-192,-196,-195,-202,-194,-158,-157,-193,-201,-185,-183,-199,-187,-156,-149,-186,-184,-187,-155,-168,-167,-170,-169,241,-150,-154,-199,-160,-181,-182,-180,-159,-153,-152,-196,-158,-107,-161,-151,-106,-187,-162,-172,-177,-171,-176,]),'RES':([135,137,139,140,142,143,144,145,147,160,162,165,166,167,169,170,172,194,196,197,198,200,232,236,237,238,239,279,292,294,297,318,327,357,369,371,372,383,402,],[-194,-192,-196,-195,-194,-158,-157,-193,-201,-185,-183,-199,-187,-156,-186,-184,205,-155,-168,-167,-170,-169,-199,-160,-181,-182,-180,-159,-196,-158,-107,-161,-106,-187,-162,-172,-177,-171,-176,]),'BOOL':([13,19,35,45,53,61,62,77,78,81,91,186,340,],[-3,32,-3,32,-3,32,-3,-3,32,-3,32,32,-3,]),';':([43,49,51,59,60,70,82,93,94,104,106,107,111,113,117,131,133,135,137,139,140,141,142,143,144,145,147,156,157,160,162,165,166,167,168,169,170,172,176,177,178,181,182,184,188,194,196,197,198,200,201,206,207,214,219,221,226,232,236,237,238,239,240,243,244,261,262,270,271,275,276,278,279,286,287,291,292,293,294,297,301,304,312,315,318,320,321,323,327,329,330,331,333,334,335,336,337,338,349,357,361,369,371,372,375,383,392,397,402,],[53,-187,62,-54,-11,77,-187,-53,-129,-27,-28,125,-26,-25,-187,-115,-121,-194,-192,-196,-195,-202,-194,-158,-157,-193,-201,-187,-114,-185,-183,-199,-187,-156,-149,-186,-184,-187,-100,-200,-101,218,-204,-144,-56,-155,-168,-167,-170,-169,-187,-150,-154,-98,-187,-187,-55,-199,-160,-181,-182,-180,-145,-148,-29,-132,-135,-143,-203,-11,-120,-32,-159,-153,-152,-39,-196,-41,-42,-107,-190,-131,-136,340,-161,-146,-147,-151,-106,351,-133,-134,-141,-139,-138,-142,-140,-137,-44,-187,-43,-162,-172,-177,-102,-171,-62,401,-176,]),':':([29,30,32,39,71,135,137,142,145,160,162,169,170,252,254,255,296,],[-14,-15,-16,-13,78,-194,-192,-194,-193,-185,-183,-186,-184,295,-46,-47,-45,]),'$end':([1,36,46,],[0,-188,-1,]),'GT':([135,137,139,140,141,142,143,144,145,147,160,162,165,166,167,168,169,170,172,184,194,196,197,198,200,201,206,207,221,232,236,237,238,239,240,243,279,286,287,292,294,297,318,320,321,323,327,357,369,371,372,383,402,],[-194,-192,-196,-195,-202,-194,-158,-157,-193,-201,-185,-183,-199,-187,-156,-149,-186,-184,-187,-144,-155,-168,-167,-170,-169,-187,-150,-154,264,-199,-160,-181,-182,-180,-145,-148,-159,-153,-152,-196,-158,-107,-161,-146,-147,-151,-106,-187,-162,-172,-177,-171,-176,]),'STRING':([13,19,35,45,53,61,62,77,78,81,91,186,340,],[-3,30,-3,30,-3,30,-3,-3,30,-3,30,30,-3,]),'FOR':([8,11,18,21,23,24,53,62,64,65,66,67,72,74,77,80,83,87,97,99,101,105,108,110,125,155,187,224,305,313,324,339,352,353,358,364,366,373,378,391,395,399,400,404,405,],[-6,-7,-38,-37,-36,-10,-187,-187,-76,-80,-81,-187,-78,-19,-187,-84,-74,-97,-84,-87,-86,-24,126,-23,-22,-187,-71,-84,-84,-187,-84,-71,-187,-84,-89,-189,-127,-88,-124,-84,-95,-84,-126,-96,-92,]),'ELSE':([352,365,],[-128,379,]),'RETURNS':([114,128,154,],[-66,-73,186,]),'FUNC':([7,8,9,11,12,16,17,18,21,23,24,28,53,62,64,65,66,72,77,83,185,222,],[-187,-6,-2,-7,-59,-59,-58,-38,-37,-36,-10,38,-187,-187,-76,-80,-81,-78,-187,-74,-60,-57,]),'PARFIN':([29,30,32,39,59,81,82,84,89,90,92,93,115,129,134,135,137,139,140,141,142,143,144,145,146,147,150,156,159,160,162,165,166,167,168,169,170,171,172,176,177,178,179,182,183,184,188,190,191,194,196,197,198,200,201,202,204,206,207,210,214,215,216,217,219,221,225,227,230,231,232,234,236,237,238,239,240,243,254,255,256,257,261,262,270,271,274,279,281,285,286,287,291,292,293,294,296,297,298,299,304,312,314,316,318,320,321,322,323,326,327,328,330,331,333,334,335,336,337,338,341,342,344,349,350,354,355,356,357,361,362,368,369,371,372,375,377,383,385,402,],[-14,-15,-16,-13,-54,-187,-187,94,114,-67,-65,-53,-68,-64,-196,-194,-192,-196,-195,-202,-194,-158,-157,-193,-205,-201,-198,-187,-206,-185,-183,-199,-187,-156,-149,-186,-184,-187,-187,-100,-200,-101,-187,-204,220,-144,-187,-187,232,-155,-168,-167,-170,-169,-187,244,-31,-150,-154,249,-98,-199,-110,-113,-187,-187,-55,-49,278,-34,-199,-165,-160,-181,-182,-180,-145,-148,-46,-47,297,-187,-132,-135,-143,-203,-11,-159,318,-205,-153,-152,-39,-196,-41,-42,-45,-107,-109,-112,-131,-136,-52,-196,-161,-146,-147,-187,-151,349,-106,-113,-133,-134,-141,-139,-138,-142,-140,-137,-206,-164,-30,-44,-187,-51,-187,369,-187,-43,-111,-33,-162,-172,-177,-102,-94,-171,390,-176,]),']':([85,95,135,137,139,140,141,142,143,144,145,147,160,162,165,166,167,168,169,170,172,182,184,189,194,196,197,198,200,201,206,207,219,221,228,232,236,237,238,239,240,243,250,261,262,270,271,279,286,287,290,297,304,312,318,319,320,321,323,327,330,331,333,334,335,336,337,338,343,357,369,371,372,376,383,384,393,398,402,],[-116,117,-194,-192,-196,-195,-202,-194,-158,-157,-193,-201,-185,-183,-199,-187,-156,-149,-186,-184,-187,-204,-144,-122,-155,-168,-167,-170,-169,-187,-150,-154,-187,-187,276,-199,-160,-181,-182,-180,-145,-148,-173,-132,-135,-143,-203,-159,-153,-152,325,-107,-131,-136,-161,-173,-146,-147,-151,-106,-133,-134,-141,-139,-138,-142,-140,-137,357,-187,-162,-172,-177,-173,-171,389,-173,402,-176,]),'ID':([3,4,8,11,18,21,23,24,29,30,32,33,34,38,39,40,42,48,53,54,55,58,62,64,65,66,67,69,72,74,76,77,80,83,87,94,97,99,101,105,110,116,120,121,125,130,136,150,151,152,155,161,173,175,179,187,192,193,203,205,208,209,211,212,213,218,224,229,241,242,245,246,247,248,251,258,259,260,264,265,266,267,268,269,277,282,283,284,288,295,300,302,303,305,306,307,308,309,310,311,313,317,324,339,351,352,353,358,360,363,364,366,373,374,378,387,388,391,395,399,400,404,405,],[-3,5,-6,-7,-38,-37,-36,-10,-14,-15,-16,-75,41,-3,-13,49,52,57,-187,-119,-118,-55,-187,-76,-80,-81,-187,-11,-78,-19,82,-187,-84,-74,103,-129,-84,-87,-86,-24,-23,-50,134,139,-22,156,-198,-198,180,139,-187,139,139,-197,139,-71,233,139,-35,-197,-197,-197,139,-40,255,-90,-84,-35,-197,-197,139,139,139,-166,292,139,-197,-197,-197,-197,-197,-197,-197,-197,316,139,139,139,139,255,139,139,139,-84,139,139,139,139,139,139,-187,139,-84,-71,-93,-187,-84,-89,139,180,-189,-127,-88,-197,-124,139,139,-84,-95,-84,-126,-96,-92,]),'IF':([8,11,18,21,23,24,53,62,64,65,66,67,72,74,77,80,83,87,97,99,101,105,110,112,125,155,187,224,305,313,324,339,352,353,358,364,366,373,378,391,395,399,400,404,405,],[-6,-7,-38,-37,-36,-10,-187,-187,-76,-80,-81,-187,-78,-19,-187,-84,-74,-125,-84,-87,-86,-24,-23,127,-22,-187,-71,-84,-84,-187,-84,-71,-187,-84,-89,-189,-127,-88,-124,-84,-95,-84,-126,-96,-92,]),'AND':([135,137,139,140,141,142,143,144,145,147,160,162,165,166,167,168,169,170,172,182,184,194,196,197,198,200,201,206,207,219,221,232,236,237,238,239,240,243,270,271,279,286,287,292,294,297,312,318,320,321,323,327,333,334,335,336,337,338,357,369,371,372,383,402,],[-194,-192,-196,-195,-202,-194,-158,-157,-193,-201,-185,-183,-199,-187,-156,-149,-186,-184,-187,-204,-144,-155,-168,-167,-170,-169,-187,-150,-154,259,-187,-199,-160,-181,-182,-180,-145,-148,-143,-203,-159,-153,-152,-196,-158,-107,-136,-161,-146,-147,-151,-106,-141,-139,-138,-142,-140,-137,-187,-162,-172,-177,-171,-176,]),'CTES':([121,136,150,152,161,173,175,179,193,203,205,208,209,211,212,213,218,241,242,245,246,247,248,251,253,258,259,260,264,265,266,267,268,269,282,283,284,288,295,300,302,303,306,307,308,309,310,311,317,360,374,387,388,],[140,-198,-198,140,140,140,-197,140,140,-35,-197,-197,-197,140,-40,-48,-90,-197,-197,140,140,140,-166,140,296,140,-197,-197,-197,-197,-197,-197,-197,-197,140,140,140,140,-48,140,140,140,140,140,140,140,140,140,140,140,-197,140,140,]),'AVG':([121,136,138,150,152,161,173,175,179,193,203,205,208,209,211,212,218,241,242,245,246,247,248,251,258,259,260,264,265,266,267,268,269,282,283,284,288,300,302,303,306,307,308,309,310,311,317,360,374,387,388,],[-198,-198,163,-198,-198,-198,-198,-197,-198,-198,-35,-197,-197,-197,-198,-40,-90,-197,-197,-198,-198,-198,-166,-198,-198,-197,-197,-197,-197,-197,-197,-197,-197,-198,-198,-198,-198,-198,-198,-198,-198,-198,-198,-198,-198,-198,-198,-198,-197,-198,-198,]),'FALSE':([121,136,150,152,161,173,175,179,193,203,205,208,209,211,212,213,218,241,242,245,246,247,248,251,258,259,260,264,265,266,267,268,269,282,283,284,288,295,300,302,303,306,307,308,309,310,311,317,360,374,387,388,],[142,-198,-198,142,142,142,-197,142,142,-35,-197,-197,-197,142,-40,142,-90,-197,-197,142,142,142,-166,142,142,-197,-197,-197,-197,-197,-197,-197,-197,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,-197,142,142,]),'STRUCT':([13,22,53,62,77,],[-77,35,-77,-77,-77,]),'INT':([13,19,31,35,45,53,61,62,77,78,81,91,186,340,],[-3,-17,39,-3,-17,-3,-17,-3,-3,-17,-3,-17,-17,-3,]),'EQ':([135,137,139,140,141,142,143,144,145,147,160,162,165,166,167,168,169,170,172,184,194,196,197,198,200,201,206,207,221,232,236,237,238,239,240,243,279,286,287,292,294,297,318,320,321,323,327,357,369,371,372,383,402,],[-194,-192,-196,-195,-202,-194,-158,-157,-193,-201,-185,-183,-199,-187,-156,-149,-186,-184,-187,-144,-155,-168,-167,-170,-169,-187,-150,-154,269,-199,-160,-181,-182,-180,-145,-148,-159,-153,-152,-196,-158,-107,-161,-146,-147,-151,-106,-187,-162,-172,-177,-171,-176,]),'FLOAT':([13,19,35,45,53,61,62,77,78,81,91,186,340,],[-3,29,-3,29,-3,29,-3,-3,29,-3,29,29,-3,]),'OR':([135,137,139,140,141,142,143,144,145,147,160,162,165,166,167,168,169,170,172,182,184,194,196,197,198,200,201,206,207,219,221,232,236,237,238,239,240,243,270,271,279,286,287,292,294,297,312,318,320,321,323,327,333,334,335,336,337,338,357,369,371,372,383,402,],[-194,-192,-196,-195,-202,-194,-158,-157,-193,-201,-185,-183,-199,-187,-156,-149,-186,-184,-187,-204,-144,-155,-168,-167,-170,-169,-187,-150,-154,260,-187,-199,-160,-181,-182,-180,-145,-148,-143,-203,-159,-153,-152,-196,-158,-107,-136,-161,-146,-147,-151,-106,-141,-139,-138,-142,-140,-137,-187,-162,-172,-177,-171,-176,]),'DICT':([13,20,35,53,62,77,],[-79,34,44,-79,-79,-79,]),'CTED':([79,121,136,150,152,158,161,173,175,179,193,203,205,208,209,211,212,213,218,241,242,245,246,247,248,251,258,259,260,264,265,266,267,268,269,282,283,284,288,295,300,302,303,306,307,308,309,310,311,317,360,374,387,388,],[85,137,-198,-198,137,189,137,137,-197,137,137,-35,-197,-197,-197,137,-40,137,-90,-197,-197,137,137,137,-166,137,137,-197,-197,-197,-197,-197,-197,-197,-197,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,-197,137,137,]),'GTOEQ':([135,137,139,140,141,142,143,144,145,147,160,162,165,166,167,168,169,170,172,184,194,196,197,198,200,201,206,207,221,232,236,237,238,239,240,243,279,286,287,292,294,297,318,320,321,323,327,357,369,371,372,383,402,],[-194,-192,-196,-195,-202,-194,-158,-157,-193,-201,-185,-183,-199,-187,-156,-149,-186,-184,-187,-144,-155,-168,-167,-170,-169,-187,-150,-154,268,-199,-160,-181,-182,-180,-145,-148,-159,-153,-152,-196,-158,-107,-161,-146,-147,-151,-106,-187,-162,-172,-177,-171,-176,]),'{':([5,6,29,30,32,37,39,47,56,114,128,220,223,249,263,272,289,379,386,390,],[-4,7,-14,-15,-16,-58,-13,-20,67,-66,155,-190,-72,-190,305,313,324,-191,391,395,]),'MAIN':([7,8,9,11,12,14,15,16,18,21,23,24,26,27,53,62,64,65,66,72,77,83,185,222,],[-187,-6,-2,-7,-187,-21,-9,-187,-38,-37,-36,-10,37,-8,-187,-187,-76,-80,-81,-78,-187,-74,-60,-57,]),'}':([8,11,18,21,23,24,25,53,62,64,65,66,67,72,74,77,80,83,86,88,96,97,99,101,105,109,110,118,119,125,153,155,187,224,273,305,324,332,345,352,358,364,366,373,378,380,391,395,396,399,400,401,403,404,405,],[-6,-7,-38,-37,-36,-10,36,-187,-187,-76,-80,-81,-187,-78,-19,-187,-187,-74,96,-83,-60,-187,-87,-86,-24,-82,-23,-18,-85,-22,185,-187,-71,-187,-70,-187,-187,352,358,-187,-89,-189,-127,-88,-124,-69,-187,-95,400,-187,-126,-61,404,-96,-92,]),'CTEF':([121,136,150,152,161,173,175,179,193,203,205,208,209,211,212,213,218,241,242,245,246,247,248,251,258,259,260,264,265,266,267,268,269,282,283,284,288,295,300,302,303,306,307,308,309,310,311,317,360,374,387,388,],[145,-198,-198,145,145,145,-197,145,145,-35,-197,-197,-197,145,-40,145,-90,-197,-197,145,145,145,-166,145,145,-197,-197,-197,-197,-197,-197,-197,-197,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,-197,145,145,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vars':([7,67,155,313,],[8,8,8,8,]),'errorOpSExp':([184,],[221,]),'errorMain':([14,],[26,]),'errorCyExp':([168,],[201,]),'opParamCall':([179,],[215,]),'cyTypeParam':([49,82,156,],[60,93,188,]),'saveReturnValue':([392,],[397,]),'takeFondo':([165,215,232,],[194,256,279,]),'forCycle':([87,],[101,]),'structType':([35,],[42,]),'changeCurrentScope':([9,],[12,]),'struct':([35,],[43,]),'secondLap':([131,],[157,]),'checkFunction':([103,139,292,],[124,124,124,]),'param':([81,340,],[90,354,]),'init':([149,359,],[176,375,]),'program':([0,],[1,]),'dict':([41,44,],[51,54,]),'opMatrix':([357,],[371,]),'errorExpresion':([261,],[304,]),'main':([14,],[25,]),'return':([367,],[380,]),'errorParam':([116,],[130,]),'read':([87,],[106,]),'errorReturn':([367,],[381,]),'assignOptions':([149,],[177,]),'saveDimensionSize':([85,],[95,]),'flagParameters':([68,114,],[75,128,]),'cyRead':([190,355,],[230,368,]),'basicDeclare':([13,53,62,77,],[23,23,23,23,]),'cyInstruction':([87,],[109,]),'condition':([87,],[110,]),'expresion':([152,161,173,179,193,211,251,258,282,300,302,303,317,360,387,388,],[183,191,210,217,234,250,293,301,319,328,330,331,342,376,392,393,]),'term':([121,152,161,173,179,193,211,245,246,247,251,258,282,283,284,288,300,302,303,306,307,308,309,310,311,317,360,387,388,],[141,141,141,141,141,141,141,141,286,287,141,141,141,141,141,323,141,141,141,141,141,141,141,141,141,141,141,141,141,]),'funcCall':([87,121,152,161,173,179,193,211,245,246,247,251,258,282,283,284,288,300,302,303,306,307,308,309,310,311,317,360,387,388,],[111,143,143,143,143,143,143,143,143,143,143,294,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,]),'initDict':([149,],[178,]),'saveCurrentTemps':([17,37,],[28,47,]),'returnFor':([377,],[385,]),'returnAssign':([404,],[405,]),'saveTypeParam':([58,225,226,],[69,274,275,]),'saltoBody':([351,],[363,]),'dictDeclare':([13,53,62,77,],[18,18,18,18,]),'saveMain':([47,],[56,]),'errorVars':([7,67,155,313,],[10,10,10,10,]),'generateInitialQuadruple':([74,],[80,]),'whileCycle':([87,],[99,]),'errorDictDeclare':([13,53,62,77,],[20,20,20,20,]),'performAvg':([342,],[356,]),'performAndOr':([182,],[219,]),'opFunctions':([12,16,],[14,27,]),'errorOpStruct':([166,],[195,]),'saveVariable':([103,134,139,180,292,316,],[123,159,166,123,166,341,]),'opVars':([7,67,155,313,],[9,74,187,339,]),'saveOperator':([175,205,208,209,241,242,259,260,264,265,266,267,268,269,374,],[212,246,247,248,283,284,302,303,306,307,308,309,310,311,212,]),'errorInit':([212,],[251,]),'saveToDimensionStacks':([149,195,],[174,235,]),'performAssign':([177,],[214,]),'cyExpresion':([219,],[261,]),'performRead':([159,341,],[190,355,]),'print':([87,],[104,]),'body':([80,97,224,305,324,353,391,399,],[86,119,273,332,345,367,396,403,]),'saveSecondDimensionSize':([189,],[228,]),'errorOpParameters':([115,],[129,]),'repeatWhile':([358,],[373,]),'printTables':([36,],[46,]),'saveParamToDirProc':([90,],[115,]),'saveReturnType':([223,],[272,]),'opParameters':([81,],[89,]),'errorCondition':([87,],[112,]),'cte':([121,152,161,173,179,193,211,213,245,246,247,251,258,282,283,284,288,295,300,302,303,306,307,308,309,310,311,317,360,387,388,],[144,144,144,144,144,144,144,254,144,144,144,144,144,144,144,144,144,254,144,144,144,144,144,144,144,144,144,144,144,144,144,]),'saveProc':([5,57,],[6,68,]),'assign':([87,151,363,],[113,181,377,]),'errorStructDeclare':([13,53,62,77,],[22,22,22,22,]),'cyExp':([201,],[240,]),'fix':([203,229,],[245,277,]),'instr':([87,],[97,]),'languageFunctions':([138,],[165,]),'errorFact':([248,],[288,]),'errorProgram':([0,],[2,]),'cyTerm':([172,],[206,]),'createSecondDimension':([117,],[132,]),'rellenaBody':([395,],[399,]),'errorAssignMatrix':([389,],[394,]),'errorElse':([352,],[365,]),'cyDeclare':([53,62,77,],[64,72,83,]),'errorBody':([80,97,224,305,324,353,391,399,],[87,87,87,87,87,87,87,87,]),'opStruct':([166,],[197,]),'errorOpAccess':([198,],[236,]),'checkNumParams':([297,],[327,]),'saveConstantBool':([135,142,],[160,169,]),'type':([19,45,61,78,91,186,],[33,55,71,84,116,223,]),'dictIndex':([199,],[239,]),'empty':([7,12,16,49,53,62,67,77,80,81,82,97,117,155,156,166,171,172,179,188,190,201,219,221,224,257,305,313,322,324,325,350,352,353,355,357,391,399,],[11,15,15,59,66,66,11,66,88,92,59,88,133,11,59,200,204,207,216,225,231,243,262,270,88,299,88,11,204,88,348,299,366,88,231,372,88,88,]),'errorBasicDeclare':([33,],[40,]),'function':([12,16,],[16,16,]),'performMulDiv':([147,],[172,]),'saveConstantString':([140,],[167,]),'checkParamType':([217,328,],[257,350,]),'opDictionary':([166,],[196,]),'errorType':([19,45,61,78,91,186,],[31,31,31,31,31,31,]),'errorForCycle':([87,],[108,]),'opAccess':([166,],[198,]),'basicStatements':([87,],[107,]),'structDeclare':([13,53,62,77,],[21,21,21,21,]),'verifyIndex':([250,319,376,393,],[290,343,384,398,]),'putFondo':([121,136,150,152,161,173,179,193,211,245,246,247,251,258,282,283,284,288,300,302,303,306,307,308,309,310,311,317,360,387,388,],[138,161,179,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,]),'errorAssign':([123,],[149,]),'saveReturn':([122,218,],[148,258,]),'cyParam':([188,],[227,]),'cyPrint':([171,322,],[202,344,]),'saveConstantFloat':([145,],[170,]),'errorOpReturns':([128,],[154,]),'performAddSub':([141,],[168,]),'cyParamCall':([257,350,],[298,362,]),'declare':([13,53,62,77,],[24,65,65,65,]),'saveQuadruple':([187,339,],[224,353,]),'opSExp':([221,],[271,]),'optionalMatrix':([117,],[131,]),'performPrint':([146,285,],[171,322,]),'saveFalso':([220,249,301,],[263,289,329,]),'clearVarsTable':([96,185,],[118,222,]),'optionalElse':([352,],[364,]),'errorOpMatrix':([357,],[370,]),'dictType':([213,295,],[252,326,]),'initWith':([251,],[291,]),'createDimension':([63,],[73,]),'saveConstantInt':([137,],[162,]),'errorWhileCycle':([87,],[102,]),'sExp':([152,161,173,179,193,211,251,258,282,300,302,303,317,360,387,388,],[182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,]),'accessStruct':([346,371,],[359,383,]),'performRelational':([271,],[312,]),'errorCyParam':([188,],[226,]),'opReturns':([128,],[153,]),'errorDictType':([213,295,],[253,253,]),'assignMatrix':([325,],[346,]),'saveVerdadero':([379,],[386,]),'rellenaFalso':([364,],[378,]),'errorDict':([41,44,],[50,50,]),'errorInitDict':([349,],[361,]),'saveType':([3,13,35,38,53,62,77,81,340,],[4,19,45,48,19,19,19,91,91,]),'updateDimension':([325,370,],[347,382,]),'saveStructID':([233,],[280,]),'saveID':([52,60,69,274,275,],[63,70,76,314,315,]),'cycle':([87,],[105,]),'performNeg':([234,],[281,]),'errorFunction':([12,16,],[17,17,]),'exp':([121,152,161,173,179,193,211,245,251,258,282,283,284,300,302,303,306,307,308,309,310,311,317,360,387,388,],[146,184,184,184,184,184,184,285,184,184,184,320,321,184,184,184,333,334,335,336,337,338,184,184,184,184,]),'fact':([121,152,161,173,179,193,211,245,246,247,251,258,282,283,284,288,300,302,303,306,307,308,309,310,311,317,360,387,388,],[147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables','program',12,'p_program','CT.py',360),
  ('changeCurrentScope -> <empty>','changeCurrentScope',0,'p_changeCurrentScope','CT.py',364),
  ('saveType -> <empty>','saveType',0,'p_saveType','CT.py',374),
  ('saveProc -> <empty>','saveProc',0,'p_saveProc','CT.py',381),
  ('errorProgram -> <empty>','errorProgram',0,'p_errorProgram','CT.py',404),
  ('opVars -> vars','opVars',1,'p_opVars','CT.py',415),
  ('opVars -> empty','opVars',1,'p_opVars','CT.py',416),
  ('opFunctions -> function opFunctions','opFunctions',2,'p_opFunctions','CT.py',421),
  ('opFunctions -> empty','opFunctions',1,'p_opFunctions','CT.py',422),
  ('vars -> errorVars VARS declare','vars',3,'p_vars','CT.py',426),
  ('saveID -> <empty>','saveID',0,'p_saveID','CT.py',431),
  ('errorVars -> <empty>','errorVars',0,'p_errorVars','CT.py',475),
  ('type -> errorType INT','type',2,'p_type','CT.py',481),
  ('type -> FLOAT','type',1,'p_type','CT.py',482),
  ('type -> STRING','type',1,'p_type','CT.py',483),
  ('type -> BOOL','type',1,'p_type','CT.py',484),
  ('errorType -> <empty>','errorType',0,'p_errorType','CT.py',489),
  ('main -> errorMain MAIN saveCurrentTemps saveMain { opVars generateInitialQuadruple body } clearVarsTable','main',10,'p_main','CT.py',495),
  ('generateInitialQuadruple -> <empty>','generateInitialQuadruple',0,'p_generateInitialQuadruple','CT.py',499),
  ('saveMain -> <empty>','saveMain',0,'p_saveMain','CT.py',508),
  ('errorMain -> <empty>','errorMain',0,'p_errorMain','CT.py',517),
  ('instr -> basicStatements ;','instr',2,'p_instr','CT.py',523),
  ('instr -> condition','instr',1,'p_instr','CT.py',524),
  ('instr -> cycle','instr',1,'p_instr','CT.py',525),
  ('basicStatements -> assign','basicStatements',1,'p_basicStatements','CT.py',529),
  ('basicStatements -> funcCall','basicStatements',1,'p_basicStatements','CT.py',530),
  ('basicStatements -> print','basicStatements',1,'p_basicStatements','CT.py',531),
  ('basicStatements -> read','basicStatements',1,'p_basicStatements','CT.py',532),
  ('print -> PRINT PARINI exp performPrint cyPrint PARFIN','print',6,'p_print','CT.py',535),
  ('cyPrint -> , fix exp performPrint cyPrint','cyPrint',5,'p_cyPrint','CT.py',538),
  ('cyPrint -> empty','cyPrint',1,'p_cyPrint','CT.py',539),
  ('read -> READ PARINI ID saveVariable performRead cyRead PARFIN','read',7,'p_read','CT.py',542),
  ('cyRead -> , fix ID saveVariable performRead cyRead','cyRead',6,'p_cyRead','CT.py',545),
  ('cyRead -> empty','cyRead',1,'p_cyRead','CT.py',546),
  ('fix -> <empty>','fix',0,'p_fix','CT.py',549),
  ('declare -> basicDeclare','declare',1,'p_declare','CT.py',554),
  ('declare -> structDeclare','declare',1,'p_declare','CT.py',555),
  ('declare -> dictDeclare','declare',1,'p_declare','CT.py',556),
  ('init -> ASGN saveOperator errorInit initWith','init',4,'p_init','CT.py',561),
  ('errorInit -> <empty>','errorInit',0,'p_errorInit','CT.py',565),
  ('initWith -> expresion','initWith',1,'p_initWith','CT.py',571),
  ('initWith -> funcCall','initWith',1,'p_initWith','CT.py',572),
  ('initDict -> ASGN PARINI dictType : dictType PARFIN errorInitDict','initDict',7,'p_initDict','CT.py',577),
  ('errorInitDict -> <empty>','errorInitDict',0,'p_errorInitDict','CT.py',582),
  ('dictType -> errorDictType CTES','dictType',2,'p_dictType','CT.py',588),
  ('dictType -> cte','dictType',1,'p_dictType','CT.py',589),
  ('dictType -> ID','dictType',1,'p_dictType','CT.py',590),
  ('errorDictType -> <empty>','errorDictType',0,'p_errorDictType','CT.py',595),
  ('param -> saveType type errorParam ID cyTypeParam cyParam','param',6,'p_param','CT.py',601),
  ('errorParam -> <empty>','errorParam',0,'p_errorParam','CT.py',606),
  ('cyParam -> errorCyParam saveTypeParam saveID ; param','cyParam',5,'p_cyParam','CT.py',612),
  ('cyParam -> empty saveTypeParam saveID','cyParam',3,'p_cyParam','CT.py',613),
  ('cyTypeParam -> , saveTypeParam saveID ID cyTypeParam','cyTypeParam',5,'p_cyTypeParam','CT.py',618),
  ('cyTypeParam -> empty','cyTypeParam',1,'p_cyTypeParam','CT.py',619),
  ('saveTypeParam -> <empty>','saveTypeParam',0,'p_saveTypeParam','CT.py',623),
  ('errorCyParam -> <empty>','errorCyParam',0,'p_errorCyParam','CT.py',633),
  ('function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable','function',14,'p_function','CT.py',639),
  ('saveCurrentTemps -> <empty>','saveCurrentTemps',0,'p_saveCurrentTemps','CT.py',643),
  ('errorFunction -> <empty>','errorFunction',0,'p_errorFunction','CT.py',655),
  ('clearVarsTable -> <empty>','clearVarsTable',0,'p_clearVarsTable','CT.py',660),
  ('return -> errorReturn RETURN expresion saveReturnValue ;','return',5,'p_return','CT.py',703),
  ('saveReturnValue -> <empty>','saveReturnValue',0,'p_saveReturnValue','CT.py',707),
  ('errorReturn -> <empty>','errorReturn',0,'p_errorReturn','CT.py',728),
  ('opParameters -> param saveParamToDirProc errorOpParameters','opParameters',3,'p_opParameters','CT.py',734),
  ('opParameters -> empty','opParameters',1,'p_opParameters','CT.py',735),
  ('flagParameters -> <empty>','flagParameters',0,'p_flagParameters','CT.py',739),
  ('saveParamToDirProc -> <empty>','saveParamToDirProc',0,'p_saveParamToDirProc','CT.py',744),
  ('errorOpParameters -> <empty>','errorOpParameters',0,'p_errorOpParameters','CT.py',751),
  ('opReturns -> errorOpReturns RETURNS type saveReturnType { opVars saveQuadruple body return','opReturns',9,'p_opReturns','CT.py',757),
  ('opReturns -> { opVars saveQuadruple body','opReturns',4,'p_opReturns','CT.py',758),
  ('saveQuadruple -> <empty>','saveQuadruple',0,'p_saveQuadruple','CT.py',762),
  ('saveReturnType -> <empty>','saveReturnType',0,'p_saveReturnType','CT.py',768),
  ('errorOpReturns -> <empty>','errorOpReturns',0,'p_errorOpReturns','CT.py',777),
  ('basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare','basicDeclare',8,'p_basicDeclare','CT.py',783),
  ('errorBasicDeclare -> <empty>','errorBasicDeclare',0,'p_errorBasicDeclare','CT.py',788),
  ('structDeclare -> errorStructDeclare STRUCT struct ; cyDeclare','structDeclare',5,'p_structDeclare','CT.py',794),
  ('errorStructDeclare -> <empty>','errorStructDeclare',0,'p_errorStructDeclare','CT.py',799),
  ('dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare','dictDeclare',6,'p_dictDeclare','CT.py',805),
  ('errorDictDeclare -> <empty>','errorDictDeclare',0,'p_errorDictDeclare','CT.py',810),
  ('cyDeclare -> declare','cyDeclare',1,'p_cyDeclare','CT.py',816),
  ('cyDeclare -> empty','cyDeclare',1,'p_cyDeclare','CT.py',817),
  ('body -> errorBody cyInstruction','body',2,'p_body','CT.py',822),
  ('body -> empty','body',1,'p_body','CT.py',823),
  ('errorBody -> <empty>','errorBody',0,'p_errorBody','CT.py',828),
  ('cyInstruction -> instr body','cyInstruction',2,'p_cyInstruction','CT.py',834),
  ('cycle -> forCycle','cycle',1,'p_cycle','CT.py',839),
  ('cycle -> whileCycle','cycle',1,'p_cycle','CT.py',840),
  ('whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile','whileCycle',11,'p_whileCycle','CT.py',845),
  ('repeatWhile -> <empty>','repeatWhile',0,'p_repeatWhile','CT.py',849),
  ('saveReturn -> <empty>','saveReturn',0,'p_saveReturn','CT.py',856),
  ('errorWhileCycle -> <empty>','errorWhileCycle',0,'p_errorWhileCycle','CT.py',860),
  ('forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign','forCycle',18,'p_forCycle','CT.py',866),
  ('saltoBody -> <empty>','saltoBody',0,'p_saltoBody','CT.py',870),
  ('returnFor -> <empty>','returnFor',0,'p_returnFor','CT.py',876),
  ('rellenaBody -> <empty>','rellenaBody',0,'p_rellenaBody','CT.py',888),
  ('returnAssign -> <empty>','returnAssign',0,'p_returnAssign','CT.py',896),
  ('errorForCycle -> <empty>','errorForCycle',0,'p_errorForCycle','CT.py',901),
  ('assign -> ID saveVariable errorAssign assignOptions performAssign','assign',5,'p_assign','CT.py',907),
  ('errorAssign -> <empty>','errorAssign',0,'p_errorAssign','CT.py',912),
  ('assignOptions -> init','assignOptions',1,'p_assignOptions','CT.py',918),
  ('assignOptions -> initDict','assignOptions',1,'p_assignOptions','CT.py',919),
  ('assignOptions -> saveToDimensionStacks [ expresion verifyIndex ] assignMatrix accessStruct init','assignOptions',8,'p_assignOptions','CT.py',920),
  ('assignMatrix -> updateDimension [ expresion verifyIndex ] errorAssignMatrix','assignMatrix',6,'p_assignMatrix','CT.py',925),
  ('assignMatrix -> empty','assignMatrix',1,'p_assignMatrix','CT.py',926),
  ('errorAssignMatrix -> <empty>','errorAssignMatrix',0,'p_errorAssignMatrix','CT.py',931),
  ('funcCall -> ID checkFunction PARINI putFondo opParamCall takeFondo PARFIN checkNumParams','funcCall',8,'p_funcCall','CT.py',936),
  ('checkNumParams -> <empty>','checkNumParams',0,'p_checkNumParams','CT.py',940),
  ('checkFunction -> <empty>','checkFunction',0,'p_checkFunction','CT.py',972),
  ('opParamCall -> expresion checkParamType cyParamCall','opParamCall',3,'p_opParamCall','CT.py',988),
  ('opParamCall -> empty','opParamCall',1,'p_opParamCall','CT.py',989),
  ('cyParamCall -> , expresion checkParamType cyParamCall','cyParamCall',4,'p_cyParamCall','CT.py',994),
  ('cyParamCall -> empty','cyParamCall',1,'p_cyParamCall','CT.py',995),
  ('checkParamType -> <empty>','checkParamType',0,'p_checkParamType','CT.py',1000),
  ('struct -> structType ID saveID createDimension [ CTED saveDimensionSize ] optionalMatrix secondLap','struct',10,'p_struct','CT.py',1027),
  ('secondLap -> <empty>','secondLap',0,'p_secondLap','CT.py',1031),
  ('saveDimensionSize -> <empty>','saveDimensionSize',0,'p_saveDimensionSize','CT.py',1107),
  ('createDimension -> <empty>','createDimension',0,'p_createDimension','CT.py',1131),
  ('structType -> saveType type','structType',2,'p_structType','CT.py',1150),
  ('structType -> DICT dict','structType',2,'p_structType','CT.py',1151),
  ('optionalMatrix -> createSecondDimension [ CTED saveSecondDimensionSize ]','optionalMatrix',5,'p_optionalMatrix','CT.py',1156),
  ('optionalMatrix -> empty','optionalMatrix',1,'p_optionalMatrix','CT.py',1157),
  ('saveSecondDimensionSize -> <empty>','saveSecondDimensionSize',0,'p_saveSecondDimensionSize','CT.py',1161),
  ('createSecondDimension -> <empty>','createSecondDimension',0,'p_createSecondDimension','CT.py',1188),
  ('condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso','condition',11,'p_condition','CT.py',1206),
  ('errorCondition -> <empty>','errorCondition',0,'p_errorCondition','CT.py',1211),
  ('optionalElse -> errorElse ELSE saveVerdadero { body }','optionalElse',6,'p_optionalElse','CT.py',1217),
  ('optionalElse -> empty','optionalElse',1,'p_optionalElse','CT.py',1218),
  ('errorElse -> <empty>','errorElse',0,'p_errorElse','CT.py',1223),
  ('dict -> errorDict PARINI type : type PARFIN','dict',6,'p_dict','CT.py',1229),
  ('errorDict -> <empty>','errorDict',0,'p_errorDict','CT.py',1234),
  ('expresion -> sExp performAndOr cyExpresion errorExpresion','expresion',4,'p_expresion','CT.py',1240),
  ('errorExpresion -> <empty>','errorExpresion',0,'p_errorExpresion','CT.py',1246),
  ('cyExpresion -> AND saveOperator expresion','cyExpresion',3,'p_cyExpresion','CT.py',1252),
  ('cyExpresion -> OR saveOperator expresion','cyExpresion',3,'p_cyExpresion','CT.py',1253),
  ('cyExpresion -> empty','cyExpresion',1,'p_cyExpresion','CT.py',1254),
  ('sExp -> exp errorOpSExp opSExp performRelational','sExp',4,'p_sExp','CT.py',1259),
  ('opSExp -> EQ saveOperator exp','opSExp',3,'p_opSExp','CT.py',1264),
  ('opSExp -> DIF saveOperator exp','opSExp',3,'p_opSExp','CT.py',1265),
  ('opSExp -> LTOEQ saveOperator exp','opSExp',3,'p_opSExp','CT.py',1266),
  ('opSExp -> GTOEQ saveOperator exp','opSExp',3,'p_opSExp','CT.py',1267),
  ('opSExp -> GT saveOperator exp','opSExp',3,'p_opSExp','CT.py',1268),
  ('opSExp -> LT saveOperator exp','opSExp',3,'p_opSExp','CT.py',1269),
  ('opSExp -> empty','opSExp',1,'p_opSExp','CT.py',1270),
  ('errorOpSExp -> <empty>','errorOpSExp',0,'p_errorOpSExp','CT.py',1274),
  ('exp -> term performAddSub errorCyExp cyExp','exp',4,'p_exp','CT.py',1280),
  ('cyExp -> PLUS saveOperator exp','cyExp',3,'p_cyExp','CT.py',1285),
  ('cyExp -> MINUS saveOperator exp','cyExp',3,'p_cyExp','CT.py',1286),
  ('cyExp -> empty','cyExp',1,'p_cyExp','CT.py',1287),
  ('errorCyExp -> <empty>','errorCyExp',0,'p_errorCyExp','CT.py',1292),
  ('term -> fact performMulDiv cyTerm','term',3,'p_term','CT.py',1297),
  ('cyTerm -> MULT saveOperator errorFact term','cyTerm',4,'p_cyTerm','CT.py',1302),
  ('cyTerm -> DIV saveOperator term','cyTerm',3,'p_cyTerm','CT.py',1303),
  ('cyTerm -> RES saveOperator term','cyTerm',3,'p_cyTerm','CT.py',1304),
  ('cyTerm -> empty','cyTerm',1,'p_cyTerm','CT.py',1305),
  ('fact -> putFondo languageFunctions takeFondo','fact',3,'p_fact','CT.py',1310),
  ('fact -> CTES saveConstantString','fact',2,'p_fact','CT.py',1311),
  ('fact -> cte','fact',1,'p_fact','CT.py',1312),
  ('fact -> funcCall','fact',1,'p_fact','CT.py',1313),
  ('fact -> PARINI putFondo expresion PARFIN takeFondo','fact',5,'p_fact','CT.py',1314),
  ('fact -> ID saveVariable opAccess errorOpAccess','fact',4,'p_fact','CT.py',1315),
  ('languageFunctions -> NEG PARINI expresion performNeg PARFIN','languageFunctions',5,'p_languageFunctions','CT.py',1320),
  ('languageFunctions -> AVG PARINI ID saveStructID , expresion performAvg PARFIN','languageFunctions',8,'p_languageFunctions','CT.py',1321),
  ('saveStructID -> <empty>','saveStructID',0,'p_saveStructID','CT.py',1325),
  ('performAvg -> <empty>','performAvg',0,'p_performAvg','CT.py',1356),
  ('performNeg -> <empty>','performNeg',0,'p_performNeg','CT.py',1377),
  ('errorFact -> <empty>','errorFact',0,'p_errorFact','CT.py',1398),
  ('opAccess -> opStruct','opAccess',1,'p_opAccess','CT.py',1404),
  ('opAccess -> opDictionary','opAccess',1,'p_opAccess','CT.py',1405),
  ('opAccess -> empty','opAccess',1,'p_opAccess','CT.py',1406),
  ('errorOpAccess -> <empty>','errorOpAccess',0,'p_errorOpAccess','CT.py',1411),
  ('opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct','opStruct',8,'p_opStruct','CT.py',1416),
  ('accessStruct -> <empty>','accessStruct',0,'p_accessStruct','CT.py',1420),
  ('verifyIndex -> <empty>','verifyIndex',0,'p_verifyIndex','CT.py',1448),
  ('saveToDimensionStacks -> <empty>','saveToDimensionStacks',0,'p_saveToDimensionStacks','CT.py',1488),
  ('errorOpStruct -> <empty>','errorOpStruct',0,'p_errorOpStruct','CT.py',1523),
  ('opMatrix -> errorOpMatrix updateDimension [ expresion verifyIndex ]','opMatrix',6,'p_opMatrix','CT.py',1529),
  ('opMatrix -> empty','opMatrix',1,'p_opMatrix','CT.py',1530),
  ('updateDimension -> <empty>','updateDimension',0,'p_updateDimension','CT.py',1534),
  ('errorOpMatrix -> <empty>','errorOpMatrix',0,'p_errorOpMatrix','CT.py',1550),
  ('opDictionary -> . dictIndex','opDictionary',2,'p_opDictionary','CT.py',1556),
  ('dictIndex -> FIRST','dictIndex',1,'p_dictIndex','CT.py',1561),
  ('dictIndex -> LAST','dictIndex',1,'p_dictIndex','CT.py',1562),
  ('cte -> CTED saveConstantInt','cte',2,'p_cte','CT.py',1567),
  ('cte -> CTEF saveConstantFloat','cte',2,'p_cte','CT.py',1568),
  ('cte -> TRUE saveConstantBool','cte',2,'p_cte','CT.py',1569),
  ('cte -> FALSE saveConstantBool','cte',2,'p_cte','CT.py',1570),
  ('empty -> <empty>','empty',0,'p_empty','CT.py',1574),
  ('printTables -> <empty>','printTables',0,'p_printTables','CT.py',1579),
  ('rellenaFalso -> <empty>','rellenaFalso',0,'p_rellenaFalso','CT.py',1603),
  ('saveFalso -> <empty>','saveFalso',0,'p_saveFalso','CT.py',1608),
  ('saveVerdadero -> <empty>','saveVerdadero',0,'p_saveVerdadero','CT.py',1621),
  ('saveConstantInt -> <empty>','saveConstantInt',0,'p_saveConstantInt','CT.py',1628),
  ('saveConstantFloat -> <empty>','saveConstantFloat',0,'p_saveConstantFloat','CT.py',1645),
  ('saveConstantBool -> <empty>','saveConstantBool',0,'p_saveConstantBool','CT.py',1662),
  ('saveConstantString -> <empty>','saveConstantString',0,'p_saveConstantString','CT.py',1679),
  ('saveVariable -> <empty>','saveVariable',0,'p_saveVariable','CT.py',1698),
  ('saveOperator -> <empty>','saveOperator',0,'p_saveOperator','CT.py',1721),
  ('putFondo -> <empty>','putFondo',0,'p_putFondo','CT.py',1753),
  ('takeFondo -> <empty>','takeFondo',0,'p_takeFondo','CT.py',1758),
  ('performAssign -> <empty>','performAssign',0,'p_performAssign','CT.py',1765),
  ('performMulDiv -> <empty>','performMulDiv',0,'p_performMulDiv','CT.py',1786),
  ('performAddSub -> <empty>','performAddSub',0,'p_performAddSub','CT.py',1807),
  ('performRelational -> <empty>','performRelational',0,'p_performRelational','CT.py',1828),
  ('performAndOr -> <empty>','performAndOr',0,'p_performAndOr','CT.py',1849),
  ('performPrint -> <empty>','performPrint',0,'p_performPrint','CT.py',1870),
  ('performRead -> <empty>','performRead',0,'p_performRead','CT.py',1874),
]
