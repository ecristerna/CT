
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'DFAC7F317AF72230442A40DF818148B3'
    
_lr_action_items = {'RETURN':([8,11,18,21,23,24,60,62,69,70,71,73,76,79,83,84,85,87,88,89,101,107,109,258,265,268,274,275,277,282,287,288,291,],[-6,-7,-29,-28,-27,-10,-150,-150,-66,-68,-69,-64,-71,-150,-150,-75,-74,-70,-23,-24,-62,-73,-22,-76,-150,-150,-98,-101,-150,-52,290,-78,-100,]),'VARS':([7,10,54,181,268,],[-12,13,-12,-12,-12,]),'DIF':([123,127,128,130,131,132,133,134,135,136,137,151,158,159,160,162,166,167,170,171,174,176,185,190,191,192,193,195,198,208,212,213,224,225,232,247,261,262,284,],[-148,-146,-150,-128,-123,-149,-130,-129,-147,-118,-150,-88,-134,-137,-136,-135,-150,200,-124,-127,-150,-130,-131,-132,-144,-145,-143,-119,-122,-126,-150,-129,-120,-121,-125,-150,-138,-141,-140,]),'OBJECT':([13,19,43,59,60,62,77,79,80,97,217,276,],[-3,32,32,32,-3,-3,-3,-3,32,32,32,-3,]),'WHILE':([8,11,18,21,23,24,54,60,62,64,69,70,71,73,75,79,83,84,85,86,88,89,101,109,181,218,220,238,258,265,268,274,275,277,278,285,288,291,],[-6,-7,-29,-28,-27,-10,-150,-150,-150,-72,-66,-68,-69,-64,-77,-150,-72,-75,-74,108,-23,-24,-62,-22,-150,-72,-72,-72,-76,-150,-150,-98,-101,-72,-72,-72,-78,-100,]),'PROGRAM':([0,2,],[-5,3,]),'TRUE':([111,120,124,138,142,143,153,155,164,168,169,173,184,189,196,197,199,200,201,202,203,204,207,233,236,252,270,290,],[123,123,123,123,123,123,123,123,123,-133,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'LAST':([161,],[192,]),')':([29,30,32,33,40,57,77,96,98,99,100,102,111,114,117,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,144,148,151,152,154,156,158,159,160,162,163,165,166,167,170,171,172,174,175,176,178,179,185,186,187,188,190,191,192,193,194,195,198,205,206,208,209,212,213,216,223,224,225,226,227,228,229,230,231,232,234,239,241,247,248,249,250,251,255,259,261,262,263,266,271,281,284,],[-14,-15,-16,-17,-13,-45,-150,-56,116,-54,-150,118,-150,-57,-44,151,-148,-150,-90,-146,-150,-150,-128,-123,-149,-130,-129,-147,-118,-150,-83,-80,-82,-53,183,-88,185,-106,-109,-134,-137,-136,-135,-89,-92,-150,-150,-124,-127,-31,-150,-32,-33,215,-150,-131,-107,-105,-108,-132,-144,-145,-143,-150,-119,-122,-117,-110,-126,-30,-150,-129,-150,-91,-120,-121,-111,-112,-114,-115,-113,-116,-125,-36,-11,-40,-150,263,-37,-38,-84,-46,269,-138,-141,-35,-43,-34,-42,-140,]),'(':([42,46,48,52,55,65,92,108,110,111,113,120,124,128,138,142,143,153,155,164,168,169,173,174,184,189,196,197,199,200,201,202,203,204,207,212,236,252,270,290,],[-104,-4,59,-104,-55,77,111,120,121,124,143,124,124,111,173,124,124,124,124,124,-133,124,124,111,124,124,124,124,124,124,124,124,124,124,124,111,124,124,124,124,]),'+':([123,127,128,130,131,132,133,134,135,137,151,158,159,160,162,166,170,171,174,176,185,190,191,192,193,208,212,213,232,247,261,262,284,],[-148,-146,-150,-128,-123,-149,-130,-129,-147,-150,-88,-134,-137,-136,-135,196,-124,-127,-150,-130,-131,-132,-144,-145,-143,-126,-150,-129,-125,-150,-138,-141,-140,]),'*':([123,127,128,130,132,133,134,135,137,151,158,159,160,162,174,176,185,190,191,192,193,212,213,247,261,262,284,],[-148,-146,-150,-128,-149,-130,-129,-147,168,-88,-134,-137,-136,-135,-150,-130,-131,-132,-144,-145,-143,-150,-129,-150,-138,-141,-140,]),'-':([123,127,128,130,131,132,133,134,135,137,151,158,159,160,162,166,170,171,174,176,185,190,191,192,193,208,212,213,232,247,261,262,284,],[-148,-146,-150,-128,-123,-149,-130,-129,-147,-150,-88,-134,-137,-136,-135,197,-124,-127,-150,-130,-131,-132,-144,-145,-143,-126,-150,-129,-125,-150,-138,-141,-140,]),',':([47,100,123,125,127,128,129,130,131,132,133,134,135,136,137,151,154,156,158,159,160,162,166,167,170,171,179,185,186,187,188,190,191,192,193,194,195,198,205,206,208,224,225,226,227,228,229,230,231,232,247,261,262,284,],[56,56,-148,-150,-146,-150,164,-128,-123,-149,-130,-129,-147,-118,-150,-88,-106,-109,-134,-137,-136,-135,-150,-150,-124,-127,56,-131,-107,-105,-108,-132,-144,-145,-143,164,-119,-122,-117,-110,-126,-120,-121,-111,-112,-114,-115,-113,-116,-125,-150,-138,-141,-140,]),'/':([123,127,128,130,132,133,134,135,137,151,158,159,160,162,174,176,185,190,191,192,193,212,213,247,261,262,284,],[-148,-146,-150,-128,-149,-130,-129,-147,169,-88,-134,-137,-136,-135,-150,-130,-131,-132,-144,-145,-143,-150,-129,-150,-138,-141,-140,]),'.':([128,174,212,],[161,161,161,]),'FIRST':([161,],[191,]),'DICT':([13,20,43,60,62,79,],[-67,35,52,-67,-67,-67,]),';':([47,49,51,57,58,67,81,90,93,95,100,103,105,117,118,123,125,127,128,130,131,132,133,134,135,136,137,139,140,141,147,150,151,154,156,158,159,160,162,166,167,170,171,172,174,175,176,179,185,186,187,188,190,191,192,193,195,198,205,206,208,209,216,221,224,225,226,227,228,229,230,231,232,240,247,251,256,261,262,263,267,271,284,292,],[-150,60,62,-45,-11,79,-150,109,-26,-25,-150,-93,-97,-44,-103,-148,-150,-146,-150,-128,-123,-149,-130,-129,-147,-118,-150,-83,-80,-82,-96,184,-88,-106,-109,-134,-137,-136,-135,-150,-150,-124,-127,-31,-150,-32,-33,-150,-131,-107,-105,-108,-132,-144,-145,-143,-119,-122,-117,-110,-126,-30,-47,246,-120,-121,-111,-112,-114,-115,-113,-116,-125,-11,-150,-84,-46,-138,-141,-35,276,-34,-140,293,]),':':([29,30,32,33,40,68,123,127,132,135,210,212,213,234,],[-14,-15,-16,-17,-13,80,-148,-146,-149,-147,233,-38,-37,-36,]),'=':([92,112,149,214,235,237,264,272,],[-81,138,-81,-150,252,-86,-87,-85,]),'<':([123,127,128,130,131,132,133,134,135,136,137,151,158,159,160,162,166,167,170,171,174,176,185,190,191,192,193,195,198,208,212,213,224,225,232,247,261,262,284,],[-148,-146,-150,-128,-123,-149,-130,-129,-147,-118,-150,-88,-134,-137,-136,-135,-150,204,-124,-127,-150,-130,-131,-132,-144,-145,-143,-119,-122,-126,-150,-129,-120,-121,-125,-150,-138,-141,-140,]),'$end':([1,37,44,],[0,-151,-1,]),'STRING':([13,19,43,59,60,62,77,79,80,97,217,276,],[-3,30,30,30,-3,-3,-3,-3,30,30,30,-3,]),'FOR':([8,11,18,21,23,24,54,60,62,64,69,70,71,73,75,79,83,84,85,88,89,91,101,109,181,218,220,238,258,265,268,274,275,277,278,285,288,291,],[-6,-7,-29,-28,-27,-10,-150,-150,-150,-72,-66,-68,-69,-64,-79,-150,-72,-75,-74,-23,-24,110,-62,-22,-150,-72,-72,-72,-76,-150,-150,-98,-101,-72,-72,-72,-78,-100,]),'ELSE':([265,273,],[-102,280,]),'>':([123,127,128,130,131,132,133,134,135,136,137,151,158,159,160,162,166,167,170,171,174,176,185,190,191,192,193,195,198,208,212,213,224,225,232,247,261,262,284,],[-148,-146,-150,-128,-123,-149,-130,-129,-147,-118,-150,-88,-134,-137,-136,-135,-150,202,-124,-127,-150,-130,-131,-132,-144,-145,-143,-119,-122,-126,-150,-129,-120,-121,-125,-150,-138,-141,-140,]),'RETURNS':([116,146,180,],[-55,-61,217,]),'FUNC':([7,8,9,11,12,16,17,18,21,23,24,60,62,69,70,71,73,79,101,219,244,],[-150,-6,-2,-7,-49,-49,28,-29,-28,-27,-10,-150,-150,-66,-68,-69,-64,-150,-62,-50,-48,]),'[':([29,30,32,33,40,50,53,63,81,92,112,118,128,149,157,174,212,214,247,260,],[-14,-15,-16,-17,-13,61,-94,-95,104,-81,142,-103,-139,-81,189,-139,-139,236,-142,270,]),']':([72,119,123,125,127,128,130,131,132,133,134,135,136,137,151,154,156,158,159,160,162,166,167,170,171,177,185,186,187,188,190,191,192,193,195,198,205,206,208,222,224,225,226,227,228,229,230,231,232,247,253,261,262,279,284,],[81,147,-148,-150,-146,-150,-128,-123,-149,-130,-129,-147,-118,-150,-88,-106,-109,-134,-137,-136,-135,-150,-150,-124,-127,214,-131,-107,-105,-108,-132,-144,-145,-143,-119,-122,-117,-110,-126,247,-120,-121,-111,-112,-114,-115,-113,-116,-125,-150,264,-138,-141,284,-140,]),'ID':([3,4,8,11,18,21,23,24,28,29,30,32,33,34,35,36,39,40,41,54,56,60,62,64,66,69,70,71,73,75,78,79,83,84,85,88,89,101,109,111,115,120,121,124,138,142,143,145,153,155,164,168,169,173,181,184,189,196,197,199,200,201,202,203,204,207,218,220,233,236,238,246,252,258,265,268,270,274,275,277,278,285,288,290,291,],[-3,5,-6,-7,-29,-28,-27,-10,-3,-14,-15,-16,-17,-63,42,43,46,-13,47,-150,-11,-150,-150,-72,-46,-66,-68,-69,-64,92,100,-150,-72,-75,-74,-23,-24,-62,-22,128,-41,128,149,128,174,128,128,179,128,128,128,-133,128,212,-150,128,128,128,128,128,128,128,128,128,128,128,-72,-72,250,128,-72,149,174,-76,-150,-150,128,-98,-101,-72,-72,-72,-78,128,-100,]),'IF':([8,11,18,21,23,24,54,60,62,64,69,70,71,73,75,79,83,84,85,88,89,94,101,109,181,218,220,238,258,265,268,274,275,277,278,285,288,291,],[-6,-7,-29,-28,-27,-10,-150,-150,-150,-72,-66,-68,-69,-64,-99,-150,-72,-75,-74,-23,-24,113,-62,-22,-150,-72,-72,-72,-76,-150,-150,-98,-101,-72,-72,-72,-78,-100,]),'AND':([123,125,127,128,130,131,132,133,134,135,136,137,151,158,159,160,162,166,167,170,171,174,176,185,190,191,192,193,195,198,205,206,208,212,213,224,225,226,227,228,229,230,231,232,247,261,262,284,],[-148,153,-146,-150,-128,-123,-149,-130,-129,-147,-118,-150,-88,-134,-137,-136,-135,-150,-150,-124,-127,-150,-130,-131,-132,-144,-145,-143,-119,-122,-117,-110,-126,-150,-129,-120,-121,-111,-112,-114,-115,-113,-116,-125,-150,-138,-141,-140,]),'CTES':([111,120,124,138,142,143,153,155,164,168,169,173,184,189,196,197,199,200,201,202,203,204,207,211,233,236,252,270,290,],[130,130,130,130,130,130,130,130,130,-133,130,130,130,130,130,130,130,130,130,130,130,130,130,234,-39,130,130,130,130,]),'LTOEQ':([123,127,128,130,131,132,133,134,135,136,137,151,158,159,160,162,166,167,170,171,174,176,185,190,191,192,193,195,198,208,212,213,224,225,232,247,261,262,284,],[-148,-146,-150,-128,-123,-149,-130,-129,-147,-118,-150,-88,-134,-137,-136,-135,-150,203,-124,-127,-150,-130,-131,-132,-144,-145,-143,-119,-122,-126,-150,-129,-120,-121,-125,-150,-138,-141,-140,]),'FALSE':([111,120,124,138,142,143,153,155,164,168,169,173,184,189,196,197,199,200,201,202,203,204,207,233,236,252,270,290,],[132,132,132,132,132,132,132,132,132,-133,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,]),'STRUCT':([13,22,60,62,79,],[-65,36,-65,-65,-65,]),'INT':([13,19,31,43,59,60,62,77,79,80,97,217,276,],[-3,-18,40,-18,-18,-3,-3,-3,-3,-18,-18,-18,-3,]),'EQ':([123,127,128,130,131,132,133,134,135,136,137,151,158,159,160,162,166,167,170,171,174,176,185,190,191,192,193,195,198,208,212,213,224,225,232,247,261,262,284,],[-148,-146,-150,-128,-123,-149,-130,-129,-147,-118,-150,-88,-134,-137,-136,-135,-150,199,-124,-127,-150,-130,-131,-132,-144,-145,-143,-119,-122,-126,-150,-129,-120,-121,-125,-150,-138,-141,-140,]),'FLOAT':([13,19,43,59,60,62,77,79,80,97,217,276,],[-3,29,29,29,-3,-3,-3,-3,29,29,29,-3,]),'OR':([123,125,127,128,130,131,132,133,134,135,136,137,151,158,159,160,162,166,167,170,171,174,176,185,190,191,192,193,195,198,205,206,208,212,213,224,225,226,227,228,229,230,231,232,247,261,262,284,],[-148,155,-146,-150,-128,-123,-149,-130,-129,-147,-118,-150,-88,-134,-137,-136,-135,-150,-150,-124,-127,-150,-130,-131,-132,-144,-145,-143,-119,-122,-117,-110,-126,-150,-129,-120,-121,-111,-112,-114,-115,-113,-116,-125,-150,-138,-141,-140,]),'BOOL':([13,19,43,59,60,62,77,79,80,97,217,276,],[-3,33,33,33,-3,-3,-3,-3,33,33,33,-3,]),'CTED':([61,104,111,120,124,138,142,143,153,155,164,168,169,173,184,189,196,197,199,200,201,202,203,204,207,233,236,252,270,290,],[72,119,127,127,127,127,127,127,127,127,127,-133,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'GTOEQ':([123,127,128,130,131,132,133,134,135,136,137,151,158,159,160,162,166,167,170,171,174,176,185,190,191,192,193,195,198,208,212,213,224,225,232,247,261,262,284,],[-148,-146,-150,-128,-123,-149,-130,-129,-147,-118,-150,-88,-134,-137,-136,-135,-150,201,-124,-127,-150,-130,-131,-132,-144,-145,-143,-119,-122,-126,-150,-129,-120,-121,-125,-150,-138,-141,-140,]),'{':([5,6,29,30,32,33,38,40,45,116,146,183,215,242,257,269,280,],[-4,7,-14,-15,-16,-17,-20,-13,54,-55,181,220,238,-60,268,278,285,]),'MAIN':([7,8,9,11,12,14,15,16,18,21,23,24,26,27,60,62,69,70,71,73,79,101,219,244,],[-150,-6,-2,-7,-150,-21,-9,-150,-29,-28,-27,-10,38,-8,-150,-150,-66,-68,-69,-64,-150,-62,-50,-48,]),'}':([8,11,18,21,23,24,25,54,60,62,64,69,70,71,73,74,76,79,82,83,84,85,87,88,89,101,106,107,109,181,182,218,220,238,243,245,254,258,265,274,275,278,283,285,286,288,289,291,293,],[-6,-7,-29,-28,-27,-10,37,-150,-150,-150,-150,-66,-68,-69,-64,82,-71,-150,-50,-150,-75,-74,-70,-23,-24,-62,-19,-73,-22,-150,219,-150,-150,-150,-59,258,265,-76,-150,-98,-101,-150,288,-150,-58,-78,291,-100,-51,]),'CTEF':([111,120,124,138,142,143,153,155,164,168,169,173,184,189,196,197,199,200,201,202,203,204,207,233,236,252,270,290,],[135,135,135,135,135,135,135,135,135,-133,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vars':([7,54,181,268,],[8,8,8,8,]),'errorOpSExp':([136,],[167,]),'errorMain':([14,],[26,]),'errorCyExp':([131,],[166,]),'opParamCall':([111,],[122,]),'cyTypeParam':([47,100,179,],[58,117,216,]),'forCycle':([75,],[85,]),'structType':([43,],[50,]),'changeCurrentScope':([9,],[12,]),'struct':([43,],[51,]),'param':([77,276,],[96,281,]),'init':([112,235,],[141,251,]),'program':([0,],[1,]),'dict':([42,52,],[49,63,]),'opMatrix':([247,],[261,]),'errorExpresion':([154,],[187,]),'main':([14,],[25,]),'return':([282,],[286,]),'errorParam':([115,],[145,]),'errorElse':([265,],[273,]),'errorReturn':([282,],[287,]),'assignOptions':([112,],[140,]),'flagParameters':([55,116,],[65,146,]),'basicDeclare':([13,60,62,79,],[23,23,23,23,]),'cyInstruction':([75,],[87,]),'condition':([75,],[88,]),'expresion':([111,120,124,138,142,143,153,155,164,173,184,189,236,252,270,290,],[129,148,152,175,177,178,186,188,194,152,221,222,253,175,279,292,]),'term':([111,120,124,138,142,143,153,155,164,173,184,189,196,197,199,200,201,202,203,204,236,252,270,290,],[131,131,131,131,131,131,131,131,131,131,131,131,224,225,131,131,131,131,131,131,131,131,131,131,]),'funcCall':([75,111,120,124,138,142,143,153,155,164,169,173,184,189,196,197,199,200,201,202,203,204,207,236,252,270,290,],[93,133,133,133,176,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,176,133,133,]),'initDict':([112,],[139,]),'saveTypeParam':([66,255,256,],[78,266,267,]),'dictDeclare':([13,60,62,79,],[18,18,18,18,]),'saveMain':([38,],[45,]),'errorVars':([7,54,181,268,],[10,10,10,10,]),'whileCycle':([75,],[84,]),'errorDictDeclare':([13,60,62,79,],[20,20,20,20,]),'opFunctions':([12,16,],[14,27,]),'errorOpStruct':([128,174,212,],[157,157,157,]),'opVars':([7,54,181,268,],[9,64,218,277,]),'errorInit':([172,],[209,]),'cyExpresion':([125,],[154,]),'body':([64,83,218,220,238,277,278,285,],[74,107,243,245,254,282,283,289,]),'errorOpParameters':([114,],[144,]),'printTables':([37,],[44,]),'saveParamToDirProc':([96,],[114,]),'saveReturnType':([242,],[257,]),'opParameters':([77,],[98,]),'errorCondition':([75,],[94,]),'cte':([111,120,124,138,142,143,153,155,164,169,173,184,189,196,197,199,200,201,202,203,204,207,233,236,252,270,290,],[134,134,134,134,134,134,134,134,134,134,213,134,134,134,134,134,134,134,134,134,134,134,249,134,134,134,134,]),'saveProc':([5,46,],[6,55,]),'assign':([75,121,246,],[95,150,259,]),'errorStructDeclare':([13,60,62,79,],[22,22,22,22,]),'cyExp':([166,],[195,]),'instr':([75,],[83,]),'errorFact':([168,],[207,]),'errorProgram':([0,],[2,]),'cyTerm':([137,],[170,]),'errorAssignMatrix':([264,],[272,]),'cyDeclare':([60,62,79,],[69,73,101,]),'errorBody':([64,83,218,220,238,277,278,285,],[75,75,75,75,75,75,75,75,]),'opStruct':([128,174,212,],[158,158,158,]),'errorOpAccess':([159,],[190,]),'type':([19,43,59,80,97,217,],[34,53,68,102,115,242,]),'dictIndex':([161,],[193,]),'empty':([7,12,16,47,54,60,62,64,77,79,81,83,100,111,125,128,129,137,166,167,174,179,181,194,212,214,216,218,220,238,247,265,268,277,278,285,],[11,15,15,57,11,71,71,76,99,71,105,76,57,126,156,160,165,171,198,205,160,57,11,165,160,237,239,76,76,76,262,275,11,76,76,76,]),'errorBasicDeclare':([34,],[41,]),'function':([12,16,],[16,16,]),'errorOpMatrix':([247,],[260,]),'opDictionary':([128,174,212,],[162,162,162,]),'errorType':([19,43,59,80,97,217,],[31,31,31,31,31,31,]),'errorForCycle':([75,],[91,]),'opAccess':([128,174,212,],[159,159,159,]),'basicStatements':([75,],[90,]),'structDeclare':([13,60,62,79,],[21,21,21,21,]),'errorAssign':([92,149,],[112,112,]),'cyParam':([216,],[241,]),'opSExp':([167,],[206,]),'errorOpReturns':([146,],[180,]),'cyParamCall':([129,194,],[163,223,]),'declare':([13,60,62,79,],[24,70,70,70,]),'optionalMatrix':([81,],[103,]),'clearVarsTable':([82,219,],[106,244,]),'optionalElse':([265,],[274,]),'dictType':([173,233,],[210,248,]),'initWith':([138,252,],[172,172,]),'errorWhileCycle':([75,],[86,]),'sExp':([111,120,124,138,142,143,153,155,164,173,184,189,236,252,270,290,],[125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,]),'errorCyParam':([216,],[240,]),'opReturns':([146,],[182,]),'errorDictType':([173,233,],[211,211,]),'assignMatrix':([214,],[235,]),'errorDict':([42,52,],[48,48,]),'errorInitDict':([263,],[271,]),'saveType':([3,13,28,60,62,77,79,276,],[4,19,39,19,19,97,19,97,]),'saveID':([56,58,239,240,],[66,67,255,256,]),'cycle':([75,],[89,]),'errorFunction':([12,16,],[17,17,]),'exp':([111,120,124,138,142,143,153,155,164,173,184,189,199,200,201,202,203,204,236,252,270,290,],[136,136,136,136,136,136,136,136,136,136,136,136,226,227,228,229,230,231,136,136,136,136,]),'fact':([111,120,124,138,142,143,153,155,164,169,173,184,189,196,197,199,200,201,202,203,204,207,236,252,270,290,],[137,137,137,137,137,137,137,137,137,208,137,137,137,137,137,137,137,137,137,137,137,232,137,137,137,137,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables','program',12,'p_program','CT.py',84),
  ('changeCurrentScope -> <empty>','changeCurrentScope',0,'p_changeCurrentScope','CT.py',88),
  ('saveType -> <empty>','saveType',0,'p_saveType','CT.py',93),
  ('saveProc -> <empty>','saveProc',0,'p_saveProc','CT.py',100),
  ('errorProgram -> <empty>','errorProgram',0,'p_errorProgram','CT.py',117),
  ('opVars -> vars','opVars',1,'p_opVars','CT.py',123),
  ('opVars -> empty','opVars',1,'p_opVars','CT.py',124),
  ('opFunctions -> function opFunctions','opFunctions',2,'p_opFunctions','CT.py',129),
  ('opFunctions -> empty','opFunctions',1,'p_opFunctions','CT.py',130),
  ('vars -> errorVars VARS declare','vars',3,'p_vars','CT.py',134),
  ('saveID -> <empty>','saveID',0,'p_saveID','CT.py',139),
  ('errorVars -> <empty>','errorVars',0,'p_errorVars','CT.py',168),
  ('type -> errorType INT','type',2,'p_type','CT.py',174),
  ('type -> FLOAT','type',1,'p_type','CT.py',175),
  ('type -> STRING','type',1,'p_type','CT.py',176),
  ('type -> OBJECT','type',1,'p_type','CT.py',177),
  ('type -> BOOL','type',1,'p_type','CT.py',178),
  ('errorType -> <empty>','errorType',0,'p_errorType','CT.py',183),
  ('main -> errorMain MAIN saveMain { opVars body } clearVarsTable','main',8,'p_main','CT.py',189),
  ('saveMain -> <empty>','saveMain',0,'p_saveMain','CT.py',193),
  ('errorMain -> <empty>','errorMain',0,'p_errorMain','CT.py',201),
  ('instr -> basicStatements ;','instr',2,'p_instr','CT.py',207),
  ('instr -> condition','instr',1,'p_instr','CT.py',208),
  ('instr -> cycle','instr',1,'p_instr','CT.py',209),
  ('basicStatements -> assign','basicStatements',1,'p_basicStatements','CT.py',213),
  ('basicStatements -> funcCall','basicStatements',1,'p_basicStatements','CT.py',214),
  ('declare -> basicDeclare','declare',1,'p_declare','CT.py',218),
  ('declare -> structDeclare','declare',1,'p_declare','CT.py',219),
  ('declare -> dictDeclare','declare',1,'p_declare','CT.py',220),
  ('init -> = initWith errorInit','init',3,'p_init','CT.py',225),
  ('errorInit -> <empty>','errorInit',0,'p_errorInit','CT.py',230),
  ('initWith -> expresion','initWith',1,'p_initWith','CT.py',236),
  ('initWith -> funcCall','initWith',1,'p_initWith','CT.py',237),
  ('initDict -> = ( dictType : dictType ) errorInitDict','initDict',7,'p_initDict','CT.py',242),
  ('errorInitDict -> <empty>','errorInitDict',0,'p_errorInitDict','CT.py',247),
  ('dictType -> errorDictType CTES','dictType',2,'p_dictType','CT.py',253),
  ('dictType -> cte','dictType',1,'p_dictType','CT.py',254),
  ('dictType -> ID','dictType',1,'p_dictType','CT.py',255),
  ('errorDictType -> <empty>','errorDictType',0,'p_errorDictType','CT.py',260),
  ('param -> saveType type errorParam ID cyTypeParam cyParam','param',6,'p_param','CT.py',266),
  ('errorParam -> <empty>','errorParam',0,'p_errorParam','CT.py',271),
  ('cyParam -> errorCyParam saveID saveTypeParam ; param','cyParam',5,'p_cyParam','CT.py',277),
  ('cyParam -> empty saveID saveTypeParam','cyParam',3,'p_cyParam','CT.py',278),
  ('cyTypeParam -> , saveID saveTypeParam ID cyTypeParam','cyTypeParam',5,'p_cyTypeParam','CT.py',283),
  ('cyTypeParam -> empty','cyTypeParam',1,'p_cyTypeParam','CT.py',284),
  ('saveTypeParam -> <empty>','saveTypeParam',0,'p_saveTypeParam','CT.py',288),
  ('errorCyParam -> <empty>','errorCyParam',0,'p_errorCyParam','CT.py',297),
  ('function -> errorFunction FUNC saveType ID saveProc flagParameters ( opParameters ) flagParameters opReturns } clearVarsTable','function',13,'p_function','CT.py',303),
  ('errorFunction -> <empty>','errorFunction',0,'p_errorFunction','CT.py',307),
  ('clearVarsTable -> <empty>','clearVarsTable',0,'p_clearVarsTable','CT.py',312),
  ('return -> errorReturn RETURN expresion ;','return',4,'p_return','CT.py',323),
  ('errorReturn -> <empty>','errorReturn',0,'p_errorReturn','CT.py',328),
  ('opParameters -> param saveParamToDirProc errorOpParameters','opParameters',3,'p_opParameters','CT.py',334),
  ('opParameters -> empty','opParameters',1,'p_opParameters','CT.py',335),
  ('flagParameters -> <empty>','flagParameters',0,'p_flagParameters','CT.py',339),
  ('saveParamToDirProc -> <empty>','saveParamToDirProc',0,'p_saveParamToDirProc','CT.py',344),
  ('errorOpParameters -> <empty>','errorOpParameters',0,'p_errorOpParameters','CT.py',352),
  ('opReturns -> errorOpReturns RETURNS type saveReturnType { opVars body return','opReturns',8,'p_opReturns','CT.py',358),
  ('opReturns -> { opVars body','opReturns',3,'p_opReturns','CT.py',359),
  ('saveReturnType -> <empty>','saveReturnType',0,'p_saveReturnType','CT.py',364),
  ('errorOpReturns -> <empty>','errorOpReturns',0,'p_errorOpReturns','CT.py',370),
  ('basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare','basicDeclare',8,'p_basicDeclare','CT.py',376),
  ('errorBasicDeclare -> <empty>','errorBasicDeclare',0,'p_errorBasicDeclare','CT.py',381),
  ('structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare','structDeclare',6,'p_structDeclare','CT.py',387),
  ('errorStructDeclare -> <empty>','errorStructDeclare',0,'p_errorStructDeclare','CT.py',392),
  ('dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare','dictDeclare',6,'p_dictDeclare','CT.py',398),
  ('errorDictDeclare -> <empty>','errorDictDeclare',0,'p_errorDictDeclare','CT.py',403),
  ('cyDeclare -> declare','cyDeclare',1,'p_cyDeclare','CT.py',409),
  ('cyDeclare -> empty','cyDeclare',1,'p_cyDeclare','CT.py',410),
  ('body -> errorBody cyInstruction','body',2,'p_body','CT.py',415),
  ('body -> empty','body',1,'p_body','CT.py',416),
  ('errorBody -> <empty>','errorBody',0,'p_errorBody','CT.py',421),
  ('cyInstruction -> instr body','cyInstruction',2,'p_cyInstruction','CT.py',427),
  ('cycle -> forCycle','cycle',1,'p_cycle','CT.py',432),
  ('cycle -> whileCycle','cycle',1,'p_cycle','CT.py',433),
  ('whileCycle -> errorWhileCycle WHILE ( expresion ) { body }','whileCycle',8,'p_whileCycle','CT.py',438),
  ('errorWhileCycle -> <empty>','errorWhileCycle',0,'p_errorWhileCycle','CT.py',443),
  ('forCycle -> errorForCycle FOR ( assign ; expresion ; assign ) { body }','forCycle',12,'p_forCycle','CT.py',449),
  ('errorForCycle -> <empty>','errorForCycle',0,'p_errorForCycle','CT.py',454),
  ('assign -> ID errorAssign assignOptions','assign',3,'p_assign','CT.py',460),
  ('errorAssign -> <empty>','errorAssign',0,'p_errorAssign','CT.py',465),
  ('assignOptions -> init','assignOptions',1,'p_assignOptions','CT.py',471),
  ('assignOptions -> initDict','assignOptions',1,'p_assignOptions','CT.py',472),
  ('assignOptions -> [ expresion ] assignMatrix init','assignOptions',5,'p_assignOptions','CT.py',473),
  ('assignMatrix -> [ expresion ] errorAssignMatrix','assignMatrix',4,'p_assignMatrix','CT.py',478),
  ('assignMatrix -> empty','assignMatrix',1,'p_assignMatrix','CT.py',479),
  ('errorAssignMatrix -> <empty>','errorAssignMatrix',0,'p_errorAssignMatrix','CT.py',484),
  ('funcCall -> ID ( opParamCall )','funcCall',4,'p_funcCall','CT.py',490),
  ('opParamCall -> expresion cyParamCall','opParamCall',2,'p_opParamCall','CT.py',495),
  ('opParamCall -> empty','opParamCall',1,'p_opParamCall','CT.py',496),
  ('cyParamCall -> , expresion cyParamCall','cyParamCall',3,'p_cyParamCall','CT.py',501),
  ('cyParamCall -> empty','cyParamCall',1,'p_cyParamCall','CT.py',502),
  ('struct -> structType [ CTED ] optionalMatrix','struct',5,'p_struct','CT.py',507),
  ('structType -> type','structType',1,'p_structType','CT.py',512),
  ('structType -> DICT dict','structType',2,'p_structType','CT.py',513),
  ('optionalMatrix -> [ CTED ]','optionalMatrix',3,'p_optionalMatrix','CT.py',518),
  ('optionalMatrix -> empty','optionalMatrix',1,'p_optionalMatrix','CT.py',519),
  ('condition -> errorCondition IF ( expresion ) { body } optionalElse','condition',9,'p_condition','CT.py',524),
  ('errorCondition -> <empty>','errorCondition',0,'p_errorCondition','CT.py',529),
  ('optionalElse -> errorElse ELSE { body }','optionalElse',5,'p_optionalElse','CT.py',535),
  ('optionalElse -> empty','optionalElse',1,'p_optionalElse','CT.py',536),
  ('errorElse -> <empty>','errorElse',0,'p_errorElse','CT.py',541),
  ('dict -> errorDict ( type : type )','dict',6,'p_dict','CT.py',547),
  ('errorDict -> <empty>','errorDict',0,'p_errorDict','CT.py',552),
  ('expresion -> sExp cyExpresion errorExpresion','expresion',3,'p_expresion','CT.py',558),
  ('errorExpresion -> <empty>','errorExpresion',0,'p_errorExpresion','CT.py',563),
  ('cyExpresion -> AND expresion','cyExpresion',2,'p_cyExpresion','CT.py',569),
  ('cyExpresion -> OR expresion','cyExpresion',2,'p_cyExpresion','CT.py',570),
  ('cyExpresion -> empty','cyExpresion',1,'p_cyExpresion','CT.py',571),
  ('sExp -> exp errorOpSExp opSExp','sExp',3,'p_sExp','CT.py',576),
  ('opSExp -> EQ exp','opSExp',2,'p_opSExp','CT.py',581),
  ('opSExp -> DIF exp','opSExp',2,'p_opSExp','CT.py',582),
  ('opSExp -> LTOEQ exp','opSExp',2,'p_opSExp','CT.py',583),
  ('opSExp -> GTOEQ exp','opSExp',2,'p_opSExp','CT.py',584),
  ('opSExp -> > exp','opSExp',2,'p_opSExp','CT.py',585),
  ('opSExp -> < exp','opSExp',2,'p_opSExp','CT.py',586),
  ('opSExp -> empty','opSExp',1,'p_opSExp','CT.py',587),
  ('errorOpSExp -> <empty>','errorOpSExp',0,'p_errorOpSExp','CT.py',592),
  ('exp -> term errorCyExp cyExp','exp',3,'p_exp','CT.py',598),
  ('cyExp -> + term','cyExp',2,'p_cyExp','CT.py',603),
  ('cyExp -> - term','cyExp',2,'p_cyExp','CT.py',604),
  ('cyExp -> empty','cyExp',1,'p_cyExp','CT.py',605),
  ('errorCyExp -> <empty>','errorCyExp',0,'p_errorCyExp','CT.py',610),
  ('term -> fact cyTerm','term',2,'p_term','CT.py',616),
  ('cyTerm -> * errorFact fact','cyTerm',3,'p_cyTerm','CT.py',621),
  ('cyTerm -> / fact','cyTerm',2,'p_cyTerm','CT.py',622),
  ('cyTerm -> empty','cyTerm',1,'p_cyTerm','CT.py',623),
  ('fact -> CTES','fact',1,'p_fact','CT.py',628),
  ('fact -> cte','fact',1,'p_fact','CT.py',629),
  ('fact -> funcCall','fact',1,'p_fact','CT.py',630),
  ('fact -> ( expresion )','fact',3,'p_fact','CT.py',631),
  ('fact -> ID opAccess errorOpAccess','fact',3,'p_fact','CT.py',632),
  ('errorFact -> <empty>','errorFact',0,'p_errorFact','CT.py',637),
  ('opAccess -> opStruct','opAccess',1,'p_opAccess','CT.py',643),
  ('opAccess -> opDictionary','opAccess',1,'p_opAccess','CT.py',644),
  ('opAccess -> empty','opAccess',1,'p_opAccess','CT.py',645),
  ('errorOpAccess -> <empty>','errorOpAccess',0,'p_errorOpAccess','CT.py',650),
  ('opStruct -> errorOpStruct [ expresion ] opMatrix','opStruct',5,'p_opStruct','CT.py',656),
  ('errorOpStruct -> <empty>','errorOpStruct',0,'p_errorOpStruct','CT.py',661),
  ('opMatrix -> errorOpMatrix [ expresion ]','opMatrix',4,'p_opMatrix','CT.py',667),
  ('opMatrix -> empty','opMatrix',1,'p_opMatrix','CT.py',668),
  ('errorOpMatrix -> <empty>','errorOpMatrix',0,'p_errorOpMatrix','CT.py',673),
  ('opDictionary -> . dictIndex','opDictionary',2,'p_opDictionary','CT.py',679),
  ('dictIndex -> FIRST','dictIndex',1,'p_dictIndex','CT.py',684),
  ('dictIndex -> LAST','dictIndex',1,'p_dictIndex','CT.py',685),
  ('cte -> CTED','cte',1,'p_cte','CT.py',690),
  ('cte -> CTEF','cte',1,'p_cte','CT.py',691),
  ('cte -> TRUE','cte',1,'p_cte','CT.py',692),
  ('cte -> FALSE','cte',1,'p_cte','CT.py',693),
  ('empty -> <empty>','empty',0,'p_empty','CT.py',698),
  ('printTables -> <empty>','printTables',0,'p_printTables','CT.py',703),
]
