
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'C77EBC53B5BAB456D37B32D10EFB8D66'
    
_lr_action_items = {'VARS':([4,32,70,],[6,6,6,]),'OBJECT':([6,31,34,36,40,44,47,50,51,52,53,69,72,89,101,102,103,116,],[13,13,13,13,-41,13,13,13,13,-40,13,-64,13,-64,-28,13,-30,-29,]),'PROGRAM':([0,],[2,]),')':([13,17,18,19,21,40,44,52,66,67,68,69,87,89,91,99,100,101,103,109,111,112,113,116,119,125,],[-10,-7,-8,-9,-11,-41,-64,-40,-33,88,-34,-64,-64,-64,105,-62,115,-28,-30,-25,-26,-27,-63,-29,-64,130,]),'(':([28,29,63,81,],[34,36,87,96,]),',':([30,69,],[39,39,]),'BOOL':([6,31,34,36,40,44,47,50,51,52,53,69,72,89,101,102,103,116,],[21,21,21,21,-41,21,21,21,21,-40,21,-64,21,-64,-28,21,-30,-29,]),';':([7,8,14,15,16,23,30,32,37,38,40,41,43,50,51,52,53,56,58,60,61,62,64,65,69,70,73,74,75,76,77,80,81,82,83,84,89,90,92,93,94,95,97,105,106,108,123,124,126,127,130,132,134,135,136,138,],[-2,-3,-19,-18,-20,-6,-64,-64,50,51,-41,53,-64,-64,-64,-40,-64,80,-17,-64,-16,-14,-47,-15,-64,-64,-39,-42,-43,-37,-38,-13,-64,-50,-48,-49,102,-64,-64,-22,-23,-21,-54,-61,-55,-57,-64,-56,-51,-64,-24,-64,-58,-60,-64,-59,]),':':([13,17,18,19,21,49,96,109,110,111,112,113,],[-10,-7,-8,-9,-11,72,-64,-25,119,-26,-27,-63,]),'=':([57,114,120,122,131,],[81,-64,127,-53,-52,]),'$end':([1,33,],[0,-1,]),'STRING':([6,31,34,36,40,44,47,50,51,52,53,69,72,89,101,102,103,116,],[19,19,19,19,-41,19,19,19,19,-40,19,-64,19,-64,-28,19,-30,-29,]),'ELSE':([132,],[133,]),'RETURNS':([35,88,],[47,-32,]),'FUNC':([4,5,7,8,9,14,15,16,23,50,51,53,73,74,75,76,77,117,],[-64,11,-2,-3,11,-19,-18,-20,-6,-64,-64,-64,-39,-42,-43,-37,-38,-31,]),'[':([13,17,18,19,21,42,57,92,114,],[-10,-7,-8,-9,-11,54,85,107,121,]),']':([78,85,98,99,118,121,128,],[92,-64,114,-62,124,-64,131,]),'ID':([2,7,8,11,13,14,15,16,17,18,19,20,21,22,23,24,32,39,43,45,50,51,53,60,62,64,65,70,73,74,75,76,77,80,90,96,119,123,132,134,135,136,138,],[3,-2,-3,28,-10,-19,-18,-20,-7,-8,-9,29,-11,30,-6,31,-64,52,57,69,-64,-64,-64,57,-14,-47,-15,-64,-39,-42,-43,-37,-38,-13,57,112,112,57,-64,-58,-60,57,-59,]),'IF':([7,8,14,15,16,23,32,43,50,51,53,60,62,64,65,70,73,74,75,76,77,80,90,123,132,134,135,136,138,],[-2,-3,-19,-18,-20,-6,-64,63,-64,-64,-64,63,-14,-47,-15,-64,-39,-42,-43,-37,-38,-13,63,63,-64,-58,-60,63,-59,]),'CTES':([96,119,],[109,109,]),'STRUCT':([6,50,51,53,],[24,24,24,24,]),'INT':([6,31,34,36,40,44,47,50,51,52,53,69,72,89,101,102,103,116,],[17,17,17,17,-41,17,17,17,17,-40,17,-64,17,-64,-28,17,-30,-29,]),'FLOAT':([6,31,34,36,40,44,47,50,51,52,53,69,72,89,101,102,103,116,],[18,18,18,18,-41,18,18,18,18,-40,18,-64,18,-64,-28,18,-30,-29,]),'DICT':([6,50,51,53,],[20,20,20,20,]),'CTED':([54,107,],[78,118,]),'{':([3,13,17,18,19,21,26,35,46,48,71,88,115,133,],[4,-10,-7,-8,-9,-11,32,-64,70,-36,-35,-32,123,136,]),'MAIN':([4,5,7,8,9,10,12,14,15,16,23,25,50,51,53,73,74,75,76,77,117,],[-64,-64,-2,-3,-64,26,-5,-19,-18,-20,-6,-4,-64,-64,-64,-39,-42,-43,-37,-38,-31,]),'}':([7,8,14,15,16,23,27,32,43,50,51,53,55,59,60,62,64,65,70,73,74,75,76,77,79,80,86,90,104,123,129,132,134,135,136,137,138,],[-2,-3,-19,-18,-20,-6,33,-64,-64,-64,-64,-64,79,-44,-64,-14,-45,-15,-64,-39,-42,-43,-37,-38,-12,-13,-46,-64,117,-64,132,-64,-58,-60,-64,138,-59,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'body':([43,60,90,123,136,],[55,86,104,129,137,]),'vars':([4,32,70,],[7,7,7,]),'instr':([43,60,90,123,136,],[60,60,60,60,60,]),'optionalMatrix':([92,],[106,]),'n':([44,],[67,]),'optionalElse':([132,],[134,]),'struct':([31,],[41,]),'cycleInstruction':([43,60,90,123,136,],[59,59,59,59,59,]),'param':([34,44,102,],[44,66,116,]),'init':([57,120,],[84,126,]),'program':([0,],[1,]),'dict':([29,],[37,]),'main':([10,],[27,]),'type':([6,31,34,36,44,47,50,51,53,72,102,],[22,42,45,49,45,71,22,22,22,91,45,]),'empty':([4,5,9,30,32,35,43,44,50,51,53,60,69,70,81,85,87,89,90,92,96,114,119,121,123,127,132,136,],[8,12,12,40,8,48,64,68,75,75,75,64,40,8,97,99,99,103,64,108,113,122,113,99,64,97,135,64,]),'function':([5,9,],[9,9,]),'expresion':([81,85,87,121,127,],[93,98,100,128,93,]),'assignMatrix':([114,],[120,]),'assignOptions':([57,],[83,]),'g':([30,69,],[38,89,]),'condition':([43,60,90,123,136,],[62,62,62,62,62,]),'cycle':([43,60,90,123,136,],[65,65,65,65,65,]),'a':([4,32,70,],[5,43,90,]),'c':([43,60,90,123,136,],[56,56,56,56,56,]),'b':([5,9,],[10,25,]),'e':([6,50,51,53,],[14,14,14,14,]),'d':([6,50,51,53,],[15,15,15,15,]),'funcCall':([43,60,81,90,123,127,136,],[58,58,94,58,58,94,58,]),'f':([6,50,51,53,],[16,16,16,16,]),'i':([81,127,],[95,95,]),'h':([50,51,53,],[73,76,77,]),'initDict':([57,],[82,]),'j':([96,119,],[110,125,]),'m':([35,],[46,]),'l':([28,],[35,]),'assign':([43,60,90,123,136,],[61,61,61,61,61,]),'cte':([96,119,],[111,111,]),'k':([89,],[101,]),'declare':([6,50,51,53,],[23,74,74,74,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID { a b main }','program',7,'p_program','CT.py',56),
  ('a -> vars','a',1,'p_a','CT.py',61),
  ('a -> empty','a',1,'p_a','CT.py',62),
  ('b -> function b','b',2,'p_b','CT.py',67),
  ('b -> empty','b',1,'p_b','CT.py',68),
  ('vars -> VARS declare','vars',2,'p_vars','CT.py',72),
  ('type -> INT','type',1,'p_type','CT.py',77),
  ('type -> FLOAT','type',1,'p_type','CT.py',78),
  ('type -> STRING','type',1,'p_type','CT.py',79),
  ('type -> OBJECT','type',1,'p_type','CT.py',80),
  ('type -> BOOL','type',1,'p_type','CT.py',81),
  ('main -> MAIN { a body }','main',5,'p_main','CT.py',86),
  ('instr -> c ;','instr',2,'p_instr','CT.py',91),
  ('instr -> condition','instr',1,'p_instr','CT.py',92),
  ('instr -> cycle','instr',1,'p_instr','CT.py',93),
  ('c -> assign','c',1,'p_c','CT.py',97),
  ('c -> funcCall','c',1,'p_c','CT.py',98),
  ('declare -> d','declare',1,'p_declare','CT.py',102),
  ('declare -> e','declare',1,'p_declare','CT.py',103),
  ('declare -> f','declare',1,'p_declare','CT.py',104),
  ('init -> = i','init',2,'p_init','CT.py',109),
  ('i -> expresion','i',1,'p_i','CT.py',114),
  ('i -> funcCall','i',1,'p_i','CT.py',115),
  ('initDict -> = ( j : j )','initDict',6,'p_initDict','CT.py',120),
  ('j -> CTES','j',1,'p_j','CT.py',125),
  ('j -> cte','j',1,'p_j','CT.py',126),
  ('j -> ID','j',1,'p_j','CT.py',127),
  ('param -> type ID g k','param',4,'p_param','CT.py',132),
  ('k -> ; param','k',2,'p_k','CT.py',137),
  ('k -> empty','k',1,'p_k','CT.py',138),
  ('function -> FUNC ID l m { a body }','function',8,'p_function','CT.py',143),
  ('l -> ( param n )','l',4,'p_l','CT.py',148),
  ('n -> param','n',1,'p_n','CT.py',153),
  ('n -> empty','n',1,'p_n','CT.py',154),
  ('m -> RETURNS type','m',2,'p_m','CT.py',159),
  ('m -> empty','m',1,'p_m','CT.py',160),
  ('d -> type ID g ; h','d',5,'p_d','CT.py',165),
  ('e -> STRUCT ID struct ; h','e',5,'p_e','CT.py',170),
  ('f -> DICT ID dict ; h','f',5,'p_f','CT.py',175),
  ('g -> , ID','g',2,'p_g','CT.py',180),
  ('g -> empty','g',1,'p_g','CT.py',181),
  ('h -> declare','h',1,'p_h','CT.py',186),
  ('h -> empty','h',1,'p_h','CT.py',187),
  ('body -> cycleInstruction','body',1,'p_body','CT.py',192),
  ('body -> empty','body',1,'p_body','CT.py',193),
  ('cycleInstruction -> instr body','cycleInstruction',2,'p_cycleInstruction','CT.py',198),
  ('cycle -> empty','cycle',1,'p_cycle','CT.py',203),
  ('assign -> ID assignOptions','assign',2,'p_assign','CT.py',208),
  ('assignOptions -> init','assignOptions',1,'p_assignOptions','CT.py',213),
  ('assignOptions -> initDict','assignOptions',1,'p_assignOptions','CT.py',214),
  ('assignOptions -> [ expresion ] assignMatrix init','assignOptions',5,'p_assignOptions','CT.py',215),
  ('assignMatrix -> [ expresion ]','assignMatrix',3,'p_assignMatrix','CT.py',220),
  ('assignMatrix -> empty','assignMatrix',1,'p_assignMatrix','CT.py',221),
  ('funcCall -> empty','funcCall',1,'p_funcCall','CT.py',226),
  ('struct -> type [ CTED ] optionalMatrix','struct',5,'p_struct','CT.py',231),
  ('optionalMatrix -> [ CTED ]','optionalMatrix',3,'p_optionalMatrix','CT.py',236),
  ('optionalMatrix -> empty','optionalMatrix',1,'p_optionalMatrix','CT.py',237),
  ('condition -> IF ( expresion ) { body } optionalElse','condition',8,'p_condition','CT.py',242),
  ('optionalElse -> ELSE { body }','optionalElse',4,'p_optionalElse','CT.py',247),
  ('optionalElse -> empty','optionalElse',1,'p_optionalElse','CT.py',248),
  ('dict -> ( type : type )','dict',5,'p_dict','CT.py',253),
  ('expresion -> empty','expresion',1,'p_expresion','CT.py',258),
  ('cte -> empty','cte',1,'p_cte','CT.py',263),
  ('empty -> <empty>','empty',0,'p_empty','CT.py',268),
]
