
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '3926DA86EBE1C29219B308F6C52E6BB8'
    
_lr_action_items = {'RETURN':([8,11,18,21,23,24,59,61,68,69,70,72,75,78,82,84,86,90,94,95,104,110,116,295,301,302,311,313,314,321,327,329,332,],[-6,-7,-36,-35,-34,-10,-158,-158,-74,-76,-77,-72,-79,-158,-158,-83,-82,-23,-78,-22,-70,-81,-21,-84,-158,-158,-106,-109,-158,-60,331,-86,-108,]),'VARS':([7,10,53,176,302,],[-12,13,-12,-12,-12,]),'READ':([8,11,18,21,23,24,53,59,61,63,68,69,70,72,74,78,82,84,86,90,95,104,116,176,217,234,253,295,301,302,311,313,314,319,325,329,332,],[-6,-7,-36,-35,-34,-10,-158,-158,-158,-80,-74,-76,-77,-72,83,-158,-80,-83,-82,-23,-22,-70,-21,-158,-80,-80,-80,-84,-158,-158,-106,-109,-80,-80,-80,-86,-108,]),'DIF':([126,128,129,130,131,132,133,134,135,137,144,155,156,158,165,170,182,183,184,186,187,191,192,220,222,223,224,225,226,229,260,265,270,271,290,291,292,294,306,307,328,],[-156,-154,-160,-136,-166,-157,-138,-137,-155,-165,-126,-158,-131,-158,-96,207,-143,-142,-145,-144,-158,-132,-135,-163,-140,-152,-153,-151,-127,-130,-139,-134,-138,-165,-158,-128,-129,-133,-146,-149,-148,]),'WHILE':([8,11,18,21,23,24,53,59,61,63,68,69,70,72,74,78,82,84,86,87,90,95,104,116,176,217,234,253,295,301,302,311,313,314,319,325,329,332,],[-6,-7,-36,-35,-34,-10,-158,-158,-158,-80,-74,-76,-77,-72,-85,-158,-80,-83,-82,113,-23,-22,-70,-21,-158,-80,-80,-80,-84,-158,-158,-106,-109,-80,-80,-80,-86,-108,]),'PROGRAM':([0,2,],[-5,3,]),'PRINT':([8,11,18,21,23,24,53,59,61,63,68,69,70,72,74,78,82,84,86,90,95,104,116,176,217,234,253,295,301,302,311,313,314,319,325,329,332,],[-6,-7,-36,-35,-34,-10,-158,-158,-158,-80,-74,-76,-77,-72,85,-158,-80,-83,-82,-23,-22,-70,-21,-158,-80,-80,-80,-84,-158,-158,-106,-109,-80,-80,-80,-86,-108,]),'PARINI':([41,45,47,51,54,64,83,85,88,112,113,115,117,118,127,129,138,146,154,162,164,168,189,193,194,197,200,201,205,206,207,208,209,210,213,221,227,228,232,233,235,241,242,245,246,247,248,249,250,262,263,266,275,297,316,331,],[-112,-4,58,-112,-63,76,111,112,115,127,138,127,145,146,-162,115,127,127,127,198,127,127,127,-161,-161,-38,-161,-161,-161,-161,-161,-161,-161,-161,127,127,-161,-161,127,-141,127,127,127,127,127,127,127,127,127,127,127,127,127,-161,127,127,]),'DIV':([126,128,129,130,132,133,134,135,137,155,158,165,182,183,184,186,220,222,223,224,225,260,270,271,290,306,307,328,],[-156,-154,-160,-136,-157,-138,-137,-155,-165,-158,193,-96,-143,-142,-145,-144,-163,-140,-152,-153,-151,-139,-138,-165,-158,-146,-149,-148,]),'.':([129,155,],[-160,185,]),'TRUE':([112,115,127,138,146,154,162,164,168,189,193,194,197,198,200,201,205,206,207,208,209,210,213,221,227,228,232,233,235,241,242,245,246,247,248,249,250,262,263,266,272,275,297,316,331,],[126,126,-162,126,126,126,-161,126,126,126,-161,-161,-38,126,-161,-161,-161,-161,-161,-161,-161,-161,126,126,-161,-161,126,-141,126,126,126,126,126,126,126,126,126,126,126,126,126,126,-161,126,126,]),'[':([29,30,32,39,49,52,62,80,88,114,123,129,139,155,171,181,240,290,305,],[-14,-15,-16,-13,60,-102,-103,107,-160,-89,-111,-160,164,-147,-160,221,275,-150,316,]),'MULT':([126,128,129,130,132,133,134,135,137,155,158,165,182,183,184,186,220,222,223,224,225,260,270,271,290,306,307,328,],[-156,-154,-160,-136,-157,-138,-137,-155,-165,-158,194,-96,-143,-142,-145,-144,-163,-140,-152,-153,-151,-139,-138,-165,-158,-146,-149,-148,]),'LAST':([185,],[224,]),'MINUS':([126,128,129,130,131,132,133,134,135,137,155,156,158,165,182,183,184,186,187,191,192,220,222,223,224,225,260,265,270,271,290,294,306,307,328,],[-156,-154,-160,-136,-166,-157,-138,-137,-155,-165,-158,-131,-158,-96,-143,-142,-145,-144,228,-132,-135,-163,-140,-152,-153,-151,-139,-134,-138,-165,-158,-133,-146,-149,-148,]),'LTOEQ':([126,128,129,130,131,132,133,134,135,137,144,155,156,158,165,170,182,183,184,186,187,191,192,220,222,223,224,225,226,229,260,265,270,271,290,291,292,294,306,307,328,],[-156,-154,-160,-136,-166,-157,-138,-137,-155,-165,-126,-158,-131,-158,-96,206,-143,-142,-145,-144,-158,-132,-135,-163,-140,-152,-153,-151,-127,-130,-139,-134,-138,-165,-158,-128,-129,-133,-146,-149,-148,]),',':([46,103,125,126,128,129,130,131,132,133,134,135,136,137,141,143,144,155,156,157,158,165,166,170,177,178,182,183,184,186,187,191,192,202,203,204,211,212,220,222,223,224,225,226,229,231,243,251,260,264,265,277,278,279,280,281,282,283,284,290,291,292,294,306,307,328,],[55,55,151,-156,-154,-160,-136,-166,-157,-138,-137,-155,-169,-165,-168,168,-126,-158,-131,189,-158,-96,-158,-158,55,151,-143,-142,-145,-144,-158,-132,-135,-114,-117,168,-125,-167,-163,-140,-152,-153,-151,-127,-130,-169,-113,-118,-139,189,-134,-115,-116,-123,-121,-120,-124,-122,-119,-158,-128,-129,-133,-146,-149,-148,]),'ASGN':([88,114,139,171,240,274,276,309,318,],[-160,-89,162,-160,-158,297,-94,-95,-93,]),'FIRST':([185,],[223,]),'LT':([126,128,129,130,131,132,133,134,135,137,144,155,156,158,165,170,182,183,184,186,187,191,192,220,222,223,224,225,226,229,260,265,270,271,290,291,292,294,306,307,328,],[-156,-154,-160,-136,-166,-157,-138,-137,-155,-165,-126,-158,-131,-158,-96,208,-143,-142,-145,-144,-158,-132,-135,-163,-140,-152,-153,-151,-127,-130,-139,-134,-138,-165,-158,-128,-129,-133,-146,-149,-148,]),'PLUS':([126,128,129,130,131,132,133,134,135,137,155,156,158,165,182,183,184,186,187,191,192,220,222,223,224,225,260,265,270,271,290,294,306,307,328,],[-156,-154,-160,-136,-166,-157,-138,-137,-155,-165,-158,-131,-158,-96,-143,-142,-145,-144,227,-132,-135,-163,-140,-152,-153,-151,-139,-134,-138,-165,-158,-133,-146,-149,-148,]),'BOOL':([13,19,42,58,59,61,76,78,79,101,216,315,],[-3,32,32,32,-3,-3,-3,-3,32,32,32,-3,]),';':([46,48,50,56,57,66,80,89,91,92,96,98,103,106,108,122,123,126,128,129,130,131,132,133,134,135,137,141,144,150,155,156,158,160,161,163,165,166,170,172,177,179,182,183,184,186,187,191,192,196,202,203,211,212,218,220,222,223,224,225,226,229,230,243,251,252,258,260,265,268,269,270,271,277,278,279,280,281,282,283,284,289,290,291,292,294,298,304,306,307,308,317,328,333,],[-158,59,61,-53,-11,78,-158,-26,-27,116,-25,-24,-158,-101,-105,-52,-111,-156,-154,-160,-136,-166,-157,-138,-137,-155,-165,-168,-126,-104,-158,-131,-158,-91,-164,-90,-96,-158,-158,213,-158,-31,-143,-142,-145,-144,-158,-132,-135,-88,-114,-117,-125,-167,-55,-163,-140,-152,-153,-151,-127,-130,-28,-113,-118,285,-11,-139,-134,-37,-39,-41,-40,-115,-116,-123,-121,-120,-124,-122,-119,-54,-158,-128,-129,-133,-92,315,-146,-149,-43,-42,-148,334,]),':':([29,30,32,39,67,126,128,132,135,236,238,239,273,],[-14,-15,-16,-13,79,-156,-154,-157,-155,272,-45,-46,-44,]),'$end':([1,36,43,],[0,-159,-1,]),'GT':([126,128,129,130,131,132,133,134,135,137,144,155,156,158,165,170,182,183,184,186,187,191,192,220,222,223,224,225,226,229,260,265,270,271,290,291,292,294,306,307,328,],[-156,-154,-160,-136,-166,-157,-138,-137,-155,-165,-126,-158,-131,-158,-96,205,-143,-142,-145,-144,-158,-132,-135,-163,-140,-152,-153,-151,-127,-130,-139,-134,-138,-165,-158,-128,-129,-133,-146,-149,-148,]),'STRING':([13,19,42,58,59,61,76,78,79,101,216,315,],[-3,30,30,30,-3,-3,-3,-3,30,30,30,-3,]),'FOR':([8,11,18,21,23,24,53,59,61,63,68,69,70,72,74,78,82,84,86,90,93,95,104,116,176,217,234,253,295,301,302,311,313,314,319,325,329,332,],[-6,-7,-36,-35,-34,-10,-158,-158,-158,-80,-74,-76,-77,-72,-87,-158,-80,-83,-82,-23,117,-22,-70,-21,-158,-80,-80,-80,-84,-158,-158,-106,-109,-80,-80,-80,-86,-108,]),'ELSE':([301,312,],[-110,320,]),'RETURNS':([119,147,175,],[-63,-69,216,]),'FUNC':([7,8,9,11,12,16,17,18,21,23,24,59,61,68,69,70,72,78,104,215,254,],[-158,-6,-2,-7,-57,-57,28,-36,-35,-34,-10,-158,-158,-74,-76,-77,-72,-158,-70,-58,-56,]),'PARFIN':([29,30,32,39,56,76,99,100,102,103,105,115,120,122,125,126,128,129,130,131,132,133,134,135,136,137,140,141,142,143,144,148,152,153,155,156,157,158,159,160,161,163,165,166,167,169,170,173,177,178,180,182,183,184,186,187,188,190,191,192,196,202,203,204,211,212,218,219,220,222,223,224,225,226,229,231,238,239,243,244,251,257,259,260,264,265,268,269,270,271,273,277,278,279,280,281,282,283,284,288,290,291,292,293,294,296,298,300,303,306,307,308,317,322,328,],[-14,-15,-16,-13,-53,-158,119,-64,-62,-158,123,-158,-65,-52,-158,-156,-154,-160,-136,-166,-157,-138,-137,-155,-169,-165,165,-168,-98,-158,-126,-61,179,-33,-158,-131,-158,-158,195,-91,-164,-90,-96,-158,-97,-100,-158,214,-158,-158,220,-143,-142,-145,-144,-158,230,-30,-132,-135,-88,-114,-117,-158,-125,-167,-158,-32,-163,-140,-152,-153,-151,-127,-130,-169,-45,-46,-113,-99,-118,-11,-48,-139,-158,-134,-37,-39,-41,-40,-44,-115,-116,-123,-121,-120,-124,-122,-119,-54,-158,-128,-129,-29,-133,308,-92,310,-51,-146,-149,-43,-42,-50,-148,]),']':([71,124,126,128,129,130,131,132,133,134,135,137,141,144,155,156,158,165,166,170,182,183,184,186,187,191,192,199,202,203,211,212,220,222,223,224,225,226,229,243,251,260,261,265,277,278,279,280,281,282,283,284,290,291,292,294,299,306,307,323,328,],[80,150,-156,-154,-160,-136,-166,-157,-138,-137,-155,-165,-168,-126,-158,-131,-158,-96,-158,-158,-143,-142,-145,-144,-158,-132,-135,240,-114,-117,-125,-167,-163,-140,-152,-153,-151,-127,-130,-113,-118,-139,290,-134,-115,-116,-123,-121,-120,-124,-122,-119,-158,-128,-129,-133,309,-146,-149,328,-148,]),'ID':([3,4,8,11,18,21,23,24,28,29,30,32,33,34,35,38,39,40,53,55,59,61,63,65,68,69,70,72,74,77,78,82,84,86,90,95,104,111,112,115,116,121,127,138,145,146,149,151,154,162,164,168,176,189,193,194,197,198,200,201,205,206,207,208,209,210,213,217,221,227,228,232,233,234,235,241,242,245,246,247,248,249,250,253,262,263,266,272,275,285,295,297,301,302,311,313,314,316,319,325,329,331,332,],[-3,5,-6,-7,-36,-35,-34,-10,-3,-14,-15,-16,-71,41,42,45,-13,46,-158,-11,-158,-158,-80,-54,-74,-76,-77,-72,88,103,-158,-80,-83,-82,-23,-22,-70,125,129,129,-21,-49,-162,129,171,129,177,178,129,-161,129,129,-158,129,-161,-161,-38,239,-161,-161,-161,-161,-161,-161,-161,-161,129,-80,129,-161,-161,129,-141,-80,129,129,129,129,129,129,129,129,129,-80,129,129,129,239,129,171,-84,-161,-158,-158,-106,-109,-80,129,-80,-80,-86,129,-108,]),'IF':([8,11,18,21,23,24,53,59,61,63,68,69,70,72,74,78,82,84,86,90,95,97,104,116,176,217,234,253,295,301,302,311,313,314,319,325,329,332,],[-6,-7,-36,-35,-34,-10,-158,-158,-158,-80,-74,-76,-77,-72,-107,-158,-80,-83,-82,-23,-22,118,-70,-21,-158,-80,-80,-80,-84,-158,-158,-106,-109,-80,-80,-80,-86,-108,]),'AND':([126,128,129,130,131,132,133,134,135,137,141,144,155,156,158,165,166,170,182,183,184,186,187,191,192,211,212,220,222,223,224,225,226,229,251,260,265,270,271,279,280,281,282,283,284,290,291,292,294,306,307,328,],[-156,-154,-160,-136,-166,-157,-138,-137,-155,-165,-168,-126,-158,-131,-158,-96,200,-158,-143,-142,-145,-144,-158,-132,-135,-125,-167,-163,-140,-152,-153,-151,-127,-130,-118,-139,-134,-138,-165,-123,-121,-120,-124,-122,-119,-158,-128,-129,-133,-146,-149,-148,]),'CTES':([112,115,127,138,146,154,162,164,168,189,193,194,197,198,200,201,205,206,207,208,209,210,213,221,227,228,232,233,235,237,241,242,245,246,247,248,249,250,262,263,266,272,275,297,316,331,],[130,130,-162,130,130,130,-161,130,130,130,-161,-161,-38,-47,-161,-161,-161,-161,-161,-161,-161,-161,130,130,-161,-161,130,-141,130,273,130,130,130,130,130,130,130,130,130,130,130,-47,130,-161,130,130,]),'FALSE':([112,115,127,138,146,154,162,164,168,189,193,194,197,198,200,201,205,206,207,208,209,210,213,221,227,228,232,233,235,241,242,245,246,247,248,249,250,262,263,266,272,275,297,316,331,],[132,132,-162,132,132,132,-161,132,132,132,-161,-161,-38,132,-161,-161,-161,-161,-161,-161,-161,-161,132,132,-161,-161,132,-141,132,132,132,132,132,132,132,132,132,132,132,132,132,132,-161,132,132,]),'STRUCT':([13,22,59,61,78,],[-73,35,-73,-73,-73,]),'INT':([13,19,31,42,58,59,61,76,78,79,101,216,315,],[-3,-17,39,-17,-17,-3,-3,-3,-3,-17,-17,-17,-3,]),'EQ':([126,128,129,130,131,132,133,134,135,137,144,155,156,158,165,170,182,183,184,186,187,191,192,220,222,223,224,225,226,229,260,265,270,271,290,291,292,294,306,307,328,],[-156,-154,-160,-136,-166,-157,-138,-137,-155,-165,-126,-158,-131,-158,-96,210,-143,-142,-145,-144,-158,-132,-135,-163,-140,-152,-153,-151,-127,-130,-139,-134,-138,-165,-158,-128,-129,-133,-146,-149,-148,]),'FLOAT':([13,19,42,58,59,61,76,78,79,101,216,315,],[-3,29,29,29,-3,-3,-3,-3,29,29,29,-3,]),'OR':([126,128,129,130,131,132,133,134,135,137,141,144,155,156,158,165,166,170,182,183,184,186,187,191,192,211,212,220,222,223,224,225,226,229,251,260,265,270,271,279,280,281,282,283,284,290,291,292,294,306,307,328,],[-156,-154,-160,-136,-166,-157,-138,-137,-155,-165,-168,-126,-158,-131,-158,-96,201,-158,-143,-142,-145,-144,-158,-132,-135,-125,-167,-163,-140,-152,-153,-151,-127,-130,-118,-139,-134,-138,-165,-123,-121,-120,-124,-122,-119,-158,-128,-129,-133,-146,-149,-148,]),'DICT':([13,20,42,59,61,78,],[-75,34,51,-75,-75,-75,]),'CTED':([60,107,112,115,127,138,146,154,162,164,168,189,193,194,197,198,200,201,205,206,207,208,209,210,213,221,227,228,232,233,235,241,242,245,246,247,248,249,250,262,263,266,272,275,297,316,331,],[71,124,128,128,-162,128,128,128,-161,128,128,128,-161,-161,-38,128,-161,-161,-161,-161,-161,-161,-161,-161,128,128,-161,-161,128,-141,128,128,128,128,128,128,128,128,128,128,128,128,128,128,-161,128,128,]),'GTOEQ':([126,128,129,130,131,132,133,134,135,137,144,155,156,158,165,170,182,183,184,186,187,191,192,220,222,223,224,225,226,229,260,265,270,271,290,291,292,294,306,307,328,],[-156,-154,-160,-136,-166,-157,-138,-137,-155,-165,-126,-158,-131,-158,-96,209,-143,-142,-145,-144,-158,-132,-135,-163,-140,-152,-153,-151,-127,-130,-139,-134,-138,-165,-158,-128,-129,-133,-146,-149,-148,]),'{':([5,6,29,30,32,37,39,44,119,147,195,214,255,287,310,320,],[-4,7,-14,-15,-16,-19,-13,53,-63,176,234,253,-68,302,319,325,]),'MAIN':([7,8,9,11,12,14,15,16,18,21,23,24,26,27,59,61,68,69,70,72,78,104,215,254,],[-158,-6,-2,-7,-158,-20,-9,-158,-36,-35,-34,-10,37,-8,-158,-158,-74,-76,-77,-72,-158,-70,-58,-56,]),'}':([8,11,18,21,23,24,25,53,59,61,63,68,69,70,72,73,75,78,81,82,84,86,90,94,95,104,109,110,116,174,176,217,234,253,256,267,286,295,301,311,313,319,324,325,326,329,330,332,334,],[-6,-7,-36,-35,-34,-10,36,-158,-158,-158,-158,-74,-76,-77,-72,81,-79,-158,-58,-158,-83,-82,-23,-78,-22,-70,-18,-81,-21,215,-158,-158,-158,-158,-67,295,301,-84,-158,-106,-109,-158,329,-158,-66,-86,332,-108,-59,]),'CTEF':([112,115,127,138,146,154,162,164,168,189,193,194,197,198,200,201,205,206,207,208,209,210,213,221,227,228,232,233,235,241,242,245,246,247,248,249,250,262,263,266,272,275,297,316,331,],[135,135,-162,135,135,135,-161,135,135,135,-161,-161,-38,135,-161,-161,-161,-161,-161,-161,-161,-161,135,135,-161,-161,135,-141,135,135,135,135,135,135,135,135,135,135,135,135,135,135,-161,135,135,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vars':([7,53,176,302,],[8,8,8,8,]),'errorOpSExp':([144,],[170,]),'errorMain':([14,],[26,]),'errorCyExp':([156,],[187,]),'opParamCall':([115,],[140,]),'cyTypeParam':([46,103,177,],[57,122,218,]),'takeFondo':([220,],[260,]),'forCycle':([74,],[86,]),'structType':([42,],[49,]),'changeCurrentScope':([9,],[12,]),'struct':([42,],[50,]),'param':([76,315,],[100,322,]),'init':([139,274,],[163,298,]),'program':([0,],[1,]),'dict':([41,51,],[48,62,]),'opMatrix':([290,],[306,]),'errorExpresion':([202,],[243,]),'main':([14,],[25,]),'return':([321,],[326,]),'errorParam':([121,],[149,]),'read':([74,],[91,]),'errorReturn':([321,],[327,]),'assignOptions':([139,],[161,]),'flagParameters':([54,119,],[64,147,]),'cyRead':([125,178,],[152,219,]),'basicDeclare':([13,59,61,78,],[23,23,23,23,]),'cyInstruction':([74,],[94,]),'condition':([74,],[95,]),'expresion':([115,138,146,154,164,168,213,221,235,241,242,275,316,331,],[143,159,173,180,199,204,252,261,269,277,278,299,323,333,]),'term':([112,115,138,146,154,164,168,189,213,221,232,235,241,242,245,246,247,248,249,250,262,263,266,275,316,331,],[131,131,131,131,131,131,131,131,131,131,265,131,131,131,131,131,131,131,131,131,131,131,294,131,131,131,]),'funcCall':([74,112,115,138,146,154,164,168,189,213,221,232,235,241,242,245,246,247,248,249,250,262,263,266,275,316,331,],[96,133,133,133,133,133,133,133,133,133,133,133,270,133,133,133,133,133,133,133,133,133,133,133,133,133,133,]),'initDict':([139,],[160,]),'saveTypeParam':([65,288,289,],[77,303,304,]),'dictDeclare':([13,59,61,78,],[18,18,18,18,]),'saveMain':([37,],[44,]),'errorVars':([7,53,176,302,],[10,10,10,10,]),'whileCycle':([74,],[84,]),'errorDictDeclare':([13,59,61,78,],[20,20,20,20,]),'performAndOr':([141,],[166,]),'opFunctions':([12,16,],[14,27,]),'errorOpStruct':([155,],[181,]),'saveVariable':([88,129,171,],[114,155,114,]),'opVars':([7,53,176,302,],[9,63,217,314,]),'saveOperator':([162,193,194,200,201,205,206,207,208,209,210,227,228,297,],[197,232,233,241,242,245,246,247,248,249,250,262,263,197,]),'errorInit':([197,],[235,]),'performAssign':([161,],[196,]),'cyExpresion':([166,],[202,]),'print':([74,],[89,]),'body':([63,82,217,234,253,314,319,325,],[73,110,256,267,286,321,324,330,]),'errorOpParameters':([120,],[148,]),'printTables':([36,],[43,]),'saveParamToDirProc':([100,],[120,]),'saveReturnType':([255,],[287,]),'opParameters':([76,],[99,]),'errorCondition':([74,],[97,]),'cte':([112,115,138,146,154,164,168,189,198,213,221,232,235,241,242,245,246,247,248,249,250,262,263,266,272,275,316,331,],[134,134,134,134,134,134,134,134,238,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,238,134,134,134,]),'saveProc':([5,45,],[6,54,]),'assign':([74,145,285,],[98,172,300,]),'errorStructDeclare':([13,59,61,78,],[22,22,22,22,]),'cyExp':([187,],[226,]),'instr':([74,],[82,]),'errorFact':([233,],[266,]),'errorProgram':([0,],[2,]),'cyTerm':([158,],[191,]),'errorAssignMatrix':([309,],[318,]),'cyDeclare':([59,61,78,],[68,72,104,]),'errorBody':([63,82,217,234,253,314,319,325,],[74,74,74,74,74,74,74,74,]),'opStruct':([155,],[183,]),'errorOpAccess':([184,],[222,]),'type':([19,42,58,79,101,216,],[33,52,67,105,121,255,]),'dictIndex':([185,],[225,]),'empty':([7,12,16,46,53,59,61,63,76,78,80,82,103,115,125,143,155,157,158,166,170,176,177,178,187,204,217,218,234,240,253,264,290,301,302,314,319,325,],[11,15,15,56,11,70,70,75,102,70,108,75,56,142,153,169,186,190,192,203,211,11,56,153,229,169,75,257,75,276,75,190,307,313,11,75,75,75,]),'errorBasicDeclare':([33,],[40,]),'function':([12,16,],[16,16,]),'performMulDiv':([137,271,],[158,158,]),'errorOpMatrix':([290,],[305,]),'opDictionary':([155,],[182,]),'errorType':([19,42,58,79,101,216,],[31,31,31,31,31,31,]),'errorForCycle':([74,],[93,]),'opAccess':([155,],[184,]),'basicStatements':([74,],[92,]),'structDeclare':([13,59,61,78,],[21,21,21,21,]),'putFondo':([127,],[154,]),'errorAssign':([114,],[139,]),'cyParam':([218,],[259,]),'cyPrint':([157,264,],[188,293,]),'opSExp':([170,],[212,]),'errorOpReturns':([147,],[175,]),'performAddSub':([131,],[156,]),'cyParamCall':([143,204,],[167,244,]),'declare':([13,59,61,78,],[24,69,69,69,]),'optionalMatrix':([80,],[106,]),'performPrint':([136,231,],[157,264,]),'clearVarsTable':([81,215,],[109,254,]),'optionalElse':([301,],[311,]),'dictType':([198,272,],[236,296,]),'initWith':([235,],[268,]),'errorWhileCycle':([74,],[87,]),'sExp':([115,138,146,154,164,168,213,221,235,241,242,275,316,331,],[141,141,141,141,141,141,141,141,141,141,141,141,141,141,]),'errorElse':([301,],[312,]),'performRelational':([212,],[251,]),'errorCyParam':([218,],[258,]),'opReturns':([147,],[174,]),'errorDictType':([198,272,],[237,237,]),'assignMatrix':([240,],[274,]),'errorDict':([41,51,],[47,47,]),'errorInitDict':([308,],[317,]),'saveType':([3,13,28,59,61,76,78,315,],[4,19,38,19,19,101,19,101,]),'saveID':([55,57,257,258,],[65,66,288,289,]),'cycle':([74,],[90,]),'errorFunction':([12,16,],[17,17,]),'exp':([112,115,138,146,154,164,168,189,213,221,235,241,242,245,246,247,248,249,250,262,263,275,316,331,],[136,144,144,144,144,144,144,231,144,144,144,144,144,279,280,281,282,283,284,291,292,144,144,144,]),'fact':([112,115,138,146,154,164,168,189,213,221,232,235,241,242,245,246,247,248,249,250,262,263,266,275,316,331,],[137,137,137,137,137,137,137,137,137,137,137,271,137,137,137,137,137,137,137,137,137,137,137,137,137,137,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables','program',12,'p_program','CT.py',292),
  ('changeCurrentScope -> <empty>','changeCurrentScope',0,'p_changeCurrentScope','CT.py',296),
  ('saveType -> <empty>','saveType',0,'p_saveType','CT.py',301),
  ('saveProc -> <empty>','saveProc',0,'p_saveProc','CT.py',308),
  ('errorProgram -> <empty>','errorProgram',0,'p_errorProgram','CT.py',325),
  ('opVars -> vars','opVars',1,'p_opVars','CT.py',331),
  ('opVars -> empty','opVars',1,'p_opVars','CT.py',332),
  ('opFunctions -> function opFunctions','opFunctions',2,'p_opFunctions','CT.py',337),
  ('opFunctions -> empty','opFunctions',1,'p_opFunctions','CT.py',338),
  ('vars -> errorVars VARS declare','vars',3,'p_vars','CT.py',342),
  ('saveID -> <empty>','saveID',0,'p_saveID','CT.py',347),
  ('errorVars -> <empty>','errorVars',0,'p_errorVars','CT.py',375),
  ('type -> errorType INT','type',2,'p_type','CT.py',381),
  ('type -> FLOAT','type',1,'p_type','CT.py',382),
  ('type -> STRING','type',1,'p_type','CT.py',383),
  ('type -> BOOL','type',1,'p_type','CT.py',384),
  ('errorType -> <empty>','errorType',0,'p_errorType','CT.py',389),
  ('main -> errorMain MAIN saveMain { opVars body } clearVarsTable','main',8,'p_main','CT.py',395),
  ('saveMain -> <empty>','saveMain',0,'p_saveMain','CT.py',399),
  ('errorMain -> <empty>','errorMain',0,'p_errorMain','CT.py',407),
  ('instr -> basicStatements ;','instr',2,'p_instr','CT.py',413),
  ('instr -> condition','instr',1,'p_instr','CT.py',414),
  ('instr -> cycle','instr',1,'p_instr','CT.py',415),
  ('basicStatements -> assign','basicStatements',1,'p_basicStatements','CT.py',419),
  ('basicStatements -> funcCall','basicStatements',1,'p_basicStatements','CT.py',420),
  ('basicStatements -> print','basicStatements',1,'p_basicStatements','CT.py',421),
  ('basicStatements -> read','basicStatements',1,'p_basicStatements','CT.py',422),
  ('print -> PRINT PARINI exp performPrint cyPrint PARFIN','print',6,'p_print','CT.py',425),
  ('cyPrint -> , exp performPrint cyPrint','cyPrint',4,'p_cyPrint','CT.py',428),
  ('cyPrint -> empty','cyPrint',1,'p_cyPrint','CT.py',429),
  ('read -> READ PARINI ID cyRead PARFIN','read',5,'p_read','CT.py',432),
  ('cyRead -> , ID cyRead','cyRead',3,'p_cyRead','CT.py',435),
  ('cyRead -> empty','cyRead',1,'p_cyRead','CT.py',436),
  ('declare -> basicDeclare','declare',1,'p_declare','CT.py',439),
  ('declare -> structDeclare','declare',1,'p_declare','CT.py',440),
  ('declare -> dictDeclare','declare',1,'p_declare','CT.py',441),
  ('init -> ASGN saveOperator errorInit initWith','init',4,'p_init','CT.py',446),
  ('errorInit -> <empty>','errorInit',0,'p_errorInit','CT.py',450),
  ('initWith -> expresion','initWith',1,'p_initWith','CT.py',456),
  ('initWith -> fact','initWith',1,'p_initWith','CT.py',457),
  ('initWith -> funcCall','initWith',1,'p_initWith','CT.py',458),
  ('initDict -> ASGN PARINI dictType : dictType PARFIN errorInitDict','initDict',7,'p_initDict','CT.py',463),
  ('errorInitDict -> <empty>','errorInitDict',0,'p_errorInitDict','CT.py',468),
  ('dictType -> errorDictType CTES','dictType',2,'p_dictType','CT.py',474),
  ('dictType -> cte','dictType',1,'p_dictType','CT.py',475),
  ('dictType -> ID','dictType',1,'p_dictType','CT.py',476),
  ('errorDictType -> <empty>','errorDictType',0,'p_errorDictType','CT.py',481),
  ('param -> saveType type errorParam ID cyTypeParam cyParam','param',6,'p_param','CT.py',487),
  ('errorParam -> <empty>','errorParam',0,'p_errorParam','CT.py',492),
  ('cyParam -> errorCyParam saveID saveTypeParam ; param','cyParam',5,'p_cyParam','CT.py',498),
  ('cyParam -> empty saveID saveTypeParam','cyParam',3,'p_cyParam','CT.py',499),
  ('cyTypeParam -> , saveID saveTypeParam ID cyTypeParam','cyTypeParam',5,'p_cyTypeParam','CT.py',504),
  ('cyTypeParam -> empty','cyTypeParam',1,'p_cyTypeParam','CT.py',505),
  ('saveTypeParam -> <empty>','saveTypeParam',0,'p_saveTypeParam','CT.py',509),
  ('errorCyParam -> <empty>','errorCyParam',0,'p_errorCyParam','CT.py',519),
  ('function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable','function',13,'p_function','CT.py',525),
  ('errorFunction -> <empty>','errorFunction',0,'p_errorFunction','CT.py',529),
  ('clearVarsTable -> <empty>','clearVarsTable',0,'p_clearVarsTable','CT.py',534),
  ('return -> errorReturn RETURN expresion ;','return',4,'p_return','CT.py',539),
  ('errorReturn -> <empty>','errorReturn',0,'p_errorReturn','CT.py',544),
  ('opParameters -> param saveParamToDirProc errorOpParameters','opParameters',3,'p_opParameters','CT.py',550),
  ('opParameters -> empty','opParameters',1,'p_opParameters','CT.py',551),
  ('flagParameters -> <empty>','flagParameters',0,'p_flagParameters','CT.py',555),
  ('saveParamToDirProc -> <empty>','saveParamToDirProc',0,'p_saveParamToDirProc','CT.py',560),
  ('errorOpParameters -> <empty>','errorOpParameters',0,'p_errorOpParameters','CT.py',568),
  ('opReturns -> errorOpReturns RETURNS type saveReturnType { opVars body return','opReturns',8,'p_opReturns','CT.py',574),
  ('opReturns -> { opVars body','opReturns',3,'p_opReturns','CT.py',575),
  ('saveReturnType -> <empty>','saveReturnType',0,'p_saveReturnType','CT.py',580),
  ('errorOpReturns -> <empty>','errorOpReturns',0,'p_errorOpReturns','CT.py',586),
  ('basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare','basicDeclare',8,'p_basicDeclare','CT.py',592),
  ('errorBasicDeclare -> <empty>','errorBasicDeclare',0,'p_errorBasicDeclare','CT.py',597),
  ('structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare','structDeclare',6,'p_structDeclare','CT.py',603),
  ('errorStructDeclare -> <empty>','errorStructDeclare',0,'p_errorStructDeclare','CT.py',608),
  ('dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare','dictDeclare',6,'p_dictDeclare','CT.py',614),
  ('errorDictDeclare -> <empty>','errorDictDeclare',0,'p_errorDictDeclare','CT.py',619),
  ('cyDeclare -> declare','cyDeclare',1,'p_cyDeclare','CT.py',625),
  ('cyDeclare -> empty','cyDeclare',1,'p_cyDeclare','CT.py',626),
  ('body -> errorBody cyInstruction','body',2,'p_body','CT.py',631),
  ('body -> empty','body',1,'p_body','CT.py',632),
  ('errorBody -> <empty>','errorBody',0,'p_errorBody','CT.py',637),
  ('cyInstruction -> instr body','cyInstruction',2,'p_cyInstruction','CT.py',643),
  ('cycle -> forCycle','cycle',1,'p_cycle','CT.py',648),
  ('cycle -> whileCycle','cycle',1,'p_cycle','CT.py',649),
  ('whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body }','whileCycle',8,'p_whileCycle','CT.py',654),
  ('errorWhileCycle -> <empty>','errorWhileCycle',0,'p_errorWhileCycle','CT.py',659),
  ('forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body }','forCycle',12,'p_forCycle','CT.py',665),
  ('errorForCycle -> <empty>','errorForCycle',0,'p_errorForCycle','CT.py',670),
  ('assign -> ID saveVariable errorAssign assignOptions performAssign','assign',5,'p_assign','CT.py',676),
  ('errorAssign -> <empty>','errorAssign',0,'p_errorAssign','CT.py',681),
  ('assignOptions -> init','assignOptions',1,'p_assignOptions','CT.py',687),
  ('assignOptions -> initDict','assignOptions',1,'p_assignOptions','CT.py',688),
  ('assignOptions -> [ expresion ] assignMatrix init','assignOptions',5,'p_assignOptions','CT.py',689),
  ('assignMatrix -> [ expresion ] errorAssignMatrix','assignMatrix',4,'p_assignMatrix','CT.py',694),
  ('assignMatrix -> empty','assignMatrix',1,'p_assignMatrix','CT.py',695),
  ('errorAssignMatrix -> <empty>','errorAssignMatrix',0,'p_errorAssignMatrix','CT.py',700),
  ('funcCall -> ID PARINI opParamCall PARFIN','funcCall',4,'p_funcCall','CT.py',706),
  ('opParamCall -> expresion cyParamCall','opParamCall',2,'p_opParamCall','CT.py',711),
  ('opParamCall -> empty','opParamCall',1,'p_opParamCall','CT.py',712),
  ('cyParamCall -> , expresion cyParamCall','cyParamCall',3,'p_cyParamCall','CT.py',717),
  ('cyParamCall -> empty','cyParamCall',1,'p_cyParamCall','CT.py',718),
  ('struct -> structType [ CTED ] optionalMatrix','struct',5,'p_struct','CT.py',723),
  ('structType -> type','structType',1,'p_structType','CT.py',728),
  ('structType -> DICT dict','structType',2,'p_structType','CT.py',729),
  ('optionalMatrix -> [ CTED ]','optionalMatrix',3,'p_optionalMatrix','CT.py',734),
  ('optionalMatrix -> empty','optionalMatrix',1,'p_optionalMatrix','CT.py',735),
  ('condition -> errorCondition IF PARINI expresion PARFIN { body } optionalElse','condition',9,'p_condition','CT.py',740),
  ('errorCondition -> <empty>','errorCondition',0,'p_errorCondition','CT.py',745),
  ('optionalElse -> errorElse ELSE { body }','optionalElse',5,'p_optionalElse','CT.py',751),
  ('optionalElse -> empty','optionalElse',1,'p_optionalElse','CT.py',752),
  ('errorElse -> <empty>','errorElse',0,'p_errorElse','CT.py',757),
  ('dict -> errorDict PARINI type : type PARFIN','dict',6,'p_dict','CT.py',763),
  ('errorDict -> <empty>','errorDict',0,'p_errorDict','CT.py',768),
  ('expresion -> sExp performAndOr cyExpresion errorExpresion','expresion',4,'p_expresion','CT.py',774),
  ('errorExpresion -> <empty>','errorExpresion',0,'p_errorExpresion','CT.py',780),
  ('cyExpresion -> AND saveOperator expresion','cyExpresion',3,'p_cyExpresion','CT.py',786),
  ('cyExpresion -> OR saveOperator expresion','cyExpresion',3,'p_cyExpresion','CT.py',787),
  ('cyExpresion -> empty','cyExpresion',1,'p_cyExpresion','CT.py',788),
  ('sExp -> exp errorOpSExp opSExp performRelational','sExp',4,'p_sExp','CT.py',793),
  ('opSExp -> EQ saveOperator exp','opSExp',3,'p_opSExp','CT.py',798),
  ('opSExp -> DIF saveOperator exp','opSExp',3,'p_opSExp','CT.py',799),
  ('opSExp -> LTOEQ saveOperator exp','opSExp',3,'p_opSExp','CT.py',800),
  ('opSExp -> GTOEQ saveOperator exp','opSExp',3,'p_opSExp','CT.py',801),
  ('opSExp -> GT saveOperator exp','opSExp',3,'p_opSExp','CT.py',802),
  ('opSExp -> LT saveOperator exp','opSExp',3,'p_opSExp','CT.py',803),
  ('opSExp -> empty','opSExp',1,'p_opSExp','CT.py',804),
  ('errorOpSExp -> <empty>','errorOpSExp',0,'p_errorOpSExp','CT.py',808),
  ('exp -> term performAddSub errorCyExp cyExp','exp',4,'p_exp','CT.py',814),
  ('cyExp -> PLUS saveOperator exp','cyExp',3,'p_cyExp','CT.py',819),
  ('cyExp -> MINUS saveOperator exp','cyExp',3,'p_cyExp','CT.py',820),
  ('cyExp -> empty','cyExp',1,'p_cyExp','CT.py',821),
  ('errorCyExp -> <empty>','errorCyExp',0,'p_errorCyExp','CT.py',826),
  ('term -> fact performMulDiv cyTerm','term',3,'p_term','CT.py',831),
  ('cyTerm -> MULT saveOperator errorFact term','cyTerm',4,'p_cyTerm','CT.py',836),
  ('cyTerm -> DIV saveOperator term','cyTerm',3,'p_cyTerm','CT.py',837),
  ('cyTerm -> empty','cyTerm',1,'p_cyTerm','CT.py',838),
  ('fact -> CTES','fact',1,'p_fact','CT.py',843),
  ('fact -> cte','fact',1,'p_fact','CT.py',844),
  ('fact -> funcCall','fact',1,'p_fact','CT.py',845),
  ('fact -> PARINI putFondo expresion PARFIN takeFondo','fact',5,'p_fact','CT.py',846),
  ('fact -> ID saveVariable opAccess errorOpAccess','fact',4,'p_fact','CT.py',847),
  ('errorFact -> <empty>','errorFact',0,'p_errorFact','CT.py',852),
  ('opAccess -> opStruct','opAccess',1,'p_opAccess','CT.py',858),
  ('opAccess -> opDictionary','opAccess',1,'p_opAccess','CT.py',859),
  ('opAccess -> empty','opAccess',1,'p_opAccess','CT.py',860),
  ('errorOpAccess -> <empty>','errorOpAccess',0,'p_errorOpAccess','CT.py',865),
  ('opStruct -> errorOpStruct [ expresion ] opMatrix','opStruct',5,'p_opStruct','CT.py',870),
  ('errorOpStruct -> <empty>','errorOpStruct',0,'p_errorOpStruct','CT.py',875),
  ('opMatrix -> errorOpMatrix [ expresion ]','opMatrix',4,'p_opMatrix','CT.py',881),
  ('opMatrix -> empty','opMatrix',1,'p_opMatrix','CT.py',882),
  ('errorOpMatrix -> <empty>','errorOpMatrix',0,'p_errorOpMatrix','CT.py',887),
  ('opDictionary -> . dictIndex','opDictionary',2,'p_opDictionary','CT.py',893),
  ('dictIndex -> FIRST','dictIndex',1,'p_dictIndex','CT.py',898),
  ('dictIndex -> LAST','dictIndex',1,'p_dictIndex','CT.py',899),
  ('cte -> CTED','cte',1,'p_cte','CT.py',904),
  ('cte -> CTEF','cte',1,'p_cte','CT.py',905),
  ('cte -> TRUE','cte',1,'p_cte','CT.py',906),
  ('cte -> FALSE','cte',1,'p_cte','CT.py',907),
  ('empty -> <empty>','empty',0,'p_empty','CT.py',911),
  ('printTables -> <empty>','printTables',0,'p_printTables','CT.py',916),
  ('saveVariable -> <empty>','saveVariable',0,'p_saveVariable','CT.py',929),
  ('saveOperator -> <empty>','saveOperator',0,'p_saveOperator','CT.py',952),
  ('putFondo -> <empty>','putFondo',0,'p_putFondo','CT.py',982),
  ('takeFondo -> <empty>','takeFondo',0,'p_takeFondo','CT.py',987),
  ('performAssign -> <empty>','performAssign',0,'p_performAssign','CT.py',994),
  ('performMulDiv -> <empty>','performMulDiv',0,'p_performMulDiv','CT.py',1015),
  ('performAddSub -> <empty>','performAddSub',0,'p_performAddSub','CT.py',1036),
  ('performRelational -> <empty>','performRelational',0,'p_performRelational','CT.py',1057),
  ('performAndOr -> <empty>','performAndOr',0,'p_performAndOr','CT.py',1078),
  ('performPrint -> <empty>','performPrint',0,'p_performPrint','CT.py',1099),
]
