
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '5DB94FC963A51B863C288CFE47E393F6'
    
_lr_action_items = {'RETURN':([8,11,18,21,23,24,53,62,64,65,66,72,77,83,88,97,99,101,105,109,110,119,125,302,325,337,338,342,347,349,350,355,360,363,382,386,387,],[-6,-7,-38,-37,-36,-10,-181,-181,-76,-80,-81,-78,-181,-74,-83,-181,-87,-86,-24,-82,-23,-85,-22,-181,-71,-181,-181,-89,-183,-127,-63,-88,-124,369,-126,-96,-92,]),'VARS':([7,10,67,154,302,],[-12,13,-12,-12,-12,]),'READ':([8,11,18,21,23,24,53,62,64,65,66,67,72,74,77,80,83,87,97,99,101,105,110,125,154,185,218,301,302,311,325,337,338,342,347,349,355,360,373,377,381,382,386,387,],[-6,-7,-38,-37,-36,-10,-181,-181,-76,-80,-81,-181,-78,-19,-181,-84,-74,98,-84,-87,-86,-24,-23,-22,-181,-71,-84,-84,-181,-84,-71,-181,-84,-89,-183,-127,-88,-124,-84,-95,-84,-126,-96,-92,]),'RES':([135,137,138,139,141,142,143,144,146,159,161,162,163,165,166,168,191,192,193,195,210,226,228,229,230,231,248,273,284,286,341,353,354,365,384,],[-188,-186,-190,-189,-188,-157,-156,-187,-195,-179,-177,-181,-155,-180,-178,200,-162,-161,-164,-163,-107,-193,-159,-175,-176,-174,-106,-158,-190,-157,-181,-166,-171,-165,-170,]),'DIF':([135,137,138,139,140,141,142,143,144,146,159,161,162,163,164,165,166,168,179,191,192,193,195,196,201,202,210,213,226,228,229,230,231,232,235,248,273,278,279,284,286,307,308,310,341,353,354,365,384,],[-188,-186,-190,-189,-196,-188,-157,-156,-187,-195,-179,-177,-181,-155,-149,-180,-178,-181,-144,-162,-161,-164,-163,-181,-150,-154,-107,258,-193,-159,-175,-176,-174,-145,-148,-106,-158,-153,-152,-190,-157,-146,-147,-151,-181,-166,-171,-165,-170,]),'WHILE':([8,11,18,21,23,24,53,62,64,65,66,67,72,74,77,80,83,87,97,99,101,102,105,110,125,154,185,218,301,302,311,325,337,338,342,347,349,355,360,373,377,381,382,386,387,],[-6,-7,-38,-37,-36,-10,-181,-181,-76,-80,-81,-181,-78,-19,-181,-84,-74,-91,-84,-87,-86,122,-24,-23,-22,-181,-71,-84,-84,-181,-84,-71,-181,-84,-89,-183,-127,-88,-124,-84,-95,-84,-126,-96,-92,]),'PROGRAM':([0,2,],[-5,3,]),'PRINT':([8,11,18,21,23,24,53,62,64,65,66,67,72,74,77,80,83,87,97,99,101,105,110,125,154,185,218,301,302,311,325,337,338,342,347,349,355,360,373,377,381,382,386,387,],[-6,-7,-38,-37,-36,-10,-181,-181,-76,-80,-81,-181,-78,-19,-181,-84,-74,100,-84,-87,-86,-24,-23,-22,-181,-71,-84,-84,-181,-84,-71,-181,-84,-89,-183,-127,-88,-124,-84,-95,-84,-126,-96,-92,]),'PARINI':([41,44,50,57,68,75,98,100,103,121,122,124,126,127,136,138,147,149,151,160,169,171,198,200,203,204,206,207,214,233,234,237,238,239,240,243,249,250,255,256,257,258,259,260,261,264,274,275,276,280,284,289,290,293,294,295,296,297,298,344,356,369,370,],[-130,-130,61,-4,-66,81,120,121,-108,136,-90,149,150,151,-192,-108,169,136,136,136,136,208,-35,-191,-191,-191,136,-40,-90,-191,-191,136,136,136,-160,136,-191,-191,136,-191,-191,-191,-191,-191,-191,136,136,136,136,136,-108,136,136,136,136,136,136,136,136,136,-191,136,136,]),'DIV':([135,137,138,139,141,142,143,144,146,159,161,162,163,165,166,168,191,192,193,195,210,226,228,229,230,231,248,273,284,286,341,353,354,365,384,],[-188,-186,-190,-189,-188,-157,-156,-187,-195,-179,-177,-181,-155,-180,-178,203,-162,-161,-164,-163,-107,-193,-159,-175,-176,-174,-106,-158,-190,-157,-181,-166,-171,-165,-170,]),'.':([138,162,284,],[-190,194,-190,]),'TRUE':([121,136,149,151,160,169,171,198,200,203,204,206,207,208,214,233,234,237,238,239,240,243,249,250,255,256,257,258,259,260,261,264,274,275,276,280,287,289,290,293,294,295,296,297,298,344,356,369,370,],[135,-192,135,135,135,135,-191,-35,-191,-191,-191,135,-40,135,-90,-191,-191,135,135,135,-160,135,-191,-191,135,-191,-191,-191,-191,-191,-191,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,-191,135,135,]),'[':([52,63,73,103,117,123,132,138,148,162,170,180,190,227,284,312,332,341,352,364,],[-11,-117,79,-190,-123,-99,157,-190,-168,-169,206,-190,-168,274,-190,-172,344,-173,-172,370,]),'MULT':([135,137,138,139,141,142,143,144,146,159,161,162,163,165,166,168,191,192,193,195,210,226,228,229,230,231,248,273,284,286,341,353,354,365,384,],[-188,-186,-190,-189,-188,-157,-156,-187,-195,-179,-177,-181,-155,-180,-178,204,-162,-161,-164,-163,-107,-193,-159,-175,-176,-174,-106,-158,-190,-157,-181,-166,-171,-165,-170,]),'LAST':([194,],[230,]),'MINUS':([135,137,138,139,140,141,142,143,144,146,159,161,162,163,164,165,166,168,191,192,193,195,196,201,202,210,226,228,229,230,231,248,273,278,279,284,286,310,341,353,354,365,384,],[-188,-186,-190,-189,-196,-188,-157,-156,-187,-195,-179,-177,-181,-155,-149,-180,-178,-181,-162,-161,-164,-163,234,-150,-154,-107,-193,-159,-175,-176,-174,-106,-158,-153,-152,-190,-157,-151,-181,-166,-171,-165,-170,]),'LTOEQ':([135,137,138,139,140,141,142,143,144,146,159,161,162,163,164,165,166,168,179,191,192,193,195,196,201,202,210,213,226,228,229,230,231,232,235,248,273,278,279,284,286,307,308,310,341,353,354,365,384,],[-188,-186,-190,-189,-196,-188,-157,-156,-187,-195,-179,-177,-181,-155,-149,-180,-178,-181,-144,-162,-161,-164,-163,-181,-150,-154,-107,257,-193,-159,-175,-176,-174,-145,-148,-106,-158,-153,-152,-190,-157,-146,-147,-151,-181,-166,-171,-165,-170,]),',':([49,82,134,135,137,138,139,140,141,142,143,144,145,146,155,158,159,161,162,163,164,165,166,167,168,176,178,179,188,191,192,193,195,196,201,202,210,211,212,213,226,228,229,230,231,232,235,248,251,252,262,263,273,277,278,279,291,292,299,305,307,308,309,310,314,315,316,317,318,319,320,321,322,327,340,341,353,354,365,384,],[58,58,-190,-188,-186,-190,-189,-196,-188,-157,-156,-187,-199,-195,58,-200,-179,-177,-181,-155,-149,-180,-178,198,-181,-198,-113,-144,223,-162,-161,-164,-163,-181,-150,-154,-107,-181,255,-181,-193,-159,-175,-176,-174,-145,-148,-106,-132,-135,-143,-197,-158,-199,-153,-152,-131,-113,-136,-190,-146,-147,198,-151,-133,-134,255,-141,-139,-138,-142,-140,-137,-200,223,-181,-166,-171,-165,-170,]),'ASGN':([103,123,148,180,312,331,333,343,371,376,],[-190,-99,171,-190,-181,-166,-104,356,-105,-103,]),'FIRST':([194,],[229,]),'LT':([135,137,138,139,140,141,142,143,144,146,159,161,162,163,164,165,166,168,179,191,192,193,195,196,201,202,210,213,226,228,229,230,231,232,235,248,273,278,279,284,286,307,308,310,341,353,354,365,384,],[-188,-186,-190,-189,-196,-188,-157,-156,-187,-195,-179,-177,-181,-155,-149,-180,-178,-181,-144,-162,-161,-164,-163,-181,-150,-154,-107,259,-193,-159,-175,-176,-174,-145,-148,-106,-158,-153,-152,-190,-157,-146,-147,-151,-181,-166,-171,-165,-170,]),'PLUS':([135,137,138,139,140,141,142,143,144,146,159,161,162,163,164,165,166,168,191,192,193,195,196,201,202,210,226,228,229,230,231,248,273,278,279,284,286,310,341,353,354,365,384,],[-188,-186,-190,-189,-196,-188,-157,-156,-187,-195,-179,-177,-181,-155,-149,-180,-178,-181,-162,-161,-164,-163,233,-150,-154,-107,-193,-159,-175,-176,-174,-106,-158,-153,-152,-190,-157,-151,-181,-166,-171,-165,-170,]),'BOOL':([13,19,35,45,53,61,62,77,78,81,91,184,326,],[-3,32,-3,32,-3,32,-3,-3,32,-3,32,32,-3,]),';':([43,49,51,59,60,70,82,93,94,104,106,107,111,113,117,131,133,135,137,138,139,140,141,142,143,144,146,155,156,159,161,162,163,164,165,166,168,172,173,174,176,179,181,186,191,192,193,195,196,201,202,209,210,211,213,220,226,228,229,230,231,232,235,236,248,251,252,262,263,269,270,272,273,278,279,283,284,285,286,291,299,300,304,307,308,310,314,315,317,318,319,320,321,322,323,334,341,345,353,354,357,365,374,379,384,],[53,-181,62,-54,-11,77,-181,-53,-129,-27,-28,125,-26,-25,-181,-115,-121,-188,-186,-190,-189,-196,-188,-157,-156,-187,-195,-181,-114,-179,-177,-181,-155,-149,-180,-178,-181,-100,-194,-101,-198,-144,214,-56,-162,-161,-164,-163,-181,-150,-154,-98,-107,-181,-181,-55,-193,-159,-175,-176,-174,-145,-148,-29,-106,-132,-135,-143,-197,-11,-120,-32,-158,-153,-152,-39,-190,-41,-42,-131,-136,-184,326,-146,-147,-151,-133,-134,-141,-139,-138,-142,-140,-137,336,-44,-181,-43,-166,-171,-102,-165,-62,383,-170,]),':':([29,30,32,39,71,135,137,141,144,159,161,165,166,244,246,247,288,],[-14,-15,-16,-13,78,-188,-186,-188,-187,-179,-177,-180,-178,287,-46,-47,-45,]),'$end':([1,36,46,],[0,-182,-1,]),'GT':([135,137,138,139,140,141,142,143,144,146,159,161,162,163,164,165,166,168,179,191,192,193,195,196,201,202,210,213,226,228,229,230,231,232,235,248,273,278,279,284,286,307,308,310,341,353,354,365,384,],[-188,-186,-190,-189,-196,-188,-157,-156,-187,-195,-179,-177,-181,-155,-149,-180,-178,-181,-144,-162,-161,-164,-163,-181,-150,-154,-107,256,-193,-159,-175,-176,-174,-145,-148,-106,-158,-153,-152,-190,-157,-146,-147,-151,-181,-166,-171,-165,-170,]),'STRING':([13,19,35,45,53,61,62,77,78,81,91,184,326,],[-3,30,-3,30,-3,30,-3,-3,30,-3,30,30,-3,]),'FOR':([8,11,18,21,23,24,53,62,64,65,66,67,72,74,77,80,83,87,97,99,101,105,108,110,125,154,185,218,301,302,311,325,337,338,342,347,349,355,360,373,377,381,382,386,387,],[-6,-7,-38,-37,-36,-10,-181,-181,-76,-80,-81,-181,-78,-19,-181,-84,-74,-97,-84,-87,-86,-24,126,-23,-22,-181,-71,-84,-84,-181,-84,-71,-181,-84,-89,-183,-127,-88,-124,-84,-95,-84,-126,-96,-92,]),'ELSE':([337,348,],[-128,361,]),'RETURNS':([114,128,153,],[-66,-73,184,]),'FUNC':([7,8,9,11,12,16,17,18,21,23,24,28,53,62,64,65,66,72,77,83,183,216,],[-181,-6,-2,-7,-59,-59,-58,-38,-37,-36,-10,38,-181,-181,-76,-80,-81,-78,-181,-74,-60,-57,]),'PARFIN':([29,30,32,39,59,81,82,84,89,90,92,93,115,129,134,135,137,138,139,140,141,142,143,144,145,146,149,155,158,159,161,162,163,164,165,166,167,168,172,173,174,175,176,177,178,179,182,186,188,189,191,192,193,195,196,197,199,201,202,205,209,210,211,212,213,219,221,224,225,226,228,229,230,231,232,235,246,247,248,251,252,253,254,262,263,268,273,277,278,279,283,284,285,286,288,291,292,299,303,305,307,308,309,310,313,314,315,316,317,318,319,320,321,322,327,329,334,335,339,340,341,345,351,353,354,357,359,365,367,384,],[-14,-15,-16,-13,-54,-181,-181,94,114,-67,-65,-53,-68,-64,-190,-188,-186,-190,-189,-196,-188,-157,-156,-187,-199,-195,-181,-181,-200,-179,-177,-181,-155,-149,-180,-178,-181,-181,-100,-194,-101,210,-198,-110,-113,-144,215,-181,-181,226,-162,-161,-164,-163,-181,236,-31,-150,-154,241,-98,-107,-181,-181,-181,-55,-49,272,-34,-193,-159,-175,-176,-174,-145,-148,-46,-47,-106,-132,-135,-109,-112,-143,-197,-11,-158,-199,-153,-152,-39,-190,-41,-42,-45,-131,-113,-136,-52,-190,-146,-147,-181,-151,334,-133,-134,-181,-141,-139,-138,-142,-140,-137,-200,-30,-44,-111,-51,-181,-181,-43,-33,-166,-171,-102,-94,-165,372,-170,]),']':([85,95,135,137,138,139,140,141,142,143,144,146,159,161,162,163,164,165,166,168,176,179,187,191,192,193,195,196,201,202,210,211,213,222,226,228,229,230,231,232,235,242,248,251,252,262,263,273,278,279,282,291,299,306,307,308,310,314,315,317,318,319,320,321,322,328,341,353,354,358,365,366,375,380,384,],[-116,117,-188,-186,-190,-189,-196,-188,-157,-156,-187,-195,-179,-177,-181,-155,-149,-180,-178,-181,-198,-144,-122,-162,-161,-164,-163,-181,-150,-154,-107,-181,-181,270,-193,-159,-175,-176,-174,-145,-148,-167,-106,-132,-135,-143,-197,-158,-153,-152,312,-131,-136,-167,-146,-147,-151,-133,-134,-141,-139,-138,-142,-140,-137,341,-181,-166,-171,-167,-165,371,-167,384,-170,]),'ID':([3,4,8,11,18,21,23,24,29,30,32,33,34,38,39,40,42,48,53,54,55,58,62,64,65,66,67,69,72,74,76,77,80,83,87,94,97,99,101,105,110,116,120,121,125,130,136,149,150,151,154,160,169,171,185,198,200,203,204,206,207,208,214,218,223,233,234,237,238,239,240,243,249,250,255,256,257,258,259,260,261,264,271,274,275,276,280,287,289,290,293,294,295,296,297,298,301,302,311,325,336,337,338,342,344,346,347,349,355,356,360,369,370,373,377,381,382,386,387,],[-3,5,-6,-7,-38,-37,-36,-10,-14,-15,-16,-75,41,-3,-13,49,52,57,-181,-119,-118,-55,-181,-76,-80,-81,-181,-11,-78,-19,82,-181,-84,-74,103,-129,-84,-87,-86,-24,-23,-50,134,138,-22,155,-192,138,180,138,-181,138,138,-191,-71,-35,-191,-191,-191,138,-40,247,-90,-84,-35,-191,-191,138,138,138,-160,284,-191,-191,138,-191,-191,-191,-191,-191,-191,138,305,138,138,138,138,247,138,138,138,138,138,138,138,138,-84,-181,-84,-71,-93,-181,-84,-89,138,180,-183,-127,-88,-191,-124,138,138,-84,-95,-84,-126,-96,-92,]),'IF':([8,11,18,21,23,24,53,62,64,65,66,67,72,74,77,80,83,87,97,99,101,105,110,112,125,154,185,218,301,302,311,325,337,338,342,347,349,355,360,373,377,381,382,386,387,],[-6,-7,-38,-37,-36,-10,-181,-181,-76,-80,-81,-181,-78,-19,-181,-84,-74,-125,-84,-87,-86,-24,-23,127,-22,-181,-71,-84,-84,-181,-84,-71,-181,-84,-89,-183,-127,-88,-124,-84,-95,-84,-126,-96,-92,]),'AND':([135,137,138,139,140,141,142,143,144,146,159,161,162,163,164,165,166,168,176,179,191,192,193,195,196,201,202,210,211,213,226,228,229,230,231,232,235,248,262,263,273,278,279,284,286,299,307,308,310,317,318,319,320,321,322,341,353,354,365,384,],[-188,-186,-190,-189,-196,-188,-157,-156,-187,-195,-179,-177,-181,-155,-149,-180,-178,-181,-198,-144,-162,-161,-164,-163,-181,-150,-154,-107,249,-181,-193,-159,-175,-176,-174,-145,-148,-106,-143,-197,-158,-153,-152,-190,-157,-136,-146,-147,-151,-141,-139,-138,-142,-140,-137,-181,-166,-171,-165,-170,]),'CTES':([121,136,149,151,160,169,171,198,200,203,204,206,207,208,214,233,234,237,238,239,240,243,245,249,250,255,256,257,258,259,260,261,264,274,275,276,280,287,289,290,293,294,295,296,297,298,344,356,369,370,],[139,-192,139,139,139,139,-191,-35,-191,-191,-191,139,-40,-48,-90,-191,-191,139,139,139,-160,139,288,-191,-191,139,-191,-191,-191,-191,-191,-191,139,139,139,139,139,-48,139,139,139,139,139,139,139,139,139,-191,139,139,]),'FALSE':([121,136,149,151,160,169,171,198,200,203,204,206,207,208,214,233,234,237,238,239,240,243,249,250,255,256,257,258,259,260,261,264,274,275,276,280,287,289,290,293,294,295,296,297,298,344,356,369,370,],[141,-192,141,141,141,141,-191,-35,-191,-191,-191,141,-40,141,-90,-191,-191,141,141,141,-160,141,-191,-191,141,-191,-191,-191,-191,-191,-191,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,-191,141,141,]),'STRUCT':([13,22,53,62,77,],[-77,35,-77,-77,-77,]),'INT':([13,19,31,35,45,53,61,62,77,78,81,91,184,326,],[-3,-17,39,-3,-17,-3,-17,-3,-3,-17,-3,-17,-17,-3,]),'EQ':([135,137,138,139,140,141,142,143,144,146,159,161,162,163,164,165,166,168,179,191,192,193,195,196,201,202,210,213,226,228,229,230,231,232,235,248,273,278,279,284,286,307,308,310,341,353,354,365,384,],[-188,-186,-190,-189,-196,-188,-157,-156,-187,-195,-179,-177,-181,-155,-149,-180,-178,-181,-144,-162,-161,-164,-163,-181,-150,-154,-107,261,-193,-159,-175,-176,-174,-145,-148,-106,-158,-153,-152,-190,-157,-146,-147,-151,-181,-166,-171,-165,-170,]),'FLOAT':([13,19,35,45,53,61,62,77,78,81,91,184,326,],[-3,29,-3,29,-3,29,-3,-3,29,-3,29,29,-3,]),'OR':([135,137,138,139,140,141,142,143,144,146,159,161,162,163,164,165,166,168,176,179,191,192,193,195,196,201,202,210,211,213,226,228,229,230,231,232,235,248,262,263,273,278,279,284,286,299,307,308,310,317,318,319,320,321,322,341,353,354,365,384,],[-188,-186,-190,-189,-196,-188,-157,-156,-187,-195,-179,-177,-181,-155,-149,-180,-178,-181,-198,-144,-162,-161,-164,-163,-181,-150,-154,-107,250,-181,-193,-159,-175,-176,-174,-145,-148,-106,-143,-197,-158,-153,-152,-190,-157,-136,-146,-147,-151,-141,-139,-138,-142,-140,-137,-181,-166,-171,-165,-170,]),'DICT':([13,20,35,53,62,77,],[-79,34,44,-79,-79,-79,]),'CTED':([79,121,136,149,151,157,160,169,171,198,200,203,204,206,207,208,214,233,234,237,238,239,240,243,249,250,255,256,257,258,259,260,261,264,274,275,276,280,287,289,290,293,294,295,296,297,298,344,356,369,370,],[85,137,-192,137,137,187,137,137,-191,-35,-191,-191,-191,137,-40,137,-90,-191,-191,137,137,137,-160,137,-191,-191,137,-191,-191,-191,-191,-191,-191,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,-191,137,137,]),'GTOEQ':([135,137,138,139,140,141,142,143,144,146,159,161,162,163,164,165,166,168,179,191,192,193,195,196,201,202,210,213,226,228,229,230,231,232,235,248,273,278,279,284,286,307,308,310,341,353,354,365,384,],[-188,-186,-190,-189,-196,-188,-157,-156,-187,-195,-179,-177,-181,-155,-149,-180,-178,-181,-144,-162,-161,-164,-163,-181,-150,-154,-107,260,-193,-159,-175,-176,-174,-145,-148,-106,-158,-153,-152,-190,-157,-146,-147,-151,-181,-166,-171,-165,-170,]),'{':([5,6,29,30,32,37,39,47,56,114,128,215,217,241,265,266,281,361,368,372,],[-4,7,-14,-15,-16,-58,-13,-20,67,-66,154,-184,-72,-184,301,302,311,-185,373,377,]),'MAIN':([7,8,9,11,12,14,15,16,18,21,23,24,26,27,53,62,64,65,66,72,77,83,183,216,],[-181,-6,-2,-7,-181,-21,-9,-181,-38,-37,-36,-10,37,-8,-181,-181,-76,-80,-81,-78,-181,-74,-60,-57,]),'}':([8,11,18,21,23,24,25,53,62,64,65,66,67,72,74,77,80,83,86,88,96,97,99,101,105,109,110,118,119,125,152,154,185,218,267,301,311,324,330,337,342,347,349,355,360,362,373,377,378,381,382,383,385,386,387,],[-6,-7,-38,-37,-36,-10,36,-181,-181,-76,-80,-81,-181,-78,-19,-181,-181,-74,96,-83,-60,-181,-87,-86,-24,-82,-23,-18,-85,-22,183,-181,-71,-181,-70,-181,-181,337,342,-181,-89,-183,-127,-88,-124,-69,-181,-95,382,-181,-126,-61,386,-96,-92,]),'CTEF':([121,136,149,151,160,169,171,198,200,203,204,206,207,208,214,233,234,237,238,239,240,243,249,250,255,256,257,258,259,260,261,264,274,275,276,280,287,289,290,293,294,295,296,297,298,344,356,369,370,],[144,-192,144,144,144,144,-191,-35,-191,-191,-191,144,-40,144,-90,-191,-191,144,144,144,-160,144,-191,-191,144,-191,-191,-191,-191,-191,-191,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,-191,144,144,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vars':([7,67,154,302,],[8,8,8,8,]),'errorOpSExp':([179,],[213,]),'errorMain':([14,],[26,]),'errorCyExp':([164,],[196,]),'opParamCall':([149,],[175,]),'cyTypeParam':([49,82,155,],[60,93,186,]),'saveReturnValue':([374,],[379,]),'takeFondo':([226,],[273,]),'forCycle':([87,],[101,]),'structType':([35,],[42,]),'changeCurrentScope':([9,],[12,]),'struct':([35,],[43,]),'secondLap':([131,],[156,]),'checkFunction':([103,138,284,],[124,124,124,]),'param':([81,326,],[90,339,]),'init':([148,343,],[172,357,]),'program':([0,],[1,]),'dict':([41,44,],[51,54,]),'opMatrix':([341,],[353,]),'errorExpresion':([251,],[291,]),'main':([14,],[25,]),'return':([350,],[362,]),'errorParam':([116,],[130,]),'read':([87,],[106,]),'errorReturn':([350,],[363,]),'assignOptions':([148,],[173,]),'saveDimensionSize':([85,],[95,]),'flagParameters':([68,114,],[75,128,]),'cyRead':([188,340,],[224,351,]),'basicDeclare':([13,53,62,77,],[23,23,23,23,]),'cyInstruction':([87,],[109,]),'condition':([87,],[110,]),'expresion':([149,151,160,169,206,243,255,264,274,289,290,344,369,370,],[178,182,189,205,242,285,292,300,306,314,315,358,374,375,]),'term':([121,149,151,160,169,206,237,238,239,243,255,264,274,275,276,280,289,290,293,294,295,296,297,298,344,369,370,],[140,140,140,140,140,140,140,278,279,140,140,140,140,140,140,310,140,140,140,140,140,140,140,140,140,140,140,]),'funcCall':([87,121,149,151,160,169,206,237,238,239,243,255,264,274,275,276,280,289,290,293,294,295,296,297,298,344,369,370,],[111,142,142,142,142,142,142,142,142,142,286,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,]),'initDict':([148,],[174,]),'saveCurrentTemps':([17,37,],[28,47,]),'returnFor':([359,],[367,]),'returnAssign':([386,],[387,]),'saveTypeParam':([58,219,220,],[69,268,269,]),'saltoBody':([336,],[346,]),'dictDeclare':([13,53,62,77,],[18,18,18,18,]),'saveMain':([47,],[56,]),'errorVars':([7,67,154,302,],[10,10,10,10,]),'generateInitialQuadruple':([74,],[80,]),'whileCycle':([87,],[99,]),'errorDictDeclare':([13,53,62,77,],[20,20,20,20,]),'performAndOr':([176,],[211,]),'opFunctions':([12,16,],[14,27,]),'errorOpStruct':([162,],[190,]),'saveVariable':([103,134,138,180,284,305,],[123,158,162,123,162,327,]),'opVars':([7,67,154,302,],[9,74,185,325,]),'saveOperator':([171,200,203,204,233,234,249,250,256,257,258,259,260,261,356,],[207,238,239,240,275,276,289,290,293,294,295,296,297,298,207,]),'errorInit':([207,],[243,]),'saveToDimensionStacks':([148,190,],[170,227,]),'performAssign':([173,],[209,]),'cyExpresion':([211,],[251,]),'performRead':([158,327,],[188,340,]),'print':([87,],[104,]),'body':([80,97,218,301,311,338,373,381,],[86,119,267,324,330,350,378,385,]),'saveSecondDimensionSize':([187,],[222,]),'errorOpParameters':([115,],[129,]),'repeatWhile':([342,],[355,]),'printTables':([36,],[46,]),'saveParamToDirProc':([90,],[115,]),'saveReturnType':([217,],[266,]),'opParameters':([81,],[89,]),'errorCondition':([87,],[112,]),'cte':([121,149,151,160,169,206,208,237,238,239,243,255,264,274,275,276,280,287,289,290,293,294,295,296,297,298,344,369,370,],[143,143,143,143,143,143,246,143,143,143,143,143,143,143,143,143,143,246,143,143,143,143,143,143,143,143,143,143,143,]),'saveProc':([5,57,],[6,68,]),'assign':([87,150,346,],[113,181,359,]),'errorStructDeclare':([13,53,62,77,],[22,22,22,22,]),'cyExp':([196,],[232,]),'fix':([198,223,],[237,271,]),'instr':([87,],[97,]),'errorFact':([240,],[280,]),'errorProgram':([0,],[2,]),'cyTerm':([168,],[201,]),'createSecondDimension':([117,],[132,]),'rellenaBody':([377,],[381,]),'errorAssignMatrix':([371,],[376,]),'errorElse':([337,],[348,]),'cyDeclare':([53,62,77,],[64,72,83,]),'errorBody':([80,97,218,301,311,338,373,381,],[87,87,87,87,87,87,87,87,]),'opStruct':([162,],[192,]),'errorOpAccess':([193,],[228,]),'checkNumParams':([210,],[248,]),'saveConstantBool':([135,141,],[159,165,]),'type':([19,45,61,78,91,184,],[33,55,71,84,116,217,]),'dictIndex':([194,],[231,]),'empty':([7,12,16,49,53,62,67,77,80,81,82,97,117,149,154,155,162,167,168,186,188,196,211,212,213,218,301,302,309,311,312,316,337,338,340,341,373,381,],[11,15,15,59,66,66,11,66,88,92,59,88,133,177,11,59,195,199,202,219,225,235,252,254,262,88,88,11,199,88,333,254,349,88,225,354,88,88,]),'errorBasicDeclare':([33,],[40,]),'function':([12,16,],[16,16,]),'performMulDiv':([146,],[168,]),'saveConstantString':([139,],[163,]),'checkParamType':([178,292,],[212,316,]),'opDictionary':([162,],[191,]),'errorType':([19,45,61,78,91,184,],[31,31,31,31,31,31,]),'errorForCycle':([87,],[108,]),'opAccess':([162,],[193,]),'basicStatements':([87,],[107,]),'structDeclare':([13,53,62,77,],[21,21,21,21,]),'verifyIndex':([242,306,358,375,],[282,328,366,380,]),'putFondo':([136,],[160,]),'errorAssign':([123,],[148,]),'saveReturn':([122,214,],[147,264,]),'cyParam':([186,],[221,]),'cyPrint':([167,309,],[197,329,]),'saveConstantFloat':([144,],[166,]),'errorOpReturns':([128,],[153,]),'performAddSub':([140,],[164,]),'cyParamCall':([212,316,],[253,335,]),'declare':([13,53,62,77,],[24,65,65,65,]),'saveQuadruple':([185,325,],[218,338,]),'opSExp':([213,],[263,]),'optionalMatrix':([117,],[131,]),'performPrint':([145,277,],[167,309,]),'saveFalso':([215,241,300,],[265,281,323,]),'clearVarsTable':([96,183,],[118,216,]),'optionalElse':([337,],[347,]),'errorOpMatrix':([341,],[352,]),'dictType':([208,287,],[244,313,]),'initWith':([243,],[283,]),'createDimension':([63,],[73,]),'saveConstantInt':([137,],[161,]),'errorWhileCycle':([87,],[102,]),'sExp':([149,151,160,169,206,243,255,264,274,289,290,344,369,370,],[176,176,176,176,176,176,176,176,176,176,176,176,176,176,]),'accessStruct':([331,353,],[343,365,]),'performRelational':([263,],[299,]),'errorCyParam':([186,],[220,]),'opReturns':([128,],[152,]),'errorDictType':([208,287,],[245,245,]),'assignMatrix':([312,],[331,]),'saveVerdadero':([361,],[368,]),'rellenaFalso':([347,],[360,]),'errorDict':([41,44,],[50,50,]),'errorInitDict':([334,],[345,]),'saveType':([3,13,35,38,53,62,77,81,326,],[4,19,45,48,19,19,19,91,91,]),'updateDimension':([312,352,],[332,364,]),'saveID':([52,60,69,268,269,],[63,70,76,303,304,]),'cycle':([87,],[105,]),'errorFunction':([12,16,],[17,17,]),'exp':([121,149,151,160,169,206,237,243,255,264,274,275,276,289,290,293,294,295,296,297,298,344,369,370,],[145,179,179,179,179,179,277,179,179,179,179,307,308,179,179,317,318,319,320,321,322,179,179,179,]),'fact':([121,149,151,160,169,206,237,238,239,243,255,264,274,275,276,280,289,290,293,294,295,296,297,298,344,369,370,],[146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables','program',12,'p_program','CT.py',358),
  ('changeCurrentScope -> <empty>','changeCurrentScope',0,'p_changeCurrentScope','CT.py',362),
  ('saveType -> <empty>','saveType',0,'p_saveType','CT.py',372),
  ('saveProc -> <empty>','saveProc',0,'p_saveProc','CT.py',379),
  ('errorProgram -> <empty>','errorProgram',0,'p_errorProgram','CT.py',402),
  ('opVars -> vars','opVars',1,'p_opVars','CT.py',413),
  ('opVars -> empty','opVars',1,'p_opVars','CT.py',414),
  ('opFunctions -> function opFunctions','opFunctions',2,'p_opFunctions','CT.py',419),
  ('opFunctions -> empty','opFunctions',1,'p_opFunctions','CT.py',420),
  ('vars -> errorVars VARS declare','vars',3,'p_vars','CT.py',424),
  ('saveID -> <empty>','saveID',0,'p_saveID','CT.py',429),
  ('errorVars -> <empty>','errorVars',0,'p_errorVars','CT.py',473),
  ('type -> errorType INT','type',2,'p_type','CT.py',479),
  ('type -> FLOAT','type',1,'p_type','CT.py',480),
  ('type -> STRING','type',1,'p_type','CT.py',481),
  ('type -> BOOL','type',1,'p_type','CT.py',482),
  ('errorType -> <empty>','errorType',0,'p_errorType','CT.py',487),
  ('main -> errorMain MAIN saveCurrentTemps saveMain { opVars generateInitialQuadruple body } clearVarsTable','main',10,'p_main','CT.py',493),
  ('generateInitialQuadruple -> <empty>','generateInitialQuadruple',0,'p_generateInitialQuadruple','CT.py',497),
  ('saveMain -> <empty>','saveMain',0,'p_saveMain','CT.py',506),
  ('errorMain -> <empty>','errorMain',0,'p_errorMain','CT.py',515),
  ('instr -> basicStatements ;','instr',2,'p_instr','CT.py',521),
  ('instr -> condition','instr',1,'p_instr','CT.py',522),
  ('instr -> cycle','instr',1,'p_instr','CT.py',523),
  ('basicStatements -> assign','basicStatements',1,'p_basicStatements','CT.py',527),
  ('basicStatements -> funcCall','basicStatements',1,'p_basicStatements','CT.py',528),
  ('basicStatements -> print','basicStatements',1,'p_basicStatements','CT.py',529),
  ('basicStatements -> read','basicStatements',1,'p_basicStatements','CT.py',530),
  ('print -> PRINT PARINI exp performPrint cyPrint PARFIN','print',6,'p_print','CT.py',533),
  ('cyPrint -> , fix exp performPrint cyPrint','cyPrint',5,'p_cyPrint','CT.py',536),
  ('cyPrint -> empty','cyPrint',1,'p_cyPrint','CT.py',537),
  ('read -> READ PARINI ID saveVariable performRead cyRead PARFIN','read',7,'p_read','CT.py',540),
  ('cyRead -> , fix ID saveVariable performRead cyRead','cyRead',6,'p_cyRead','CT.py',543),
  ('cyRead -> empty','cyRead',1,'p_cyRead','CT.py',544),
  ('fix -> <empty>','fix',0,'p_fix','CT.py',547),
  ('declare -> basicDeclare','declare',1,'p_declare','CT.py',552),
  ('declare -> structDeclare','declare',1,'p_declare','CT.py',553),
  ('declare -> dictDeclare','declare',1,'p_declare','CT.py',554),
  ('init -> ASGN saveOperator errorInit initWith','init',4,'p_init','CT.py',559),
  ('errorInit -> <empty>','errorInit',0,'p_errorInit','CT.py',563),
  ('initWith -> expresion','initWith',1,'p_initWith','CT.py',569),
  ('initWith -> funcCall','initWith',1,'p_initWith','CT.py',570),
  ('initDict -> ASGN PARINI dictType : dictType PARFIN errorInitDict','initDict',7,'p_initDict','CT.py',575),
  ('errorInitDict -> <empty>','errorInitDict',0,'p_errorInitDict','CT.py',580),
  ('dictType -> errorDictType CTES','dictType',2,'p_dictType','CT.py',586),
  ('dictType -> cte','dictType',1,'p_dictType','CT.py',587),
  ('dictType -> ID','dictType',1,'p_dictType','CT.py',588),
  ('errorDictType -> <empty>','errorDictType',0,'p_errorDictType','CT.py',593),
  ('param -> saveType type errorParam ID cyTypeParam cyParam','param',6,'p_param','CT.py',599),
  ('errorParam -> <empty>','errorParam',0,'p_errorParam','CT.py',604),
  ('cyParam -> errorCyParam saveTypeParam saveID ; param','cyParam',5,'p_cyParam','CT.py',610),
  ('cyParam -> empty saveTypeParam saveID','cyParam',3,'p_cyParam','CT.py',611),
  ('cyTypeParam -> , saveTypeParam saveID ID cyTypeParam','cyTypeParam',5,'p_cyTypeParam','CT.py',616),
  ('cyTypeParam -> empty','cyTypeParam',1,'p_cyTypeParam','CT.py',617),
  ('saveTypeParam -> <empty>','saveTypeParam',0,'p_saveTypeParam','CT.py',621),
  ('errorCyParam -> <empty>','errorCyParam',0,'p_errorCyParam','CT.py',631),
  ('function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable','function',14,'p_function','CT.py',637),
  ('saveCurrentTemps -> <empty>','saveCurrentTemps',0,'p_saveCurrentTemps','CT.py',641),
  ('errorFunction -> <empty>','errorFunction',0,'p_errorFunction','CT.py',653),
  ('clearVarsTable -> <empty>','clearVarsTable',0,'p_clearVarsTable','CT.py',658),
  ('return -> errorReturn RETURN expresion saveReturnValue ;','return',5,'p_return','CT.py',701),
  ('saveReturnValue -> <empty>','saveReturnValue',0,'p_saveReturnValue','CT.py',705),
  ('errorReturn -> <empty>','errorReturn',0,'p_errorReturn','CT.py',726),
  ('opParameters -> param saveParamToDirProc errorOpParameters','opParameters',3,'p_opParameters','CT.py',732),
  ('opParameters -> empty','opParameters',1,'p_opParameters','CT.py',733),
  ('flagParameters -> <empty>','flagParameters',0,'p_flagParameters','CT.py',737),
  ('saveParamToDirProc -> <empty>','saveParamToDirProc',0,'p_saveParamToDirProc','CT.py',742),
  ('errorOpParameters -> <empty>','errorOpParameters',0,'p_errorOpParameters','CT.py',749),
  ('opReturns -> errorOpReturns RETURNS type saveReturnType { opVars saveQuadruple body return','opReturns',9,'p_opReturns','CT.py',755),
  ('opReturns -> { opVars saveQuadruple body','opReturns',4,'p_opReturns','CT.py',756),
  ('saveQuadruple -> <empty>','saveQuadruple',0,'p_saveQuadruple','CT.py',760),
  ('saveReturnType -> <empty>','saveReturnType',0,'p_saveReturnType','CT.py',766),
  ('errorOpReturns -> <empty>','errorOpReturns',0,'p_errorOpReturns','CT.py',775),
  ('basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare','basicDeclare',8,'p_basicDeclare','CT.py',781),
  ('errorBasicDeclare -> <empty>','errorBasicDeclare',0,'p_errorBasicDeclare','CT.py',786),
  ('structDeclare -> errorStructDeclare STRUCT struct ; cyDeclare','structDeclare',5,'p_structDeclare','CT.py',792),
  ('errorStructDeclare -> <empty>','errorStructDeclare',0,'p_errorStructDeclare','CT.py',797),
  ('dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare','dictDeclare',6,'p_dictDeclare','CT.py',803),
  ('errorDictDeclare -> <empty>','errorDictDeclare',0,'p_errorDictDeclare','CT.py',808),
  ('cyDeclare -> declare','cyDeclare',1,'p_cyDeclare','CT.py',814),
  ('cyDeclare -> empty','cyDeclare',1,'p_cyDeclare','CT.py',815),
  ('body -> errorBody cyInstruction','body',2,'p_body','CT.py',820),
  ('body -> empty','body',1,'p_body','CT.py',821),
  ('errorBody -> <empty>','errorBody',0,'p_errorBody','CT.py',826),
  ('cyInstruction -> instr body','cyInstruction',2,'p_cyInstruction','CT.py',832),
  ('cycle -> forCycle','cycle',1,'p_cycle','CT.py',837),
  ('cycle -> whileCycle','cycle',1,'p_cycle','CT.py',838),
  ('whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile','whileCycle',11,'p_whileCycle','CT.py',843),
  ('repeatWhile -> <empty>','repeatWhile',0,'p_repeatWhile','CT.py',847),
  ('saveReturn -> <empty>','saveReturn',0,'p_saveReturn','CT.py',854),
  ('errorWhileCycle -> <empty>','errorWhileCycle',0,'p_errorWhileCycle','CT.py',858),
  ('forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign','forCycle',18,'p_forCycle','CT.py',864),
  ('saltoBody -> <empty>','saltoBody',0,'p_saltoBody','CT.py',868),
  ('returnFor -> <empty>','returnFor',0,'p_returnFor','CT.py',874),
  ('rellenaBody -> <empty>','rellenaBody',0,'p_rellenaBody','CT.py',886),
  ('returnAssign -> <empty>','returnAssign',0,'p_returnAssign','CT.py',894),
  ('errorForCycle -> <empty>','errorForCycle',0,'p_errorForCycle','CT.py',899),
  ('assign -> ID saveVariable errorAssign assignOptions performAssign','assign',5,'p_assign','CT.py',905),
  ('errorAssign -> <empty>','errorAssign',0,'p_errorAssign','CT.py',910),
  ('assignOptions -> init','assignOptions',1,'p_assignOptions','CT.py',916),
  ('assignOptions -> initDict','assignOptions',1,'p_assignOptions','CT.py',917),
  ('assignOptions -> saveToDimensionStacks [ expresion verifyIndex ] assignMatrix accessStruct init','assignOptions',8,'p_assignOptions','CT.py',918),
  ('assignMatrix -> updateDimension [ expresion verifyIndex ] errorAssignMatrix','assignMatrix',6,'p_assignMatrix','CT.py',923),
  ('assignMatrix -> empty','assignMatrix',1,'p_assignMatrix','CT.py',924),
  ('errorAssignMatrix -> <empty>','errorAssignMatrix',0,'p_errorAssignMatrix','CT.py',929),
  ('funcCall -> ID checkFunction PARINI opParamCall PARFIN checkNumParams','funcCall',6,'p_funcCall','CT.py',934),
  ('checkNumParams -> <empty>','checkNumParams',0,'p_checkNumParams','CT.py',938),
  ('checkFunction -> <empty>','checkFunction',0,'p_checkFunction','CT.py',970),
  ('opParamCall -> expresion checkParamType cyParamCall','opParamCall',3,'p_opParamCall','CT.py',986),
  ('opParamCall -> empty','opParamCall',1,'p_opParamCall','CT.py',987),
  ('cyParamCall -> , expresion checkParamType cyParamCall','cyParamCall',4,'p_cyParamCall','CT.py',992),
  ('cyParamCall -> empty','cyParamCall',1,'p_cyParamCall','CT.py',993),
  ('checkParamType -> <empty>','checkParamType',0,'p_checkParamType','CT.py',998),
  ('struct -> structType ID saveID createDimension [ CTED saveDimensionSize ] optionalMatrix secondLap','struct',10,'p_struct','CT.py',1025),
  ('secondLap -> <empty>','secondLap',0,'p_secondLap','CT.py',1029),
  ('saveDimensionSize -> <empty>','saveDimensionSize',0,'p_saveDimensionSize','CT.py',1105),
  ('createDimension -> <empty>','createDimension',0,'p_createDimension','CT.py',1129),
  ('structType -> saveType type','structType',2,'p_structType','CT.py',1148),
  ('structType -> DICT dict','structType',2,'p_structType','CT.py',1149),
  ('optionalMatrix -> createSecondDimension [ CTED saveSecondDimensionSize ]','optionalMatrix',5,'p_optionalMatrix','CT.py',1154),
  ('optionalMatrix -> empty','optionalMatrix',1,'p_optionalMatrix','CT.py',1155),
  ('saveSecondDimensionSize -> <empty>','saveSecondDimensionSize',0,'p_saveSecondDimensionSize','CT.py',1159),
  ('createSecondDimension -> <empty>','createSecondDimension',0,'p_createSecondDimension','CT.py',1186),
  ('condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso','condition',11,'p_condition','CT.py',1204),
  ('errorCondition -> <empty>','errorCondition',0,'p_errorCondition','CT.py',1209),
  ('optionalElse -> errorElse ELSE saveVerdadero { body }','optionalElse',6,'p_optionalElse','CT.py',1215),
  ('optionalElse -> empty','optionalElse',1,'p_optionalElse','CT.py',1216),
  ('errorElse -> <empty>','errorElse',0,'p_errorElse','CT.py',1221),
  ('dict -> errorDict PARINI type : type PARFIN','dict',6,'p_dict','CT.py',1227),
  ('errorDict -> <empty>','errorDict',0,'p_errorDict','CT.py',1232),
  ('expresion -> sExp performAndOr cyExpresion errorExpresion','expresion',4,'p_expresion','CT.py',1238),
  ('errorExpresion -> <empty>','errorExpresion',0,'p_errorExpresion','CT.py',1244),
  ('cyExpresion -> AND saveOperator expresion','cyExpresion',3,'p_cyExpresion','CT.py',1250),
  ('cyExpresion -> OR saveOperator expresion','cyExpresion',3,'p_cyExpresion','CT.py',1251),
  ('cyExpresion -> empty','cyExpresion',1,'p_cyExpresion','CT.py',1252),
  ('sExp -> exp errorOpSExp opSExp performRelational','sExp',4,'p_sExp','CT.py',1257),
  ('opSExp -> EQ saveOperator exp','opSExp',3,'p_opSExp','CT.py',1262),
  ('opSExp -> DIF saveOperator exp','opSExp',3,'p_opSExp','CT.py',1263),
  ('opSExp -> LTOEQ saveOperator exp','opSExp',3,'p_opSExp','CT.py',1264),
  ('opSExp -> GTOEQ saveOperator exp','opSExp',3,'p_opSExp','CT.py',1265),
  ('opSExp -> GT saveOperator exp','opSExp',3,'p_opSExp','CT.py',1266),
  ('opSExp -> LT saveOperator exp','opSExp',3,'p_opSExp','CT.py',1267),
  ('opSExp -> empty','opSExp',1,'p_opSExp','CT.py',1268),
  ('errorOpSExp -> <empty>','errorOpSExp',0,'p_errorOpSExp','CT.py',1272),
  ('exp -> term performAddSub errorCyExp cyExp','exp',4,'p_exp','CT.py',1278),
  ('cyExp -> PLUS saveOperator exp','cyExp',3,'p_cyExp','CT.py',1283),
  ('cyExp -> MINUS saveOperator exp','cyExp',3,'p_cyExp','CT.py',1284),
  ('cyExp -> empty','cyExp',1,'p_cyExp','CT.py',1285),
  ('errorCyExp -> <empty>','errorCyExp',0,'p_errorCyExp','CT.py',1290),
  ('term -> fact performMulDiv cyTerm','term',3,'p_term','CT.py',1295),
  ('cyTerm -> MULT saveOperator errorFact term','cyTerm',4,'p_cyTerm','CT.py',1300),
  ('cyTerm -> DIV saveOperator term','cyTerm',3,'p_cyTerm','CT.py',1301),
  ('cyTerm -> RES saveOperator term','cyTerm',3,'p_cyTerm','CT.py',1302),
  ('cyTerm -> empty','cyTerm',1,'p_cyTerm','CT.py',1303),
  ('fact -> CTES saveConstantString','fact',2,'p_fact','CT.py',1308),
  ('fact -> cte','fact',1,'p_fact','CT.py',1309),
  ('fact -> funcCall','fact',1,'p_fact','CT.py',1310),
  ('fact -> PARINI putFondo expresion PARFIN takeFondo','fact',5,'p_fact','CT.py',1311),
  ('fact -> ID saveVariable opAccess errorOpAccess','fact',4,'p_fact','CT.py',1312),
  ('errorFact -> <empty>','errorFact',0,'p_errorFact','CT.py',1317),
  ('opAccess -> opStruct','opAccess',1,'p_opAccess','CT.py',1323),
  ('opAccess -> opDictionary','opAccess',1,'p_opAccess','CT.py',1324),
  ('opAccess -> empty','opAccess',1,'p_opAccess','CT.py',1325),
  ('errorOpAccess -> <empty>','errorOpAccess',0,'p_errorOpAccess','CT.py',1330),
  ('opStruct -> errorOpStruct saveToDimensionStacks [ expresion verifyIndex ] opMatrix accessStruct','opStruct',8,'p_opStruct','CT.py',1335),
  ('accessStruct -> <empty>','accessStruct',0,'p_accessStruct','CT.py',1339),
  ('verifyIndex -> <empty>','verifyIndex',0,'p_verifyIndex','CT.py',1367),
  ('saveToDimensionStacks -> <empty>','saveToDimensionStacks',0,'p_saveToDimensionStacks','CT.py',1408),
  ('errorOpStruct -> <empty>','errorOpStruct',0,'p_errorOpStruct','CT.py',1443),
  ('opMatrix -> errorOpMatrix updateDimension [ expresion verifyIndex ]','opMatrix',6,'p_opMatrix','CT.py',1449),
  ('opMatrix -> empty','opMatrix',1,'p_opMatrix','CT.py',1450),
  ('updateDimension -> <empty>','updateDimension',0,'p_updateDimension','CT.py',1454),
  ('errorOpMatrix -> <empty>','errorOpMatrix',0,'p_errorOpMatrix','CT.py',1470),
  ('opDictionary -> . dictIndex','opDictionary',2,'p_opDictionary','CT.py',1476),
  ('dictIndex -> FIRST','dictIndex',1,'p_dictIndex','CT.py',1481),
  ('dictIndex -> LAST','dictIndex',1,'p_dictIndex','CT.py',1482),
  ('cte -> CTED saveConstantInt','cte',2,'p_cte','CT.py',1487),
  ('cte -> CTEF saveConstantFloat','cte',2,'p_cte','CT.py',1488),
  ('cte -> TRUE saveConstantBool','cte',2,'p_cte','CT.py',1489),
  ('cte -> FALSE saveConstantBool','cte',2,'p_cte','CT.py',1490),
  ('empty -> <empty>','empty',0,'p_empty','CT.py',1494),
  ('printTables -> <empty>','printTables',0,'p_printTables','CT.py',1499),
  ('rellenaFalso -> <empty>','rellenaFalso',0,'p_rellenaFalso','CT.py',1523),
  ('saveFalso -> <empty>','saveFalso',0,'p_saveFalso','CT.py',1528),
  ('saveVerdadero -> <empty>','saveVerdadero',0,'p_saveVerdadero','CT.py',1541),
  ('saveConstantInt -> <empty>','saveConstantInt',0,'p_saveConstantInt','CT.py',1548),
  ('saveConstantFloat -> <empty>','saveConstantFloat',0,'p_saveConstantFloat','CT.py',1565),
  ('saveConstantBool -> <empty>','saveConstantBool',0,'p_saveConstantBool','CT.py',1582),
  ('saveConstantString -> <empty>','saveConstantString',0,'p_saveConstantString','CT.py',1599),
  ('saveVariable -> <empty>','saveVariable',0,'p_saveVariable','CT.py',1618),
  ('saveOperator -> <empty>','saveOperator',0,'p_saveOperator','CT.py',1641),
  ('putFondo -> <empty>','putFondo',0,'p_putFondo','CT.py',1673),
  ('takeFondo -> <empty>','takeFondo',0,'p_takeFondo','CT.py',1678),
  ('performAssign -> <empty>','performAssign',0,'p_performAssign','CT.py',1685),
  ('performMulDiv -> <empty>','performMulDiv',0,'p_performMulDiv','CT.py',1706),
  ('performAddSub -> <empty>','performAddSub',0,'p_performAddSub','CT.py',1727),
  ('performRelational -> <empty>','performRelational',0,'p_performRelational','CT.py',1748),
  ('performAndOr -> <empty>','performAndOr',0,'p_performAndOr','CT.py',1769),
  ('performPrint -> <empty>','performPrint',0,'p_performPrint','CT.py',1790),
  ('performRead -> <empty>','performRead',0,'p_performRead','CT.py',1794),
]
