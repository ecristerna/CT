
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '5AC3763E112413DCAE5E065C542D5A8C'
    
_lr_action_items = {'RETURN':([7,9,20,27,28,30,68,70,72,74,81,82,83,85,86,87,95,96,97,98,100,101,103,105,112,144,180,248,255,261,262,269,271,],[-4,-5,-26,-25,-24,-8,-63,-142,-142,-142,-142,-67,-66,-62,-20,-21,-56,-61,-60,-52,-54,-142,-65,-19,-142,-45,216,-68,-142,-90,-93,-70,-92,]),'VARS':([6,10,42,47,101,],[-10,15,-10,-10,-10,]),'DIF':([119,123,124,126,127,128,129,130,131,132,133,149,156,157,158,160,164,165,168,169,172,174,184,189,190,191,192,194,197,207,211,212,221,222,229,239,251,252,267,],[-140,-138,-142,-120,-115,-141,-122,-121,-139,-110,-142,-80,-126,-129,-128,-127,-142,199,-116,-119,-142,-122,-123,-124,-136,-137,-135,-111,-114,-118,-142,-121,-112,-113,-117,-142,-130,-133,-132,]),'OBJECT':([15,40,45,61,69,70,72,74,110,145,],[21,21,21,21,21,21,21,21,21,21,]),'WHILE':([7,9,20,27,28,30,42,47,51,62,67,70,72,74,81,82,83,84,86,87,95,96,97,98,100,101,105,112,217,235,248,255,261,262,263,268,269,271,],[-4,-5,-26,-25,-24,-8,-142,-142,-64,-64,-69,-142,-142,-142,-64,-67,-66,104,-20,-21,-56,-61,-60,-52,-54,-142,-19,-64,-64,-64,-68,-142,-90,-93,-64,-64,-70,-92,]),'PROGRAM':([0,2,],[-3,3,]),'TRUE':([107,116,120,134,138,139,151,153,162,166,167,171,183,188,195,196,198,199,200,201,202,203,206,216,230,233,244,257,],[119,119,119,119,119,119,119,119,119,-125,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'LAST':([159,],[191,]),')':([21,23,25,29,37,49,56,71,79,102,107,114,115,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,140,146,149,150,152,154,156,157,158,160,161,163,164,165,168,169,170,172,173,174,176,181,184,185,186,187,189,190,191,192,193,194,197,204,205,207,208,211,212,220,221,222,223,224,225,226,227,228,229,231,239,240,241,242,243,249,251,252,253,258,267,],[-14,-15,-13,-12,-11,64,-59,-58,-142,-142,-142,-37,-40,149,-140,-142,-82,-138,-142,-142,-120,-115,-141,-122,-121,-139,-110,-142,-75,-72,-74,177,182,-80,184,-98,-101,-126,-129,-128,-127,-81,-84,-142,-142,-116,-119,-28,-142,-29,-30,214,-39,-123,-99,-97,-100,-124,-136,-137,-135,-142,-111,-114,-109,-102,-118,-27,-142,-121,-83,-112,-113,-103,-104,-106,-107,-105,-108,-117,-33,-142,253,-34,-35,-76,256,-130,-133,-32,-31,-132,]),'(':([32,43,52,59,90,104,106,107,109,116,120,124,134,138,139,151,153,162,166,167,171,172,183,188,195,196,198,199,200,201,202,203,206,211,216,233,244,257,],[40,-96,69,-96,107,116,117,120,139,120,120,107,171,120,120,120,120,120,-125,120,120,107,120,120,120,120,120,120,120,120,120,120,120,107,120,120,120,120,]),'+':([119,123,124,126,127,128,129,130,131,133,149,156,157,158,160,164,168,169,172,174,184,189,190,191,192,207,211,212,229,239,251,252,267,],[-140,-138,-142,-120,-115,-141,-122,-121,-139,-142,-80,-126,-129,-128,-127,195,-116,-119,-142,-122,-123,-124,-136,-137,-135,-118,-142,-121,-117,-142,-130,-133,-132,]),'*':([119,123,124,126,128,129,130,131,133,149,156,157,158,160,172,174,184,189,190,191,192,211,212,239,251,252,267,],[-140,-138,-142,-120,-141,-122,-121,-139,166,-80,-126,-129,-128,-127,-142,-122,-123,-124,-136,-137,-135,-142,-121,-142,-130,-133,-132,]),'-':([119,123,124,126,127,128,129,130,131,133,149,156,157,158,160,164,168,169,172,174,184,189,190,191,192,207,211,212,229,239,251,252,267,],[-140,-138,-142,-120,-115,-141,-122,-121,-139,-142,-80,-126,-129,-128,-127,196,-116,-119,-142,-122,-123,-124,-136,-137,-135,-118,-142,-121,-117,-142,-130,-133,-132,]),',':([44,79,119,121,123,124,125,126,127,128,129,130,131,132,133,149,152,154,156,157,158,160,164,165,168,169,184,185,186,187,189,190,191,192,193,194,197,204,205,207,221,222,223,224,225,226,227,228,229,239,251,252,267,],[54,54,-140,-142,-138,-142,162,-120,-115,-141,-122,-121,-139,-110,-142,-80,-98,-101,-126,-129,-128,-127,-142,-142,-116,-119,-123,-99,-97,-100,-124,-136,-137,-135,162,-111,-114,-109,-102,-118,-112,-113,-103,-104,-106,-107,-105,-108,-117,-142,-130,-133,-132,]),'/':([119,123,124,126,128,129,130,131,133,149,156,157,158,160,172,174,184,189,190,191,192,211,212,239,251,252,267,],[-140,-138,-142,-120,-141,-122,-121,-139,167,-80,-126,-129,-128,-127,-142,-122,-123,-124,-136,-137,-135,-142,-121,-142,-130,-133,-132,]),'.':([124,172,211,],[159,159,159,]),'FIRST':([159,],[190,]),'BOOL':([15,40,45,61,69,70,72,74,110,145,],[23,23,23,23,23,23,23,23,23,23,]),';':([44,53,55,56,58,71,79,88,91,93,102,111,113,119,121,123,124,126,127,128,129,130,131,132,133,135,136,137,141,143,148,149,152,154,156,157,158,160,164,165,168,169,170,172,173,174,177,184,185,186,187,189,190,191,192,194,197,204,205,207,208,215,218,221,222,223,224,225,226,227,228,229,236,239,243,251,252,253,258,267,],[-142,70,72,-59,74,-58,-142,105,-23,-22,-41,-142,145,-140,-142,-138,-142,-120,-115,-141,-122,-121,-139,-110,-142,-75,-72,-74,-85,-89,183,-80,-98,-101,-126,-129,-128,-127,-142,-142,-116,-119,-28,-142,-29,-30,-95,-123,-99,-97,-100,-124,-136,-137,-135,-111,-114,-109,-102,-118,-27,-88,238,-112,-113,-103,-104,-106,-107,-105,-108,-117,247,-142,-76,-130,-133,-32,-31,-132,]),':':([21,23,25,29,37,94,119,123,128,131,209,211,212,231,],[-14,-15,-13,-12,-11,110,-140,-138,-141,-139,230,-35,-34,-33,]),'=':([90,108,147,213,232,234,254,259,],[-73,134,-73,-142,244,-78,-79,-77,]),'<':([119,123,124,126,127,128,129,130,131,132,133,149,156,157,158,160,164,165,168,169,172,174,184,189,190,191,192,194,197,207,211,212,221,222,229,239,251,252,267,],[-140,-138,-142,-120,-115,-141,-122,-121,-139,-110,-142,-80,-126,-129,-128,-127,-142,203,-116,-119,-142,-122,-123,-124,-136,-137,-135,-111,-114,-118,-142,-121,-112,-113,-117,-142,-130,-133,-132,]),'$end':([1,34,],[0,-1,]),'STRING':([15,40,45,61,69,70,72,74,110,145,],[25,25,25,25,25,25,25,25,25,25,]),'FOR':([7,9,20,27,28,30,42,47,51,62,67,70,72,74,81,82,83,86,87,89,95,96,97,98,100,101,105,112,217,235,248,255,261,262,263,268,269,271,],[-4,-5,-26,-25,-24,-8,-142,-142,-64,-64,-71,-142,-142,-142,-64,-67,-66,-20,-21,106,-56,-61,-60,-52,-54,-142,-19,-64,-64,-64,-68,-142,-90,-93,-64,-64,-70,-92,]),'ELSE':([255,260,],[-94,265,]),'>':([119,123,124,126,127,128,129,130,131,132,133,149,156,157,158,160,164,165,168,169,172,174,184,189,190,191,192,194,197,207,211,212,221,222,229,239,251,252,267,],[-140,-138,-142,-120,-115,-141,-122,-121,-139,-110,-142,-80,-126,-129,-128,-127,-142,201,-116,-119,-142,-122,-123,-124,-136,-137,-135,-111,-114,-118,-142,-121,-112,-113,-117,-142,-130,-133,-132,]),'RETURNS':([32,39,41,46,64,78,],[-142,-51,-47,61,-48,-46,]),'FUNC':([6,7,8,9,11,12,20,27,28,30,63,70,72,74,95,96,97,98,100,],[-142,-4,-43,-5,-43,17,-26,-25,-24,-8,-42,-142,-142,-142,-56,-61,-60,-52,-54,]),'[':([21,23,25,29,37,57,60,75,90,108,111,124,147,155,172,177,211,213,239,250,],[-14,-15,-13,-12,-11,73,-86,-87,-73,138,142,-131,-73,188,-131,-95,-131,233,-134,257,]),']':([99,119,121,123,124,126,127,128,129,130,131,132,133,149,152,154,156,157,158,160,164,165,168,169,175,178,184,185,186,187,189,190,191,192,194,197,204,205,207,219,221,222,223,224,225,226,227,228,229,239,245,251,252,264,267,],[111,-140,-142,-138,-142,-120,-115,-141,-122,-121,-139,-110,-142,-80,-98,-101,-126,-129,-128,-127,-142,-142,-116,-119,213,215,-123,-99,-97,-100,-124,-136,-137,-135,-111,-114,-109,-102,-118,239,-112,-113,-103,-104,-106,-107,-105,-108,-117,-142,254,-130,-133,267,-132,]),'ID':([3,7,9,17,20,21,23,24,25,27,28,29,30,35,36,37,38,42,47,50,51,54,62,65,67,70,72,74,81,82,83,86,87,95,96,97,98,100,101,105,107,112,116,117,120,134,138,139,151,153,162,166,167,171,183,188,195,196,198,199,200,201,202,203,206,216,217,230,233,235,238,244,248,255,257,261,262,263,268,269,271,],[4,-4,-5,32,-26,-14,-15,-53,-13,-25,-24,-12,-8,43,44,-11,45,-142,-142,-38,-64,71,-64,79,90,-142,-142,-142,-64,-67,-66,-20,-21,-56,-61,-60,-52,-54,-142,-19,124,-64,124,147,124,172,124,124,124,124,124,-125,124,211,124,124,124,124,124,124,124,124,124,124,124,124,-64,242,124,-64,147,172,-68,-142,124,-90,-93,-64,-64,-70,-92,]),'IF':([7,9,20,27,28,30,42,47,51,62,67,70,72,74,81,82,83,86,87,92,95,96,97,98,100,101,105,112,217,235,248,255,261,262,263,268,269,271,],[-4,-5,-26,-25,-24,-8,-142,-142,-64,-64,-91,-142,-142,-142,-64,-67,-66,-20,-21,109,-56,-61,-60,-52,-54,-142,-19,-64,-64,-64,-68,-142,-90,-93,-64,-64,-70,-92,]),'AND':([119,121,123,124,126,127,128,129,130,131,132,133,149,156,157,158,160,164,165,168,169,172,174,184,189,190,191,192,194,197,204,205,207,211,212,221,222,223,224,225,226,227,228,229,239,251,252,267,],[-140,151,-138,-142,-120,-115,-141,-122,-121,-139,-110,-142,-80,-126,-129,-128,-127,-142,-142,-116,-119,-142,-122,-123,-124,-136,-137,-135,-111,-114,-109,-102,-118,-142,-121,-112,-113,-103,-104,-106,-107,-105,-108,-117,-142,-130,-133,-132,]),'CTES':([107,116,120,134,138,139,151,153,162,166,167,171,183,188,195,196,198,199,200,201,202,203,206,210,216,230,233,244,257,],[126,126,126,126,126,126,126,126,126,-125,126,126,126,126,126,126,126,126,126,126,126,126,126,231,126,-36,126,126,126,]),'LTOEQ':([119,123,124,126,127,128,129,130,131,132,133,149,156,157,158,160,164,165,168,169,172,174,184,189,190,191,192,194,197,207,211,212,221,222,229,239,251,252,267,],[-140,-138,-142,-120,-115,-141,-122,-121,-139,-110,-142,-80,-126,-129,-128,-127,-142,202,-116,-119,-142,-122,-123,-124,-136,-137,-135,-111,-114,-118,-142,-121,-112,-113,-117,-142,-130,-133,-132,]),'FALSE':([107,116,120,134,138,139,151,153,162,166,167,171,183,188,195,196,198,199,200,201,202,203,206,216,230,233,244,257,],[128,128,128,128,128,128,128,128,128,-125,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,]),'STRUCT':([15,31,70,72,74,],[-55,38,-55,-55,-55,]),'INT':([15,26,40,45,61,69,70,72,74,110,145,],[-16,37,-16,-16,-16,-16,-16,-16,-16,-16,-16,]),'EQ':([119,123,124,126,127,128,129,130,131,132,133,149,156,157,158,160,164,165,168,169,172,174,184,189,190,191,192,194,197,207,211,212,221,222,229,239,251,252,267,],[-140,-138,-142,-120,-115,-141,-122,-121,-139,-110,-142,-80,-126,-129,-128,-127,-142,198,-116,-119,-142,-122,-123,-124,-136,-137,-135,-111,-114,-118,-142,-121,-112,-113,-117,-142,-130,-133,-132,]),'FLOAT':([15,40,45,61,69,70,72,74,110,145,],[29,29,29,29,29,29,29,29,29,29,]),'OR':([119,121,123,124,126,127,128,129,130,131,132,133,149,156,157,158,160,164,165,168,169,172,174,184,189,190,191,192,194,197,204,205,207,211,212,221,222,223,224,225,226,227,228,229,239,251,252,267,],[-140,153,-138,-142,-120,-115,-141,-122,-121,-139,-110,-142,-80,-126,-129,-128,-127,-142,-142,-116,-119,-142,-122,-123,-124,-136,-137,-135,-111,-114,-109,-102,-118,-142,-121,-112,-113,-103,-104,-106,-107,-105,-108,-117,-142,-130,-133,-132,]),'DICT':([15,22,45,70,72,74,],[-57,35,59,-57,-57,-57,]),'CTED':([73,107,116,120,134,138,139,142,151,153,162,166,167,171,183,188,195,196,198,199,200,201,202,203,206,216,230,233,244,257,],[99,123,123,123,123,123,123,178,123,123,123,-125,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'GTOEQ':([119,123,124,126,127,128,129,130,131,132,133,149,156,157,158,160,164,165,168,169,172,174,184,189,190,191,192,194,197,207,211,212,221,222,229,239,251,252,267,],[-140,-138,-142,-120,-115,-141,-122,-121,-139,-110,-142,-80,-126,-129,-128,-127,-142,200,-116,-119,-142,-122,-123,-124,-136,-137,-135,-111,-114,-118,-142,-121,-112,-113,-117,-142,-130,-133,-132,]),'{':([4,5,21,23,25,29,32,33,37,39,41,64,76,78,182,214,256,265,],[-2,6,-14,-15,-13,-12,-142,42,-11,47,-47,-48,101,-46,217,235,263,268,]),'MAIN':([6,7,8,9,11,13,14,16,18,20,27,28,30,63,70,72,74,95,96,97,98,100,],[-142,-4,-142,-5,-142,-7,-18,-6,33,-26,-25,-24,-8,-42,-142,-142,-142,-56,-61,-60,-52,-54,]),'}':([7,9,19,20,27,28,30,42,47,48,51,62,66,68,70,72,74,77,80,81,82,83,85,86,87,95,96,97,98,100,103,105,179,217,235,237,246,247,248,255,261,262,263,266,268,269,270,271,],[-4,-5,34,-26,-25,-24,-8,-142,-142,63,-142,-142,80,-63,-142,-142,-142,-50,-17,-142,-67,-66,-62,-20,-21,-56,-61,-60,-52,-54,-65,-19,-49,-142,-142,248,255,-44,-68,-142,-90,-93,-142,269,-142,-70,271,-92,]),'CTEF':([107,116,120,134,138,139,151,153,162,166,167,171,183,188,195,196,198,199,200,201,202,203,206,216,230,233,244,257,],[131,131,131,131,131,131,131,131,131,-125,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vars':([6,42,47,101,],[7,7,7,7,]),'errorOpSExp':([132,],[165,]),'errorMain':([14,],[18,]),'errorCyExp':([127,],[164,]),'opParamCall':([107,],[118,]),'cyTypeParam':([44,79,],[55,102,]),'forCycle':([67,],[83,]),'structType':([45,],[57,]),'struct':([45,],[58,]),'param':([40,145,],[49,181,]),'init':([108,232,],[137,243,]),'program':([0,],[1,]),'dict':([43,59,],[53,75,]),'opMatrix':([239,],[251,]),'errorExpresion':([152,],[186,]),'main':([14,],[19,]),'return':([144,],[179,]),'errorParam':([50,],[65,]),'errorElse':([255,],[260,]),'errorReturn':([144,],[180,]),'assignOptions':([108,],[136,]),'basicDeclare':([15,70,72,74,],[28,28,28,28,]),'cyInstruction':([67,],[85,]),'condition':([67,],[86,]),'expresion':([107,116,120,134,138,139,151,153,162,171,183,188,216,233,244,257,],[125,146,150,173,175,176,185,187,193,150,218,219,236,245,173,264,]),'term':([107,116,120,134,138,139,151,153,162,171,183,188,195,196,198,199,200,201,202,203,216,233,244,257,],[127,127,127,127,127,127,127,127,127,127,127,127,221,222,127,127,127,127,127,127,127,127,127,127,]),'funcCall':([67,107,116,120,134,138,139,151,153,162,167,171,183,188,195,196,198,199,200,201,202,203,206,216,233,244,257,],[91,129,129,129,174,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,174,129,]),'initDict':([108,],[135,]),'opReturns':([39,],[48,]),'dictDeclare':([15,70,72,74,],[20,20,20,20,]),'errorOpAccess':([157,],[189,]),'errorVars':([6,42,47,101,],[10,10,10,10,]),'whileCycle':([67,],[82,]),'errorDictDeclare':([15,70,72,74,],[22,22,22,22,]),'opFunctions':([8,11,],[14,16,]),'errorOpStruct':([124,172,211,],[155,155,155,]),'opVars':([6,42,47,101,],[8,51,62,112,]),'errorInit':([170,],[208,]),'cyExpresion':([121,],[152,]),'body':([51,62,81,112,217,235,263,268,],[66,77,103,144,237,246,266,270,]),'errorOpReturns':([39,],[46,]),'opParameters':([32,],[39,]),'errorCondition':([67,],[92,]),'cte':([107,116,120,134,138,139,151,153,162,167,171,183,188,195,196,198,199,200,201,202,203,206,216,230,233,244,257,],[130,130,130,130,130,130,130,130,130,130,212,130,130,130,130,130,130,130,130,130,130,130,130,241,130,130,130,]),'assign':([67,117,238,],[93,148,249,]),'errorStructDeclare':([15,70,72,74,],[31,31,31,31,]),'cyExp':([164,],[194,]),'instr':([67,],[81,]),'errorFact':([166,],[206,]),'errorProgram':([0,],[2,]),'cyTerm':([133,],[168,]),'errorAssignMatrix':([254,],[259,]),'cyDeclare':([70,72,74,],[95,98,100,]),'errorBody':([51,62,81,112,217,235,263,268,],[67,67,67,67,67,67,67,67,]),'opStruct':([124,172,211,],[156,156,156,]),'type':([15,40,45,61,69,70,72,74,110,145,],[24,50,60,76,94,24,24,24,140,50,]),'dictIndex':([159,],[192,]),'empty':([6,8,11,32,42,44,47,51,62,70,72,74,79,81,101,102,107,111,112,121,124,125,133,164,165,172,193,211,213,217,235,239,255,263,268,],[9,13,13,41,9,56,9,68,68,96,96,96,56,68,9,115,122,143,68,154,158,163,169,197,204,158,163,158,234,68,68,252,262,68,68,]),'errorBasicDeclare':([24,],[36,]),'function':([8,11,],[11,11,]),'errorOpMatrix':([239,],[250,]),'opDictionary':([124,172,211,],[160,160,160,]),'errorType':([15,40,45,61,69,70,72,74,110,145,],[26,26,26,26,26,26,26,26,26,26,]),'errorForCycle':([67,],[89,]),'opAccess':([124,172,211,],[157,157,157,]),'basicStatements':([67,],[88,]),'structDeclare':([15,70,72,74,],[27,27,27,27,]),'errorAssign':([90,147,],[108,108,]),'cyParam':([102,],[114,]),'errorOpParameters':([64,],[78,]),'cyParamCall':([125,193,],[161,220,]),'declare':([15,70,72,74,],[30,97,97,97,]),'optionalMatrix':([111,],[141,]),'optionalElse':([255,],[261,]),'dictType':([171,230,],[209,240,]),'initWith':([134,244,],[170,170,]),'errorWhileCycle':([67,],[84,]),'sExp':([107,116,120,134,138,139,151,153,162,171,183,188,216,233,244,257,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'errorCyParam':([102,],[113,]),'opSExp':([165,],[205,]),'errorDictType':([171,230,],[210,210,]),'assignMatrix':([213,],[232,]),'errorDict':([43,59,],[52,52,]),'errorInitDict':([253,],[258,]),'saveID':([4,],[5,]),'cycle':([67,],[87,]),'errorFunction':([8,11,],[12,12,]),'exp':([107,116,120,134,138,139,151,153,162,171,183,188,198,199,200,201,202,203,216,233,244,257,],[132,132,132,132,132,132,132,132,132,132,132,132,223,224,225,226,227,228,132,132,132,132,]),'fact':([107,116,120,134,138,139,151,153,162,167,171,183,188,195,196,198,199,200,201,202,203,206,216,233,244,257,],[133,133,133,133,133,133,133,133,133,207,133,133,133,133,133,133,133,133,133,133,133,229,133,133,133,133,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> errorProgram PROGRAM ID saveID { opVars opFunctions main }','program',9,'p_program','CT.py',67),
  ('saveID -> <empty>','saveID',0,'p_saveID','CT.py',72),
  ('errorProgram -> <empty>','errorProgram',0,'p_errorProgram','CT.py',79),
  ('opVars -> vars','opVars',1,'p_opVars','CT.py',85),
  ('opVars -> empty','opVars',1,'p_opVars','CT.py',86),
  ('opFunctions -> function opFunctions','opFunctions',2,'p_opFunctions','CT.py',91),
  ('opFunctions -> empty','opFunctions',1,'p_opFunctions','CT.py',92),
  ('vars -> errorVars VARS declare','vars',3,'p_vars','CT.py',96),
  ('createVarsTable -> <empty>','createVarsTable',0,'p_createVarsTable','CT.py',102),
  ('errorVars -> <empty>','errorVars',0,'p_errorVars','CT.py',113),
  ('type -> errorType INT','type',2,'p_type','CT.py',119),
  ('type -> FLOAT','type',1,'p_type','CT.py',120),
  ('type -> STRING','type',1,'p_type','CT.py',121),
  ('type -> OBJECT','type',1,'p_type','CT.py',122),
  ('type -> BOOL','type',1,'p_type','CT.py',123),
  ('errorType -> <empty>','errorType',0,'p_errorType','CT.py',128),
  ('main -> errorMain MAIN { opVars body }','main',6,'p_main','CT.py',134),
  ('errorMain -> <empty>','errorMain',0,'p_errorMain','CT.py',139),
  ('instr -> basicStatements ;','instr',2,'p_instr','CT.py',145),
  ('instr -> condition','instr',1,'p_instr','CT.py',146),
  ('instr -> cycle','instr',1,'p_instr','CT.py',147),
  ('basicStatements -> assign','basicStatements',1,'p_basicStatements','CT.py',151),
  ('basicStatements -> funcCall','basicStatements',1,'p_basicStatements','CT.py',152),
  ('declare -> basicDeclare','declare',1,'p_declare','CT.py',156),
  ('declare -> structDeclare','declare',1,'p_declare','CT.py',157),
  ('declare -> dictDeclare','declare',1,'p_declare','CT.py',158),
  ('init -> = initWith errorInit','init',3,'p_init','CT.py',163),
  ('errorInit -> <empty>','errorInit',0,'p_errorInit','CT.py',168),
  ('initWith -> expresion','initWith',1,'p_initWith','CT.py',174),
  ('initWith -> funcCall','initWith',1,'p_initWith','CT.py',175),
  ('initDict -> = ( dictType : dictType ) errorInitDict','initDict',7,'p_initDict','CT.py',180),
  ('errorInitDict -> <empty>','errorInitDict',0,'p_errorInitDict','CT.py',185),
  ('dictType -> errorDictType CTES','dictType',2,'p_dictType','CT.py',191),
  ('dictType -> cte','dictType',1,'p_dictType','CT.py',192),
  ('dictType -> ID','dictType',1,'p_dictType','CT.py',193),
  ('errorDictType -> <empty>','errorDictType',0,'p_errorDictType','CT.py',198),
  ('param -> type errorParam ID cyTypeParam cyParam','param',5,'p_param','CT.py',204),
  ('errorParam -> <empty>','errorParam',0,'p_errorParam','CT.py',209),
  ('cyParam -> errorCyParam ; param','cyParam',3,'p_cyParam','CT.py',215),
  ('cyParam -> empty','cyParam',1,'p_cyParam','CT.py',216),
  ('errorCyParam -> <empty>','errorCyParam',0,'p_errorCyParam','CT.py',221),
  ('function -> errorFunction FUNC ID opParameters opReturns }','function',6,'p_function','CT.py',227),
  ('errorFunction -> <empty>','errorFunction',0,'p_errorFunction','CT.py',232),
  ('return -> errorReturn RETURN expresion ;','return',4,'p_return','CT.py',238),
  ('errorReturn -> <empty>','errorReturn',0,'p_errorReturn','CT.py',243),
  ('opParameters -> ( param ) errorOpParameters','opParameters',4,'p_opParameters','CT.py',249),
  ('opParameters -> empty','opParameters',1,'p_opParameters','CT.py',250),
  ('errorOpParameters -> <empty>','errorOpParameters',0,'p_errorOpParameters','CT.py',255),
  ('opReturns -> errorOpReturns RETURNS type { opVars body return','opReturns',7,'p_opReturns','CT.py',261),
  ('opReturns -> { opVars body','opReturns',3,'p_opReturns','CT.py',262),
  ('errorOpReturns -> <empty>','errorOpReturns',0,'p_errorOpReturns','CT.py',267),
  ('basicDeclare -> type errorBasicDeclare ID cyTypeParam ; cyDeclare','basicDeclare',6,'p_basicDeclare','CT.py',273),
  ('errorBasicDeclare -> <empty>','errorBasicDeclare',0,'p_errorBasicDeclare','CT.py',278),
  ('structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare','structDeclare',6,'p_structDeclare','CT.py',284),
  ('errorStructDeclare -> <empty>','errorStructDeclare',0,'p_errorStructDeclare','CT.py',289),
  ('dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare','dictDeclare',6,'p_dictDeclare','CT.py',295),
  ('errorDictDeclare -> <empty>','errorDictDeclare',0,'p_errorDictDeclare','CT.py',300),
  ('cyTypeParam -> , ID','cyTypeParam',2,'p_cyTypeParam','CT.py',306),
  ('cyTypeParam -> empty','cyTypeParam',1,'p_cyTypeParam','CT.py',307),
  ('cyDeclare -> declare','cyDeclare',1,'p_cyDeclare','CT.py',312),
  ('cyDeclare -> empty','cyDeclare',1,'p_cyDeclare','CT.py',313),
  ('body -> errorBody cyInstruction','body',2,'p_body','CT.py',318),
  ('body -> empty','body',1,'p_body','CT.py',319),
  ('errorBody -> <empty>','errorBody',0,'p_errorBody','CT.py',324),
  ('cyInstruction -> instr body','cyInstruction',2,'p_cyInstruction','CT.py',330),
  ('cycle -> forCycle','cycle',1,'p_cycle','CT.py',335),
  ('cycle -> whileCycle','cycle',1,'p_cycle','CT.py',336),
  ('whileCycle -> errorWhileCycle WHILE ( expresion ) { body }','whileCycle',8,'p_whileCycle','CT.py',341),
  ('errorWhileCycle -> <empty>','errorWhileCycle',0,'p_errorWhileCycle','CT.py',346),
  ('forCycle -> errorForCycle FOR ( assign ; expresion ; assign ) { body }','forCycle',12,'p_forCycle','CT.py',352),
  ('errorForCycle -> <empty>','errorForCycle',0,'p_errorForCycle','CT.py',357),
  ('assign -> ID errorAssign assignOptions','assign',3,'p_assign','CT.py',363),
  ('errorAssign -> <empty>','errorAssign',0,'p_errorAssign','CT.py',368),
  ('assignOptions -> init','assignOptions',1,'p_assignOptions','CT.py',374),
  ('assignOptions -> initDict','assignOptions',1,'p_assignOptions','CT.py',375),
  ('assignOptions -> [ expresion ] assignMatrix init','assignOptions',5,'p_assignOptions','CT.py',376),
  ('assignMatrix -> [ expresion ] errorAssignMatrix','assignMatrix',4,'p_assignMatrix','CT.py',381),
  ('assignMatrix -> empty','assignMatrix',1,'p_assignMatrix','CT.py',382),
  ('errorAssignMatrix -> <empty>','errorAssignMatrix',0,'p_errorAssignMatrix','CT.py',387),
  ('funcCall -> ID ( opParamCall )','funcCall',4,'p_funcCall','CT.py',393),
  ('opParamCall -> expresion cyParamCall','opParamCall',2,'p_opParamCall','CT.py',398),
  ('opParamCall -> empty','opParamCall',1,'p_opParamCall','CT.py',399),
  ('cyParamCall -> , expresion cyParamCall','cyParamCall',3,'p_cyParamCall','CT.py',404),
  ('cyParamCall -> empty','cyParamCall',1,'p_cyParamCall','CT.py',405),
  ('struct -> structType [ CTED ] optionalMatrix','struct',5,'p_struct','CT.py',410),
  ('structType -> type','structType',1,'p_structType','CT.py',415),
  ('structType -> DICT dict','structType',2,'p_structType','CT.py',416),
  ('optionalMatrix -> [ CTED ]','optionalMatrix',3,'p_optionalMatrix','CT.py',421),
  ('optionalMatrix -> empty','optionalMatrix',1,'p_optionalMatrix','CT.py',422),
  ('condition -> errorCondition IF ( expresion ) { body } optionalElse','condition',9,'p_condition','CT.py',427),
  ('errorCondition -> <empty>','errorCondition',0,'p_errorCondition','CT.py',432),
  ('optionalElse -> errorElse ELSE { body }','optionalElse',5,'p_optionalElse','CT.py',438),
  ('optionalElse -> empty','optionalElse',1,'p_optionalElse','CT.py',439),
  ('errorElse -> <empty>','errorElse',0,'p_errorElse','CT.py',444),
  ('dict -> errorDict ( type : type )','dict',6,'p_dict','CT.py',450),
  ('errorDict -> <empty>','errorDict',0,'p_errorDict','CT.py',455),
  ('expresion -> sExp cyExpresion errorExpresion','expresion',3,'p_expresion','CT.py',461),
  ('errorExpresion -> <empty>','errorExpresion',0,'p_errorExpresion','CT.py',466),
  ('cyExpresion -> AND expresion','cyExpresion',2,'p_cyExpresion','CT.py',472),
  ('cyExpresion -> OR expresion','cyExpresion',2,'p_cyExpresion','CT.py',473),
  ('cyExpresion -> empty','cyExpresion',1,'p_cyExpresion','CT.py',474),
  ('sExp -> exp errorOpSExp opSExp','sExp',3,'p_sExp','CT.py',479),
  ('opSExp -> EQ exp','opSExp',2,'p_opSExp','CT.py',484),
  ('opSExp -> DIF exp','opSExp',2,'p_opSExp','CT.py',485),
  ('opSExp -> LTOEQ exp','opSExp',2,'p_opSExp','CT.py',486),
  ('opSExp -> GTOEQ exp','opSExp',2,'p_opSExp','CT.py',487),
  ('opSExp -> > exp','opSExp',2,'p_opSExp','CT.py',488),
  ('opSExp -> < exp','opSExp',2,'p_opSExp','CT.py',489),
  ('opSExp -> empty','opSExp',1,'p_opSExp','CT.py',490),
  ('errorOpSExp -> <empty>','errorOpSExp',0,'p_errorOpSExp','CT.py',495),
  ('exp -> term errorCyExp cyExp','exp',3,'p_exp','CT.py',501),
  ('cyExp -> + term','cyExp',2,'p_cyExp','CT.py',506),
  ('cyExp -> - term','cyExp',2,'p_cyExp','CT.py',507),
  ('cyExp -> empty','cyExp',1,'p_cyExp','CT.py',508),
  ('errorCyExp -> <empty>','errorCyExp',0,'p_errorCyExp','CT.py',513),
  ('term -> fact cyTerm','term',2,'p_term','CT.py',519),
  ('cyTerm -> * errorFact fact','cyTerm',3,'p_cyTerm','CT.py',524),
  ('cyTerm -> / fact','cyTerm',2,'p_cyTerm','CT.py',525),
  ('cyTerm -> empty','cyTerm',1,'p_cyTerm','CT.py',526),
  ('fact -> CTES','fact',1,'p_fact','CT.py',531),
  ('fact -> cte','fact',1,'p_fact','CT.py',532),
  ('fact -> funcCall','fact',1,'p_fact','CT.py',533),
  ('fact -> ( expresion )','fact',3,'p_fact','CT.py',534),
  ('fact -> ID opAccess errorOpAccess','fact',3,'p_fact','CT.py',535),
  ('errorFact -> <empty>','errorFact',0,'p_errorFact','CT.py',540),
  ('opAccess -> opStruct','opAccess',1,'p_opAccess','CT.py',546),
  ('opAccess -> opDictionary','opAccess',1,'p_opAccess','CT.py',547),
  ('opAccess -> empty','opAccess',1,'p_opAccess','CT.py',548),
  ('errorOpAccess -> <empty>','errorOpAccess',0,'p_errorOpAccess','CT.py',553),
  ('opStruct -> errorOpStruct [ expresion ] opMatrix','opStruct',5,'p_opStruct','CT.py',559),
  ('errorOpStruct -> <empty>','errorOpStruct',0,'p_errorOpStruct','CT.py',564),
  ('opMatrix -> errorOpMatrix [ expresion ]','opMatrix',4,'p_opMatrix','CT.py',570),
  ('opMatrix -> empty','opMatrix',1,'p_opMatrix','CT.py',571),
  ('errorOpMatrix -> <empty>','errorOpMatrix',0,'p_errorOpMatrix','CT.py',576),
  ('opDictionary -> . dictIndex','opDictionary',2,'p_opDictionary','CT.py',582),
  ('dictIndex -> FIRST','dictIndex',1,'p_dictIndex','CT.py',587),
  ('dictIndex -> LAST','dictIndex',1,'p_dictIndex','CT.py',588),
  ('cte -> CTED','cte',1,'p_cte','CT.py',593),
  ('cte -> CTEF','cte',1,'p_cte','CT.py',594),
  ('cte -> TRUE','cte',1,'p_cte','CT.py',595),
  ('cte -> FALSE','cte',1,'p_cte','CT.py',596),
  ('empty -> <empty>','empty',0,'p_empty','CT.py',601),
]
