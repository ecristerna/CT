
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'A56E25880958B47C2315BB696670A070'
    
_lr_action_items = {'RETURN':([8,11,21,24,26,27,62,64,73,77,78,79,81,88,89,90,92,93,94,102,109,111,117,150,184,221,244,258,265,272,273,281,283,],[-5,-6,-28,-27,-26,-9,-146,-146,-67,-62,-64,-65,-60,-146,-71,-70,-66,-22,-23,-146,-69,-21,-58,-146,-146,-50,256,-72,-146,-94,-97,-74,-96,]),'VARS':([7,10,46,67,150,],[-11,16,-11,-11,-11,]),'DIF':([127,131,132,134,135,136,137,138,139,140,141,155,162,163,164,166,170,171,174,175,178,180,190,195,196,197,198,200,203,213,217,218,228,229,236,248,261,262,279,],[-144,-142,-146,-124,-119,-145,-126,-125,-143,-114,-146,-84,-130,-133,-132,-131,-146,205,-120,-123,-146,-126,-127,-128,-140,-141,-139,-115,-118,-122,-146,-125,-116,-117,-121,-146,-134,-137,-136,]),'OBJECT':([16,22,44,55,61,62,64,70,82,102,103,245,],[-2,34,34,-2,34,-2,-2,34,34,-2,34,-2,]),'WHILE':([8,11,21,24,26,27,46,57,62,64,67,72,77,78,79,81,83,88,89,90,91,93,94,102,111,117,150,184,224,242,258,265,272,273,275,280,281,283,],[-5,-6,-28,-27,-26,-9,-146,-68,-146,-146,-146,-73,-62,-64,-65,-60,-68,-68,-71,-70,110,-22,-23,-146,-21,-58,-146,-68,-68,-68,-72,-146,-94,-97,-68,-68,-74,-96,]),'PROGRAM':([0,2,],[-4,3,]),'TRUE':([113,124,128,142,146,147,157,159,168,172,173,177,189,194,201,202,204,205,206,207,208,209,212,237,240,253,256,268,],[127,127,127,127,127,127,127,127,127,-129,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'LAST':([165,],[197,]),')':([31,32,34,35,41,59,69,101,113,116,118,123,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,151,152,155,156,158,160,162,163,164,166,167,169,170,171,174,175,176,178,179,180,182,185,187,190,191,192,193,195,196,197,198,199,200,203,210,211,213,214,217,218,222,227,228,229,230,231,232,233,234,235,236,238,248,249,250,251,252,257,259,261,262,263,269,279,],[-13,-14,-15,-16,-12,-44,85,-146,-146,-43,148,-146,155,-144,-146,-86,-142,-146,-146,-124,-119,-145,-126,-125,-143,-114,-146,-79,-76,-78,-146,188,-84,190,-102,-105,-130,-133,-132,-131,-85,-88,-146,-146,-120,-123,-30,-146,-31,-32,220,-10,-39,-127,-103,-101,-104,-128,-140,-141,-139,-146,-115,-118,-113,-106,-122,-29,-146,-125,-42,-87,-116,-117,-107,-108,-110,-111,-109,-112,-121,-35,-146,263,-36,-37,-80,-41,267,-134,-137,-34,-33,-136,]),'(':([39,43,45,48,52,97,110,112,113,115,124,128,132,142,146,147,157,159,168,172,173,177,178,189,194,201,202,204,205,206,207,208,209,212,217,240,253,256,268,],[-3,-100,55,61,-100,113,124,125,128,147,128,128,113,177,128,128,128,128,128,-129,128,128,113,128,128,128,128,128,128,128,128,128,128,128,113,128,128,128,128,]),'+':([127,131,132,134,135,136,137,138,139,141,155,162,163,164,166,170,174,175,178,180,190,195,196,197,198,213,217,218,236,248,261,262,279,],[-144,-142,-146,-124,-119,-145,-126,-125,-143,-146,-84,-130,-133,-132,-131,201,-120,-123,-146,-126,-127,-128,-140,-141,-139,-122,-146,-125,-121,-146,-134,-137,-136,]),'*':([127,131,132,134,136,137,138,139,141,155,162,163,164,166,178,180,190,195,196,197,198,217,218,248,261,262,279,],[-144,-142,-146,-124,-145,-126,-125,-143,172,-84,-130,-133,-132,-131,-146,-126,-127,-128,-140,-141,-139,-146,-125,-146,-134,-137,-136,]),'-':([127,131,132,134,135,136,137,138,139,141,155,162,163,164,166,170,174,175,178,180,190,195,196,197,198,213,217,218,236,248,261,262,279,],[-144,-142,-146,-124,-119,-145,-126,-125,-143,-146,-84,-130,-133,-132,-131,202,-120,-123,-146,-126,-127,-128,-140,-141,-139,-122,-146,-125,-121,-146,-134,-137,-136,]),',':([47,101,123,127,129,131,132,133,134,135,136,137,138,139,140,141,155,158,160,162,163,164,166,170,171,174,175,190,191,192,193,195,196,197,198,199,200,203,210,211,213,228,229,230,231,232,233,234,235,236,248,261,262,279,],[58,58,58,-144,-146,-142,-146,168,-124,-119,-145,-126,-125,-143,-114,-146,-84,-102,-105,-130,-133,-132,-131,-146,-146,-120,-123,-127,-103,-101,-104,-128,-140,-141,-139,168,-115,-118,-113,-106,-122,-116,-117,-107,-108,-110,-111,-109,-112,-121,-146,-134,-137,-136,]),'/':([127,131,132,134,136,137,138,139,141,155,162,163,164,166,178,180,190,195,196,197,198,217,218,248,261,262,279,],[-144,-142,-146,-124,-145,-126,-125,-143,173,-84,-130,-133,-132,-131,-146,-126,-127,-128,-140,-141,-139,-146,-125,-146,-134,-137,-136,]),'.':([132,178,217,],[165,165,165,]),'FIRST':([165,],[196,]),'DICT':([16,23,44,62,64,102,],[-63,37,52,-63,-63,-63,]),';':([47,49,51,59,60,75,95,98,100,101,104,116,119,121,123,127,129,131,132,134,135,136,137,138,139,140,141,143,144,145,148,151,154,155,158,160,162,163,164,166,170,171,174,175,176,178,179,180,183,186,190,191,192,193,195,196,197,198,200,203,210,211,213,214,223,225,228,229,230,231,232,233,234,235,236,248,252,261,262,263,266,269,279,],[-146,62,64,-44,-10,102,111,-25,-24,-146,-146,-43,-89,-93,-146,-144,-146,-142,-146,-124,-119,-145,-126,-125,-143,-114,-146,-79,-76,-78,-99,-45,189,-84,-102,-105,-130,-133,-132,-131,-146,-146,-120,-123,-30,-146,-31,-32,-92,-10,-127,-103,-101,-104,-128,-140,-141,-139,-115,-118,-113,-106,-122,-29,245,247,-116,-117,-107,-108,-110,-111,-109,-112,-121,-146,-80,-134,-137,-34,274,-33,-136,]),':':([31,32,34,35,41,76,127,131,136,139,215,217,218,238,],[-13,-14,-15,-16,-12,103,-144,-142,-145,-143,237,-37,-36,-35,]),'=':([97,114,153,219,239,241,264,270,],[-77,142,-77,-146,253,-82,-83,-81,]),'<':([127,131,132,134,135,136,137,138,139,140,141,155,162,163,164,166,170,171,174,175,178,180,190,195,196,197,198,200,203,213,217,218,228,229,236,248,261,262,279,],[-144,-142,-146,-124,-119,-145,-126,-125,-143,-114,-146,-84,-130,-133,-132,-131,-146,209,-120,-123,-146,-126,-127,-128,-140,-141,-139,-115,-118,-122,-146,-125,-116,-117,-121,-146,-134,-137,-136,]),'$end':([1,29,],[0,-1,]),'STRING':([16,22,44,55,61,62,64,70,82,102,103,245,],[-2,32,32,-2,32,-2,-2,32,32,-2,32,-2,]),'FOR':([8,11,21,24,26,27,46,57,62,64,67,72,77,78,79,81,83,88,89,90,93,94,96,102,111,117,150,184,224,242,258,265,272,273,275,280,281,283,],[-5,-6,-28,-27,-26,-9,-146,-68,-146,-146,-146,-75,-62,-64,-65,-60,-68,-68,-71,-70,-22,-23,112,-146,-21,-58,-146,-68,-68,-68,-72,-146,-94,-97,-68,-68,-74,-96,]),'ELSE':([265,271,],[-98,277,]),'>':([127,131,132,134,135,136,137,138,139,140,141,155,162,163,164,166,170,171,174,175,178,180,190,195,196,197,198,200,203,213,217,218,228,229,236,248,261,262,279,],[-144,-142,-146,-124,-119,-145,-126,-125,-143,-114,-146,-84,-130,-133,-132,-131,-146,207,-120,-123,-146,-126,-127,-128,-140,-141,-139,-115,-118,-122,-146,-125,-116,-117,-121,-146,-134,-137,-136,]),'RETURNS':([39,45,54,56,66,85,107,],[-3,-146,-57,-52,82,-53,-51,]),'FUNC':([7,8,9,11,12,13,21,24,26,27,62,64,77,78,79,81,84,102,117,],[-146,-5,-48,-6,-48,18,-28,-27,-26,-9,-146,-146,-62,-64,-65,-60,-46,-146,-58,]),'[':([31,32,34,35,41,50,53,65,97,104,114,132,148,153,161,178,217,219,248,260,],[-13,-14,-15,-16,-12,63,-90,-91,-77,120,146,-135,-99,-77,194,-135,-135,240,-138,268,]),']':([80,127,129,131,132,134,135,136,137,138,139,140,141,149,155,158,160,162,163,164,166,170,171,174,175,181,190,191,192,193,195,196,197,198,200,203,210,211,213,226,228,229,230,231,232,233,234,235,236,248,254,261,262,276,279,],[104,-144,-146,-142,-146,-124,-119,-145,-126,-125,-143,-114,-146,183,-84,-102,-105,-130,-133,-132,-131,-146,-146,-120,-123,219,-127,-103,-101,-104,-128,-140,-141,-139,-115,-118,-113,-106,-122,248,-116,-117,-107,-108,-110,-111,-109,-112,-121,-146,264,-134,-137,279,-136,]),'ID':([3,4,8,11,18,21,24,26,27,28,31,32,34,35,36,37,38,41,42,46,57,58,62,64,67,72,74,77,78,79,81,83,86,88,89,90,93,94,102,108,111,113,117,124,125,128,142,146,147,150,157,159,168,172,173,177,184,189,194,201,202,204,205,206,207,208,209,212,224,237,240,242,247,253,256,258,265,268,272,273,275,280,281,283,],[-2,5,-5,-6,-2,-28,-27,-26,-9,39,-13,-14,-15,-16,-59,43,44,-12,47,-146,-68,-10,-146,-146,-146,97,101,-62,-64,-65,-60,-68,-40,-68,-71,-70,-22,-23,-146,123,-21,132,-58,132,153,132,178,132,132,-146,132,132,132,-129,132,217,-68,132,132,132,132,132,132,132,132,132,132,132,-68,251,132,-68,153,178,132,-72,-146,132,-94,-97,-68,-68,-74,-96,]),'IF':([8,11,21,24,26,27,46,57,62,64,67,72,77,78,79,81,83,88,89,90,93,94,99,102,111,117,150,184,224,242,258,265,272,273,275,280,281,283,],[-5,-6,-28,-27,-26,-9,-146,-68,-146,-146,-146,-95,-62,-64,-65,-60,-68,-68,-71,-70,-22,-23,115,-146,-21,-58,-146,-68,-68,-68,-72,-146,-94,-97,-68,-68,-74,-96,]),'AND':([127,129,131,132,134,135,136,137,138,139,140,141,155,162,163,164,166,170,171,174,175,178,180,190,195,196,197,198,200,203,210,211,213,217,218,228,229,230,231,232,233,234,235,236,248,261,262,279,],[-144,157,-142,-146,-124,-119,-145,-126,-125,-143,-114,-146,-84,-130,-133,-132,-131,-146,-146,-120,-123,-146,-126,-127,-128,-140,-141,-139,-115,-118,-113,-106,-122,-146,-125,-116,-117,-107,-108,-110,-111,-109,-112,-121,-146,-134,-137,-136,]),'CTES':([113,124,128,142,146,147,157,159,168,172,173,177,189,194,201,202,204,205,206,207,208,209,212,216,237,240,253,256,268,],[134,134,134,134,134,134,134,134,134,-129,134,134,134,134,134,134,134,134,134,134,134,134,134,238,-38,134,134,134,134,]),'LTOEQ':([127,131,132,134,135,136,137,138,139,140,141,155,162,163,164,166,170,171,174,175,178,180,190,195,196,197,198,200,203,213,217,218,228,229,236,248,261,262,279,],[-144,-142,-146,-124,-119,-145,-126,-125,-143,-114,-146,-84,-130,-133,-132,-131,-146,208,-120,-123,-146,-126,-127,-128,-140,-141,-139,-115,-118,-122,-146,-125,-116,-117,-121,-146,-134,-137,-136,]),'FALSE':([113,124,128,142,146,147,157,159,168,172,173,177,189,194,201,202,204,205,206,207,208,209,212,237,240,253,256,268,],[136,136,136,136,136,136,136,136,136,-129,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,]),'STRUCT':([16,25,62,64,102,],[-61,38,-61,-61,-61,]),'INT':([16,22,33,44,55,61,62,64,70,82,102,103,245,],[-2,-17,41,-17,-2,-17,-2,-2,-17,-17,-2,-17,-2,]),'EQ':([127,131,132,134,135,136,137,138,139,140,141,155,162,163,164,166,170,171,174,175,178,180,190,195,196,197,198,200,203,213,217,218,228,229,236,248,261,262,279,],[-144,-142,-146,-124,-119,-145,-126,-125,-143,-114,-146,-84,-130,-133,-132,-131,-146,204,-120,-123,-146,-126,-127,-128,-140,-141,-139,-115,-118,-122,-146,-125,-116,-117,-121,-146,-134,-137,-136,]),'FLOAT':([16,22,44,55,61,62,64,70,82,102,103,245,],[-2,31,31,-2,31,-2,-2,31,31,-2,31,-2,]),'OR':([127,129,131,132,134,135,136,137,138,139,140,141,155,162,163,164,166,170,171,174,175,178,180,190,195,196,197,198,200,203,210,211,213,217,218,228,229,230,231,232,233,234,235,236,248,261,262,279,],[-144,159,-142,-146,-124,-119,-145,-126,-125,-143,-114,-146,-84,-130,-133,-132,-131,-146,-146,-120,-123,-146,-126,-127,-128,-140,-141,-139,-115,-118,-113,-106,-122,-146,-125,-116,-117,-107,-108,-110,-111,-109,-112,-121,-146,-134,-137,-136,]),'BOOL':([16,22,44,55,61,62,64,70,82,102,103,245,],[-2,35,35,-2,35,-2,-2,35,35,-2,35,-2,]),'CTED':([63,113,120,124,128,142,146,147,157,159,168,172,173,177,189,194,201,202,204,205,206,207,208,209,212,237,240,253,256,268,],[80,131,149,131,131,131,131,131,131,131,131,-129,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'GTOEQ':([127,131,132,134,135,136,137,138,139,140,141,155,162,163,164,166,170,171,174,175,178,180,190,195,196,197,198,200,203,213,217,218,228,229,236,248,261,262,279,],[-144,-142,-146,-124,-119,-145,-126,-125,-143,-114,-146,-84,-130,-133,-132,-131,-146,206,-120,-123,-146,-126,-127,-128,-140,-141,-139,-115,-118,-122,-146,-125,-116,-117,-121,-146,-134,-137,-136,]),'{':([5,6,30,31,32,34,35,39,40,41,45,54,56,85,105,107,122,188,220,267,277,],[-3,7,-19,-13,-14,-15,-16,-3,46,-12,-146,67,-52,-53,-56,-51,150,224,242,275,280,]),'MAIN':([7,8,9,11,12,14,15,17,20,21,24,26,27,62,64,77,78,79,81,84,102,117,],[-146,-5,-146,-6,-146,-8,-20,-7,30,-28,-27,-26,-9,-146,-146,-62,-64,-65,-60,-46,-146,-58,]),'}':([8,11,19,21,24,26,27,46,57,62,64,67,68,71,73,77,78,79,81,83,87,88,89,90,92,93,94,102,106,109,111,117,224,242,243,246,255,258,265,272,273,274,275,278,280,281,282,283,],[-5,-6,29,-28,-27,-26,-9,-146,-146,-146,-146,-146,84,87,-67,-62,-64,-65,-60,-146,-18,-146,-71,-70,-66,-22,-23,-146,-55,-69,-21,-58,-146,-146,-54,258,265,-72,-146,-94,-97,-49,-146,281,-146,-74,283,-96,]),'CTEF':([113,124,128,142,146,147,157,159,168,172,173,177,189,194,201,202,204,205,206,207,208,209,212,237,240,253,256,268,],[139,139,139,139,139,139,139,139,139,-129,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vars':([7,46,67,150,],[8,8,8,8,]),'errorOpSExp':([140,],[171,]),'errorMain':([15,],[20,]),'errorCyExp':([135,],[170,]),'opParamCall':([113,],[126,]),'cyTypeParam':([47,101,123,],[60,116,151,]),'forCycle':([72,],[90,]),'structType':([44,],[50,]),'struct':([44,],[51,]),'param':([55,245,],[69,257,]),'init':([114,239,],[145,252,]),'program':([0,],[1,]),'dict':([43,52,],[49,65,]),'opMatrix':([248,],[261,]),'errorExpresion':([158,],[192,]),'main':([15,],[19,]),'return':([221,],[243,]),'errorParam':([86,],[108,]),'errorElse':([265,],[271,]),'errorReturn':([221,],[244,]),'assignOptions':([114,],[144,]),'basicDeclare':([16,62,64,102,],[26,26,26,26,]),'cyInstruction':([72,],[92,]),'condition':([72,],[93,]),'expresion':([113,124,128,142,146,147,157,159,168,177,189,194,240,253,256,268,],[133,152,156,179,181,182,191,193,199,156,225,226,254,179,266,276,]),'term':([113,124,128,142,146,147,157,159,168,177,189,194,201,202,204,205,206,207,208,209,240,253,256,268,],[135,135,135,135,135,135,135,135,135,135,135,135,228,229,135,135,135,135,135,135,135,135,135,135,]),'funcCall':([72,113,124,128,142,146,147,157,159,168,173,177,189,194,201,202,204,205,206,207,208,209,212,240,253,256,268,],[98,137,137,137,180,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,180,137,137,]),'initDict':([114,],[143,]),'saveReturnType':([105,],[122,]),'dictDeclare':([16,62,64,102,],[21,21,21,21,]),'saveMain':([30,],[40,]),'errorVars':([7,46,67,150,],[10,10,10,10,]),'whileCycle':([72,],[89,]),'errorDictDeclare':([16,62,64,102,],[23,23,23,23,]),'opFunctions':([9,12,],[15,17,]),'errorOpStruct':([132,178,217,],[161,161,161,]),'opVars':([7,46,67,150,],[9,57,83,184,]),'errorInit':([176,],[214,]),'cyExpresion':([129,],[158,]),'body':([57,83,88,184,224,242,275,280,],[71,106,109,221,246,255,278,282,]),'errorOpReturns':([54,],[66,]),'opParameters':([45,],[54,]),'errorCondition':([72,],[99,]),'cte':([113,124,128,142,146,147,157,159,168,173,177,189,194,201,202,204,205,206,207,208,209,212,237,240,253,256,268,],[138,138,138,138,138,138,138,138,138,138,218,138,138,138,138,138,138,138,138,138,138,138,250,138,138,138,138,]),'saveProc':([5,39,],[6,45,]),'assign':([72,125,247,],[100,154,259,]),'errorStructDeclare':([16,62,64,102,],[25,25,25,25,]),'cyExp':([170,],[200,]),'instr':([72,],[88,]),'errorFact':([172,],[212,]),'errorProgram':([0,],[2,]),'cyTerm':([141,],[174,]),'errorAssignMatrix':([264,],[270,]),'cyDeclare':([62,64,102,],[77,81,117,]),'errorBody':([57,83,88,184,224,242,275,280,],[72,72,72,72,72,72,72,72,]),'opStruct':([132,178,217,],[162,162,162,]),'errorOpAccess':([163,],[195,]),'type':([22,44,61,70,82,103,],[36,53,76,86,105,118,]),'dictIndex':([165,],[198,]),'empty':([7,9,12,45,46,47,57,62,64,67,83,88,101,102,104,113,123,129,132,133,141,150,151,170,171,178,184,199,217,219,224,242,248,265,275,280,],[11,14,14,56,11,59,73,79,79,11,73,73,59,79,121,130,59,160,164,169,175,11,185,203,210,164,73,169,164,241,73,73,262,273,73,73,]),'errorBasicDeclare':([36,],[42,]),'function':([9,12,],[12,12,]),'errorOpMatrix':([248,],[260,]),'opDictionary':([132,178,217,],[166,166,166,]),'errorType':([22,44,61,70,82,103,],[33,33,33,33,33,33,]),'errorForCycle':([72,],[96,]),'opAccess':([132,178,217,],[163,163,163,]),'basicStatements':([72,],[95,]),'structDeclare':([16,62,64,102,],[24,24,24,24,]),'errorAssign':([97,153,],[114,114,]),'cyParam':([151,],[187,]),'opSExp':([171,],[211,]),'errorOpParameters':([85,],[107,]),'cyParamCall':([133,199,],[167,227,]),'declare':([16,62,64,102,],[27,78,78,78,]),'optionalMatrix':([104,],[119,]),'optionalElse':([265,],[272,]),'dictType':([177,237,],[215,249,]),'initWith':([142,253,],[176,176,]),'errorWhileCycle':([72,],[91,]),'sExp':([113,124,128,142,146,147,157,159,168,177,189,194,240,253,256,268,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'errorCyParam':([151,],[186,]),'opReturns':([54,],[68,]),'errorDictType':([177,237,],[216,216,]),'assignMatrix':([219,],[239,]),'errorDict':([43,52,],[48,48,]),'errorInitDict':([263,],[269,]),'saveType':([3,16,18,55,62,64,102,245,],[4,22,28,70,22,22,22,70,]),'saveID':([58,60,185,186,],[74,75,222,223,]),'cycle':([72,],[94,]),'errorFunction':([9,12,],[13,13,]),'exp':([113,124,128,142,146,147,157,159,168,177,189,194,204,205,206,207,208,209,240,253,256,268,],[140,140,140,140,140,140,140,140,140,140,140,140,230,231,232,233,234,235,140,140,140,140,]),'fact':([113,124,128,142,146,147,157,159,168,173,177,189,194,201,202,204,205,206,207,208,209,212,240,253,256,268,],[141,141,141,141,141,141,141,141,141,213,141,141,141,141,141,141,141,141,141,141,141,236,141,141,141,141,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> errorProgram PROGRAM saveType ID saveProc { opVars opFunctions main }','program',10,'p_program','CT.py',79),
  ('saveType -> <empty>','saveType',0,'p_saveType','CT.py',83),
  ('saveProc -> <empty>','saveProc',0,'p_saveProc','CT.py',91),
  ('errorProgram -> <empty>','errorProgram',0,'p_errorProgram','CT.py',105),
  ('opVars -> vars','opVars',1,'p_opVars','CT.py',111),
  ('opVars -> empty','opVars',1,'p_opVars','CT.py',112),
  ('opFunctions -> function opFunctions','opFunctions',2,'p_opFunctions','CT.py',117),
  ('opFunctions -> empty','opFunctions',1,'p_opFunctions','CT.py',118),
  ('vars -> errorVars VARS declare','vars',3,'p_vars','CT.py',122),
  ('saveID -> <empty>','saveID',0,'p_saveID','CT.py',127),
  ('errorVars -> <empty>','errorVars',0,'p_errorVars','CT.py',148),
  ('type -> errorType INT','type',2,'p_type','CT.py',154),
  ('type -> FLOAT','type',1,'p_type','CT.py',155),
  ('type -> STRING','type',1,'p_type','CT.py',156),
  ('type -> OBJECT','type',1,'p_type','CT.py',157),
  ('type -> BOOL','type',1,'p_type','CT.py',158),
  ('errorType -> <empty>','errorType',0,'p_errorType','CT.py',163),
  ('main -> errorMain MAIN saveMain { opVars body }','main',7,'p_main','CT.py',169),
  ('saveMain -> <empty>','saveMain',0,'p_saveMain','CT.py',173),
  ('errorMain -> <empty>','errorMain',0,'p_errorMain','CT.py',181),
  ('instr -> basicStatements ;','instr',2,'p_instr','CT.py',187),
  ('instr -> condition','instr',1,'p_instr','CT.py',188),
  ('instr -> cycle','instr',1,'p_instr','CT.py',189),
  ('basicStatements -> assign','basicStatements',1,'p_basicStatements','CT.py',193),
  ('basicStatements -> funcCall','basicStatements',1,'p_basicStatements','CT.py',194),
  ('declare -> basicDeclare','declare',1,'p_declare','CT.py',198),
  ('declare -> structDeclare','declare',1,'p_declare','CT.py',199),
  ('declare -> dictDeclare','declare',1,'p_declare','CT.py',200),
  ('init -> = initWith errorInit','init',3,'p_init','CT.py',205),
  ('errorInit -> <empty>','errorInit',0,'p_errorInit','CT.py',210),
  ('initWith -> expresion','initWith',1,'p_initWith','CT.py',216),
  ('initWith -> funcCall','initWith',1,'p_initWith','CT.py',217),
  ('initDict -> = ( dictType : dictType ) errorInitDict','initDict',7,'p_initDict','CT.py',222),
  ('errorInitDict -> <empty>','errorInitDict',0,'p_errorInitDict','CT.py',227),
  ('dictType -> errorDictType CTES','dictType',2,'p_dictType','CT.py',233),
  ('dictType -> cte','dictType',1,'p_dictType','CT.py',234),
  ('dictType -> ID','dictType',1,'p_dictType','CT.py',235),
  ('errorDictType -> <empty>','errorDictType',0,'p_errorDictType','CT.py',240),
  ('param -> saveType type errorParam ID cyTypeParam cyParam','param',6,'p_param','CT.py',246),
  ('errorParam -> <empty>','errorParam',0,'p_errorParam','CT.py',251),
  ('cyParam -> errorCyParam saveID ; param','cyParam',4,'p_cyParam','CT.py',257),
  ('cyParam -> empty saveID','cyParam',2,'p_cyParam','CT.py',258),
  ('cyTypeParam -> , saveID ID cyTypeParam','cyTypeParam',4,'p_cyTypeParam','CT.py',263),
  ('cyTypeParam -> empty','cyTypeParam',1,'p_cyTypeParam','CT.py',264),
  ('errorCyParam -> <empty>','errorCyParam',0,'p_errorCyParam','CT.py',269),
  ('function -> errorFunction FUNC saveType ID saveProc opParameters opReturns }','function',8,'p_function','CT.py',275),
  ('saveFunction -> <empty>','saveFunction',0,'p_saveFunction','CT.py',280),
  ('errorFunction -> <empty>','errorFunction',0,'p_errorFunction','CT.py',285),
  ('return -> errorReturn RETURN expresion ;','return',4,'p_return','CT.py',291),
  ('errorReturn -> <empty>','errorReturn',0,'p_errorReturn','CT.py',296),
  ('opParameters -> ( param ) errorOpParameters','opParameters',4,'p_opParameters','CT.py',302),
  ('opParameters -> empty','opParameters',1,'p_opParameters','CT.py',303),
  ('errorOpParameters -> <empty>','errorOpParameters',0,'p_errorOpParameters','CT.py',308),
  ('opReturns -> errorOpReturns RETURNS type saveReturnType { opVars body return','opReturns',8,'p_opReturns','CT.py',314),
  ('opReturns -> { opVars body','opReturns',3,'p_opReturns','CT.py',315),
  ('saveReturnType -> <empty>','saveReturnType',0,'p_saveReturnType','CT.py',320),
  ('errorOpReturns -> <empty>','errorOpReturns',0,'p_errorOpReturns','CT.py',329),
  ('basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare','basicDeclare',8,'p_basicDeclare','CT.py',335),
  ('errorBasicDeclare -> <empty>','errorBasicDeclare',0,'p_errorBasicDeclare','CT.py',340),
  ('structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare','structDeclare',6,'p_structDeclare','CT.py',346),
  ('errorStructDeclare -> <empty>','errorStructDeclare',0,'p_errorStructDeclare','CT.py',351),
  ('dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare','dictDeclare',6,'p_dictDeclare','CT.py',357),
  ('errorDictDeclare -> <empty>','errorDictDeclare',0,'p_errorDictDeclare','CT.py',362),
  ('cyDeclare -> declare','cyDeclare',1,'p_cyDeclare','CT.py',368),
  ('cyDeclare -> empty','cyDeclare',1,'p_cyDeclare','CT.py',369),
  ('body -> errorBody cyInstruction','body',2,'p_body','CT.py',374),
  ('body -> empty','body',1,'p_body','CT.py',375),
  ('errorBody -> <empty>','errorBody',0,'p_errorBody','CT.py',380),
  ('cyInstruction -> instr body','cyInstruction',2,'p_cyInstruction','CT.py',386),
  ('cycle -> forCycle','cycle',1,'p_cycle','CT.py',391),
  ('cycle -> whileCycle','cycle',1,'p_cycle','CT.py',392),
  ('whileCycle -> errorWhileCycle WHILE ( expresion ) { body }','whileCycle',8,'p_whileCycle','CT.py',397),
  ('errorWhileCycle -> <empty>','errorWhileCycle',0,'p_errorWhileCycle','CT.py',402),
  ('forCycle -> errorForCycle FOR ( assign ; expresion ; assign ) { body }','forCycle',12,'p_forCycle','CT.py',408),
  ('errorForCycle -> <empty>','errorForCycle',0,'p_errorForCycle','CT.py',413),
  ('assign -> ID errorAssign assignOptions','assign',3,'p_assign','CT.py',419),
  ('errorAssign -> <empty>','errorAssign',0,'p_errorAssign','CT.py',424),
  ('assignOptions -> init','assignOptions',1,'p_assignOptions','CT.py',430),
  ('assignOptions -> initDict','assignOptions',1,'p_assignOptions','CT.py',431),
  ('assignOptions -> [ expresion ] assignMatrix init','assignOptions',5,'p_assignOptions','CT.py',432),
  ('assignMatrix -> [ expresion ] errorAssignMatrix','assignMatrix',4,'p_assignMatrix','CT.py',437),
  ('assignMatrix -> empty','assignMatrix',1,'p_assignMatrix','CT.py',438),
  ('errorAssignMatrix -> <empty>','errorAssignMatrix',0,'p_errorAssignMatrix','CT.py',443),
  ('funcCall -> ID ( opParamCall )','funcCall',4,'p_funcCall','CT.py',449),
  ('opParamCall -> expresion cyParamCall','opParamCall',2,'p_opParamCall','CT.py',454),
  ('opParamCall -> empty','opParamCall',1,'p_opParamCall','CT.py',455),
  ('cyParamCall -> , expresion cyParamCall','cyParamCall',3,'p_cyParamCall','CT.py',460),
  ('cyParamCall -> empty','cyParamCall',1,'p_cyParamCall','CT.py',461),
  ('struct -> structType [ CTED ] optionalMatrix','struct',5,'p_struct','CT.py',466),
  ('structType -> type','structType',1,'p_structType','CT.py',471),
  ('structType -> DICT dict','structType',2,'p_structType','CT.py',472),
  ('optionalMatrix -> [ CTED ]','optionalMatrix',3,'p_optionalMatrix','CT.py',477),
  ('optionalMatrix -> empty','optionalMatrix',1,'p_optionalMatrix','CT.py',478),
  ('condition -> errorCondition IF ( expresion ) { body } optionalElse','condition',9,'p_condition','CT.py',483),
  ('errorCondition -> <empty>','errorCondition',0,'p_errorCondition','CT.py',488),
  ('optionalElse -> errorElse ELSE { body }','optionalElse',5,'p_optionalElse','CT.py',494),
  ('optionalElse -> empty','optionalElse',1,'p_optionalElse','CT.py',495),
  ('errorElse -> <empty>','errorElse',0,'p_errorElse','CT.py',500),
  ('dict -> errorDict ( type : type )','dict',6,'p_dict','CT.py',506),
  ('errorDict -> <empty>','errorDict',0,'p_errorDict','CT.py',511),
  ('expresion -> sExp cyExpresion errorExpresion','expresion',3,'p_expresion','CT.py',517),
  ('errorExpresion -> <empty>','errorExpresion',0,'p_errorExpresion','CT.py',522),
  ('cyExpresion -> AND expresion','cyExpresion',2,'p_cyExpresion','CT.py',528),
  ('cyExpresion -> OR expresion','cyExpresion',2,'p_cyExpresion','CT.py',529),
  ('cyExpresion -> empty','cyExpresion',1,'p_cyExpresion','CT.py',530),
  ('sExp -> exp errorOpSExp opSExp','sExp',3,'p_sExp','CT.py',535),
  ('opSExp -> EQ exp','opSExp',2,'p_opSExp','CT.py',540),
  ('opSExp -> DIF exp','opSExp',2,'p_opSExp','CT.py',541),
  ('opSExp -> LTOEQ exp','opSExp',2,'p_opSExp','CT.py',542),
  ('opSExp -> GTOEQ exp','opSExp',2,'p_opSExp','CT.py',543),
  ('opSExp -> > exp','opSExp',2,'p_opSExp','CT.py',544),
  ('opSExp -> < exp','opSExp',2,'p_opSExp','CT.py',545),
  ('opSExp -> empty','opSExp',1,'p_opSExp','CT.py',546),
  ('errorOpSExp -> <empty>','errorOpSExp',0,'p_errorOpSExp','CT.py',551),
  ('exp -> term errorCyExp cyExp','exp',3,'p_exp','CT.py',557),
  ('cyExp -> + term','cyExp',2,'p_cyExp','CT.py',562),
  ('cyExp -> - term','cyExp',2,'p_cyExp','CT.py',563),
  ('cyExp -> empty','cyExp',1,'p_cyExp','CT.py',564),
  ('errorCyExp -> <empty>','errorCyExp',0,'p_errorCyExp','CT.py',569),
  ('term -> fact cyTerm','term',2,'p_term','CT.py',575),
  ('cyTerm -> * errorFact fact','cyTerm',3,'p_cyTerm','CT.py',580),
  ('cyTerm -> / fact','cyTerm',2,'p_cyTerm','CT.py',581),
  ('cyTerm -> empty','cyTerm',1,'p_cyTerm','CT.py',582),
  ('fact -> CTES','fact',1,'p_fact','CT.py',587),
  ('fact -> cte','fact',1,'p_fact','CT.py',588),
  ('fact -> funcCall','fact',1,'p_fact','CT.py',589),
  ('fact -> ( expresion )','fact',3,'p_fact','CT.py',590),
  ('fact -> ID opAccess errorOpAccess','fact',3,'p_fact','CT.py',591),
  ('errorFact -> <empty>','errorFact',0,'p_errorFact','CT.py',596),
  ('opAccess -> opStruct','opAccess',1,'p_opAccess','CT.py',602),
  ('opAccess -> opDictionary','opAccess',1,'p_opAccess','CT.py',603),
  ('opAccess -> empty','opAccess',1,'p_opAccess','CT.py',604),
  ('errorOpAccess -> <empty>','errorOpAccess',0,'p_errorOpAccess','CT.py',609),
  ('opStruct -> errorOpStruct [ expresion ] opMatrix','opStruct',5,'p_opStruct','CT.py',615),
  ('errorOpStruct -> <empty>','errorOpStruct',0,'p_errorOpStruct','CT.py',620),
  ('opMatrix -> errorOpMatrix [ expresion ]','opMatrix',4,'p_opMatrix','CT.py',626),
  ('opMatrix -> empty','opMatrix',1,'p_opMatrix','CT.py',627),
  ('errorOpMatrix -> <empty>','errorOpMatrix',0,'p_errorOpMatrix','CT.py',632),
  ('opDictionary -> . dictIndex','opDictionary',2,'p_opDictionary','CT.py',638),
  ('dictIndex -> FIRST','dictIndex',1,'p_dictIndex','CT.py',643),
  ('dictIndex -> LAST','dictIndex',1,'p_dictIndex','CT.py',644),
  ('cte -> CTED','cte',1,'p_cte','CT.py',649),
  ('cte -> CTEF','cte',1,'p_cte','CT.py',650),
  ('cte -> TRUE','cte',1,'p_cte','CT.py',651),
  ('cte -> FALSE','cte',1,'p_cte','CT.py',652),
  ('empty -> <empty>','empty',0,'p_empty','CT.py',659),
]
