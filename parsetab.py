
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '313E541DEB7490B3AE365F73FBC13674'
    
_lr_action_items = {'RETURN':([8,11,18,21,23,24,53,62,64,65,66,72,77,83,88,99,101,103,107,111,112,121,127,299,324,336,337,341,345,347,348,351,353,356,368,371,372,],[-6,-7,-38,-37,-36,-10,-172,-172,-76,-80,-81,-78,-172,-74,-83,-172,-87,-86,-24,-82,-23,-85,-22,-172,-71,-172,-172,-89,-174,-122,-63,-88,-119,360,-121,-96,-92,]),'VARS':([7,10,67,154,299,],[-12,13,-12,-12,-12,]),'READ':([8,11,18,21,23,24,53,62,64,65,66,67,72,74,77,80,83,87,99,101,103,107,112,127,154,183,215,298,299,308,324,336,337,341,345,347,351,353,362,364,367,368,371,372,],[-6,-7,-38,-37,-36,-10,-172,-172,-76,-80,-81,-172,-78,-19,-172,-84,-74,100,-84,-87,-86,-24,-23,-22,-172,-71,-84,-84,-172,-84,-71,-172,-84,-89,-174,-122,-88,-119,-84,-95,-84,-121,-96,-92,]),'RES':([135,137,138,139,141,142,143,144,146,157,159,160,161,163,164,166,188,189,190,192,207,222,224,225,226,227,244,268,278,280,303,328,329,357,],[-179,-177,-181,-180,-179,-152,-151,-178,-186,-170,-168,-172,-150,-171,-169,197,-157,-156,-159,-158,-107,-184,-154,-166,-167,-165,-106,-153,-181,-152,-172,-160,-163,-162,]),'DIF':([135,137,138,139,140,141,142,143,144,146,157,159,160,161,162,163,164,166,177,188,189,190,192,193,198,199,207,210,222,224,225,226,227,228,231,244,268,273,274,278,280,303,304,305,307,328,329,357,],[-179,-177,-181,-180,-187,-179,-152,-151,-178,-186,-170,-168,-172,-150,-144,-171,-169,-172,-139,-157,-156,-159,-158,-172,-145,-149,-107,254,-184,-154,-166,-167,-165,-140,-143,-106,-153,-148,-147,-181,-152,-172,-141,-142,-146,-160,-163,-162,]),'WHILE':([8,11,18,21,23,24,53,62,64,65,66,67,72,74,77,80,83,87,99,101,103,104,107,112,127,154,183,215,298,299,308,324,336,337,341,345,347,351,353,362,364,367,368,371,372,],[-6,-7,-38,-37,-36,-10,-172,-172,-76,-80,-81,-172,-78,-19,-172,-84,-74,-91,-84,-87,-86,124,-24,-23,-22,-172,-71,-84,-84,-172,-84,-71,-172,-84,-89,-174,-122,-88,-119,-84,-95,-84,-121,-96,-92,]),'PROGRAM':([0,2,],[-5,3,]),'PRINT':([8,11,18,21,23,24,53,62,64,65,66,67,72,74,77,80,83,87,99,101,103,107,112,127,154,183,215,298,299,308,324,336,337,341,345,347,351,353,362,364,367,368,371,372,],[-6,-7,-38,-37,-36,-10,-172,-172,-76,-80,-81,-172,-78,-19,-172,-84,-74,102,-84,-87,-86,-24,-23,-22,-172,-71,-84,-84,-172,-84,-71,-172,-84,-89,-174,-122,-88,-119,-84,-95,-84,-121,-96,-92,]),'PARINI':([41,45,50,57,68,75,100,102,105,123,124,126,128,129,136,138,147,149,151,158,167,170,172,195,197,200,201,204,211,223,229,230,233,234,235,236,238,245,246,251,252,253,254,255,256,257,260,270,271,275,278,284,286,287,290,291,292,293,294,295,310,340,360,],[-125,-125,61,-4,-66,81,122,123,-108,136,-90,149,150,151,-183,-108,167,136,136,136,136,205,136,-35,-182,-182,-182,-40,-90,136,-182,-182,136,136,136,-155,136,-182,-182,136,-182,-182,-182,-182,-182,-182,136,136,136,136,-108,136,136,136,136,136,136,136,136,136,-182,136,136,]),'DIV':([135,137,138,139,141,142,143,144,146,157,159,160,161,163,164,166,188,189,190,192,207,222,224,225,226,227,244,268,278,280,303,328,329,357,],[-179,-177,-181,-180,-179,-152,-151,-178,-186,-170,-168,-172,-150,-171,-169,200,-157,-156,-159,-158,-107,-184,-154,-166,-167,-165,-106,-153,-181,-152,-172,-160,-163,-162,]),'.':([138,160,278,],[-181,191,-181,]),'TRUE':([123,136,149,151,158,167,170,172,195,197,200,201,204,205,211,223,229,230,233,234,235,236,238,245,246,251,252,253,254,255,256,257,260,270,271,275,281,284,286,287,290,291,292,293,294,295,310,340,360,],[135,-183,135,135,135,135,-182,135,-35,-182,-182,-182,-40,135,-90,135,-182,-182,135,135,135,-155,135,-182,-182,135,-182,-182,-182,-182,-182,-182,135,135,135,135,135,135,135,135,135,135,135,135,135,135,-182,135,135,]),'[':([52,63,85,105,125,138,148,160,178,187,243,278,303,327,],[-11,73,97,-181,-99,-181,172,-161,-181,223,284,-181,-164,340,]),'MULT':([135,137,138,139,141,142,143,144,146,157,159,160,161,163,164,166,188,189,190,192,207,222,224,225,226,227,244,268,278,280,303,328,329,357,],[-179,-177,-181,-180,-179,-152,-151,-178,-186,-170,-168,-172,-150,-171,-169,201,-157,-156,-159,-158,-107,-184,-154,-166,-167,-165,-106,-153,-181,-152,-172,-160,-163,-162,]),'LAST':([191,],[226,]),'MINUS':([135,137,138,139,140,141,142,143,144,146,157,159,160,161,162,163,164,166,188,189,190,192,193,198,199,207,222,224,225,226,227,244,268,273,274,278,280,303,307,328,329,357,],[-179,-177,-181,-180,-187,-179,-152,-151,-178,-186,-170,-168,-172,-150,-144,-171,-169,-172,-157,-156,-159,-158,230,-145,-149,-107,-184,-154,-166,-167,-165,-106,-153,-148,-147,-181,-152,-172,-146,-160,-163,-162,]),'LTOEQ':([135,137,138,139,140,141,142,143,144,146,157,159,160,161,162,163,164,166,177,188,189,190,192,193,198,199,207,210,222,224,225,226,227,228,231,244,268,273,274,278,280,303,304,305,307,328,329,357,],[-179,-177,-181,-180,-187,-179,-152,-151,-178,-186,-170,-168,-172,-150,-144,-171,-169,-172,-139,-157,-156,-159,-158,-172,-145,-149,-107,253,-184,-154,-166,-167,-165,-140,-143,-106,-153,-148,-147,-181,-152,-172,-141,-142,-146,-160,-163,-162,]),',':([49,82,134,135,137,138,139,140,141,142,143,144,145,146,155,156,157,159,160,161,162,163,164,165,166,174,176,177,185,188,189,190,192,193,198,199,207,208,209,210,222,224,225,226,227,228,231,244,247,248,258,259,268,272,273,274,288,289,296,302,303,304,305,306,307,313,314,315,316,317,318,319,320,321,326,328,329,339,357,],[58,58,-181,-179,-177,-181,-180,-187,-179,-152,-151,-178,-190,-186,58,-191,-170,-168,-172,-150,-144,-171,-169,195,-172,-189,-113,-139,219,-157,-156,-159,-158,-172,-145,-149,-107,-172,251,-172,-184,-154,-166,-167,-165,-140,-143,-106,-127,-130,-138,-188,-153,-190,-148,-147,-126,-113,-131,-181,-172,-141,-142,195,-146,-128,-129,251,-136,-134,-133,-137,-135,-132,-191,-160,-163,219,-162,]),'ASGN':([105,125,148,178,243,283,285,333,343,],[-181,-99,170,-181,-172,310,-104,-105,-103,]),'FIRST':([191,],[225,]),'LT':([135,137,138,139,140,141,142,143,144,146,157,159,160,161,162,163,164,166,177,188,189,190,192,193,198,199,207,210,222,224,225,226,227,228,231,244,268,273,274,278,280,303,304,305,307,328,329,357,],[-179,-177,-181,-180,-187,-179,-152,-151,-178,-186,-170,-168,-172,-150,-144,-171,-169,-172,-139,-157,-156,-159,-158,-172,-145,-149,-107,255,-184,-154,-166,-167,-165,-140,-143,-106,-153,-148,-147,-181,-152,-172,-141,-142,-146,-160,-163,-162,]),'PLUS':([135,137,138,139,140,141,142,143,144,146,157,159,160,161,162,163,164,166,188,189,190,192,193,198,199,207,222,224,225,226,227,244,268,273,274,278,280,303,307,328,329,357,],[-179,-177,-181,-180,-187,-179,-152,-151,-178,-186,-170,-168,-172,-150,-144,-171,-169,-172,-157,-156,-159,-158,229,-145,-149,-107,-184,-154,-166,-167,-165,-106,-153,-148,-147,-181,-152,-172,-146,-160,-163,-162,]),'BOOL':([13,19,35,44,53,61,62,77,78,81,91,182,325,],[-3,32,-3,32,-3,32,-3,-3,32,-3,32,32,-3,]),';':([43,49,51,59,60,70,82,85,93,94,95,96,106,108,109,113,115,133,135,137,138,139,140,141,142,143,144,146,155,157,159,160,161,162,163,164,166,168,169,171,174,177,179,184,188,189,190,192,193,198,199,203,207,208,210,217,222,224,225,226,227,228,231,232,244,247,248,258,259,265,267,268,273,274,277,278,279,280,288,296,297,301,303,304,305,307,311,313,314,316,317,318,319,320,321,322,328,329,332,342,357,363,366,],[53,-172,62,-54,-11,77,-172,-172,-53,-124,-114,-118,-27,-28,127,-26,-25,-117,-179,-177,-181,-180,-187,-179,-152,-151,-178,-186,-172,-170,-168,-172,-150,-144,-171,-169,-172,-101,-185,-100,-189,-139,211,-56,-157,-156,-159,-158,-172,-145,-149,-98,-107,-172,-172,-55,-184,-154,-166,-167,-165,-140,-143,-29,-106,-127,-130,-138,-188,-11,-32,-153,-148,-147,-39,-181,-41,-42,-126,-131,-175,325,-172,-141,-142,-146,-102,-128,-129,-136,-134,-133,-137,-135,-132,335,-160,-163,-44,-43,-162,-62,369,]),':':([29,30,32,39,71,135,137,141,144,157,159,163,164,239,241,242,282,],[-14,-15,-16,-13,78,-179,-177,-179,-178,-170,-168,-171,-169,281,-46,-47,-45,]),'$end':([1,36,46,],[0,-173,-1,]),'GT':([135,137,138,139,140,141,142,143,144,146,157,159,160,161,162,163,164,166,177,188,189,190,192,193,198,199,207,210,222,224,225,226,227,228,231,244,268,273,274,278,280,303,304,305,307,328,329,357,],[-179,-177,-181,-180,-187,-179,-152,-151,-178,-186,-170,-168,-172,-150,-144,-171,-169,-172,-139,-157,-156,-159,-158,-172,-145,-149,-107,252,-184,-154,-166,-167,-165,-140,-143,-106,-153,-148,-147,-181,-152,-172,-141,-142,-146,-160,-163,-162,]),'STRING':([13,19,35,44,53,61,62,77,78,81,91,182,325,],[-3,30,-3,30,-3,30,-3,-3,30,-3,30,30,-3,]),'FOR':([8,11,18,21,23,24,53,62,64,65,66,67,72,74,77,80,83,87,99,101,103,107,110,112,127,154,183,215,298,299,308,324,336,337,341,345,347,351,353,362,364,367,368,371,372,],[-6,-7,-38,-37,-36,-10,-172,-172,-76,-80,-81,-172,-78,-19,-172,-84,-74,-97,-84,-87,-86,-24,128,-23,-22,-172,-71,-84,-84,-172,-84,-71,-172,-84,-89,-174,-122,-88,-119,-84,-95,-84,-121,-96,-92,]),'ELSE':([336,346,],[-123,354,]),'RETURNS':([116,130,153,],[-66,-73,182,]),'FUNC':([7,8,9,11,12,16,17,18,21,23,24,28,53,62,64,65,66,72,77,83,181,213,],[-172,-6,-2,-7,-59,-59,-58,-38,-37,-36,-10,38,-172,-172,-76,-80,-81,-78,-172,-74,-60,-57,]),'PARFIN':([29,30,32,39,59,81,82,84,89,90,92,93,117,131,134,135,137,138,139,140,141,142,143,144,145,146,149,155,156,157,159,160,161,162,163,164,165,166,168,169,171,173,174,175,176,177,180,184,185,186,188,189,190,192,193,194,196,198,199,202,203,207,208,209,210,216,218,220,221,222,224,225,226,227,228,231,241,242,244,247,248,249,250,258,259,264,268,272,273,274,277,278,279,280,282,288,289,296,300,302,303,304,305,306,307,309,311,313,314,315,316,317,318,319,320,321,326,328,329,330,332,334,338,339,342,349,352,357,358,],[-14,-15,-16,-13,-54,-172,-172,94,116,-67,-65,-53,-68,-64,-181,-179,-177,-181,-180,-187,-179,-152,-151,-178,-190,-186,-172,-172,-191,-170,-168,-172,-150,-144,-171,-169,-172,-172,-101,-185,-100,207,-189,-110,-113,-139,212,-172,-172,222,-157,-156,-159,-158,-172,232,-31,-145,-149,237,-98,-107,-172,-172,-172,-55,-49,267,-34,-184,-154,-166,-167,-165,-140,-143,-46,-47,-106,-127,-130,-109,-112,-138,-188,-11,-153,-190,-148,-147,-39,-181,-41,-42,-45,-126,-113,-131,-52,-181,-172,-141,-142,-172,-146,332,-102,-128,-129,-172,-136,-134,-133,-137,-135,-132,-191,-160,-163,-30,-44,-111,-51,-172,-43,-33,-94,-162,361,]),']':([79,119,135,137,138,139,140,141,142,143,144,146,157,159,160,161,162,163,164,166,174,177,188,189,190,192,193,198,199,206,207,208,210,222,224,225,226,227,228,231,244,247,248,258,259,268,269,273,274,288,296,303,304,305,307,312,313,314,316,317,318,319,320,321,328,329,350,357,],[85,133,-179,-177,-181,-180,-187,-179,-152,-151,-178,-186,-170,-168,-172,-150,-144,-171,-169,-172,-189,-139,-157,-156,-159,-158,-172,-145,-149,243,-107,-172,-172,-184,-154,-166,-167,-165,-140,-143,-106,-127,-130,-138,-188,-153,303,-148,-147,-126,-131,-172,-141,-142,-146,333,-128,-129,-136,-134,-133,-137,-135,-132,-160,-163,357,-162,]),'ID':([3,4,8,11,18,21,23,24,29,30,32,33,34,38,39,40,42,48,53,54,55,58,62,64,65,66,67,69,72,74,76,77,80,83,87,94,99,101,103,107,112,118,122,123,127,132,136,149,150,151,154,158,167,170,172,183,195,197,200,201,204,205,211,215,219,223,229,230,233,234,235,236,238,245,246,251,252,253,254,255,256,257,260,266,270,271,275,281,284,286,287,290,291,292,293,294,295,298,299,308,310,324,335,336,337,340,341,344,345,347,351,353,360,362,364,367,368,371,372,],[-3,5,-6,-7,-38,-37,-36,-10,-14,-15,-16,-75,41,-3,-13,49,52,57,-172,-115,-116,-55,-172,-76,-80,-81,-172,-11,-78,-19,82,-172,-84,-74,105,-124,-84,-87,-86,-24,-23,-50,134,138,-22,155,-183,138,178,138,-172,138,138,-182,138,-71,-35,-182,-182,-182,-40,242,-90,-84,-35,138,-182,-182,138,138,138,-155,278,-182,-182,138,-182,-182,-182,-182,-182,-182,138,302,138,138,138,242,138,138,138,138,138,138,138,138,138,-84,-172,-84,-182,-71,-93,-172,-84,138,-89,178,-174,-122,-88,-119,138,-84,-95,-84,-121,-96,-92,]),'IF':([8,11,18,21,23,24,53,62,64,65,66,67,72,74,77,80,83,87,99,101,103,107,112,114,127,154,183,215,298,299,308,324,336,337,341,345,347,351,353,362,364,367,368,371,372,],[-6,-7,-38,-37,-36,-10,-172,-172,-76,-80,-81,-172,-78,-19,-172,-84,-74,-120,-84,-87,-86,-24,-23,129,-22,-172,-71,-84,-84,-172,-84,-71,-172,-84,-89,-174,-122,-88,-119,-84,-95,-84,-121,-96,-92,]),'AND':([135,137,138,139,140,141,142,143,144,146,157,159,160,161,162,163,164,166,174,177,188,189,190,192,193,198,199,207,208,210,222,224,225,226,227,228,231,244,258,259,268,273,274,278,280,296,303,304,305,307,316,317,318,319,320,321,328,329,357,],[-179,-177,-181,-180,-187,-179,-152,-151,-178,-186,-170,-168,-172,-150,-144,-171,-169,-172,-189,-139,-157,-156,-159,-158,-172,-145,-149,-107,245,-172,-184,-154,-166,-167,-165,-140,-143,-106,-138,-188,-153,-148,-147,-181,-152,-131,-172,-141,-142,-146,-136,-134,-133,-137,-135,-132,-160,-163,-162,]),'CTES':([123,136,149,151,158,167,170,172,195,197,200,201,204,205,211,223,229,230,233,234,235,236,238,240,245,246,251,252,253,254,255,256,257,260,270,271,275,281,284,286,287,290,291,292,293,294,295,310,340,360,],[139,-183,139,139,139,139,-182,139,-35,-182,-182,-182,-40,-48,-90,139,-182,-182,139,139,139,-155,139,282,-182,-182,139,-182,-182,-182,-182,-182,-182,139,139,139,139,-48,139,139,139,139,139,139,139,139,139,-182,139,139,]),'FALSE':([123,136,149,151,158,167,170,172,195,197,200,201,204,205,211,223,229,230,233,234,235,236,238,245,246,251,252,253,254,255,256,257,260,270,271,275,281,284,286,287,290,291,292,293,294,295,310,340,360,],[141,-183,141,141,141,141,-182,141,-35,-182,-182,-182,-40,141,-90,141,-182,-182,141,141,141,-155,141,-182,-182,141,-182,-182,-182,-182,-182,-182,141,141,141,141,141,141,141,141,141,141,141,141,141,141,-182,141,141,]),'STRUCT':([13,22,53,62,77,],[-77,35,-77,-77,-77,]),'INT':([13,19,31,35,44,53,61,62,77,78,81,91,182,325,],[-3,-17,39,-3,-17,-3,-17,-3,-3,-17,-3,-17,-17,-3,]),'EQ':([135,137,138,139,140,141,142,143,144,146,157,159,160,161,162,163,164,166,177,188,189,190,192,193,198,199,207,210,222,224,225,226,227,228,231,244,268,273,274,278,280,303,304,305,307,328,329,357,],[-179,-177,-181,-180,-187,-179,-152,-151,-178,-186,-170,-168,-172,-150,-144,-171,-169,-172,-139,-157,-156,-159,-158,-172,-145,-149,-107,257,-184,-154,-166,-167,-165,-140,-143,-106,-153,-148,-147,-181,-152,-172,-141,-142,-146,-160,-163,-162,]),'FLOAT':([13,19,35,44,53,61,62,77,78,81,91,182,325,],[-3,29,-3,29,-3,29,-3,-3,29,-3,29,29,-3,]),'OR':([135,137,138,139,140,141,142,143,144,146,157,159,160,161,162,163,164,166,174,177,188,189,190,192,193,198,199,207,208,210,222,224,225,226,227,228,231,244,258,259,268,273,274,278,280,296,303,304,305,307,316,317,318,319,320,321,328,329,357,],[-179,-177,-181,-180,-187,-179,-152,-151,-178,-186,-170,-168,-172,-150,-144,-171,-169,-172,-189,-139,-157,-156,-159,-158,-172,-145,-149,-107,246,-172,-184,-154,-166,-167,-165,-140,-143,-106,-138,-188,-153,-148,-147,-181,-152,-131,-172,-141,-142,-146,-136,-134,-133,-137,-135,-132,-160,-163,-162,]),'DICT':([13,20,35,53,62,77,],[-79,34,45,-79,-79,-79,]),'CTED':([73,97,123,136,149,151,158,167,170,172,195,197,200,201,204,205,211,223,229,230,233,234,235,236,238,245,246,251,252,253,254,255,256,257,260,270,271,275,281,284,286,287,290,291,292,293,294,295,310,340,360,],[79,119,137,-183,137,137,137,137,-182,137,-35,-182,-182,-182,-40,137,-90,137,-182,-182,137,137,137,-155,137,-182,-182,137,-182,-182,-182,-182,-182,-182,137,137,137,137,137,137,137,137,137,137,137,137,137,137,-182,137,137,]),'GTOEQ':([135,137,138,139,140,141,142,143,144,146,157,159,160,161,162,163,164,166,177,188,189,190,192,193,198,199,207,210,222,224,225,226,227,228,231,244,268,273,274,278,280,303,304,305,307,328,329,357,],[-179,-177,-181,-180,-187,-179,-152,-151,-178,-186,-170,-168,-172,-150,-144,-171,-169,-172,-139,-157,-156,-159,-158,-172,-145,-149,-107,256,-184,-154,-166,-167,-165,-140,-143,-106,-153,-148,-147,-181,-152,-172,-141,-142,-146,-160,-163,-162,]),'{':([5,6,29,30,32,37,39,47,56,116,130,212,214,237,261,262,276,354,359,361,],[-4,7,-14,-15,-16,-58,-13,-20,67,-66,154,-175,-72,-175,298,299,308,-176,362,364,]),'MAIN':([7,8,9,11,12,14,15,16,18,21,23,24,26,27,53,62,64,65,66,72,77,83,181,213,],[-172,-6,-2,-7,-172,-21,-9,-172,-38,-37,-36,-10,37,-8,-172,-172,-76,-80,-81,-78,-172,-74,-60,-57,]),'}':([8,11,18,21,23,24,25,53,62,64,65,66,67,72,74,77,80,83,86,88,98,99,101,103,107,111,112,120,121,127,152,154,183,215,263,298,308,323,331,336,341,345,347,351,353,355,362,364,365,367,368,369,370,371,372,],[-6,-7,-38,-37,-36,-10,36,-172,-172,-76,-80,-81,-172,-78,-19,-172,-172,-74,98,-83,-60,-172,-87,-86,-24,-82,-23,-18,-85,-22,181,-172,-71,-172,-70,-172,-172,336,341,-172,-89,-174,-122,-88,-119,-69,-172,-95,368,-172,-121,-61,371,-96,-92,]),'CTEF':([123,136,149,151,158,167,170,172,195,197,200,201,204,205,211,223,229,230,233,234,235,236,238,245,246,251,252,253,254,255,256,257,260,270,271,275,281,284,286,287,290,291,292,293,294,295,310,340,360,],[144,-183,144,144,144,144,-182,144,-35,-182,-182,-182,-40,144,-90,144,-182,-182,144,144,144,-155,144,-182,-182,144,-182,-182,-182,-182,-182,-182,144,144,144,144,144,144,144,144,144,144,144,144,144,144,-182,144,144,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vars':([7,67,154,299,],[8,8,8,8,]),'errorOpSExp':([177,],[210,]),'errorMain':([14,],[26,]),'errorCyExp':([162,],[193,]),'opParamCall':([149,],[173,]),'cyTypeParam':([49,82,155,],[60,93,184,]),'saveReturnValue':([363,],[366,]),'takeFondo':([222,],[268,]),'forCycle':([87,],[103,]),'structType':([35,],[42,]),'changeCurrentScope':([9,],[12,]),'struct':([35,],[43,]),'fix':([195,219,],[233,266,]),'checkFunction':([105,138,278,],[126,126,126,]),'param':([81,325,],[90,338,]),'init':([148,283,],[171,311,]),'program':([0,],[1,]),'dict':([41,45,],[51,55,]),'opMatrix':([303,],[328,]),'errorExpresion':([247,],[288,]),'main':([14,],[25,]),'return':([348,],[355,]),'errorParam':([118,],[132,]),'read':([87,],[108,]),'errorReturn':([348,],[356,]),'assignOptions':([148,],[169,]),'flagParameters':([68,116,],[75,130,]),'cyRead':([185,339,],[220,349,]),'basicDeclare':([13,53,62,77,],[23,23,23,23,]),'cyInstruction':([87,],[111,]),'condition':([87,],[112,]),'expresion':([149,151,158,167,172,223,238,251,260,284,286,287,340,360,],[176,180,186,202,206,269,279,289,297,312,313,314,350,363,]),'term':([123,149,151,158,167,172,223,233,234,235,238,251,260,270,271,275,284,286,287,290,291,292,293,294,295,340,360,],[140,140,140,140,140,140,140,140,273,274,140,140,140,140,140,307,140,140,140,140,140,140,140,140,140,140,140,]),'funcCall':([87,123,149,151,158,167,172,223,233,234,235,238,251,260,270,271,275,284,286,287,290,291,292,293,294,295,340,360,],[113,142,142,142,142,142,142,142,142,142,142,280,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,]),'initDict':([148,],[168,]),'saveCurrentTemps':([17,37,],[28,47,]),'returnFor':([352,],[358,]),'returnAssign':([371,],[372,]),'saveTypeParam':([58,216,217,],[69,264,265,]),'saltoBody':([335,],[344,]),'dictDeclare':([13,53,62,77,],[18,18,18,18,]),'saveMain':([47,],[56,]),'errorVars':([7,67,154,299,],[10,10,10,10,]),'generateInitialQuadruple':([74,],[80,]),'whileCycle':([87,],[101,]),'errorDictDeclare':([13,53,62,77,],[20,20,20,20,]),'performAndOr':([174,],[208,]),'opFunctions':([12,16,],[14,27,]),'errorOpStruct':([160,],[187,]),'saveVariable':([105,134,138,178,278,302,],[125,156,160,125,160,326,]),'opVars':([7,67,154,299,],[9,74,183,324,]),'saveOperator':([170,197,200,201,229,230,245,246,252,253,254,255,256,257,310,],[204,234,235,236,270,271,286,287,290,291,292,293,294,295,204,]),'errorInit':([204,],[238,]),'performAssign':([169,],[203,]),'cyExpresion':([208,],[247,]),'performRead':([156,326,],[185,339,]),'print':([87,],[106,]),'body':([80,99,215,298,308,337,362,367,],[86,121,263,323,331,348,365,370,]),'errorOpParameters':([117,],[131,]),'repeatWhile':([341,],[351,]),'printTables':([36,],[46,]),'saveParamToDirProc':([90,],[117,]),'saveReturnType':([214,],[262,]),'opParameters':([81,],[89,]),'errorCondition':([87,],[114,]),'cte':([123,149,151,158,167,172,205,223,233,234,235,238,251,260,270,271,275,281,284,286,287,290,291,292,293,294,295,340,360,],[143,143,143,143,143,143,241,143,143,143,143,143,143,143,143,143,143,241,143,143,143,143,143,143,143,143,143,143,143,]),'saveProc':([5,57,],[6,68,]),'assign':([87,150,344,],[115,179,352,]),'errorStructDeclare':([13,53,62,77,],[22,22,22,22,]),'cyExp':([193,],[228,]),'instr':([87,],[99,]),'errorFact':([236,],[275,]),'errorProgram':([0,],[2,]),'cyTerm':([166,],[198,]),'rellenaBody':([364,],[367,]),'errorAssignMatrix':([333,],[343,]),'cyDeclare':([53,62,77,],[64,72,83,]),'errorBody':([80,99,215,298,308,337,362,367,],[87,87,87,87,87,87,87,87,]),'opStruct':([160,],[189,]),'errorOpAccess':([190,],[224,]),'checkNumParams':([207,],[244,]),'saveConstantBool':([135,141,],[157,163,]),'type':([19,44,61,78,91,182,],[33,54,71,84,118,214,]),'dictIndex':([191,],[227,]),'empty':([7,12,16,49,53,62,67,77,80,81,82,85,99,149,154,155,160,165,166,184,185,193,208,209,210,215,243,298,299,303,306,308,315,336,337,339,362,367,],[11,15,15,59,66,66,11,66,88,92,59,96,88,175,11,59,192,196,199,216,221,231,248,250,258,88,285,88,11,329,196,88,250,347,88,221,88,88,]),'errorBasicDeclare':([33,],[40,]),'function':([12,16,],[16,16,]),'performMulDiv':([146,],[166,]),'saveConstantString':([139,],[161,]),'checkParamType':([176,289,],[209,315,]),'opDictionary':([160,],[188,]),'errorType':([19,44,61,78,91,182,],[31,31,31,31,31,31,]),'errorForCycle':([87,],[110,]),'opAccess':([160,],[190,]),'basicStatements':([87,],[109,]),'structDeclare':([13,53,62,77,],[21,21,21,21,]),'putFondo':([136,],[158,]),'errorAssign':([125,],[148,]),'saveReturn':([124,211,],[147,260,]),'cyParam':([184,],[218,]),'cyPrint':([165,306,],[194,330,]),'saveConstantFloat':([144,],[164,]),'errorOpReturns':([130,],[153,]),'performAddSub':([140,],[162,]),'cyParamCall':([209,315,],[249,334,]),'declare':([13,53,62,77,],[24,65,65,65,]),'saveQuadruple':([183,324,],[215,337,]),'opSExp':([210,],[259,]),'optionalMatrix':([85,],[95,]),'performPrint':([145,272,],[165,306,]),'saveFalso':([212,237,297,],[261,276,322,]),'clearVarsTable':([98,181,],[120,213,]),'optionalElse':([336,],[345,]),'errorOpMatrix':([303,],[327,]),'dictType':([205,281,],[239,309,]),'initWith':([238,],[277,]),'saveConstantInt':([137,],[159,]),'errorWhileCycle':([87,],[104,]),'sExp':([149,151,158,167,172,223,238,251,260,284,286,287,340,360,],[174,174,174,174,174,174,174,174,174,174,174,174,174,174,]),'errorElse':([336,],[346,]),'performRelational':([259,],[296,]),'errorCyParam':([184,],[217,]),'opReturns':([130,],[152,]),'errorDictType':([205,281,],[240,240,]),'assignMatrix':([243,],[283,]),'saveVerdadero':([354,],[359,]),'rellenaFalso':([345,],[353,]),'errorDict':([41,45,],[50,50,]),'errorInitDict':([332,],[342,]),'saveType':([3,13,35,38,53,62,77,81,325,],[4,19,44,48,19,19,19,91,91,]),'saveID':([52,60,69,264,265,],[63,70,76,300,301,]),'cycle':([87,],[107,]),'errorFunction':([12,16,],[17,17,]),'exp':([123,149,151,158,167,172,223,233,238,251,260,270,271,284,286,287,290,291,292,293,294,295,340,360,],[145,177,177,177,177,177,177,272,177,177,177,304,305,177,177,177,316,317,318,319,320,321,177,177,]),'fact':([123,149,151,158,167,172,223,233,234,235,238,251,260,270,271,275,284,286,287,290,291,292,293,294,295,340,360,],[146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables','program',12,'p_program','CT.py',352),
  ('changeCurrentScope -> <empty>','changeCurrentScope',0,'p_changeCurrentScope','CT.py',356),
  ('saveType -> <empty>','saveType',0,'p_saveType','CT.py',361),
  ('saveProc -> <empty>','saveProc',0,'p_saveProc','CT.py',368),
  ('errorProgram -> <empty>','errorProgram',0,'p_errorProgram','CT.py',391),
  ('opVars -> vars','opVars',1,'p_opVars','CT.py',402),
  ('opVars -> empty','opVars',1,'p_opVars','CT.py',403),
  ('opFunctions -> function opFunctions','opFunctions',2,'p_opFunctions','CT.py',408),
  ('opFunctions -> empty','opFunctions',1,'p_opFunctions','CT.py',409),
  ('vars -> errorVars VARS declare','vars',3,'p_vars','CT.py',413),
  ('saveID -> <empty>','saveID',0,'p_saveID','CT.py',418),
  ('errorVars -> <empty>','errorVars',0,'p_errorVars','CT.py',462),
  ('type -> errorType INT','type',2,'p_type','CT.py',468),
  ('type -> FLOAT','type',1,'p_type','CT.py',469),
  ('type -> STRING','type',1,'p_type','CT.py',470),
  ('type -> BOOL','type',1,'p_type','CT.py',471),
  ('errorType -> <empty>','errorType',0,'p_errorType','CT.py',476),
  ('main -> errorMain MAIN saveCurrentTemps saveMain { opVars generateInitialQuadruple body } clearVarsTable','main',10,'p_main','CT.py',482),
  ('generateInitialQuadruple -> <empty>','generateInitialQuadruple',0,'p_generateInitialQuadruple','CT.py',486),
  ('saveMain -> <empty>','saveMain',0,'p_saveMain','CT.py',495),
  ('errorMain -> <empty>','errorMain',0,'p_errorMain','CT.py',504),
  ('instr -> basicStatements ;','instr',2,'p_instr','CT.py',510),
  ('instr -> condition','instr',1,'p_instr','CT.py',511),
  ('instr -> cycle','instr',1,'p_instr','CT.py',512),
  ('basicStatements -> assign','basicStatements',1,'p_basicStatements','CT.py',516),
  ('basicStatements -> funcCall','basicStatements',1,'p_basicStatements','CT.py',517),
  ('basicStatements -> print','basicStatements',1,'p_basicStatements','CT.py',518),
  ('basicStatements -> read','basicStatements',1,'p_basicStatements','CT.py',519),
  ('print -> PRINT PARINI exp performPrint cyPrint PARFIN','print',6,'p_print','CT.py',522),
  ('cyPrint -> , fix exp performPrint cyPrint','cyPrint',5,'p_cyPrint','CT.py',525),
  ('cyPrint -> empty','cyPrint',1,'p_cyPrint','CT.py',526),
  ('read -> READ PARINI ID saveVariable performRead cyRead PARFIN','read',7,'p_read','CT.py',529),
  ('cyRead -> , fix ID saveVariable performRead cyRead','cyRead',6,'p_cyRead','CT.py',532),
  ('cyRead -> empty','cyRead',1,'p_cyRead','CT.py',533),
  ('fix -> <empty>','fix',0,'p_fix','CT.py',536),
  ('declare -> basicDeclare','declare',1,'p_declare','CT.py',541),
  ('declare -> structDeclare','declare',1,'p_declare','CT.py',542),
  ('declare -> dictDeclare','declare',1,'p_declare','CT.py',543),
  ('init -> ASGN saveOperator errorInit initWith','init',4,'p_init','CT.py',548),
  ('errorInit -> <empty>','errorInit',0,'p_errorInit','CT.py',552),
  ('initWith -> expresion','initWith',1,'p_initWith','CT.py',558),
  ('initWith -> funcCall','initWith',1,'p_initWith','CT.py',559),
  ('initDict -> ASGN PARINI dictType : dictType PARFIN errorInitDict','initDict',7,'p_initDict','CT.py',564),
  ('errorInitDict -> <empty>','errorInitDict',0,'p_errorInitDict','CT.py',569),
  ('dictType -> errorDictType CTES','dictType',2,'p_dictType','CT.py',575),
  ('dictType -> cte','dictType',1,'p_dictType','CT.py',576),
  ('dictType -> ID','dictType',1,'p_dictType','CT.py',577),
  ('errorDictType -> <empty>','errorDictType',0,'p_errorDictType','CT.py',582),
  ('param -> saveType type errorParam ID cyTypeParam cyParam','param',6,'p_param','CT.py',588),
  ('errorParam -> <empty>','errorParam',0,'p_errorParam','CT.py',593),
  ('cyParam -> errorCyParam saveTypeParam saveID ; param','cyParam',5,'p_cyParam','CT.py',599),
  ('cyParam -> empty saveTypeParam saveID','cyParam',3,'p_cyParam','CT.py',600),
  ('cyTypeParam -> , saveTypeParam saveID ID cyTypeParam','cyTypeParam',5,'p_cyTypeParam','CT.py',605),
  ('cyTypeParam -> empty','cyTypeParam',1,'p_cyTypeParam','CT.py',606),
  ('saveTypeParam -> <empty>','saveTypeParam',0,'p_saveTypeParam','CT.py',610),
  ('errorCyParam -> <empty>','errorCyParam',0,'p_errorCyParam','CT.py',620),
  ('function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable','function',14,'p_function','CT.py',626),
  ('saveCurrentTemps -> <empty>','saveCurrentTemps',0,'p_saveCurrentTemps','CT.py',630),
  ('errorFunction -> <empty>','errorFunction',0,'p_errorFunction','CT.py',642),
  ('clearVarsTable -> <empty>','clearVarsTable',0,'p_clearVarsTable','CT.py',647),
  ('return -> errorReturn RETURN expresion saveReturnValue ;','return',5,'p_return','CT.py',690),
  ('saveReturnValue -> <empty>','saveReturnValue',0,'p_saveReturnValue','CT.py',694),
  ('errorReturn -> <empty>','errorReturn',0,'p_errorReturn','CT.py',715),
  ('opParameters -> param saveParamToDirProc errorOpParameters','opParameters',3,'p_opParameters','CT.py',721),
  ('opParameters -> empty','opParameters',1,'p_opParameters','CT.py',722),
  ('flagParameters -> <empty>','flagParameters',0,'p_flagParameters','CT.py',726),
  ('saveParamToDirProc -> <empty>','saveParamToDirProc',0,'p_saveParamToDirProc','CT.py',731),
  ('errorOpParameters -> <empty>','errorOpParameters',0,'p_errorOpParameters','CT.py',738),
  ('opReturns -> errorOpReturns RETURNS type saveReturnType { opVars saveQuadruple body return','opReturns',9,'p_opReturns','CT.py',744),
  ('opReturns -> { opVars saveQuadruple body','opReturns',4,'p_opReturns','CT.py',745),
  ('saveQuadruple -> <empty>','saveQuadruple',0,'p_saveQuadruple','CT.py',749),
  ('saveReturnType -> <empty>','saveReturnType',0,'p_saveReturnType','CT.py',755),
  ('errorOpReturns -> <empty>','errorOpReturns',0,'p_errorOpReturns','CT.py',764),
  ('basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare','basicDeclare',8,'p_basicDeclare','CT.py',770),
  ('errorBasicDeclare -> <empty>','errorBasicDeclare',0,'p_errorBasicDeclare','CT.py',775),
  ('structDeclare -> errorStructDeclare STRUCT struct ; cyDeclare','structDeclare',5,'p_structDeclare','CT.py',781),
  ('errorStructDeclare -> <empty>','errorStructDeclare',0,'p_errorStructDeclare','CT.py',786),
  ('dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare','dictDeclare',6,'p_dictDeclare','CT.py',792),
  ('errorDictDeclare -> <empty>','errorDictDeclare',0,'p_errorDictDeclare','CT.py',797),
  ('cyDeclare -> declare','cyDeclare',1,'p_cyDeclare','CT.py',803),
  ('cyDeclare -> empty','cyDeclare',1,'p_cyDeclare','CT.py',804),
  ('body -> errorBody cyInstruction','body',2,'p_body','CT.py',809),
  ('body -> empty','body',1,'p_body','CT.py',810),
  ('errorBody -> <empty>','errorBody',0,'p_errorBody','CT.py',815),
  ('cyInstruction -> instr body','cyInstruction',2,'p_cyInstruction','CT.py',821),
  ('cycle -> forCycle','cycle',1,'p_cycle','CT.py',826),
  ('cycle -> whileCycle','cycle',1,'p_cycle','CT.py',827),
  ('whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile','whileCycle',11,'p_whileCycle','CT.py',832),
  ('repeatWhile -> <empty>','repeatWhile',0,'p_repeatWhile','CT.py',836),
  ('saveReturn -> <empty>','saveReturn',0,'p_saveReturn','CT.py',843),
  ('errorWhileCycle -> <empty>','errorWhileCycle',0,'p_errorWhileCycle','CT.py',847),
  ('forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign','forCycle',18,'p_forCycle','CT.py',853),
  ('saltoBody -> <empty>','saltoBody',0,'p_saltoBody','CT.py',857),
  ('returnFor -> <empty>','returnFor',0,'p_returnFor','CT.py',863),
  ('rellenaBody -> <empty>','rellenaBody',0,'p_rellenaBody','CT.py',875),
  ('returnAssign -> <empty>','returnAssign',0,'p_returnAssign','CT.py',883),
  ('errorForCycle -> <empty>','errorForCycle',0,'p_errorForCycle','CT.py',888),
  ('assign -> ID saveVariable errorAssign assignOptions performAssign','assign',5,'p_assign','CT.py',894),
  ('errorAssign -> <empty>','errorAssign',0,'p_errorAssign','CT.py',899),
  ('assignOptions -> init','assignOptions',1,'p_assignOptions','CT.py',905),
  ('assignOptions -> initDict','assignOptions',1,'p_assignOptions','CT.py',906),
  ('assignOptions -> [ expresion ] assignMatrix init','assignOptions',5,'p_assignOptions','CT.py',907),
  ('assignMatrix -> [ expresion ] errorAssignMatrix','assignMatrix',4,'p_assignMatrix','CT.py',912),
  ('assignMatrix -> empty','assignMatrix',1,'p_assignMatrix','CT.py',913),
  ('errorAssignMatrix -> <empty>','errorAssignMatrix',0,'p_errorAssignMatrix','CT.py',918),
  ('funcCall -> ID checkFunction PARINI opParamCall PARFIN checkNumParams','funcCall',6,'p_funcCall','CT.py',923),
  ('checkNumParams -> <empty>','checkNumParams',0,'p_checkNumParams','CT.py',927),
  ('checkFunction -> <empty>','checkFunction',0,'p_checkFunction','CT.py',958),
  ('opParamCall -> expresion checkParamType cyParamCall','opParamCall',3,'p_opParamCall','CT.py',974),
  ('opParamCall -> empty','opParamCall',1,'p_opParamCall','CT.py',975),
  ('cyParamCall -> , expresion checkParamType cyParamCall','cyParamCall',4,'p_cyParamCall','CT.py',980),
  ('cyParamCall -> empty','cyParamCall',1,'p_cyParamCall','CT.py',981),
  ('checkParamType -> <empty>','checkParamType',0,'p_checkParamType','CT.py',986),
  ('struct -> structType ID saveID [ CTED ] optionalMatrix','struct',7,'p_struct','CT.py',1013),
  ('structType -> saveType type','structType',2,'p_structType','CT.py',1018),
  ('structType -> DICT dict','structType',2,'p_structType','CT.py',1019),
  ('optionalMatrix -> [ CTED ]','optionalMatrix',3,'p_optionalMatrix','CT.py',1024),
  ('optionalMatrix -> empty','optionalMatrix',1,'p_optionalMatrix','CT.py',1025),
  ('condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso','condition',11,'p_condition','CT.py',1030),
  ('errorCondition -> <empty>','errorCondition',0,'p_errorCondition','CT.py',1035),
  ('optionalElse -> errorElse ELSE saveVerdadero { body }','optionalElse',6,'p_optionalElse','CT.py',1041),
  ('optionalElse -> empty','optionalElse',1,'p_optionalElse','CT.py',1042),
  ('errorElse -> <empty>','errorElse',0,'p_errorElse','CT.py',1047),
  ('dict -> errorDict PARINI type : type PARFIN','dict',6,'p_dict','CT.py',1053),
  ('errorDict -> <empty>','errorDict',0,'p_errorDict','CT.py',1058),
  ('expresion -> sExp performAndOr cyExpresion errorExpresion','expresion',4,'p_expresion','CT.py',1064),
  ('errorExpresion -> <empty>','errorExpresion',0,'p_errorExpresion','CT.py',1070),
  ('cyExpresion -> AND saveOperator expresion','cyExpresion',3,'p_cyExpresion','CT.py',1076),
  ('cyExpresion -> OR saveOperator expresion','cyExpresion',3,'p_cyExpresion','CT.py',1077),
  ('cyExpresion -> empty','cyExpresion',1,'p_cyExpresion','CT.py',1078),
  ('sExp -> exp errorOpSExp opSExp performRelational','sExp',4,'p_sExp','CT.py',1083),
  ('opSExp -> EQ saveOperator exp','opSExp',3,'p_opSExp','CT.py',1088),
  ('opSExp -> DIF saveOperator exp','opSExp',3,'p_opSExp','CT.py',1089),
  ('opSExp -> LTOEQ saveOperator exp','opSExp',3,'p_opSExp','CT.py',1090),
  ('opSExp -> GTOEQ saveOperator exp','opSExp',3,'p_opSExp','CT.py',1091),
  ('opSExp -> GT saveOperator exp','opSExp',3,'p_opSExp','CT.py',1092),
  ('opSExp -> LT saveOperator exp','opSExp',3,'p_opSExp','CT.py',1093),
  ('opSExp -> empty','opSExp',1,'p_opSExp','CT.py',1094),
  ('errorOpSExp -> <empty>','errorOpSExp',0,'p_errorOpSExp','CT.py',1098),
  ('exp -> term performAddSub errorCyExp cyExp','exp',4,'p_exp','CT.py',1104),
  ('cyExp -> PLUS saveOperator exp','cyExp',3,'p_cyExp','CT.py',1109),
  ('cyExp -> MINUS saveOperator exp','cyExp',3,'p_cyExp','CT.py',1110),
  ('cyExp -> empty','cyExp',1,'p_cyExp','CT.py',1111),
  ('errorCyExp -> <empty>','errorCyExp',0,'p_errorCyExp','CT.py',1116),
  ('term -> fact performMulDiv cyTerm','term',3,'p_term','CT.py',1121),
  ('cyTerm -> MULT saveOperator errorFact term','cyTerm',4,'p_cyTerm','CT.py',1126),
  ('cyTerm -> DIV saveOperator term','cyTerm',3,'p_cyTerm','CT.py',1127),
  ('cyTerm -> RES saveOperator term','cyTerm',3,'p_cyTerm','CT.py',1128),
  ('cyTerm -> empty','cyTerm',1,'p_cyTerm','CT.py',1129),
  ('fact -> CTES saveConstantString','fact',2,'p_fact','CT.py',1134),
  ('fact -> cte','fact',1,'p_fact','CT.py',1135),
  ('fact -> funcCall','fact',1,'p_fact','CT.py',1136),
  ('fact -> PARINI putFondo expresion PARFIN takeFondo','fact',5,'p_fact','CT.py',1137),
  ('fact -> ID saveVariable opAccess errorOpAccess','fact',4,'p_fact','CT.py',1138),
  ('errorFact -> <empty>','errorFact',0,'p_errorFact','CT.py',1143),
  ('opAccess -> opStruct','opAccess',1,'p_opAccess','CT.py',1149),
  ('opAccess -> opDictionary','opAccess',1,'p_opAccess','CT.py',1150),
  ('opAccess -> empty','opAccess',1,'p_opAccess','CT.py',1151),
  ('errorOpAccess -> <empty>','errorOpAccess',0,'p_errorOpAccess','CT.py',1156),
  ('opStruct -> errorOpStruct [ expresion ] opMatrix','opStruct',5,'p_opStruct','CT.py',1161),
  ('errorOpStruct -> <empty>','errorOpStruct',0,'p_errorOpStruct','CT.py',1166),
  ('opMatrix -> errorOpMatrix [ expresion ]','opMatrix',4,'p_opMatrix','CT.py',1172),
  ('opMatrix -> empty','opMatrix',1,'p_opMatrix','CT.py',1173),
  ('errorOpMatrix -> <empty>','errorOpMatrix',0,'p_errorOpMatrix','CT.py',1178),
  ('opDictionary -> . dictIndex','opDictionary',2,'p_opDictionary','CT.py',1184),
  ('dictIndex -> FIRST','dictIndex',1,'p_dictIndex','CT.py',1189),
  ('dictIndex -> LAST','dictIndex',1,'p_dictIndex','CT.py',1190),
  ('cte -> CTED saveConstantInt','cte',2,'p_cte','CT.py',1195),
  ('cte -> CTEF saveConstantFloat','cte',2,'p_cte','CT.py',1196),
  ('cte -> TRUE saveConstantBool','cte',2,'p_cte','CT.py',1197),
  ('cte -> FALSE saveConstantBool','cte',2,'p_cte','CT.py',1198),
  ('empty -> <empty>','empty',0,'p_empty','CT.py',1202),
  ('printTables -> <empty>','printTables',0,'p_printTables','CT.py',1207),
  ('rellenaFalso -> <empty>','rellenaFalso',0,'p_rellenaFalso','CT.py',1231),
  ('saveFalso -> <empty>','saveFalso',0,'p_saveFalso','CT.py',1236),
  ('saveVerdadero -> <empty>','saveVerdadero',0,'p_saveVerdadero','CT.py',1249),
  ('saveConstantInt -> <empty>','saveConstantInt',0,'p_saveConstantInt','CT.py',1256),
  ('saveConstantFloat -> <empty>','saveConstantFloat',0,'p_saveConstantFloat','CT.py',1273),
  ('saveConstantBool -> <empty>','saveConstantBool',0,'p_saveConstantBool','CT.py',1290),
  ('saveConstantString -> <empty>','saveConstantString',0,'p_saveConstantString','CT.py',1307),
  ('saveVariable -> <empty>','saveVariable',0,'p_saveVariable','CT.py',1326),
  ('saveOperator -> <empty>','saveOperator',0,'p_saveOperator','CT.py',1349),
  ('putFondo -> <empty>','putFondo',0,'p_putFondo','CT.py',1381),
  ('takeFondo -> <empty>','takeFondo',0,'p_takeFondo','CT.py',1386),
  ('performAssign -> <empty>','performAssign',0,'p_performAssign','CT.py',1393),
  ('performMulDiv -> <empty>','performMulDiv',0,'p_performMulDiv','CT.py',1414),
  ('performAddSub -> <empty>','performAddSub',0,'p_performAddSub','CT.py',1435),
  ('performRelational -> <empty>','performRelational',0,'p_performRelational','CT.py',1456),
  ('performAndOr -> <empty>','performAndOr',0,'p_performAndOr','CT.py',1477),
  ('performPrint -> <empty>','performPrint',0,'p_performPrint','CT.py',1498),
  ('performRead -> <empty>','performRead',0,'p_performRead','CT.py',1502),
]
