
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'A0AEDE1A62129803DE55DCD29090EAF9'
    
_lr_action_items = {'RETURN':([8,11,18,21,23,24,59,61,68,69,70,72,75,78,82,84,86,90,94,95,104,110,116,297,303,304,315,317,318,325,331,333,336,],[-6,-7,-37,-36,-35,-10,-159,-159,-75,-77,-78,-73,-80,-159,-159,-84,-83,-23,-79,-22,-71,-82,-21,-85,-159,-159,-107,-110,-159,-61,335,-87,-109,]),'VARS':([7,10,53,174,304,],[-12,13,-12,-12,-12,]),'READ':([8,11,18,21,23,24,53,59,61,63,68,69,70,72,74,78,82,84,86,90,95,104,116,174,216,234,253,297,303,304,315,317,318,323,329,333,336,],[-6,-7,-37,-36,-35,-10,-159,-159,-159,-81,-75,-77,-78,-73,83,-159,-81,-84,-83,-23,-22,-71,-21,-159,-81,-81,-81,-85,-159,-159,-107,-110,-81,-81,-81,-87,-109,]),'DIF':([126,128,129,130,131,132,133,134,135,137,144,153,154,156,163,168,181,182,183,185,186,190,191,220,222,223,224,225,226,229,261,266,271,272,292,293,294,296,309,310,332,],[-157,-155,-161,-137,-167,-158,-139,-138,-156,-166,-127,-159,-132,-159,-97,206,-144,-143,-146,-145,-159,-133,-136,-164,-141,-153,-154,-152,-128,-131,-140,-135,-139,-166,-159,-129,-130,-134,-147,-150,-149,]),'WHILE':([8,11,18,21,23,24,53,59,61,63,68,69,70,72,74,78,82,84,86,87,90,95,104,116,174,216,234,253,297,303,304,315,317,318,323,329,333,336,],[-6,-7,-37,-36,-35,-10,-159,-159,-159,-81,-75,-77,-78,-73,-86,-159,-81,-84,-83,113,-23,-22,-71,-21,-159,-81,-81,-81,-85,-159,-159,-107,-110,-81,-81,-81,-87,-109,]),'PROGRAM':([0,2,],[-5,3,]),'PRINT':([8,11,18,21,23,24,53,59,61,63,68,69,70,72,74,78,82,84,86,90,95,104,116,174,216,234,253,297,303,304,315,317,318,323,329,333,336,],[-6,-7,-37,-36,-35,-10,-159,-159,-159,-81,-75,-77,-78,-73,85,-159,-81,-84,-83,-23,-22,-71,-21,-159,-81,-81,-81,-85,-159,-159,-107,-110,-81,-81,-81,-87,-109,]),'PARINI':([41,45,47,51,54,64,83,85,88,112,113,115,117,118,127,129,138,146,152,160,162,166,188,192,193,196,199,200,204,205,206,207,208,209,212,221,227,228,231,232,233,235,241,242,245,246,247,248,249,250,263,264,267,276,299,320,335,],[-113,-4,58,-113,-64,76,111,112,115,127,138,127,145,146,-163,115,127,127,127,197,127,127,-34,-162,-162,-39,-162,-162,-162,-162,-162,-162,-162,-162,127,127,-162,-162,127,127,-142,127,127,127,127,127,127,127,127,127,127,127,127,127,-162,127,127,]),'DIV':([126,128,129,130,132,133,134,135,137,153,156,163,181,182,183,185,220,222,223,224,225,261,271,272,292,309,310,332,],[-157,-155,-161,-137,-158,-139,-138,-156,-166,-159,192,-97,-144,-143,-146,-145,-164,-141,-153,-154,-152,-140,-139,-166,-159,-147,-150,-149,]),'.':([129,153,],[-161,184,]),'TRUE':([112,115,127,138,146,152,160,162,166,188,192,193,196,197,199,200,204,205,206,207,208,209,212,221,227,228,231,232,233,235,241,242,245,246,247,248,249,250,263,264,267,273,276,299,320,335,],[126,126,-163,126,126,126,-162,126,126,-34,-162,-162,-39,126,-162,-162,-162,-162,-162,-162,-162,-162,126,126,-162,-162,126,126,-142,126,126,126,126,126,126,126,126,126,126,126,126,126,126,-162,126,126,]),'PARFIN':([29,30,32,39,56,76,99,100,102,103,105,115,120,122,125,126,128,129,130,131,132,133,134,135,136,137,140,141,142,143,144,148,151,153,154,155,156,157,158,159,161,163,164,165,167,168,171,175,177,178,179,181,182,183,185,186,187,189,190,191,195,201,202,203,210,211,217,220,222,223,224,225,226,229,238,239,243,244,251,257,259,260,261,265,266,269,270,271,272,274,278,279,280,281,282,283,284,285,289,291,292,293,294,295,296,298,300,302,305,307,309,310,311,312,321,326,332,],[-14,-15,-16,-13,-54,-159,119,-65,-63,-159,123,-159,-66,-53,-171,-157,-155,-161,-137,-167,-158,-139,-138,-156,-170,-166,163,-169,-99,-159,-127,-62,-159,-159,-132,-159,-159,194,-92,-165,-91,-97,-159,-98,-101,-159,213,-159,219,-33,220,-144,-143,-146,-145,-159,230,-30,-133,-136,-89,-115,-118,-159,-126,-168,-159,-164,-141,-153,-154,-152,-128,-131,-46,-47,-114,-100,-119,-11,-49,-171,-140,-170,-135,-38,-40,-42,-41,-45,-116,-117,-124,-122,-121,-125,-123,-120,-55,-159,-159,-129,-130,-159,-134,312,-93,314,-52,-32,-147,-150,-29,-44,-43,-51,-149,]),'MULT':([126,128,129,130,132,133,134,135,137,153,156,163,181,182,183,185,220,222,223,224,225,261,271,272,292,309,310,332,],[-157,-155,-161,-137,-158,-139,-138,-156,-166,-159,193,-97,-144,-143,-146,-145,-164,-141,-153,-154,-152,-140,-139,-166,-159,-147,-150,-149,]),'LAST':([184,],[224,]),'MINUS':([126,128,129,130,131,132,133,134,135,137,153,154,156,163,181,182,183,185,186,190,191,220,222,223,224,225,261,266,271,272,292,296,309,310,332,],[-157,-155,-161,-137,-167,-158,-139,-138,-156,-166,-159,-132,-159,-97,-144,-143,-146,-145,228,-133,-136,-164,-141,-153,-154,-152,-140,-135,-139,-166,-159,-134,-147,-150,-149,]),'LTOEQ':([126,128,129,130,131,132,133,134,135,137,144,153,154,156,163,168,181,182,183,185,186,190,191,220,222,223,224,225,226,229,261,266,271,272,292,293,294,296,309,310,332,],[-157,-155,-161,-137,-167,-158,-139,-138,-156,-166,-127,-159,-132,-159,-97,205,-144,-143,-146,-145,-159,-133,-136,-164,-141,-153,-154,-152,-128,-131,-140,-135,-139,-166,-159,-129,-130,-134,-147,-150,-149,]),',':([46,103,125,126,128,129,130,131,132,133,134,135,136,137,141,143,144,151,153,154,155,156,163,164,168,175,181,182,183,185,186,190,191,201,202,203,210,211,220,222,223,224,225,226,229,243,251,260,261,265,266,278,279,280,281,282,283,284,285,291,292,293,294,295,296,309,310,332,],[55,55,-171,-157,-155,-161,-137,-167,-158,-139,-138,-156,-170,-166,-169,166,-127,176,-159,-132,188,-159,-97,-159,-159,55,-144,-143,-146,-145,-159,-133,-136,-115,-118,166,-126,-168,-164,-141,-153,-154,-152,-128,-131,-114,-119,-171,-140,-170,-135,-116,-117,-124,-122,-121,-125,-123,-120,176,-159,-129,-130,188,-134,-147,-150,-149,]),'ASGN':([88,114,139,169,240,275,277,313,322,],[-161,-90,160,-161,-159,299,-95,-96,-94,]),'FIRST':([184,],[223,]),'LT':([126,128,129,130,131,132,133,134,135,137,144,153,154,156,163,168,181,182,183,185,186,190,191,220,222,223,224,225,226,229,261,266,271,272,292,293,294,296,309,310,332,],[-157,-155,-161,-137,-167,-158,-139,-138,-156,-166,-127,-159,-132,-159,-97,207,-144,-143,-146,-145,-159,-133,-136,-164,-141,-153,-154,-152,-128,-131,-140,-135,-139,-166,-159,-129,-130,-134,-147,-150,-149,]),'PLUS':([126,128,129,130,131,132,133,134,135,137,153,154,156,163,181,182,183,185,186,190,191,220,222,223,224,225,261,266,271,272,292,296,309,310,332,],[-157,-155,-161,-137,-167,-158,-139,-138,-156,-166,-159,-132,-159,-97,-144,-143,-146,-145,227,-133,-136,-164,-141,-153,-154,-152,-140,-135,-139,-166,-159,-134,-147,-150,-149,]),'BOOL':([13,19,42,58,59,61,76,78,79,101,215,319,],[-3,32,32,32,-3,-3,-3,-3,32,32,32,-3,]),';':([46,48,50,56,57,66,80,89,91,92,96,98,103,106,108,122,123,126,128,129,130,131,132,133,134,135,137,141,144,150,153,154,156,158,159,161,163,164,168,170,175,181,182,183,185,186,190,191,195,201,202,210,211,217,219,220,222,223,224,225,226,229,230,243,251,252,258,261,266,269,270,271,272,278,279,280,281,282,283,284,285,290,292,293,294,296,300,306,309,310,312,321,332,337,],[-159,59,61,-54,-11,78,-159,-26,-27,116,-25,-24,-159,-102,-106,-53,-112,-157,-155,-161,-137,-167,-158,-139,-138,-156,-166,-169,-127,-105,-159,-132,-159,-92,-165,-91,-97,-159,-159,212,-159,-144,-143,-146,-145,-159,-133,-136,-89,-115,-118,-126,-168,-56,-31,-164,-141,-153,-154,-152,-128,-131,-28,-114,-119,286,-11,-140,-135,-38,-40,-42,-41,-116,-117,-124,-122,-121,-125,-123,-120,-55,-159,-129,-130,-134,-93,319,-147,-150,-44,-43,-149,338,]),':':([29,30,32,39,67,126,128,132,135,236,238,239,274,],[-14,-15,-16,-13,79,-157,-155,-158,-156,273,-46,-47,-45,]),'$end':([1,36,43,],[0,-160,-1,]),'GT':([126,128,129,130,131,132,133,134,135,137,144,153,154,156,163,168,181,182,183,185,186,190,191,220,222,223,224,225,226,229,261,266,271,272,292,293,294,296,309,310,332,],[-157,-155,-161,-137,-167,-158,-139,-138,-156,-166,-127,-159,-132,-159,-97,204,-144,-143,-146,-145,-159,-133,-136,-164,-141,-153,-154,-152,-128,-131,-140,-135,-139,-166,-159,-129,-130,-134,-147,-150,-149,]),'STRING':([13,19,42,58,59,61,76,78,79,101,215,319,],[-3,30,30,30,-3,-3,-3,-3,30,30,30,-3,]),'FOR':([8,11,18,21,23,24,53,59,61,63,68,69,70,72,74,78,82,84,86,90,93,95,104,116,174,216,234,253,297,303,304,315,317,318,323,329,333,336,],[-6,-7,-37,-36,-35,-10,-159,-159,-159,-81,-75,-77,-78,-73,-88,-159,-81,-84,-83,-23,117,-22,-71,-21,-159,-81,-81,-81,-85,-159,-159,-107,-110,-81,-81,-81,-87,-109,]),'ELSE':([303,316,],[-111,324,]),'RETURNS':([119,147,173,],[-64,-70,215,]),'FUNC':([7,8,9,11,12,16,17,18,21,23,24,59,61,68,69,70,72,78,104,214,254,],[-159,-6,-2,-7,-58,-58,28,-37,-36,-35,-10,-159,-159,-75,-77,-78,-73,-159,-71,-59,-57,]),'[':([29,30,32,39,49,52,62,80,88,114,123,129,139,153,169,180,240,292,308,],[-14,-15,-16,-13,60,-103,-104,107,-161,-90,-112,-161,162,-148,-161,221,276,-151,320,]),']':([71,124,126,128,129,130,131,132,133,134,135,137,141,144,153,154,156,163,164,168,181,182,183,185,186,190,191,198,201,202,210,211,220,222,223,224,225,226,229,243,251,261,262,266,278,279,280,281,282,283,284,285,292,293,294,296,301,309,310,327,332,],[80,150,-157,-155,-161,-137,-167,-158,-139,-138,-156,-166,-169,-127,-159,-132,-159,-97,-159,-159,-144,-143,-146,-145,-159,-133,-136,240,-115,-118,-126,-168,-164,-141,-153,-154,-152,-128,-131,-114,-119,-140,292,-135,-116,-117,-124,-122,-121,-125,-123,-120,-159,-129,-130,-134,313,-147,-150,332,-149,]),'ID':([3,4,8,11,18,21,23,24,28,29,30,32,33,34,35,38,39,40,53,55,59,61,63,65,68,69,70,72,74,77,78,82,84,86,90,95,104,111,112,115,116,121,127,138,145,146,149,152,160,162,166,174,176,188,192,193,196,197,199,200,204,205,206,207,208,209,212,216,218,221,227,228,231,232,233,234,235,241,242,245,246,247,248,249,250,253,263,264,267,273,276,286,297,299,303,304,315,317,318,320,323,329,333,335,336,],[-3,5,-6,-7,-37,-36,-35,-10,-3,-14,-15,-16,-72,41,42,45,-13,46,-159,-11,-159,-159,-81,-55,-75,-77,-78,-73,88,103,-159,-81,-84,-83,-23,-22,-71,125,129,129,-21,-50,-163,129,169,129,175,129,-162,129,129,-159,-34,-34,-162,-162,-39,239,-162,-162,-162,-162,-162,-162,-162,-162,129,-81,260,129,-162,-162,129,129,-142,-81,129,129,129,129,129,129,129,129,129,-81,129,129,129,239,129,169,-85,-162,-159,-159,-107,-110,-81,129,-81,-81,-87,129,-109,]),'IF':([8,11,18,21,23,24,53,59,61,63,68,69,70,72,74,78,82,84,86,90,95,97,104,116,174,216,234,253,297,303,304,315,317,318,323,329,333,336,],[-6,-7,-37,-36,-35,-10,-159,-159,-159,-81,-75,-77,-78,-73,-108,-159,-81,-84,-83,-23,-22,118,-71,-21,-159,-81,-81,-81,-85,-159,-159,-107,-110,-81,-81,-81,-87,-109,]),'AND':([126,128,129,130,131,132,133,134,135,137,141,144,153,154,156,163,164,168,181,182,183,185,186,190,191,210,211,220,222,223,224,225,226,229,251,261,266,271,272,280,281,282,283,284,285,292,293,294,296,309,310,332,],[-157,-155,-161,-137,-167,-158,-139,-138,-156,-166,-169,-127,-159,-132,-159,-97,199,-159,-144,-143,-146,-145,-159,-133,-136,-126,-168,-164,-141,-153,-154,-152,-128,-131,-119,-140,-135,-139,-166,-124,-122,-121,-125,-123,-120,-159,-129,-130,-134,-147,-150,-149,]),'CTES':([112,115,127,138,146,152,160,162,166,188,192,193,196,197,199,200,204,205,206,207,208,209,212,221,227,228,231,232,233,235,237,241,242,245,246,247,248,249,250,263,264,267,273,276,299,320,335,],[130,130,-163,130,130,130,-162,130,130,-34,-162,-162,-39,-48,-162,-162,-162,-162,-162,-162,-162,-162,130,130,-162,-162,130,130,-142,130,274,130,130,130,130,130,130,130,130,130,130,130,-48,130,-162,130,130,]),'FALSE':([112,115,127,138,146,152,160,162,166,188,192,193,196,197,199,200,204,205,206,207,208,209,212,221,227,228,231,232,233,235,241,242,245,246,247,248,249,250,263,264,267,273,276,299,320,335,],[132,132,-163,132,132,132,-162,132,132,-34,-162,-162,-39,132,-162,-162,-162,-162,-162,-162,-162,-162,132,132,-162,-162,132,132,-142,132,132,132,132,132,132,132,132,132,132,132,132,132,132,-162,132,132,]),'STRUCT':([13,22,59,61,78,],[-74,35,-74,-74,-74,]),'INT':([13,19,31,42,58,59,61,76,78,79,101,215,319,],[-3,-17,39,-17,-17,-3,-3,-3,-3,-17,-17,-17,-3,]),'EQ':([126,128,129,130,131,132,133,134,135,137,144,153,154,156,163,168,181,182,183,185,186,190,191,220,222,223,224,225,226,229,261,266,271,272,292,293,294,296,309,310,332,],[-157,-155,-161,-137,-167,-158,-139,-138,-156,-166,-127,-159,-132,-159,-97,209,-144,-143,-146,-145,-159,-133,-136,-164,-141,-153,-154,-152,-128,-131,-140,-135,-139,-166,-159,-129,-130,-134,-147,-150,-149,]),'FLOAT':([13,19,42,58,59,61,76,78,79,101,215,319,],[-3,29,29,29,-3,-3,-3,-3,29,29,29,-3,]),'OR':([126,128,129,130,131,132,133,134,135,137,141,144,153,154,156,163,164,168,181,182,183,185,186,190,191,210,211,220,222,223,224,225,226,229,251,261,266,271,272,280,281,282,283,284,285,292,293,294,296,309,310,332,],[-157,-155,-161,-137,-167,-158,-139,-138,-156,-166,-169,-127,-159,-132,-159,-97,200,-159,-144,-143,-146,-145,-159,-133,-136,-126,-168,-164,-141,-153,-154,-152,-128,-131,-119,-140,-135,-139,-166,-124,-122,-121,-125,-123,-120,-159,-129,-130,-134,-147,-150,-149,]),'DICT':([13,20,42,59,61,78,],[-76,34,51,-76,-76,-76,]),'CTED':([60,107,112,115,127,138,146,152,160,162,166,188,192,193,196,197,199,200,204,205,206,207,208,209,212,221,227,228,231,232,233,235,241,242,245,246,247,248,249,250,263,264,267,273,276,299,320,335,],[71,124,128,128,-163,128,128,128,-162,128,128,-34,-162,-162,-39,128,-162,-162,-162,-162,-162,-162,-162,-162,128,128,-162,-162,128,128,-142,128,128,128,128,128,128,128,128,128,128,128,128,128,128,-162,128,128,]),'GTOEQ':([126,128,129,130,131,132,133,134,135,137,144,153,154,156,163,168,181,182,183,185,186,190,191,220,222,223,224,225,226,229,261,266,271,272,292,293,294,296,309,310,332,],[-157,-155,-161,-137,-167,-158,-139,-138,-156,-166,-127,-159,-132,-159,-97,208,-144,-143,-146,-145,-159,-133,-136,-164,-141,-153,-154,-152,-128,-131,-140,-135,-139,-166,-159,-129,-130,-134,-147,-150,-149,]),'{':([5,6,29,30,32,37,39,44,119,147,194,213,255,288,314,324,],[-4,7,-14,-15,-16,-19,-13,53,-64,174,234,253,-69,304,323,329,]),'MAIN':([7,8,9,11,12,14,15,16,18,21,23,24,26,27,59,61,68,69,70,72,78,104,214,254,],[-159,-6,-2,-7,-159,-20,-9,-159,-37,-36,-35,-10,37,-8,-159,-159,-75,-77,-78,-73,-159,-71,-59,-57,]),'}':([8,11,18,21,23,24,25,53,59,61,63,68,69,70,72,73,75,78,81,82,84,86,90,94,95,104,109,110,116,172,174,216,234,253,256,268,287,297,303,315,317,323,328,329,330,333,334,336,338,],[-6,-7,-37,-36,-35,-10,36,-159,-159,-159,-159,-75,-77,-78,-73,81,-80,-159,-59,-159,-84,-83,-23,-79,-22,-71,-18,-82,-21,214,-159,-159,-159,-159,-68,297,303,-85,-159,-107,-110,-159,333,-159,-67,-87,336,-109,-60,]),'CTEF':([112,115,127,138,146,152,160,162,166,188,192,193,196,197,199,200,204,205,206,207,208,209,212,221,227,228,231,232,233,235,241,242,245,246,247,248,249,250,263,264,267,273,276,299,320,335,],[135,135,-163,135,135,135,-162,135,135,-34,-162,-162,-39,135,-162,-162,-162,-162,-162,-162,-162,-162,135,135,-162,-162,135,135,-142,135,135,135,135,135,135,135,135,135,135,135,135,135,135,-162,135,135,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vars':([7,53,174,304,],[8,8,8,8,]),'errorOpSExp':([144,],[168,]),'errorMain':([14,],[26,]),'errorCyExp':([154,],[186,]),'opParamCall':([115,],[140,]),'cyTypeParam':([46,103,175,],[57,122,217,]),'takeFondo':([220,],[261,]),'forCycle':([74,],[86,]),'structType':([42,],[49,]),'changeCurrentScope':([9,],[12,]),'struct':([42,],[50,]),'fix':([176,188,],[218,231,]),'param':([76,319,],[100,326,]),'init':([139,275,],[161,300,]),'program':([0,],[1,]),'dict':([41,51,],[48,62,]),'opMatrix':([292,],[309,]),'errorExpresion':([201,],[243,]),'main':([14,],[25,]),'return':([325,],[330,]),'errorParam':([121,],[149,]),'read':([74,],[91,]),'errorReturn':([325,],[331,]),'assignOptions':([139,],[159,]),'flagParameters':([54,119,],[64,147,]),'cyRead':([151,291,],[177,307,]),'basicDeclare':([13,59,61,78,],[23,23,23,23,]),'cyInstruction':([74,],[94,]),'condition':([74,],[95,]),'expresion':([115,138,146,152,162,166,212,221,235,241,242,276,320,335,],[143,157,171,179,198,203,252,262,270,278,279,301,327,337,]),'term':([112,115,138,146,152,162,166,212,221,231,232,235,241,242,245,246,247,248,249,250,263,264,267,276,320,335,],[131,131,131,131,131,131,131,131,131,131,266,131,131,131,131,131,131,131,131,131,131,131,296,131,131,131,]),'funcCall':([74,112,115,138,146,152,162,166,212,221,231,232,235,241,242,245,246,247,248,249,250,263,264,267,276,320,335,],[96,133,133,133,133,133,133,133,133,133,133,133,271,133,133,133,133,133,133,133,133,133,133,133,133,133,133,]),'initDict':([139,],[158,]),'saveTypeParam':([65,289,290,],[77,305,306,]),'dictDeclare':([13,59,61,78,],[18,18,18,18,]),'saveMain':([37,],[44,]),'errorVars':([7,53,174,304,],[10,10,10,10,]),'whileCycle':([74,],[84,]),'errorDictDeclare':([13,59,61,78,],[20,20,20,20,]),'performAndOr':([141,],[164,]),'opFunctions':([12,16,],[14,27,]),'errorOpStruct':([153,],[180,]),'saveVariable':([88,129,169,],[114,153,114,]),'opVars':([7,53,174,304,],[9,63,216,318,]),'saveOperator':([160,192,193,199,200,204,205,206,207,208,209,227,228,299,],[196,232,233,241,242,245,246,247,248,249,250,263,264,196,]),'errorInit':([196,],[235,]),'performAssign':([159,],[195,]),'cyExpresion':([164,],[201,]),'performRead':([125,260,],[151,291,]),'print':([74,],[89,]),'body':([63,82,216,234,253,318,323,329,],[73,110,256,268,287,325,328,334,]),'errorOpParameters':([120,],[148,]),'printTables':([36,],[43,]),'saveParamToDirProc':([100,],[120,]),'saveReturnType':([255,],[288,]),'opParameters':([76,],[99,]),'errorCondition':([74,],[97,]),'cte':([112,115,138,146,152,162,166,197,212,221,231,232,235,241,242,245,246,247,248,249,250,263,264,267,273,276,320,335,],[134,134,134,134,134,134,134,238,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,238,134,134,134,]),'saveProc':([5,45,],[6,54,]),'assign':([74,145,286,],[98,170,302,]),'errorStructDeclare':([13,59,61,78,],[22,22,22,22,]),'cyExp':([186,],[226,]),'instr':([74,],[82,]),'errorFact':([233,],[267,]),'errorProgram':([0,],[2,]),'cyTerm':([156,],[190,]),'errorAssignMatrix':([313,],[322,]),'cyDeclare':([59,61,78,],[68,72,104,]),'errorBody':([63,82,216,234,253,318,323,329,],[74,74,74,74,74,74,74,74,]),'opStruct':([153,],[182,]),'errorOpAccess':([183,],[222,]),'type':([19,42,58,79,101,215,],[33,52,67,105,121,255,]),'dictIndex':([184,],[225,]),'empty':([7,12,16,46,53,59,61,63,76,78,80,82,103,115,143,151,153,155,156,164,168,174,175,186,203,216,217,234,240,253,291,292,295,303,304,318,323,329,],[11,15,15,56,11,70,70,75,102,70,108,75,56,142,167,178,185,189,191,202,210,11,56,229,167,75,257,75,277,75,178,310,189,317,11,75,75,75,]),'errorBasicDeclare':([33,],[40,]),'function':([12,16,],[16,16,]),'performMulDiv':([137,272,],[156,156,]),'errorOpMatrix':([292,],[308,]),'opDictionary':([153,],[181,]),'errorType':([19,42,58,79,101,215,],[31,31,31,31,31,31,]),'errorForCycle':([74,],[93,]),'opAccess':([153,],[183,]),'basicStatements':([74,],[92,]),'structDeclare':([13,59,61,78,],[21,21,21,21,]),'putFondo':([127,],[152,]),'errorAssign':([114,],[139,]),'cyParam':([217,],[259,]),'cyPrint':([155,295,],[187,311,]),'opSExp':([168,],[211,]),'errorOpReturns':([147,],[173,]),'performAddSub':([131,],[154,]),'cyParamCall':([143,203,],[165,244,]),'declare':([13,59,61,78,],[24,69,69,69,]),'optionalMatrix':([80,],[106,]),'performPrint':([136,265,],[155,295,]),'clearVarsTable':([81,214,],[109,254,]),'optionalElse':([303,],[315,]),'dictType':([197,273,],[236,298,]),'initWith':([235,],[269,]),'errorWhileCycle':([74,],[87,]),'sExp':([115,138,146,152,162,166,212,221,235,241,242,276,320,335,],[141,141,141,141,141,141,141,141,141,141,141,141,141,141,]),'errorElse':([303,],[316,]),'performRelational':([211,],[251,]),'errorCyParam':([217,],[258,]),'opReturns':([147,],[172,]),'errorDictType':([197,273,],[237,237,]),'assignMatrix':([240,],[275,]),'errorDict':([41,51,],[47,47,]),'errorInitDict':([312,],[321,]),'saveType':([3,13,28,59,61,76,78,319,],[4,19,38,19,19,101,19,101,]),'saveID':([55,57,257,258,],[65,66,289,290,]),'cycle':([74,],[90,]),'errorFunction':([12,16,],[17,17,]),'exp':([112,115,138,146,152,162,166,212,221,231,235,241,242,245,246,247,248,249,250,263,264,276,320,335,],[136,144,144,144,144,144,144,144,144,265,144,144,144,280,281,282,283,284,285,293,294,144,144,144,]),'fact':([112,115,138,146,152,162,166,212,221,231,232,235,241,242,245,246,247,248,249,250,263,264,267,276,320,335,],[137,137,137,137,137,137,137,137,137,137,137,272,137,137,137,137,137,137,137,137,137,137,137,137,137,137,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables','program',12,'p_program','CT.py',292),
  ('changeCurrentScope -> <empty>','changeCurrentScope',0,'p_changeCurrentScope','CT.py',296),
  ('saveType -> <empty>','saveType',0,'p_saveType','CT.py',301),
  ('saveProc -> <empty>','saveProc',0,'p_saveProc','CT.py',308),
  ('errorProgram -> <empty>','errorProgram',0,'p_errorProgram','CT.py',325),
  ('opVars -> vars','opVars',1,'p_opVars','CT.py',331),
  ('opVars -> empty','opVars',1,'p_opVars','CT.py',332),
  ('opFunctions -> function opFunctions','opFunctions',2,'p_opFunctions','CT.py',337),
  ('opFunctions -> empty','opFunctions',1,'p_opFunctions','CT.py',338),
  ('vars -> errorVars VARS declare','vars',3,'p_vars','CT.py',342),
  ('saveID -> <empty>','saveID',0,'p_saveID','CT.py',347),
  ('errorVars -> <empty>','errorVars',0,'p_errorVars','CT.py',375),
  ('type -> errorType INT','type',2,'p_type','CT.py',381),
  ('type -> FLOAT','type',1,'p_type','CT.py',382),
  ('type -> STRING','type',1,'p_type','CT.py',383),
  ('type -> BOOL','type',1,'p_type','CT.py',384),
  ('errorType -> <empty>','errorType',0,'p_errorType','CT.py',389),
  ('main -> errorMain MAIN saveMain { opVars body } clearVarsTable','main',8,'p_main','CT.py',395),
  ('saveMain -> <empty>','saveMain',0,'p_saveMain','CT.py',399),
  ('errorMain -> <empty>','errorMain',0,'p_errorMain','CT.py',407),
  ('instr -> basicStatements ;','instr',2,'p_instr','CT.py',413),
  ('instr -> condition','instr',1,'p_instr','CT.py',414),
  ('instr -> cycle','instr',1,'p_instr','CT.py',415),
  ('basicStatements -> assign','basicStatements',1,'p_basicStatements','CT.py',419),
  ('basicStatements -> funcCall','basicStatements',1,'p_basicStatements','CT.py',420),
  ('basicStatements -> print','basicStatements',1,'p_basicStatements','CT.py',421),
  ('basicStatements -> read','basicStatements',1,'p_basicStatements','CT.py',422),
  ('print -> PRINT PARINI exp performPrint cyPrint PARFIN','print',6,'p_print','CT.py',425),
  ('cyPrint -> , fix exp performPrint cyPrint','cyPrint',5,'p_cyPrint','CT.py',428),
  ('cyPrint -> empty','cyPrint',1,'p_cyPrint','CT.py',429),
  ('read -> READ PARINI ID performRead cyRead PARFIN','read',6,'p_read','CT.py',432),
  ('cyRead -> , fix ID performRead cyRead','cyRead',5,'p_cyRead','CT.py',435),
  ('cyRead -> empty','cyRead',1,'p_cyRead','CT.py',436),
  ('fix -> <empty>','fix',0,'p_fix','CT.py',439),
  ('declare -> basicDeclare','declare',1,'p_declare','CT.py',444),
  ('declare -> structDeclare','declare',1,'p_declare','CT.py',445),
  ('declare -> dictDeclare','declare',1,'p_declare','CT.py',446),
  ('init -> ASGN saveOperator errorInit initWith','init',4,'p_init','CT.py',451),
  ('errorInit -> <empty>','errorInit',0,'p_errorInit','CT.py',455),
  ('initWith -> expresion','initWith',1,'p_initWith','CT.py',461),
  ('initWith -> fact','initWith',1,'p_initWith','CT.py',462),
  ('initWith -> funcCall','initWith',1,'p_initWith','CT.py',463),
  ('initDict -> ASGN PARINI dictType : dictType PARFIN errorInitDict','initDict',7,'p_initDict','CT.py',468),
  ('errorInitDict -> <empty>','errorInitDict',0,'p_errorInitDict','CT.py',473),
  ('dictType -> errorDictType CTES','dictType',2,'p_dictType','CT.py',479),
  ('dictType -> cte','dictType',1,'p_dictType','CT.py',480),
  ('dictType -> ID','dictType',1,'p_dictType','CT.py',481),
  ('errorDictType -> <empty>','errorDictType',0,'p_errorDictType','CT.py',486),
  ('param -> saveType type errorParam ID cyTypeParam cyParam','param',6,'p_param','CT.py',492),
  ('errorParam -> <empty>','errorParam',0,'p_errorParam','CT.py',497),
  ('cyParam -> errorCyParam saveID saveTypeParam ; param','cyParam',5,'p_cyParam','CT.py',503),
  ('cyParam -> empty saveID saveTypeParam','cyParam',3,'p_cyParam','CT.py',504),
  ('cyTypeParam -> , saveID saveTypeParam ID cyTypeParam','cyTypeParam',5,'p_cyTypeParam','CT.py',509),
  ('cyTypeParam -> empty','cyTypeParam',1,'p_cyTypeParam','CT.py',510),
  ('saveTypeParam -> <empty>','saveTypeParam',0,'p_saveTypeParam','CT.py',514),
  ('errorCyParam -> <empty>','errorCyParam',0,'p_errorCyParam','CT.py',524),
  ('function -> errorFunction FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable','function',13,'p_function','CT.py',530),
  ('errorFunction -> <empty>','errorFunction',0,'p_errorFunction','CT.py',534),
  ('clearVarsTable -> <empty>','clearVarsTable',0,'p_clearVarsTable','CT.py',539),
  ('return -> errorReturn RETURN expresion ;','return',4,'p_return','CT.py',544),
  ('errorReturn -> <empty>','errorReturn',0,'p_errorReturn','CT.py',549),
  ('opParameters -> param saveParamToDirProc errorOpParameters','opParameters',3,'p_opParameters','CT.py',555),
  ('opParameters -> empty','opParameters',1,'p_opParameters','CT.py',556),
  ('flagParameters -> <empty>','flagParameters',0,'p_flagParameters','CT.py',560),
  ('saveParamToDirProc -> <empty>','saveParamToDirProc',0,'p_saveParamToDirProc','CT.py',565),
  ('errorOpParameters -> <empty>','errorOpParameters',0,'p_errorOpParameters','CT.py',573),
  ('opReturns -> errorOpReturns RETURNS type saveReturnType { opVars body return','opReturns',8,'p_opReturns','CT.py',579),
  ('opReturns -> { opVars body','opReturns',3,'p_opReturns','CT.py',580),
  ('saveReturnType -> <empty>','saveReturnType',0,'p_saveReturnType','CT.py',585),
  ('errorOpReturns -> <empty>','errorOpReturns',0,'p_errorOpReturns','CT.py',591),
  ('basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare','basicDeclare',8,'p_basicDeclare','CT.py',597),
  ('errorBasicDeclare -> <empty>','errorBasicDeclare',0,'p_errorBasicDeclare','CT.py',602),
  ('structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare','structDeclare',6,'p_structDeclare','CT.py',608),
  ('errorStructDeclare -> <empty>','errorStructDeclare',0,'p_errorStructDeclare','CT.py',613),
  ('dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare','dictDeclare',6,'p_dictDeclare','CT.py',619),
  ('errorDictDeclare -> <empty>','errorDictDeclare',0,'p_errorDictDeclare','CT.py',624),
  ('cyDeclare -> declare','cyDeclare',1,'p_cyDeclare','CT.py',630),
  ('cyDeclare -> empty','cyDeclare',1,'p_cyDeclare','CT.py',631),
  ('body -> errorBody cyInstruction','body',2,'p_body','CT.py',636),
  ('body -> empty','body',1,'p_body','CT.py',637),
  ('errorBody -> <empty>','errorBody',0,'p_errorBody','CT.py',642),
  ('cyInstruction -> instr body','cyInstruction',2,'p_cyInstruction','CT.py',648),
  ('cycle -> forCycle','cycle',1,'p_cycle','CT.py',653),
  ('cycle -> whileCycle','cycle',1,'p_cycle','CT.py',654),
  ('whileCycle -> errorWhileCycle WHILE PARINI expresion PARFIN { body }','whileCycle',8,'p_whileCycle','CT.py',659),
  ('errorWhileCycle -> <empty>','errorWhileCycle',0,'p_errorWhileCycle','CT.py',664),
  ('forCycle -> errorForCycle FOR PARINI assign ; expresion ; assign PARFIN { body }','forCycle',12,'p_forCycle','CT.py',670),
  ('errorForCycle -> <empty>','errorForCycle',0,'p_errorForCycle','CT.py',675),
  ('assign -> ID saveVariable errorAssign assignOptions performAssign','assign',5,'p_assign','CT.py',681),
  ('errorAssign -> <empty>','errorAssign',0,'p_errorAssign','CT.py',686),
  ('assignOptions -> init','assignOptions',1,'p_assignOptions','CT.py',692),
  ('assignOptions -> initDict','assignOptions',1,'p_assignOptions','CT.py',693),
  ('assignOptions -> [ expresion ] assignMatrix init','assignOptions',5,'p_assignOptions','CT.py',694),
  ('assignMatrix -> [ expresion ] errorAssignMatrix','assignMatrix',4,'p_assignMatrix','CT.py',699),
  ('assignMatrix -> empty','assignMatrix',1,'p_assignMatrix','CT.py',700),
  ('errorAssignMatrix -> <empty>','errorAssignMatrix',0,'p_errorAssignMatrix','CT.py',705),
  ('funcCall -> ID PARINI opParamCall PARFIN','funcCall',4,'p_funcCall','CT.py',711),
  ('opParamCall -> expresion cyParamCall','opParamCall',2,'p_opParamCall','CT.py',716),
  ('opParamCall -> empty','opParamCall',1,'p_opParamCall','CT.py',717),
  ('cyParamCall -> , expresion cyParamCall','cyParamCall',3,'p_cyParamCall','CT.py',722),
  ('cyParamCall -> empty','cyParamCall',1,'p_cyParamCall','CT.py',723),
  ('struct -> structType [ CTED ] optionalMatrix','struct',5,'p_struct','CT.py',728),
  ('structType -> type','structType',1,'p_structType','CT.py',733),
  ('structType -> DICT dict','structType',2,'p_structType','CT.py',734),
  ('optionalMatrix -> [ CTED ]','optionalMatrix',3,'p_optionalMatrix','CT.py',739),
  ('optionalMatrix -> empty','optionalMatrix',1,'p_optionalMatrix','CT.py',740),
  ('condition -> errorCondition IF PARINI expresion PARFIN { body } optionalElse','condition',9,'p_condition','CT.py',745),
  ('errorCondition -> <empty>','errorCondition',0,'p_errorCondition','CT.py',750),
  ('optionalElse -> errorElse ELSE { body }','optionalElse',5,'p_optionalElse','CT.py',756),
  ('optionalElse -> empty','optionalElse',1,'p_optionalElse','CT.py',757),
  ('errorElse -> <empty>','errorElse',0,'p_errorElse','CT.py',762),
  ('dict -> errorDict PARINI type : type PARFIN','dict',6,'p_dict','CT.py',768),
  ('errorDict -> <empty>','errorDict',0,'p_errorDict','CT.py',773),
  ('expresion -> sExp performAndOr cyExpresion errorExpresion','expresion',4,'p_expresion','CT.py',779),
  ('errorExpresion -> <empty>','errorExpresion',0,'p_errorExpresion','CT.py',785),
  ('cyExpresion -> AND saveOperator expresion','cyExpresion',3,'p_cyExpresion','CT.py',791),
  ('cyExpresion -> OR saveOperator expresion','cyExpresion',3,'p_cyExpresion','CT.py',792),
  ('cyExpresion -> empty','cyExpresion',1,'p_cyExpresion','CT.py',793),
  ('sExp -> exp errorOpSExp opSExp performRelational','sExp',4,'p_sExp','CT.py',798),
  ('opSExp -> EQ saveOperator exp','opSExp',3,'p_opSExp','CT.py',803),
  ('opSExp -> DIF saveOperator exp','opSExp',3,'p_opSExp','CT.py',804),
  ('opSExp -> LTOEQ saveOperator exp','opSExp',3,'p_opSExp','CT.py',805),
  ('opSExp -> GTOEQ saveOperator exp','opSExp',3,'p_opSExp','CT.py',806),
  ('opSExp -> GT saveOperator exp','opSExp',3,'p_opSExp','CT.py',807),
  ('opSExp -> LT saveOperator exp','opSExp',3,'p_opSExp','CT.py',808),
  ('opSExp -> empty','opSExp',1,'p_opSExp','CT.py',809),
  ('errorOpSExp -> <empty>','errorOpSExp',0,'p_errorOpSExp','CT.py',813),
  ('exp -> term performAddSub errorCyExp cyExp','exp',4,'p_exp','CT.py',819),
  ('cyExp -> PLUS saveOperator exp','cyExp',3,'p_cyExp','CT.py',824),
  ('cyExp -> MINUS saveOperator exp','cyExp',3,'p_cyExp','CT.py',825),
  ('cyExp -> empty','cyExp',1,'p_cyExp','CT.py',826),
  ('errorCyExp -> <empty>','errorCyExp',0,'p_errorCyExp','CT.py',831),
  ('term -> fact performMulDiv cyTerm','term',3,'p_term','CT.py',836),
  ('cyTerm -> MULT saveOperator errorFact term','cyTerm',4,'p_cyTerm','CT.py',841),
  ('cyTerm -> DIV saveOperator term','cyTerm',3,'p_cyTerm','CT.py',842),
  ('cyTerm -> empty','cyTerm',1,'p_cyTerm','CT.py',843),
  ('fact -> CTES','fact',1,'p_fact','CT.py',848),
  ('fact -> cte','fact',1,'p_fact','CT.py',849),
  ('fact -> funcCall','fact',1,'p_fact','CT.py',850),
  ('fact -> PARINI putFondo expresion PARFIN takeFondo','fact',5,'p_fact','CT.py',851),
  ('fact -> ID saveVariable opAccess errorOpAccess','fact',4,'p_fact','CT.py',852),
  ('errorFact -> <empty>','errorFact',0,'p_errorFact','CT.py',857),
  ('opAccess -> opStruct','opAccess',1,'p_opAccess','CT.py',863),
  ('opAccess -> opDictionary','opAccess',1,'p_opAccess','CT.py',864),
  ('opAccess -> empty','opAccess',1,'p_opAccess','CT.py',865),
  ('errorOpAccess -> <empty>','errorOpAccess',0,'p_errorOpAccess','CT.py',870),
  ('opStruct -> errorOpStruct [ expresion ] opMatrix','opStruct',5,'p_opStruct','CT.py',875),
  ('errorOpStruct -> <empty>','errorOpStruct',0,'p_errorOpStruct','CT.py',880),
  ('opMatrix -> errorOpMatrix [ expresion ]','opMatrix',4,'p_opMatrix','CT.py',886),
  ('opMatrix -> empty','opMatrix',1,'p_opMatrix','CT.py',887),
  ('errorOpMatrix -> <empty>','errorOpMatrix',0,'p_errorOpMatrix','CT.py',892),
  ('opDictionary -> . dictIndex','opDictionary',2,'p_opDictionary','CT.py',898),
  ('dictIndex -> FIRST','dictIndex',1,'p_dictIndex','CT.py',903),
  ('dictIndex -> LAST','dictIndex',1,'p_dictIndex','CT.py',904),
  ('cte -> CTED','cte',1,'p_cte','CT.py',909),
  ('cte -> CTEF','cte',1,'p_cte','CT.py',910),
  ('cte -> TRUE','cte',1,'p_cte','CT.py',911),
  ('cte -> FALSE','cte',1,'p_cte','CT.py',912),
  ('empty -> <empty>','empty',0,'p_empty','CT.py',916),
  ('printTables -> <empty>','printTables',0,'p_printTables','CT.py',921),
  ('saveVariable -> <empty>','saveVariable',0,'p_saveVariable','CT.py',934),
  ('saveOperator -> <empty>','saveOperator',0,'p_saveOperator','CT.py',957),
  ('putFondo -> <empty>','putFondo',0,'p_putFondo','CT.py',987),
  ('takeFondo -> <empty>','takeFondo',0,'p_takeFondo','CT.py',992),
  ('performAssign -> <empty>','performAssign',0,'p_performAssign','CT.py',999),
  ('performMulDiv -> <empty>','performMulDiv',0,'p_performMulDiv','CT.py',1020),
  ('performAddSub -> <empty>','performAddSub',0,'p_performAddSub','CT.py',1041),
  ('performRelational -> <empty>','performRelational',0,'p_performRelational','CT.py',1062),
  ('performAndOr -> <empty>','performAndOr',0,'p_performAndOr','CT.py',1083),
  ('performPrint -> <empty>','performPrint',0,'p_performPrint','CT.py',1104),
  ('performRead -> <empty>','performRead',0,'p_performeRead','CT.py',1108),
]
