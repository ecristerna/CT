
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '0878534C886F6221994F20E74A4A6146'
    
_lr_action_items = {'RETURN':([8,11,21,24,26,27,62,64,73,77,78,79,81,88,89,90,92,93,94,102,109,111,117,150,186,221,243,255,262,269,270,278,280,],[-5,-6,-28,-27,-26,-9,-146,-146,-67,-60,-64,-65,-58,-146,-71,-70,-66,-22,-23,-146,-69,-21,-56,-146,-146,-48,254,-72,-146,-94,-97,-74,-96,]),'VARS':([7,10,46,67,150,],[-11,16,-11,-11,-11,]),'DIF':([127,131,132,134,135,136,137,138,139,140,141,157,164,165,166,168,172,173,176,177,180,182,190,195,196,197,198,200,203,213,217,218,227,228,235,246,258,259,276,],[-144,-142,-146,-124,-119,-145,-126,-125,-143,-114,-146,-84,-130,-133,-132,-131,-146,205,-120,-123,-146,-126,-127,-128,-140,-141,-139,-115,-118,-122,-146,-125,-116,-117,-121,-146,-134,-137,-136,]),'OBJECT':([16,22,44,55,61,62,64,82,102,103,187,],[-2,34,34,34,34,-2,-2,34,-2,34,34,]),'WHILE':([8,11,21,24,26,27,46,57,62,64,67,72,77,78,79,81,83,88,89,90,91,93,94,102,111,117,150,186,223,241,255,262,269,270,272,277,278,280,],[-5,-6,-28,-27,-26,-9,-146,-68,-146,-146,-146,-73,-60,-64,-65,-58,-68,-68,-71,-70,110,-22,-23,-146,-21,-56,-146,-68,-68,-68,-72,-146,-94,-97,-68,-68,-74,-96,]),'PROGRAM':([0,2,],[-4,3,]),'TRUE':([113,124,128,142,146,147,159,161,170,174,175,179,189,194,201,202,204,205,206,207,208,209,212,236,239,251,254,265,],[127,127,127,127,127,127,127,127,127,-129,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'LAST':([167,],[197,]),')':([31,32,34,35,41,59,69,101,108,113,116,118,123,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,152,153,154,157,158,160,162,164,165,166,168,169,171,172,173,176,177,178,180,181,182,184,190,191,192,193,195,196,197,198,199,200,203,210,211,213,214,217,218,222,226,227,228,229,230,231,232,233,234,235,237,246,247,248,249,250,256,258,259,260,266,276,],[-13,-14,-15,-16,-12,-63,85,-146,-146,-146,-62,148,-146,157,-144,-146,-86,-142,-146,-146,-124,-119,-145,-126,-125,-143,-114,-146,-79,-76,-78,-39,-42,188,-84,190,-102,-105,-130,-133,-132,-131,-85,-88,-146,-146,-120,-123,-30,-146,-31,-32,220,-127,-103,-101,-104,-128,-140,-141,-139,-146,-115,-118,-113,-106,-122,-29,-146,-125,-41,-87,-116,-117,-107,-108,-110,-111,-109,-112,-121,-35,-146,260,-36,-37,-80,264,-134,-137,-34,-33,-136,]),'(':([39,43,45,48,52,97,110,112,113,115,124,128,132,142,146,147,159,161,170,174,175,179,180,189,194,201,202,204,205,206,207,208,209,212,217,239,251,254,265,],[-3,-100,55,61,-100,113,124,125,128,147,128,128,113,179,128,128,128,128,128,-129,128,128,113,128,128,128,128,128,128,128,128,128,128,128,113,128,128,128,128,]),'+':([127,131,132,134,135,136,137,138,139,141,157,164,165,166,168,172,176,177,180,182,190,195,196,197,198,213,217,218,235,246,258,259,276,],[-144,-142,-146,-124,-119,-145,-126,-125,-143,-146,-84,-130,-133,-132,-131,201,-120,-123,-146,-126,-127,-128,-140,-141,-139,-122,-146,-125,-121,-146,-134,-137,-136,]),'*':([127,131,132,134,136,137,138,139,141,157,164,165,166,168,180,182,190,195,196,197,198,217,218,246,258,259,276,],[-144,-142,-146,-124,-145,-126,-125,-143,174,-84,-130,-133,-132,-131,-146,-126,-127,-128,-140,-141,-139,-146,-125,-146,-134,-137,-136,]),'-':([127,131,132,134,135,136,137,138,139,141,157,164,165,166,168,172,176,177,180,182,190,195,196,197,198,213,217,218,235,246,258,259,276,],[-144,-142,-146,-124,-119,-145,-126,-125,-143,-146,-84,-130,-133,-132,-131,202,-120,-123,-146,-126,-127,-128,-140,-141,-139,-122,-146,-125,-121,-146,-134,-137,-136,]),',':([47,101,108,127,129,131,132,133,134,135,136,137,138,139,140,141,157,160,162,164,165,166,168,172,173,176,177,190,191,192,193,195,196,197,198,199,200,203,210,211,213,227,228,229,230,231,232,233,234,235,246,258,259,276,],[58,58,58,-144,-146,-142,-146,170,-124,-119,-145,-126,-125,-143,-114,-146,-84,-102,-105,-130,-133,-132,-131,-146,-146,-120,-123,-127,-103,-101,-104,-128,-140,-141,-139,170,-115,-118,-113,-106,-122,-116,-117,-107,-108,-110,-111,-109,-112,-121,-146,-134,-137,-136,]),'/':([127,131,132,134,136,137,138,139,141,157,164,165,166,168,180,182,190,195,196,197,198,217,218,246,258,259,276,],[-144,-142,-146,-124,-145,-126,-125,-143,175,-84,-130,-133,-132,-131,-146,-126,-127,-128,-140,-141,-139,-146,-125,-146,-134,-137,-136,]),'.':([132,180,217,],[167,167,167,]),'FIRST':([167,],[196,]),'DICT':([16,23,44,62,64,102,],[-61,37,52,-61,-61,-61,]),';':([47,49,51,59,60,75,95,98,100,101,104,108,116,119,121,123,127,129,131,132,134,135,136,137,138,139,140,141,143,144,145,148,151,156,157,160,162,164,165,166,168,172,173,176,177,178,180,181,182,185,190,191,192,193,195,196,197,198,200,203,210,211,213,214,224,227,228,229,230,231,232,233,234,235,246,250,258,259,260,263,266,276,],[-146,62,64,-63,-10,102,111,-25,-24,-146,-146,-146,-62,-89,-93,-43,-144,-146,-142,-146,-124,-119,-145,-126,-125,-143,-114,-146,-79,-76,-78,-99,187,189,-84,-102,-105,-130,-133,-132,-131,-146,-146,-120,-123,-30,-146,-31,-32,-92,-127,-103,-101,-104,-128,-140,-141,-139,-115,-118,-113,-106,-122,-29,245,-116,-117,-107,-108,-110,-111,-109,-112,-121,-146,-80,-134,-137,-34,271,-33,-136,]),':':([31,32,34,35,41,76,127,131,136,139,215,217,218,237,],[-13,-14,-15,-16,-12,103,-144,-142,-145,-143,236,-37,-36,-35,]),'=':([97,114,155,219,238,240,261,267,],[-77,142,-77,-146,251,-82,-83,-81,]),'<':([127,131,132,134,135,136,137,138,139,140,141,157,164,165,166,168,172,173,176,177,180,182,190,195,196,197,198,200,203,213,217,218,227,228,235,246,258,259,276,],[-144,-142,-146,-124,-119,-145,-126,-125,-143,-114,-146,-84,-130,-133,-132,-131,-146,209,-120,-123,-146,-126,-127,-128,-140,-141,-139,-115,-118,-122,-146,-125,-116,-117,-121,-146,-134,-137,-136,]),'$end':([1,29,],[0,-1,]),'STRING':([16,22,44,55,61,62,64,82,102,103,187,],[-2,32,32,32,32,-2,-2,32,-2,32,32,]),'FOR':([8,11,21,24,26,27,46,57,62,64,67,72,77,78,79,81,83,88,89,90,93,94,96,102,111,117,150,186,223,241,255,262,269,270,272,277,278,280,],[-5,-6,-28,-27,-26,-9,-146,-68,-146,-146,-146,-75,-60,-64,-65,-58,-68,-68,-71,-70,-22,-23,112,-146,-21,-56,-146,-68,-68,-68,-72,-146,-94,-97,-68,-68,-74,-96,]),'ELSE':([262,268,],[-98,274,]),'>':([127,131,132,134,135,136,137,138,139,140,141,157,164,165,166,168,172,173,176,177,180,182,190,195,196,197,198,200,203,213,217,218,227,228,235,246,258,259,276,],[-144,-142,-146,-124,-119,-145,-126,-125,-143,-114,-146,-84,-130,-133,-132,-131,-146,207,-120,-123,-146,-126,-127,-128,-140,-141,-139,-115,-118,-122,-146,-125,-116,-117,-121,-146,-134,-137,-136,]),'RETURNS':([39,45,54,56,66,85,107,],[-3,-146,-55,-50,82,-51,-49,]),'FUNC':([7,8,9,11,12,13,21,24,26,27,62,64,77,78,79,81,84,102,117,],[-146,-5,-46,-6,-46,18,-28,-27,-26,-9,-146,-146,-60,-64,-65,-58,-44,-146,-56,]),'[':([31,32,34,35,41,50,53,65,97,104,114,132,148,155,163,180,217,219,246,257,],[-13,-14,-15,-16,-12,63,-90,-91,-77,120,146,-135,-99,-77,194,-135,-135,239,-138,265,]),']':([80,127,129,131,132,134,135,136,137,138,139,140,141,149,157,160,162,164,165,166,168,172,173,176,177,183,190,191,192,193,195,196,197,198,200,203,210,211,213,225,227,228,229,230,231,232,233,234,235,246,252,258,259,273,276,],[104,-144,-146,-142,-146,-124,-119,-145,-126,-125,-143,-114,-146,185,-84,-102,-105,-130,-133,-132,-131,-146,-146,-120,-123,219,-127,-103,-101,-104,-128,-140,-141,-139,-115,-118,-113,-106,-122,246,-116,-117,-107,-108,-110,-111,-109,-112,-121,-146,261,-134,-137,276,-136,]),'ID':([3,4,8,11,18,21,24,26,27,28,31,32,34,35,36,37,38,41,42,46,57,58,62,64,67,70,72,74,77,78,79,81,83,86,88,89,90,93,94,102,111,113,117,124,125,128,142,146,147,150,159,161,170,174,175,179,186,189,194,201,202,204,205,206,207,208,209,212,223,236,239,241,245,251,254,255,262,265,269,270,272,277,278,280,],[-2,5,-5,-6,-2,-28,-27,-26,-9,39,-13,-14,-15,-16,-57,43,44,-12,47,-146,-68,-10,-146,-146,-146,-40,97,101,-60,-64,-65,-58,-68,108,-68,-71,-70,-22,-23,-146,-21,132,-56,132,155,132,180,132,132,-146,132,132,132,-129,132,217,-68,132,132,132,132,132,132,132,132,132,132,132,-68,249,132,-68,155,180,132,-72,-146,132,-94,-97,-68,-68,-74,-96,]),'IF':([8,11,21,24,26,27,46,57,62,64,67,72,77,78,79,81,83,88,89,90,93,94,99,102,111,117,150,186,223,241,255,262,269,270,272,277,278,280,],[-5,-6,-28,-27,-26,-9,-146,-68,-146,-146,-146,-95,-60,-64,-65,-58,-68,-68,-71,-70,-22,-23,115,-146,-21,-56,-146,-68,-68,-68,-72,-146,-94,-97,-68,-68,-74,-96,]),'AND':([127,129,131,132,134,135,136,137,138,139,140,141,157,164,165,166,168,172,173,176,177,180,182,190,195,196,197,198,200,203,210,211,213,217,218,227,228,229,230,231,232,233,234,235,246,258,259,276,],[-144,159,-142,-146,-124,-119,-145,-126,-125,-143,-114,-146,-84,-130,-133,-132,-131,-146,-146,-120,-123,-146,-126,-127,-128,-140,-141,-139,-115,-118,-113,-106,-122,-146,-125,-116,-117,-107,-108,-110,-111,-109,-112,-121,-146,-134,-137,-136,]),'CTES':([113,124,128,142,146,147,159,161,170,174,175,179,189,194,201,202,204,205,206,207,208,209,212,216,236,239,251,254,265,],[134,134,134,134,134,134,134,134,134,-129,134,134,134,134,134,134,134,134,134,134,134,134,134,237,-38,134,134,134,134,]),'LTOEQ':([127,131,132,134,135,136,137,138,139,140,141,157,164,165,166,168,172,173,176,177,180,182,190,195,196,197,198,200,203,213,217,218,227,228,235,246,258,259,276,],[-144,-142,-146,-124,-119,-145,-126,-125,-143,-114,-146,-84,-130,-133,-132,-131,-146,208,-120,-123,-146,-126,-127,-128,-140,-141,-139,-115,-118,-122,-146,-125,-116,-117,-121,-146,-134,-137,-136,]),'FALSE':([113,124,128,142,146,147,159,161,170,174,175,179,189,194,201,202,204,205,206,207,208,209,212,236,239,251,254,265,],[136,136,136,136,136,136,136,136,136,-129,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,]),'STRUCT':([16,25,62,64,102,],[-59,38,-59,-59,-59,]),'INT':([16,22,33,44,55,61,62,64,82,102,103,187,],[-2,-17,41,-17,-17,-17,-2,-2,-17,-2,-17,-17,]),'EQ':([127,131,132,134,135,136,137,138,139,140,141,157,164,165,166,168,172,173,176,177,180,182,190,195,196,197,198,200,203,213,217,218,227,228,235,246,258,259,276,],[-144,-142,-146,-124,-119,-145,-126,-125,-143,-114,-146,-84,-130,-133,-132,-131,-146,204,-120,-123,-146,-126,-127,-128,-140,-141,-139,-115,-118,-122,-146,-125,-116,-117,-121,-146,-134,-137,-136,]),'FLOAT':([16,22,44,55,61,62,64,82,102,103,187,],[-2,31,31,31,31,-2,-2,31,-2,31,31,]),'OR':([127,129,131,132,134,135,136,137,138,139,140,141,157,164,165,166,168,172,173,176,177,180,182,190,195,196,197,198,200,203,210,211,213,217,218,227,228,229,230,231,232,233,234,235,246,258,259,276,],[-144,161,-142,-146,-124,-119,-145,-126,-125,-143,-114,-146,-84,-130,-133,-132,-131,-146,-146,-120,-123,-146,-126,-127,-128,-140,-141,-139,-115,-118,-113,-106,-122,-146,-125,-116,-117,-107,-108,-110,-111,-109,-112,-121,-146,-134,-137,-136,]),'BOOL':([16,22,44,55,61,62,64,82,102,103,187,],[-2,35,35,35,35,-2,-2,35,-2,35,35,]),'CTED':([63,113,120,124,128,142,146,147,159,161,170,174,175,179,189,194,201,202,204,205,206,207,208,209,212,236,239,251,254,265,],[80,131,149,131,131,131,131,131,131,131,131,-129,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'GTOEQ':([127,131,132,134,135,136,137,138,139,140,141,157,164,165,166,168,172,173,176,177,180,182,190,195,196,197,198,200,203,213,217,218,227,228,235,246,258,259,276,],[-144,-142,-146,-124,-119,-145,-126,-125,-143,-114,-146,-84,-130,-133,-132,-131,-146,206,-120,-123,-146,-126,-127,-128,-140,-141,-139,-115,-118,-122,-146,-125,-116,-117,-121,-146,-134,-137,-136,]),'{':([5,6,30,31,32,34,35,39,40,41,45,54,56,85,105,107,122,188,220,264,274,],[-3,7,-19,-13,-14,-15,-16,-3,46,-12,-146,67,-50,-51,-54,-49,150,223,241,272,277,]),'MAIN':([7,8,9,11,12,14,15,17,20,21,24,26,27,62,64,77,78,79,81,84,102,117,],[-146,-5,-146,-6,-146,-8,-20,-7,30,-28,-27,-26,-9,-146,-146,-60,-64,-65,-58,-44,-146,-56,]),'}':([8,11,19,21,24,26,27,46,57,62,64,67,68,71,73,77,78,79,81,83,87,88,89,90,92,93,94,102,106,109,111,117,223,241,242,244,253,255,262,269,270,271,272,275,277,278,279,280,],[-5,-6,29,-28,-27,-26,-9,-146,-146,-146,-146,-146,84,87,-67,-60,-64,-65,-58,-146,-18,-146,-71,-70,-66,-22,-23,-146,-53,-69,-21,-56,-146,-146,-52,255,262,-72,-146,-94,-97,-47,-146,278,-146,-74,280,-96,]),'CTEF':([113,124,128,142,146,147,159,161,170,174,175,179,189,194,201,202,204,205,206,207,208,209,212,236,239,251,254,265,],[139,139,139,139,139,139,139,139,139,-129,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vars':([7,46,67,150,],[8,8,8,8,]),'errorOpSExp':([140,],[173,]),'errorMain':([15,],[20,]),'errorCyExp':([135,],[172,]),'opParamCall':([113,],[126,]),'cyTypeParam':([47,101,108,],[60,116,123,]),'forCycle':([72,],[90,]),'structType':([44,],[50,]),'struct':([44,],[51,]),'param':([55,187,],[69,222,]),'init':([114,238,],[145,250,]),'program':([0,],[1,]),'dict':([43,52,],[49,65,]),'opMatrix':([246,],[258,]),'errorExpresion':([160,],[192,]),'main':([15,],[19,]),'return':([221,],[242,]),'errorParam':([70,],[86,]),'errorElse':([262,],[268,]),'errorReturn':([221,],[243,]),'assignOptions':([114,],[144,]),'basicDeclare':([16,62,64,102,],[26,26,26,26,]),'cyInstruction':([72,],[92,]),'condition':([72,],[93,]),'expresion':([113,124,128,142,146,147,159,161,170,179,189,194,239,251,254,265,],[133,154,158,181,183,184,191,193,199,158,224,225,252,181,263,273,]),'term':([113,124,128,142,146,147,159,161,170,179,189,194,201,202,204,205,206,207,208,209,239,251,254,265,],[135,135,135,135,135,135,135,135,135,135,135,135,227,228,135,135,135,135,135,135,135,135,135,135,]),'funcCall':([72,113,124,128,142,146,147,159,161,170,175,179,189,194,201,202,204,205,206,207,208,209,212,239,251,254,265,],[98,137,137,137,182,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,182,137,137,]),'initDict':([114,],[143,]),'saveReturnType':([105,],[122,]),'dictDeclare':([16,62,64,102,],[21,21,21,21,]),'saveMain':([30,],[40,]),'errorVars':([7,46,67,150,],[10,10,10,10,]),'whileCycle':([72,],[89,]),'errorDictDeclare':([16,62,64,102,],[23,23,23,23,]),'opFunctions':([9,12,],[15,17,]),'errorOpStruct':([132,180,217,],[163,163,163,]),'opVars':([7,46,67,150,],[9,57,83,186,]),'errorInit':([178,],[214,]),'cyExpresion':([129,],[160,]),'body':([57,83,88,186,223,241,272,277,],[71,106,109,221,244,253,275,279,]),'errorOpReturns':([54,],[66,]),'opParameters':([45,],[54,]),'errorCondition':([72,],[99,]),'cte':([113,124,128,142,146,147,159,161,170,175,179,189,194,201,202,204,205,206,207,208,209,212,236,239,251,254,265,],[138,138,138,138,138,138,138,138,138,138,218,138,138,138,138,138,138,138,138,138,138,138,248,138,138,138,138,]),'saveProc':([5,39,],[6,45,]),'assign':([72,125,245,],[100,156,256,]),'errorStructDeclare':([16,62,64,102,],[25,25,25,25,]),'cyExp':([172,],[200,]),'instr':([72,],[88,]),'errorFact':([174,],[212,]),'errorProgram':([0,],[2,]),'cyTerm':([141,],[176,]),'errorAssignMatrix':([261,],[267,]),'cyDeclare':([62,64,102,],[77,81,117,]),'errorBody':([57,83,88,186,223,241,272,277,],[72,72,72,72,72,72,72,72,]),'opStruct':([132,180,217,],[164,164,164,]),'errorOpAccess':([165,],[195,]),'type':([22,44,55,61,82,103,187,],[36,53,70,76,105,118,70,]),'dictIndex':([167,],[198,]),'empty':([7,9,12,45,46,47,57,62,64,67,83,88,101,102,104,108,113,123,129,132,133,141,150,172,173,180,186,199,217,219,223,241,246,262,272,277,],[11,14,14,56,11,59,73,79,79,11,73,73,59,79,121,59,130,153,162,166,171,177,11,203,210,166,73,171,166,240,73,73,259,270,73,73,]),'errorBasicDeclare':([36,],[42,]),'function':([9,12,],[12,12,]),'errorOpMatrix':([246,],[257,]),'opDictionary':([132,180,217,],[168,168,168,]),'errorType':([22,44,55,61,82,103,187,],[33,33,33,33,33,33,33,]),'errorForCycle':([72,],[96,]),'opAccess':([132,180,217,],[165,165,165,]),'basicStatements':([72,],[95,]),'structDeclare':([16,62,64,102,],[24,24,24,24,]),'errorAssign':([97,155,],[114,114,]),'cyParam':([123,],[152,]),'opSExp':([173,],[211,]),'errorOpParameters':([85,],[107,]),'cyParamCall':([133,199,],[169,226,]),'declare':([16,62,64,102,],[27,78,78,78,]),'optionalMatrix':([104,],[119,]),'optionalElse':([262,],[269,]),'dictType':([179,236,],[215,247,]),'initWith':([142,251,],[178,178,]),'errorWhileCycle':([72,],[91,]),'sExp':([113,124,128,142,146,147,159,161,170,179,189,194,239,251,254,265,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'errorCyParam':([123,],[151,]),'opReturns':([54,],[68,]),'errorDictType':([179,236,],[216,216,]),'assignMatrix':([219,],[238,]),'errorDict':([43,52,],[48,48,]),'errorInitDict':([260,],[266,]),'saveType':([3,16,18,62,64,102,],[4,22,28,22,22,22,]),'saveID':([58,60,],[74,75,]),'cycle':([72,],[94,]),'errorFunction':([9,12,],[13,13,]),'exp':([113,124,128,142,146,147,159,161,170,179,189,194,204,205,206,207,208,209,239,251,254,265,],[140,140,140,140,140,140,140,140,140,140,140,140,229,230,231,232,233,234,140,140,140,140,]),'fact':([113,124,128,142,146,147,159,161,170,175,179,189,194,201,202,204,205,206,207,208,209,212,239,251,254,265,],[141,141,141,141,141,141,141,141,141,213,141,141,141,141,141,141,141,141,141,141,141,235,141,141,141,141,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> errorProgram PROGRAM saveType ID saveProc { opVars opFunctions main }','program',10,'p_program','CT.py',79),
  ('saveType -> <empty>','saveType',0,'p_saveType','CT.py',83),
  ('saveProc -> <empty>','saveProc',0,'p_saveProc','CT.py',93),
  ('errorProgram -> <empty>','errorProgram',0,'p_errorProgram','CT.py',102),
  ('opVars -> vars','opVars',1,'p_opVars','CT.py',108),
  ('opVars -> empty','opVars',1,'p_opVars','CT.py',109),
  ('opFunctions -> function opFunctions','opFunctions',2,'p_opFunctions','CT.py',114),
  ('opFunctions -> empty','opFunctions',1,'p_opFunctions','CT.py',115),
  ('vars -> errorVars VARS declare','vars',3,'p_vars','CT.py',119),
  ('saveID -> <empty>','saveID',0,'p_saveID','CT.py',124),
  ('errorVars -> <empty>','errorVars',0,'p_errorVars','CT.py',145),
  ('type -> errorType INT','type',2,'p_type','CT.py',151),
  ('type -> FLOAT','type',1,'p_type','CT.py',152),
  ('type -> STRING','type',1,'p_type','CT.py',153),
  ('type -> OBJECT','type',1,'p_type','CT.py',154),
  ('type -> BOOL','type',1,'p_type','CT.py',155),
  ('errorType -> <empty>','errorType',0,'p_errorType','CT.py',160),
  ('main -> errorMain MAIN saveMain { opVars body }','main',7,'p_main','CT.py',166),
  ('saveMain -> <empty>','saveMain',0,'p_saveMain','CT.py',170),
  ('errorMain -> <empty>','errorMain',0,'p_errorMain','CT.py',178),
  ('instr -> basicStatements ;','instr',2,'p_instr','CT.py',184),
  ('instr -> condition','instr',1,'p_instr','CT.py',185),
  ('instr -> cycle','instr',1,'p_instr','CT.py',186),
  ('basicStatements -> assign','basicStatements',1,'p_basicStatements','CT.py',190),
  ('basicStatements -> funcCall','basicStatements',1,'p_basicStatements','CT.py',191),
  ('declare -> basicDeclare','declare',1,'p_declare','CT.py',195),
  ('declare -> structDeclare','declare',1,'p_declare','CT.py',196),
  ('declare -> dictDeclare','declare',1,'p_declare','CT.py',197),
  ('init -> = initWith errorInit','init',3,'p_init','CT.py',202),
  ('errorInit -> <empty>','errorInit',0,'p_errorInit','CT.py',207),
  ('initWith -> expresion','initWith',1,'p_initWith','CT.py',213),
  ('initWith -> funcCall','initWith',1,'p_initWith','CT.py',214),
  ('initDict -> = ( dictType : dictType ) errorInitDict','initDict',7,'p_initDict','CT.py',219),
  ('errorInitDict -> <empty>','errorInitDict',0,'p_errorInitDict','CT.py',224),
  ('dictType -> errorDictType CTES','dictType',2,'p_dictType','CT.py',230),
  ('dictType -> cte','dictType',1,'p_dictType','CT.py',231),
  ('dictType -> ID','dictType',1,'p_dictType','CT.py',232),
  ('errorDictType -> <empty>','errorDictType',0,'p_errorDictType','CT.py',237),
  ('param -> type errorParam ID cyTypeParam cyParam','param',5,'p_param','CT.py',243),
  ('errorParam -> <empty>','errorParam',0,'p_errorParam','CT.py',248),
  ('cyParam -> errorCyParam ; param','cyParam',3,'p_cyParam','CT.py',254),
  ('cyParam -> empty','cyParam',1,'p_cyParam','CT.py',255),
  ('errorCyParam -> <empty>','errorCyParam',0,'p_errorCyParam','CT.py',260),
  ('function -> errorFunction FUNC saveType ID saveProc opParameters opReturns }','function',8,'p_function','CT.py',266),
  ('saveFunction -> <empty>','saveFunction',0,'p_saveFunction','CT.py',271),
  ('errorFunction -> <empty>','errorFunction',0,'p_errorFunction','CT.py',276),
  ('return -> errorReturn RETURN expresion ;','return',4,'p_return','CT.py',282),
  ('errorReturn -> <empty>','errorReturn',0,'p_errorReturn','CT.py',287),
  ('opParameters -> ( param ) errorOpParameters','opParameters',4,'p_opParameters','CT.py',293),
  ('opParameters -> empty','opParameters',1,'p_opParameters','CT.py',294),
  ('errorOpParameters -> <empty>','errorOpParameters',0,'p_errorOpParameters','CT.py',299),
  ('opReturns -> errorOpReturns RETURNS type saveReturnType { opVars body return','opReturns',8,'p_opReturns','CT.py',305),
  ('opReturns -> { opVars body','opReturns',3,'p_opReturns','CT.py',306),
  ('saveReturnType -> <empty>','saveReturnType',0,'p_saveReturnType','CT.py',311),
  ('errorOpReturns -> <empty>','errorOpReturns',0,'p_errorOpReturns','CT.py',320),
  ('basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare','basicDeclare',8,'p_basicDeclare','CT.py',326),
  ('errorBasicDeclare -> <empty>','errorBasicDeclare',0,'p_errorBasicDeclare','CT.py',331),
  ('structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare','structDeclare',6,'p_structDeclare','CT.py',337),
  ('errorStructDeclare -> <empty>','errorStructDeclare',0,'p_errorStructDeclare','CT.py',342),
  ('dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare','dictDeclare',6,'p_dictDeclare','CT.py',348),
  ('errorDictDeclare -> <empty>','errorDictDeclare',0,'p_errorDictDeclare','CT.py',353),
  ('cyTypeParam -> , saveID ID cyTypeParam','cyTypeParam',4,'p_cyTypeParam','CT.py',359),
  ('cyTypeParam -> empty','cyTypeParam',1,'p_cyTypeParam','CT.py',360),
  ('cyDeclare -> declare','cyDeclare',1,'p_cyDeclare','CT.py',365),
  ('cyDeclare -> empty','cyDeclare',1,'p_cyDeclare','CT.py',366),
  ('body -> errorBody cyInstruction','body',2,'p_body','CT.py',371),
  ('body -> empty','body',1,'p_body','CT.py',372),
  ('errorBody -> <empty>','errorBody',0,'p_errorBody','CT.py',377),
  ('cyInstruction -> instr body','cyInstruction',2,'p_cyInstruction','CT.py',383),
  ('cycle -> forCycle','cycle',1,'p_cycle','CT.py',388),
  ('cycle -> whileCycle','cycle',1,'p_cycle','CT.py',389),
  ('whileCycle -> errorWhileCycle WHILE ( expresion ) { body }','whileCycle',8,'p_whileCycle','CT.py',394),
  ('errorWhileCycle -> <empty>','errorWhileCycle',0,'p_errorWhileCycle','CT.py',399),
  ('forCycle -> errorForCycle FOR ( assign ; expresion ; assign ) { body }','forCycle',12,'p_forCycle','CT.py',405),
  ('errorForCycle -> <empty>','errorForCycle',0,'p_errorForCycle','CT.py',410),
  ('assign -> ID errorAssign assignOptions','assign',3,'p_assign','CT.py',416),
  ('errorAssign -> <empty>','errorAssign',0,'p_errorAssign','CT.py',421),
  ('assignOptions -> init','assignOptions',1,'p_assignOptions','CT.py',427),
  ('assignOptions -> initDict','assignOptions',1,'p_assignOptions','CT.py',428),
  ('assignOptions -> [ expresion ] assignMatrix init','assignOptions',5,'p_assignOptions','CT.py',429),
  ('assignMatrix -> [ expresion ] errorAssignMatrix','assignMatrix',4,'p_assignMatrix','CT.py',434),
  ('assignMatrix -> empty','assignMatrix',1,'p_assignMatrix','CT.py',435),
  ('errorAssignMatrix -> <empty>','errorAssignMatrix',0,'p_errorAssignMatrix','CT.py',440),
  ('funcCall -> ID ( opParamCall )','funcCall',4,'p_funcCall','CT.py',446),
  ('opParamCall -> expresion cyParamCall','opParamCall',2,'p_opParamCall','CT.py',451),
  ('opParamCall -> empty','opParamCall',1,'p_opParamCall','CT.py',452),
  ('cyParamCall -> , expresion cyParamCall','cyParamCall',3,'p_cyParamCall','CT.py',457),
  ('cyParamCall -> empty','cyParamCall',1,'p_cyParamCall','CT.py',458),
  ('struct -> structType [ CTED ] optionalMatrix','struct',5,'p_struct','CT.py',463),
  ('structType -> type','structType',1,'p_structType','CT.py',468),
  ('structType -> DICT dict','structType',2,'p_structType','CT.py',469),
  ('optionalMatrix -> [ CTED ]','optionalMatrix',3,'p_optionalMatrix','CT.py',474),
  ('optionalMatrix -> empty','optionalMatrix',1,'p_optionalMatrix','CT.py',475),
  ('condition -> errorCondition IF ( expresion ) { body } optionalElse','condition',9,'p_condition','CT.py',480),
  ('errorCondition -> <empty>','errorCondition',0,'p_errorCondition','CT.py',485),
  ('optionalElse -> errorElse ELSE { body }','optionalElse',5,'p_optionalElse','CT.py',491),
  ('optionalElse -> empty','optionalElse',1,'p_optionalElse','CT.py',492),
  ('errorElse -> <empty>','errorElse',0,'p_errorElse','CT.py',497),
  ('dict -> errorDict ( type : type )','dict',6,'p_dict','CT.py',503),
  ('errorDict -> <empty>','errorDict',0,'p_errorDict','CT.py',508),
  ('expresion -> sExp cyExpresion errorExpresion','expresion',3,'p_expresion','CT.py',514),
  ('errorExpresion -> <empty>','errorExpresion',0,'p_errorExpresion','CT.py',519),
  ('cyExpresion -> AND expresion','cyExpresion',2,'p_cyExpresion','CT.py',525),
  ('cyExpresion -> OR expresion','cyExpresion',2,'p_cyExpresion','CT.py',526),
  ('cyExpresion -> empty','cyExpresion',1,'p_cyExpresion','CT.py',527),
  ('sExp -> exp errorOpSExp opSExp','sExp',3,'p_sExp','CT.py',532),
  ('opSExp -> EQ exp','opSExp',2,'p_opSExp','CT.py',537),
  ('opSExp -> DIF exp','opSExp',2,'p_opSExp','CT.py',538),
  ('opSExp -> LTOEQ exp','opSExp',2,'p_opSExp','CT.py',539),
  ('opSExp -> GTOEQ exp','opSExp',2,'p_opSExp','CT.py',540),
  ('opSExp -> > exp','opSExp',2,'p_opSExp','CT.py',541),
  ('opSExp -> < exp','opSExp',2,'p_opSExp','CT.py',542),
  ('opSExp -> empty','opSExp',1,'p_opSExp','CT.py',543),
  ('errorOpSExp -> <empty>','errorOpSExp',0,'p_errorOpSExp','CT.py',548),
  ('exp -> term errorCyExp cyExp','exp',3,'p_exp','CT.py',554),
  ('cyExp -> + term','cyExp',2,'p_cyExp','CT.py',559),
  ('cyExp -> - term','cyExp',2,'p_cyExp','CT.py',560),
  ('cyExp -> empty','cyExp',1,'p_cyExp','CT.py',561),
  ('errorCyExp -> <empty>','errorCyExp',0,'p_errorCyExp','CT.py',566),
  ('term -> fact cyTerm','term',2,'p_term','CT.py',572),
  ('cyTerm -> * errorFact fact','cyTerm',3,'p_cyTerm','CT.py',577),
  ('cyTerm -> / fact','cyTerm',2,'p_cyTerm','CT.py',578),
  ('cyTerm -> empty','cyTerm',1,'p_cyTerm','CT.py',579),
  ('fact -> CTES','fact',1,'p_fact','CT.py',584),
  ('fact -> cte','fact',1,'p_fact','CT.py',585),
  ('fact -> funcCall','fact',1,'p_fact','CT.py',586),
  ('fact -> ( expresion )','fact',3,'p_fact','CT.py',587),
  ('fact -> ID opAccess errorOpAccess','fact',3,'p_fact','CT.py',588),
  ('errorFact -> <empty>','errorFact',0,'p_errorFact','CT.py',593),
  ('opAccess -> opStruct','opAccess',1,'p_opAccess','CT.py',599),
  ('opAccess -> opDictionary','opAccess',1,'p_opAccess','CT.py',600),
  ('opAccess -> empty','opAccess',1,'p_opAccess','CT.py',601),
  ('errorOpAccess -> <empty>','errorOpAccess',0,'p_errorOpAccess','CT.py',606),
  ('opStruct -> errorOpStruct [ expresion ] opMatrix','opStruct',5,'p_opStruct','CT.py',612),
  ('errorOpStruct -> <empty>','errorOpStruct',0,'p_errorOpStruct','CT.py',617),
  ('opMatrix -> errorOpMatrix [ expresion ]','opMatrix',4,'p_opMatrix','CT.py',623),
  ('opMatrix -> empty','opMatrix',1,'p_opMatrix','CT.py',624),
  ('errorOpMatrix -> <empty>','errorOpMatrix',0,'p_errorOpMatrix','CT.py',629),
  ('opDictionary -> . dictIndex','opDictionary',2,'p_opDictionary','CT.py',635),
  ('dictIndex -> FIRST','dictIndex',1,'p_dictIndex','CT.py',640),
  ('dictIndex -> LAST','dictIndex',1,'p_dictIndex','CT.py',641),
  ('cte -> CTED','cte',1,'p_cte','CT.py',646),
  ('cte -> CTEF','cte',1,'p_cte','CT.py',647),
  ('cte -> TRUE','cte',1,'p_cte','CT.py',648),
  ('cte -> FALSE','cte',1,'p_cte','CT.py',649),
  ('empty -> <empty>','empty',0,'p_empty','CT.py',656),
]
