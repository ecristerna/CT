
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'DDA70B4769CE0EE81F05FBBEEE7EAB00'
    
_lr_action_items = {'RETURN':([8,11,18,21,23,24,59,61,68,69,70,72,76,82,89,98,100,102,106,110,111,120,126,300,316,327,328,331,335,337,338,340,342,345,357,359,360,],[-6,-7,-38,-37,-36,-10,-167,-167,-77,-79,-80,-75,-167,-73,-82,-167,-86,-85,-24,-81,-23,-84,-22,-167,-70,-167,-167,-88,-169,-118,-62,-87,-115,349,-117,-95,-91,]),'VARS':([7,10,53,156,300,],[-12,13,-12,-12,-12,]),'READ':([8,11,18,21,23,24,53,59,61,63,68,69,70,72,73,76,79,82,88,98,100,102,106,111,126,156,186,228,299,300,309,316,327,328,331,335,337,340,342,351,353,356,357,359,360,],[-6,-7,-38,-37,-36,-10,-167,-167,-167,-70,-77,-79,-80,-75,-19,-167,-83,-73,99,-83,-86,-85,-24,-23,-22,-167,-70,-83,-83,-167,-83,-70,-167,-83,-88,-169,-118,-87,-115,-83,-94,-83,-117,-95,-91,]),'DIF':([133,135,136,137,138,139,140,141,142,144,151,159,161,162,163,164,165,166,168,175,180,193,194,195,197,198,202,203,234,236,237,238,239,240,243,273,278,282,284,304,305,306,308,320,321,346,],[-174,-172,-176,-175,-182,-174,-147,-146,-173,-181,-135,-165,-163,-167,-145,-140,-166,-164,-167,-105,218,-152,-151,-154,-153,-167,-141,-144,-179,-149,-161,-162,-160,-136,-139,-148,-143,-176,-147,-167,-137,-138,-142,-155,-158,-157,]),'WHILE':([8,11,18,21,23,24,53,59,61,63,68,69,70,72,73,76,79,82,88,98,100,102,103,106,111,126,156,186,228,299,300,309,316,327,328,331,335,337,340,342,351,353,356,357,359,360,],[-6,-7,-38,-37,-36,-10,-167,-167,-167,-70,-77,-79,-80,-75,-19,-167,-83,-73,-90,-83,-86,-85,123,-24,-23,-22,-167,-70,-83,-83,-167,-83,-70,-167,-83,-88,-169,-118,-87,-115,-83,-94,-83,-117,-95,-91,]),'PROGRAM':([0,2,],[-5,3,]),'PRINT':([8,11,18,21,23,24,53,59,61,63,68,69,70,72,73,76,79,82,88,98,100,102,106,111,126,156,186,228,299,300,309,316,327,328,331,335,337,340,342,351,353,356,357,359,360,],[-6,-7,-38,-37,-36,-10,-167,-167,-167,-70,-77,-79,-80,-75,-19,-167,-83,-73,101,-83,-86,-85,-24,-23,-22,-167,-70,-83,-83,-167,-83,-70,-167,-83,-88,-169,-118,-87,-115,-83,-94,-83,-117,-95,-91,]),'PARINI':([41,47,51,54,64,74,99,101,104,122,123,125,127,128,134,136,145,153,160,169,172,174,178,200,204,205,208,211,212,216,217,218,219,220,221,224,235,241,242,245,246,247,249,255,256,259,260,261,262,263,264,266,275,276,279,282,288,311,330,349,],[-121,58,-121,-4,-65,80,121,122,125,134,-89,134,152,153,-178,125,169,134,134,134,209,134,134,-35,-177,-177,-40,-177,-177,-177,-177,-177,-177,-177,-177,-89,134,-177,-177,134,134,-150,134,134,134,134,134,134,134,134,134,134,134,134,134,125,134,-177,134,134,]),'DIV':([133,135,136,137,139,140,141,142,144,159,161,162,163,165,166,168,175,193,194,195,197,234,236,237,238,239,273,282,284,304,320,321,346,],[-174,-172,-176,-175,-174,-147,-146,-173,-181,-165,-163,-167,-145,-166,-164,204,-105,-152,-151,-154,-153,-179,-149,-161,-162,-160,-148,-176,-147,-167,-155,-158,-157,]),'.':([136,162,282,],[-176,196,-176,]),'TRUE':([122,125,134,153,160,169,172,174,178,200,204,205,208,209,211,212,216,217,218,219,220,221,224,235,241,242,245,246,247,249,255,256,259,260,261,262,263,264,266,275,276,279,285,288,311,330,349,],[133,133,-178,133,133,133,-177,133,133,-35,-177,-177,-40,133,-177,-177,-177,-177,-177,-177,-177,-177,-89,133,-177,-177,133,133,-150,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,-177,133,133,]),'[':([29,30,32,39,49,52,62,78,95,104,124,136,146,162,181,192,254,282,304,319,],[-14,-15,-16,-13,60,-111,-112,85,-120,-176,-98,-176,174,-156,-176,235,288,-176,-159,330,]),'MULT':([133,135,136,137,139,140,141,142,144,159,161,162,163,165,166,168,175,193,194,195,197,234,236,237,238,239,273,282,284,304,320,321,346,],[-174,-172,-176,-175,-174,-147,-146,-173,-181,-165,-163,-167,-145,-166,-164,205,-105,-152,-151,-154,-153,-179,-149,-161,-162,-160,-148,-176,-147,-167,-155,-158,-157,]),'LAST':([196,],[238,]),'MINUS':([133,135,136,137,138,139,140,141,142,144,159,161,162,163,164,165,166,168,175,193,194,195,197,198,202,203,234,236,237,238,239,273,278,282,284,304,308,320,321,346,],[-174,-172,-176,-175,-182,-174,-147,-146,-173,-181,-165,-163,-167,-145,-140,-166,-164,-167,-105,-152,-151,-154,-153,242,-141,-144,-179,-149,-161,-162,-160,-148,-143,-176,-147,-167,-142,-155,-158,-157,]),'LTOEQ':([133,135,136,137,138,139,140,141,142,144,151,159,161,162,163,164,165,166,168,175,180,193,194,195,197,198,202,203,234,236,237,238,239,240,243,273,278,282,284,304,305,306,308,320,321,346,],[-174,-172,-176,-175,-182,-174,-147,-146,-173,-181,-135,-165,-163,-167,-145,-140,-166,-164,-167,-105,217,-152,-151,-154,-153,-167,-141,-144,-179,-149,-161,-162,-160,-136,-139,-148,-143,-176,-147,-167,-137,-138,-142,-155,-158,-157,]),',':([46,81,132,133,135,136,137,138,139,140,141,142,143,144,148,150,151,157,158,159,161,162,163,164,165,166,167,168,175,176,180,193,194,195,197,198,202,203,213,214,215,222,223,234,236,237,238,239,240,243,257,265,272,273,277,278,290,291,292,293,294,295,296,297,303,304,305,306,307,308,320,321,346,],[55,55,-186,-174,-172,-176,-175,-182,-174,-147,-146,-173,-185,-181,-184,178,-135,55,188,-165,-163,-167,-145,-140,-166,-164,200,-167,-105,-167,-167,-152,-151,-154,-153,-167,-141,-144,-123,-126,178,-134,-183,-179,-149,-161,-162,-160,-136,-139,-122,-127,-186,-148,-185,-143,-124,-125,-132,-130,-129,-133,-131,-128,188,-167,-137,-138,200,-142,-155,-158,-157,]),'ASGN':([104,124,146,181,254,287,289,325,333,],[-176,-98,172,-176,-167,311,-103,-104,-102,]),'FIRST':([196,],[237,]),'LT':([133,135,136,137,138,139,140,141,142,144,151,159,161,162,163,164,165,166,168,175,180,193,194,195,197,198,202,203,234,236,237,238,239,240,243,273,278,282,284,304,305,306,308,320,321,346,],[-174,-172,-176,-175,-182,-174,-147,-146,-173,-181,-135,-165,-163,-167,-145,-140,-166,-164,-167,-105,219,-152,-151,-154,-153,-167,-141,-144,-179,-149,-161,-162,-160,-136,-139,-148,-143,-176,-147,-167,-137,-138,-142,-155,-158,-157,]),'PLUS':([133,135,136,137,138,139,140,141,142,144,159,161,162,163,164,165,166,168,175,193,194,195,197,198,202,203,234,236,237,238,239,273,278,282,284,304,308,320,321,346,],[-174,-172,-176,-175,-182,-174,-147,-146,-173,-181,-165,-163,-167,-145,-140,-166,-164,-167,-105,-152,-151,-154,-153,241,-141,-144,-179,-149,-161,-162,-160,-148,-143,-176,-147,-167,-142,-155,-158,-157,]),'BOOL':([13,19,42,58,59,61,76,77,80,92,185,317,],[-3,32,32,32,-3,-3,-3,32,-3,32,32,-3,]),';':([46,48,50,56,57,66,78,81,84,86,94,95,105,107,108,112,114,118,133,135,136,137,138,139,140,141,142,144,148,151,157,159,161,162,163,164,165,166,168,170,171,173,175,176,180,182,187,193,194,195,197,198,202,203,207,213,214,222,223,230,233,234,236,237,238,239,240,243,244,257,265,271,273,278,281,282,283,284,290,291,292,293,294,295,296,297,298,302,304,305,306,308,312,314,320,321,324,332,346,352,],[-167,59,61,-54,-11,76,-167,-167,-110,-114,-53,-120,-27,-28,126,-26,-25,-113,-174,-172,-176,-175,-182,-174,-147,-146,-173,-181,-184,-135,-167,-165,-163,-167,-145,-140,-166,-164,-167,-100,-180,-99,-105,-167,-167,224,-56,-152,-151,-154,-153,-167,-141,-144,-97,-123,-126,-134,-183,-11,-32,-179,-149,-161,-162,-160,-136,-139,-29,-122,-127,-55,-148,-143,-39,-176,-41,-42,-124,-125,-132,-130,-129,-133,-131,-128,-170,317,-167,-137,-138,-142,-101,326,-155,-158,-44,-43,-157,355,]),':':([29,30,32,39,67,133,135,139,142,159,161,165,166,250,252,253,286,],[-14,-15,-16,-13,77,-174,-172,-174,-173,-165,-163,-166,-164,285,-46,-47,-45,]),'$end':([1,36,43,],[0,-168,-1,]),'GT':([133,135,136,137,138,139,140,141,142,144,151,159,161,162,163,164,165,166,168,175,180,193,194,195,197,198,202,203,234,236,237,238,239,240,243,273,278,282,284,304,305,306,308,320,321,346,],[-174,-172,-176,-175,-182,-174,-147,-146,-173,-181,-135,-165,-163,-167,-145,-140,-166,-164,-167,-105,216,-152,-151,-154,-153,-167,-141,-144,-179,-149,-161,-162,-160,-136,-139,-148,-143,-176,-147,-167,-137,-138,-142,-155,-158,-157,]),'STRING':([13,19,42,58,59,61,76,77,80,92,185,317,],[-3,30,30,30,-3,-3,-3,30,-3,30,30,-3,]),'FOR':([8,11,18,21,23,24,53,59,61,63,68,69,70,72,73,76,79,82,88,98,100,102,106,109,111,126,156,186,228,299,300,309,316,327,328,331,335,337,340,342,351,353,356,357,359,360,],[-6,-7,-38,-37,-36,-10,-167,-167,-167,-70,-77,-79,-80,-75,-19,-167,-83,-73,-96,-83,-86,-85,-24,127,-23,-22,-167,-70,-83,-83,-167,-83,-70,-167,-83,-88,-169,-118,-87,-115,-83,-94,-83,-117,-95,-91,]),'ELSE':([327,336,],[-119,343,]),'RETURNS':([115,129,155,],[-65,-72,185,]),'FUNC':([7,8,9,11,12,16,17,18,21,23,24,28,59,61,68,69,70,72,76,82,184,226,],[-167,-6,-2,-7,-59,-59,-58,-38,-37,-36,-10,38,-167,-167,-77,-79,-80,-75,-167,-73,-60,-57,]),'PARFIN':([29,30,32,39,56,80,81,83,90,91,93,94,116,125,130,132,133,135,136,137,138,139,140,141,142,143,144,147,148,149,150,151,157,158,159,161,162,163,164,165,166,167,168,170,171,173,175,176,177,179,180,183,187,189,190,191,193,194,195,197,198,199,201,202,203,206,207,213,214,215,222,223,229,231,234,236,237,238,239,240,243,252,253,257,258,265,270,272,273,277,278,281,282,283,284,286,290,291,292,293,294,295,296,297,301,303,304,305,306,307,308,310,312,318,320,321,322,324,329,332,341,346,347,],[-14,-15,-16,-13,-54,-167,-167,95,115,-66,-64,-53,-67,-167,-63,-186,-174,-172,-176,-175,-182,-174,-147,-146,-173,-185,-181,175,-184,-107,-167,-135,-167,-167,-165,-163,-167,-145,-140,-166,-164,-167,-167,-100,-180,-99,-105,-167,-106,-109,-167,225,-167,233,-34,234,-152,-151,-154,-153,-167,244,-31,-141,-144,248,-97,-123,-126,-167,-134,-183,-11,-49,-179,-149,-161,-162,-160,-136,-139,-46,-47,-122,-108,-127,-55,-186,-148,-185,-143,-39,-176,-41,-42,-45,-124,-125,-132,-130,-129,-133,-131,-128,-52,-167,-167,-137,-138,-167,-142,324,-101,-33,-155,-158,-30,-44,-51,-43,-93,-157,350,]),']':([71,96,133,135,136,137,138,139,140,141,142,144,148,151,159,161,162,163,164,165,166,168,175,176,180,193,194,195,197,198,202,203,210,213,214,222,223,234,236,237,238,239,240,243,257,265,273,274,278,290,291,292,293,294,295,296,297,304,305,306,308,313,320,321,339,346,],[78,118,-174,-172,-176,-175,-182,-174,-147,-146,-173,-181,-184,-135,-165,-163,-167,-145,-140,-166,-164,-167,-105,-167,-167,-152,-151,-154,-153,-167,-141,-144,254,-123,-126,-134,-183,-179,-149,-161,-162,-160,-136,-139,-122,-127,-148,304,-143,-124,-125,-132,-130,-129,-133,-131,-128,-167,-137,-138,-142,325,-155,-158,346,-157,]),'ID':([3,4,8,11,18,21,23,24,29,30,32,33,34,35,38,39,40,45,53,55,59,61,63,65,68,69,70,72,73,75,76,79,82,88,98,100,102,106,111,117,121,122,125,126,131,134,152,153,156,160,169,172,174,178,186,188,200,204,205,208,209,211,212,216,217,218,219,220,221,224,228,232,235,241,242,245,246,247,249,255,256,259,260,261,262,263,264,266,275,276,279,285,288,299,300,309,311,316,326,327,328,330,331,334,335,337,340,342,349,351,353,356,357,359,360,],[-3,5,-6,-7,-38,-37,-36,-10,-14,-15,-16,-74,41,42,-3,-13,46,54,-167,-11,-167,-167,-70,-55,-77,-79,-80,-75,-19,81,-167,-83,-73,104,-83,-86,-85,-24,-23,-50,132,136,136,-22,157,-178,181,136,-167,136,136,-177,136,136,-70,-35,-35,-177,-177,-40,253,-177,-177,-177,-177,-177,-177,-177,-177,-89,-83,272,136,-177,-177,136,136,-150,282,136,136,136,136,136,136,136,136,136,136,136,136,253,136,-83,-167,-83,-177,-70,-92,-167,-83,136,-88,181,-169,-118,-87,-115,136,-83,-94,-83,-117,-95,-91,]),'IF':([8,11,18,21,23,24,53,59,61,63,68,69,70,72,73,76,79,82,88,98,100,102,106,111,113,126,156,186,228,299,300,309,316,327,328,331,335,337,340,342,351,353,356,357,359,360,],[-6,-7,-38,-37,-36,-10,-167,-167,-167,-70,-77,-79,-80,-75,-19,-167,-83,-73,-116,-83,-86,-85,-24,-23,128,-22,-167,-70,-83,-83,-167,-83,-70,-167,-83,-88,-169,-118,-87,-115,-83,-94,-83,-117,-95,-91,]),'AND':([133,135,136,137,138,139,140,141,142,144,148,151,159,161,162,163,164,165,166,168,175,176,180,193,194,195,197,198,202,203,222,223,234,236,237,238,239,240,243,265,273,278,282,284,292,293,294,295,296,297,304,305,306,308,320,321,346,],[-174,-172,-176,-175,-182,-174,-147,-146,-173,-181,-184,-135,-165,-163,-167,-145,-140,-166,-164,-167,-105,211,-167,-152,-151,-154,-153,-167,-141,-144,-134,-183,-179,-149,-161,-162,-160,-136,-139,-127,-148,-143,-176,-147,-132,-130,-129,-133,-131,-128,-167,-137,-138,-142,-155,-158,-157,]),'CTES':([122,125,134,153,160,169,172,174,178,200,204,205,208,209,211,212,216,217,218,219,220,221,224,235,241,242,245,246,247,249,251,255,256,259,260,261,262,263,264,266,275,276,279,285,288,311,330,349,],[137,137,-178,137,137,137,-177,137,137,-35,-177,-177,-40,-48,-177,-177,-177,-177,-177,-177,-177,-177,-89,137,-177,-177,137,137,-150,137,286,137,137,137,137,137,137,137,137,137,137,137,137,-48,137,-177,137,137,]),'FALSE':([122,125,134,153,160,169,172,174,178,200,204,205,208,209,211,212,216,217,218,219,220,221,224,235,241,242,245,246,247,249,255,256,259,260,261,262,263,264,266,275,276,279,285,288,311,330,349,],[139,139,-178,139,139,139,-177,139,139,-35,-177,-177,-40,139,-177,-177,-177,-177,-177,-177,-177,-177,-89,139,-177,-177,139,139,-150,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,-177,139,139,]),'STRUCT':([13,22,59,61,76,],[-76,35,-76,-76,-76,]),'INT':([13,19,31,42,58,59,61,76,77,80,92,185,317,],[-3,-17,39,-17,-17,-3,-3,-3,-17,-3,-17,-17,-3,]),'EQ':([133,135,136,137,138,139,140,141,142,144,151,159,161,162,163,164,165,166,168,175,180,193,194,195,197,198,202,203,234,236,237,238,239,240,243,273,278,282,284,304,305,306,308,320,321,346,],[-174,-172,-176,-175,-182,-174,-147,-146,-173,-181,-135,-165,-163,-167,-145,-140,-166,-164,-167,-105,221,-152,-151,-154,-153,-167,-141,-144,-179,-149,-161,-162,-160,-136,-139,-148,-143,-176,-147,-167,-137,-138,-142,-155,-158,-157,]),'FLOAT':([13,19,42,58,59,61,76,77,80,92,185,317,],[-3,29,29,29,-3,-3,-3,29,-3,29,29,-3,]),'OR':([133,135,136,137,138,139,140,141,142,144,148,151,159,161,162,163,164,165,166,168,175,176,180,193,194,195,197,198,202,203,222,223,234,236,237,238,239,240,243,265,273,278,282,284,292,293,294,295,296,297,304,305,306,308,320,321,346,],[-174,-172,-176,-175,-182,-174,-147,-146,-173,-181,-184,-135,-165,-163,-167,-145,-140,-166,-164,-167,-105,212,-167,-152,-151,-154,-153,-167,-141,-144,-134,-183,-179,-149,-161,-162,-160,-136,-139,-127,-148,-143,-176,-147,-132,-130,-129,-133,-131,-128,-167,-137,-138,-142,-155,-158,-157,]),'DICT':([13,20,42,59,61,76,],[-78,34,51,-78,-78,-78,]),'CTED':([60,85,122,125,134,153,160,169,172,174,178,200,204,205,208,209,211,212,216,217,218,219,220,221,224,235,241,242,245,246,247,249,255,256,259,260,261,262,263,264,266,275,276,279,285,288,311,330,349,],[71,96,135,135,-178,135,135,135,-177,135,135,-35,-177,-177,-40,135,-177,-177,-177,-177,-177,-177,-177,-177,-89,135,-177,-177,135,135,-150,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,-177,135,135,]),'GTOEQ':([133,135,136,137,138,139,140,141,142,144,151,159,161,162,163,164,165,166,168,175,180,193,194,195,197,198,202,203,234,236,237,238,239,240,243,273,278,282,284,304,305,306,308,320,321,346,],[-174,-172,-176,-175,-182,-174,-147,-146,-173,-181,-135,-165,-163,-167,-145,-140,-166,-164,-167,-105,220,-152,-151,-154,-153,-167,-141,-144,-179,-149,-161,-162,-160,-136,-139,-148,-143,-176,-147,-167,-137,-138,-142,-155,-158,-157,]),'{':([5,6,29,30,32,37,39,44,115,129,225,227,248,267,268,280,343,348,350,],[-4,7,-14,-15,-16,-20,-13,53,-65,156,-170,-71,-170,299,300,309,-171,351,353,]),'MAIN':([7,8,9,11,12,14,15,16,18,21,23,24,26,27,59,61,68,69,70,72,76,82,184,226,],[-167,-6,-2,-7,-167,-21,-9,-167,-38,-37,-36,-10,37,-8,-167,-167,-77,-79,-80,-75,-167,-73,-60,-57,]),'}':([8,11,18,21,23,24,25,53,59,61,63,68,69,70,72,73,76,79,82,87,89,97,98,100,102,106,110,111,119,120,126,154,156,186,228,269,299,309,315,323,327,331,335,337,340,342,344,351,353,354,355,356,357,358,359,360,],[-6,-7,-38,-37,-36,-10,36,-167,-167,-167,-70,-77,-79,-80,-75,-19,-167,-167,-73,97,-82,-60,-167,-86,-85,-24,-81,-23,-18,-84,-22,184,-167,-70,-167,-69,-167,-167,327,331,-167,-88,-169,-118,-87,-115,-68,-167,-94,357,-61,-167,-117,359,-95,-91,]),'CTEF':([122,125,134,153,160,169,172,174,178,200,204,205,208,209,211,212,216,217,218,219,220,221,224,235,241,242,245,246,247,249,255,256,259,260,261,262,263,264,266,275,276,279,285,288,311,330,349,],[142,142,-178,142,142,142,-177,142,142,-35,-177,-177,-40,142,-177,-177,-177,-177,-177,-177,-177,-177,-89,142,-177,-177,142,142,-150,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,-177,142,142,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vars':([7,53,156,300,],[8,8,8,8,]),'errorOpSExp':([151,],[180,]),'errorMain':([14,],[26,]),'errorCyExp':([164,],[198,]),'opParamCall':([125,],[147,]),'cyTypeParam':([46,81,157,],[57,94,187,]),'takeFondo':([234,],[273,]),'forCycle':([88,],[102,]),'structType':([42,],[49,]),'changeCurrentScope':([9,],[12,]),'struct':([42,],[50,]),'fix':([188,200,],[232,245,]),'param':([80,317,],[91,329,]),'init':([146,287,],[173,312,]),'program':([0,],[1,]),'dict':([41,51,],[48,62,]),'opMatrix':([304,],[320,]),'errorExpresion':([213,],[257,]),'main':([14,],[25,]),'return':([338,],[344,]),'errorParam':([117,],[131,]),'read':([88,],[107,]),'errorReturn':([338,],[345,]),'assignOptions':([146,],[171,]),'flagParameters':([64,115,],[74,129,]),'cyRead':([158,303,],[189,318,]),'basicDeclare':([13,59,61,76,],[23,23,23,23,]),'cyInstruction':([88,],[110,]),'condition':([88,],[111,]),'expresion':([125,153,160,169,174,178,235,249,255,256,266,288,330,349,],[150,183,191,206,210,215,274,283,290,291,298,313,339,352,]),'term':([122,125,153,160,169,174,178,235,245,246,249,255,256,259,260,261,262,263,264,266,275,276,279,288,330,349,],[138,138,138,138,138,138,138,138,138,278,138,138,138,138,138,138,138,138,138,138,138,138,308,138,138,138,]),'funcCall':([88,122,125,153,160,169,174,178,235,245,246,249,255,256,259,260,261,262,263,264,266,275,276,279,288,330,349,],[112,140,140,140,140,140,140,140,140,140,140,284,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,]),'initDict':([146,],[170,]),'saveCurrentTemps':([17,],[28,]),'returnFor':([341,],[347,]),'returnAssign':([359,],[360,]),'saveTypeParam':([65,270,271,],[75,301,302,]),'saltoBody':([326,],[334,]),'dictDeclare':([13,59,61,76,],[18,18,18,18,]),'saveMain':([37,],[44,]),'errorVars':([7,53,156,300,],[10,10,10,10,]),'generateInitialQuadruple':([73,],[79,]),'whileCycle':([88,],[100,]),'errorDictDeclare':([13,59,61,76,],[20,20,20,20,]),'performAndOr':([148,],[176,]),'opFunctions':([12,16,],[14,27,]),'errorOpStruct':([162,],[192,]),'saveVariable':([104,136,181,282,],[124,162,124,162,]),'opVars':([7,53,156,300,],[9,63,186,316,]),'saveOperator':([172,204,205,211,212,216,217,218,219,220,221,241,242,311,],[208,246,247,255,256,259,260,261,262,263,264,275,276,208,]),'errorInit':([208,],[249,]),'performAssign':([171,],[207,]),'cyExpresion':([176,],[213,]),'performRead':([132,272,],[158,303,]),'print':([88,],[105,]),'body':([79,98,228,299,309,328,351,356,],[87,120,269,315,323,338,354,358,]),'errorOpParameters':([116,],[130,]),'repeatWhile':([331,],[340,]),'printTables':([36,],[43,]),'saveParamToDirProc':([91,],[116,]),'saveReturnType':([227,],[268,]),'opParameters':([80,],[90,]),'errorCondition':([88,],[113,]),'cte':([122,125,153,160,169,174,178,209,235,245,246,249,255,256,259,260,261,262,263,264,266,275,276,279,285,288,330,349,],[141,141,141,141,141,141,141,252,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,252,141,141,141,]),'saveProc':([5,54,],[6,64,]),'assign':([88,152,334,],[114,182,341,]),'errorStructDeclare':([13,59,61,76,],[22,22,22,22,]),'cyExp':([198,],[240,]),'instr':([88,],[98,]),'errorFact':([247,],[279,]),'errorProgram':([0,],[2,]),'cyTerm':([168,],[202,]),'rellenaBody':([353,],[356,]),'errorAssignMatrix':([325,],[333,]),'cyDeclare':([59,61,76,],[68,72,82,]),'errorBody':([79,98,228,299,309,328,351,356,],[88,88,88,88,88,88,88,88,]),'opStruct':([162,],[194,]),'errorOpAccess':([195,],[236,]),'saveConstantBool':([133,139,],[159,165,]),'type':([19,42,58,77,92,185,],[33,52,67,83,117,227,]),'dictIndex':([196,],[239,]),'empty':([7,12,16,46,53,59,61,76,78,79,80,81,98,125,150,156,157,158,162,167,168,176,180,187,198,215,228,254,299,300,303,304,307,309,327,328,351,356,],[11,15,15,56,11,70,70,70,86,89,93,56,89,149,179,11,56,190,197,201,203,214,222,229,243,179,89,289,89,11,190,321,201,89,337,89,89,89,]),'errorBasicDeclare':([33,],[40,]),'function':([12,16,],[16,16,]),'performMulDiv':([144,],[168,]),'saveConstantString':([137,],[163,]),'errorOpMatrix':([304,],[319,]),'opDictionary':([162,],[193,]),'errorType':([19,42,58,77,92,185,],[31,31,31,31,31,31,]),'errorForCycle':([88,],[109,]),'opAccess':([162,],[195,]),'basicStatements':([88,],[108,]),'structDeclare':([13,59,61,76,],[21,21,21,21,]),'putFondo':([134,],[160,]),'errorAssign':([124,],[146,]),'saveReturn':([123,224,],[145,266,]),'cyParam':([187,],[231,]),'cyPrint':([167,307,],[199,322,]),'saveConstantFloat':([142,],[166,]),'errorOpReturns':([129,],[155,]),'performAddSub':([138,],[164,]),'cyParamCall':([150,215,],[177,258,]),'declare':([13,59,61,76,],[24,69,69,69,]),'saveQuadruple':([63,186,316,],[73,228,328,]),'opSExp':([180,],[223,]),'optionalMatrix':([78,],[84,]),'performPrint':([143,277,],[167,307,]),'saveFalso':([225,248,298,],[267,280,314,]),'clearVarsTable':([97,184,],[119,226,]),'optionalElse':([327,],[335,]),'dictType':([209,285,],[250,310,]),'initWith':([249,],[281,]),'saveConstantInt':([135,],[161,]),'errorWhileCycle':([88,],[103,]),'sExp':([125,153,160,169,174,178,235,249,255,256,266,288,330,349,],[148,148,148,148,148,148,148,148,148,148,148,148,148,148,]),'errorElse':([327,],[336,]),'performRelational':([223,],[265,]),'errorCyParam':([187,],[230,]),'opReturns':([129,],[154,]),'errorDictType':([209,285,],[251,251,]),'assignMatrix':([254,],[287,]),'saveVerdadero':([343,],[348,]),'rellenaFalso':([335,],[342,]),'errorDict':([41,51,],[47,47,]),'errorInitDict':([324,],[332,]),'saveType':([3,13,38,59,61,76,80,317,],[4,19,45,19,19,19,92,92,]),'saveID':([55,57,229,230,],[65,66,270,271,]),'cycle':([88,],[106,]),'errorFunction':([12,16,],[17,17,]),'exp':([122,125,153,160,169,174,178,235,245,249,255,256,259,260,261,262,263,264,266,275,276,288,330,349,],[143,151,151,151,151,151,151,151,277,151,151,151,292,293,294,295,296,297,151,305,306,151,151,151,]),'fact':([122,125,153,160,169,174,178,235,245,246,249,255,256,259,260,261,262,263,264,266,275,276,279,288,330,349,],[144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables','program',12,'p_program','CT.py',337),
  ('changeCurrentScope -> <empty>','changeCurrentScope',0,'p_changeCurrentScope','CT.py',341),
  ('saveType -> <empty>','saveType',0,'p_saveType','CT.py',346),
  ('saveProc -> <empty>','saveProc',0,'p_saveProc','CT.py',353),
  ('errorProgram -> <empty>','errorProgram',0,'p_errorProgram','CT.py',376),
  ('opVars -> vars','opVars',1,'p_opVars','CT.py',382),
  ('opVars -> empty','opVars',1,'p_opVars','CT.py',383),
  ('opFunctions -> function opFunctions','opFunctions',2,'p_opFunctions','CT.py',388),
  ('opFunctions -> empty','opFunctions',1,'p_opFunctions','CT.py',389),
  ('vars -> errorVars VARS declare','vars',3,'p_vars','CT.py',393),
  ('saveID -> <empty>','saveID',0,'p_saveID','CT.py',398),
  ('errorVars -> <empty>','errorVars',0,'p_errorVars','CT.py',439),
  ('type -> errorType INT','type',2,'p_type','CT.py',445),
  ('type -> FLOAT','type',1,'p_type','CT.py',446),
  ('type -> STRING','type',1,'p_type','CT.py',447),
  ('type -> BOOL','type',1,'p_type','CT.py',448),
  ('errorType -> <empty>','errorType',0,'p_errorType','CT.py',453),
  ('main -> errorMain MAIN saveMain { opVars saveQuadruple generateInitialQuadruple body } clearVarsTable','main',10,'p_main','CT.py',459),
  ('generateInitialQuadruple -> <empty>','generateInitialQuadruple',0,'p_generateInitialQuadruple','CT.py',463),
  ('saveMain -> <empty>','saveMain',0,'p_saveMain','CT.py',467),
  ('errorMain -> <empty>','errorMain',0,'p_errorMain','CT.py',476),
  ('instr -> basicStatements ;','instr',2,'p_instr','CT.py',482),
  ('instr -> condition','instr',1,'p_instr','CT.py',483),
  ('instr -> cycle','instr',1,'p_instr','CT.py',484),
  ('basicStatements -> assign','basicStatements',1,'p_basicStatements','CT.py',488),
  ('basicStatements -> funcCall','basicStatements',1,'p_basicStatements','CT.py',489),
  ('basicStatements -> print','basicStatements',1,'p_basicStatements','CT.py',490),
  ('basicStatements -> read','basicStatements',1,'p_basicStatements','CT.py',491),
  ('print -> PRINT PARINI exp performPrint cyPrint PARFIN','print',6,'p_print','CT.py',494),
  ('cyPrint -> , fix exp performPrint cyPrint','cyPrint',5,'p_cyPrint','CT.py',497),
  ('cyPrint -> empty','cyPrint',1,'p_cyPrint','CT.py',498),
  ('read -> READ PARINI ID performRead cyRead PARFIN','read',6,'p_read','CT.py',501),
  ('cyRead -> , fix ID performRead cyRead','cyRead',5,'p_cyRead','CT.py',504),
  ('cyRead -> empty','cyRead',1,'p_cyRead','CT.py',505),
  ('fix -> <empty>','fix',0,'p_fix','CT.py',508),
  ('declare -> basicDeclare','declare',1,'p_declare','CT.py',513),
  ('declare -> structDeclare','declare',1,'p_declare','CT.py',514),
  ('declare -> dictDeclare','declare',1,'p_declare','CT.py',515),
  ('init -> ASGN saveOperator errorInit initWith','init',4,'p_init','CT.py',520),
  ('errorInit -> <empty>','errorInit',0,'p_errorInit','CT.py',524),
  ('initWith -> expresion','initWith',1,'p_initWith','CT.py',530),
  ('initWith -> funcCall','initWith',1,'p_initWith','CT.py',531),
  ('initDict -> ASGN PARINI dictType : dictType PARFIN errorInitDict','initDict',7,'p_initDict','CT.py',536),
  ('errorInitDict -> <empty>','errorInitDict',0,'p_errorInitDict','CT.py',541),
  ('dictType -> errorDictType CTES','dictType',2,'p_dictType','CT.py',547),
  ('dictType -> cte','dictType',1,'p_dictType','CT.py',548),
  ('dictType -> ID','dictType',1,'p_dictType','CT.py',549),
  ('errorDictType -> <empty>','errorDictType',0,'p_errorDictType','CT.py',554),
  ('param -> saveType type errorParam ID cyTypeParam cyParam','param',6,'p_param','CT.py',560),
  ('errorParam -> <empty>','errorParam',0,'p_errorParam','CT.py',565),
  ('cyParam -> errorCyParam saveID saveTypeParam ; param','cyParam',5,'p_cyParam','CT.py',571),
  ('cyParam -> empty saveID saveTypeParam','cyParam',3,'p_cyParam','CT.py',572),
  ('cyTypeParam -> , saveID saveTypeParam ID cyTypeParam','cyTypeParam',5,'p_cyTypeParam','CT.py',577),
  ('cyTypeParam -> empty','cyTypeParam',1,'p_cyTypeParam','CT.py',578),
  ('saveTypeParam -> <empty>','saveTypeParam',0,'p_saveTypeParam','CT.py',582),
  ('errorCyParam -> <empty>','errorCyParam',0,'p_errorCyParam','CT.py',592),
  ('function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable','function',14,'p_function','CT.py',598),
  ('saveCurrentTemps -> <empty>','saveCurrentTemps',0,'p_saveCurrentTemps','CT.py',602),
  ('errorFunction -> <empty>','errorFunction',0,'p_errorFunction','CT.py',614),
  ('clearVarsTable -> <empty>','clearVarsTable',0,'p_clearVarsTable','CT.py',619),
  ('return -> errorReturn RETURN expresion ;','return',4,'p_return','CT.py',649),
  ('errorReturn -> <empty>','errorReturn',0,'p_errorReturn','CT.py',654),
  ('opParameters -> param saveParamToDirProc errorOpParameters','opParameters',3,'p_opParameters','CT.py',660),
  ('opParameters -> empty','opParameters',1,'p_opParameters','CT.py',661),
  ('flagParameters -> <empty>','flagParameters',0,'p_flagParameters','CT.py',665),
  ('saveParamToDirProc -> <empty>','saveParamToDirProc',0,'p_saveParamToDirProc','CT.py',670),
  ('errorOpParameters -> <empty>','errorOpParameters',0,'p_errorOpParameters','CT.py',678),
  ('opReturns -> errorOpReturns RETURNS type saveReturnType { opVars saveQuadruple body return','opReturns',9,'p_opReturns','CT.py',684),
  ('opReturns -> { opVars saveQuadruple body','opReturns',4,'p_opReturns','CT.py',685),
  ('saveQuadruple -> <empty>','saveQuadruple',0,'p_saveQuadruple','CT.py',689),
  ('saveReturnType -> <empty>','saveReturnType',0,'p_saveReturnType','CT.py',696),
  ('errorOpReturns -> <empty>','errorOpReturns',0,'p_errorOpReturns','CT.py',702),
  ('basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare','basicDeclare',8,'p_basicDeclare','CT.py',708),
  ('errorBasicDeclare -> <empty>','errorBasicDeclare',0,'p_errorBasicDeclare','CT.py',713),
  ('structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare','structDeclare',6,'p_structDeclare','CT.py',719),
  ('errorStructDeclare -> <empty>','errorStructDeclare',0,'p_errorStructDeclare','CT.py',724),
  ('dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare','dictDeclare',6,'p_dictDeclare','CT.py',730),
  ('errorDictDeclare -> <empty>','errorDictDeclare',0,'p_errorDictDeclare','CT.py',735),
  ('cyDeclare -> declare','cyDeclare',1,'p_cyDeclare','CT.py',741),
  ('cyDeclare -> empty','cyDeclare',1,'p_cyDeclare','CT.py',742),
  ('body -> errorBody cyInstruction','body',2,'p_body','CT.py',747),
  ('body -> empty','body',1,'p_body','CT.py',748),
  ('errorBody -> <empty>','errorBody',0,'p_errorBody','CT.py',753),
  ('cyInstruction -> instr body','cyInstruction',2,'p_cyInstruction','CT.py',759),
  ('cycle -> forCycle','cycle',1,'p_cycle','CT.py',764),
  ('cycle -> whileCycle','cycle',1,'p_cycle','CT.py',765),
  ('whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile','whileCycle',11,'p_whileCycle','CT.py',770),
  ('repeatWhile -> <empty>','repeatWhile',0,'p_repeatWhile','CT.py',774),
  ('saveReturn -> <empty>','saveReturn',0,'p_saveReturn','CT.py',781),
  ('errorWhileCycle -> <empty>','errorWhileCycle',0,'p_errorWhileCycle','CT.py',785),
  ('forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign','forCycle',18,'p_forCycle','CT.py',791),
  ('saltoBody -> <empty>','saltoBody',0,'p_saltoBody','CT.py',795),
  ('returnFor -> <empty>','returnFor',0,'p_returnFor','CT.py',801),
  ('rellenaBody -> <empty>','rellenaBody',0,'p_rellenaBody','CT.py',813),
  ('returnAssign -> <empty>','returnAssign',0,'p_returnAssign','CT.py',821),
  ('errorForCycle -> <empty>','errorForCycle',0,'p_errorForCycle','CT.py',826),
  ('assign -> ID saveVariable errorAssign assignOptions performAssign','assign',5,'p_assign','CT.py',832),
  ('errorAssign -> <empty>','errorAssign',0,'p_errorAssign','CT.py',837),
  ('assignOptions -> init','assignOptions',1,'p_assignOptions','CT.py',843),
  ('assignOptions -> initDict','assignOptions',1,'p_assignOptions','CT.py',844),
  ('assignOptions -> [ expresion ] assignMatrix init','assignOptions',5,'p_assignOptions','CT.py',845),
  ('assignMatrix -> [ expresion ] errorAssignMatrix','assignMatrix',4,'p_assignMatrix','CT.py',850),
  ('assignMatrix -> empty','assignMatrix',1,'p_assignMatrix','CT.py',851),
  ('errorAssignMatrix -> <empty>','errorAssignMatrix',0,'p_errorAssignMatrix','CT.py',856),
  ('funcCall -> ID PARINI opParamCall PARFIN','funcCall',4,'p_funcCall','CT.py',862),
  ('opParamCall -> expresion cyParamCall','opParamCall',2,'p_opParamCall','CT.py',867),
  ('opParamCall -> empty','opParamCall',1,'p_opParamCall','CT.py',868),
  ('cyParamCall -> , expresion cyParamCall','cyParamCall',3,'p_cyParamCall','CT.py',873),
  ('cyParamCall -> empty','cyParamCall',1,'p_cyParamCall','CT.py',874),
  ('struct -> structType [ CTED ] optionalMatrix','struct',5,'p_struct','CT.py',879),
  ('structType -> type','structType',1,'p_structType','CT.py',884),
  ('structType -> DICT dict','structType',2,'p_structType','CT.py',885),
  ('optionalMatrix -> [ CTED ]','optionalMatrix',3,'p_optionalMatrix','CT.py',890),
  ('optionalMatrix -> empty','optionalMatrix',1,'p_optionalMatrix','CT.py',891),
  ('condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso','condition',11,'p_condition','CT.py',896),
  ('errorCondition -> <empty>','errorCondition',0,'p_errorCondition','CT.py',901),
  ('optionalElse -> errorElse ELSE saveVerdadero { body }','optionalElse',6,'p_optionalElse','CT.py',907),
  ('optionalElse -> empty','optionalElse',1,'p_optionalElse','CT.py',908),
  ('errorElse -> <empty>','errorElse',0,'p_errorElse','CT.py',913),
  ('dict -> errorDict PARINI type : type PARFIN','dict',6,'p_dict','CT.py',919),
  ('errorDict -> <empty>','errorDict',0,'p_errorDict','CT.py',924),
  ('expresion -> sExp performAndOr cyExpresion errorExpresion','expresion',4,'p_expresion','CT.py',930),
  ('errorExpresion -> <empty>','errorExpresion',0,'p_errorExpresion','CT.py',936),
  ('cyExpresion -> AND saveOperator expresion','cyExpresion',3,'p_cyExpresion','CT.py',942),
  ('cyExpresion -> OR saveOperator expresion','cyExpresion',3,'p_cyExpresion','CT.py',943),
  ('cyExpresion -> empty','cyExpresion',1,'p_cyExpresion','CT.py',944),
  ('sExp -> exp errorOpSExp opSExp performRelational','sExp',4,'p_sExp','CT.py',949),
  ('opSExp -> EQ saveOperator exp','opSExp',3,'p_opSExp','CT.py',954),
  ('opSExp -> DIF saveOperator exp','opSExp',3,'p_opSExp','CT.py',955),
  ('opSExp -> LTOEQ saveOperator exp','opSExp',3,'p_opSExp','CT.py',956),
  ('opSExp -> GTOEQ saveOperator exp','opSExp',3,'p_opSExp','CT.py',957),
  ('opSExp -> GT saveOperator exp','opSExp',3,'p_opSExp','CT.py',958),
  ('opSExp -> LT saveOperator exp','opSExp',3,'p_opSExp','CT.py',959),
  ('opSExp -> empty','opSExp',1,'p_opSExp','CT.py',960),
  ('errorOpSExp -> <empty>','errorOpSExp',0,'p_errorOpSExp','CT.py',964),
  ('exp -> term performAddSub errorCyExp cyExp','exp',4,'p_exp','CT.py',970),
  ('cyExp -> PLUS saveOperator exp','cyExp',3,'p_cyExp','CT.py',975),
  ('cyExp -> MINUS saveOperator exp','cyExp',3,'p_cyExp','CT.py',976),
  ('cyExp -> empty','cyExp',1,'p_cyExp','CT.py',977),
  ('errorCyExp -> <empty>','errorCyExp',0,'p_errorCyExp','CT.py',982),
  ('term -> fact performMulDiv cyTerm','term',3,'p_term','CT.py',987),
  ('cyTerm -> MULT saveOperator errorFact term','cyTerm',4,'p_cyTerm','CT.py',992),
  ('cyTerm -> DIV saveOperator term','cyTerm',3,'p_cyTerm','CT.py',993),
  ('cyTerm -> empty','cyTerm',1,'p_cyTerm','CT.py',994),
  ('fact -> CTES saveConstantString','fact',2,'p_fact','CT.py',999),
  ('fact -> cte','fact',1,'p_fact','CT.py',1000),
  ('fact -> funcCall','fact',1,'p_fact','CT.py',1001),
  ('fact -> PARINI putFondo expresion PARFIN takeFondo','fact',5,'p_fact','CT.py',1002),
  ('fact -> ID saveVariable opAccess errorOpAccess','fact',4,'p_fact','CT.py',1003),
  ('errorFact -> <empty>','errorFact',0,'p_errorFact','CT.py',1008),
  ('opAccess -> opStruct','opAccess',1,'p_opAccess','CT.py',1014),
  ('opAccess -> opDictionary','opAccess',1,'p_opAccess','CT.py',1015),
  ('opAccess -> empty','opAccess',1,'p_opAccess','CT.py',1016),
  ('errorOpAccess -> <empty>','errorOpAccess',0,'p_errorOpAccess','CT.py',1021),
  ('opStruct -> errorOpStruct [ expresion ] opMatrix','opStruct',5,'p_opStruct','CT.py',1026),
  ('errorOpStruct -> <empty>','errorOpStruct',0,'p_errorOpStruct','CT.py',1031),
  ('opMatrix -> errorOpMatrix [ expresion ]','opMatrix',4,'p_opMatrix','CT.py',1037),
  ('opMatrix -> empty','opMatrix',1,'p_opMatrix','CT.py',1038),
  ('errorOpMatrix -> <empty>','errorOpMatrix',0,'p_errorOpMatrix','CT.py',1043),
  ('opDictionary -> . dictIndex','opDictionary',2,'p_opDictionary','CT.py',1049),
  ('dictIndex -> FIRST','dictIndex',1,'p_dictIndex','CT.py',1054),
  ('dictIndex -> LAST','dictIndex',1,'p_dictIndex','CT.py',1055),
  ('cte -> CTED saveConstantInt','cte',2,'p_cte','CT.py',1060),
  ('cte -> CTEF saveConstantFloat','cte',2,'p_cte','CT.py',1061),
  ('cte -> TRUE saveConstantBool','cte',2,'p_cte','CT.py',1062),
  ('cte -> FALSE saveConstantBool','cte',2,'p_cte','CT.py',1063),
  ('empty -> <empty>','empty',0,'p_empty','CT.py',1067),
  ('printTables -> <empty>','printTables',0,'p_printTables','CT.py',1072),
  ('rellenaFalso -> <empty>','rellenaFalso',0,'p_rellenaFalso','CT.py',1091),
  ('saveFalso -> <empty>','saveFalso',0,'p_saveFalso','CT.py',1096),
  ('saveVerdadero -> <empty>','saveVerdadero',0,'p_saveVerdadero','CT.py',1109),
  ('saveConstantInt -> <empty>','saveConstantInt',0,'p_saveConstantInt','CT.py',1116),
  ('saveConstantFloat -> <empty>','saveConstantFloat',0,'p_saveConstantFloat','CT.py',1128),
  ('saveConstantBool -> <empty>','saveConstantBool',0,'p_saveConstantBool','CT.py',1140),
  ('saveConstantString -> <empty>','saveConstantString',0,'p_saveConstantString','CT.py',1152),
  ('saveVariable -> <empty>','saveVariable',0,'p_saveVariable','CT.py',1164),
  ('saveOperator -> <empty>','saveOperator',0,'p_saveOperator','CT.py',1187),
  ('putFondo -> <empty>','putFondo',0,'p_putFondo','CT.py',1217),
  ('takeFondo -> <empty>','takeFondo',0,'p_takeFondo','CT.py',1222),
  ('performAssign -> <empty>','performAssign',0,'p_performAssign','CT.py',1229),
  ('performMulDiv -> <empty>','performMulDiv',0,'p_performMulDiv','CT.py',1250),
  ('performAddSub -> <empty>','performAddSub',0,'p_performAddSub','CT.py',1271),
  ('performRelational -> <empty>','performRelational',0,'p_performRelational','CT.py',1292),
  ('performAndOr -> <empty>','performAndOr',0,'p_performAndOr','CT.py',1313),
  ('performPrint -> <empty>','performPrint',0,'p_performPrint','CT.py',1334),
  ('performRead -> <empty>','performRead',0,'p_performeRead','CT.py',1338),
]
