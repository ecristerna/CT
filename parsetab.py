
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '5DC786B4AFDB9217CE37F9EF6D03AFFA'
    
_lr_action_items = {'RETURN':([8,11,18,21,23,24,59,61,68,69,70,72,76,82,89,98,100,102,106,110,111,120,126,297,322,334,335,338,342,344,345,347,349,352,364,367,368,],[-6,-7,-38,-37,-36,-10,-172,-172,-78,-80,-81,-76,-172,-74,-83,-172,-87,-86,-24,-82,-23,-85,-22,-172,-71,-172,-172,-89,-174,-122,-63,-88,-119,356,-121,-96,-92,]),'VARS':([7,10,53,152,297,],[-12,13,-12,-12,-12,]),'READ':([8,11,18,21,23,24,53,59,61,63,68,69,70,72,73,76,79,82,88,98,100,102,106,111,126,152,181,215,296,297,306,322,334,335,338,342,344,347,349,358,360,363,364,367,368,],[-6,-7,-38,-37,-36,-10,-172,-172,-172,-71,-78,-80,-81,-76,-19,-172,-84,-74,99,-84,-87,-86,-24,-23,-22,-172,-71,-84,-84,-172,-84,-71,-172,-84,-89,-174,-122,-88,-119,-84,-95,-84,-121,-96,-92,]),'RES':([133,135,136,137,139,140,141,142,144,155,157,158,159,161,162,164,188,189,190,192,207,221,223,224,225,226,243,266,276,278,301,326,327,353,],[-179,-177,-181,-180,-179,-152,-151,-178,-186,-170,-168,-172,-150,-171,-169,197,-157,-156,-159,-158,-107,-184,-154,-166,-167,-165,-106,-153,-181,-152,-172,-160,-163,-162,]),'DIF':([133,135,136,137,138,139,140,141,142,144,155,157,158,159,160,161,162,164,175,188,189,190,192,193,198,199,207,210,221,223,224,225,226,227,230,243,266,271,272,276,278,301,302,303,305,326,327,353,],[-179,-177,-181,-180,-187,-179,-152,-151,-178,-186,-170,-168,-172,-150,-144,-171,-169,-172,-139,-157,-156,-159,-158,-172,-145,-149,-107,253,-184,-154,-166,-167,-165,-140,-143,-106,-153,-148,-147,-181,-152,-172,-141,-142,-146,-160,-163,-162,]),'WHILE':([8,11,18,21,23,24,53,59,61,63,68,69,70,72,73,76,79,82,88,98,100,102,103,106,111,126,152,181,215,296,297,306,322,334,335,338,342,344,347,349,358,360,363,364,367,368,],[-6,-7,-38,-37,-36,-10,-172,-172,-172,-71,-78,-80,-81,-76,-19,-172,-84,-74,-91,-84,-87,-86,123,-24,-23,-22,-172,-71,-84,-84,-172,-84,-71,-172,-84,-89,-174,-122,-88,-119,-84,-95,-84,-121,-96,-92,]),'PROGRAM':([0,2,],[-5,3,]),'PRINT':([8,11,18,21,23,24,53,59,61,63,68,69,70,72,73,76,79,82,88,98,100,102,106,111,126,152,181,215,296,297,306,322,334,335,338,342,344,347,349,358,360,363,364,367,368,],[-6,-7,-38,-37,-36,-10,-172,-172,-172,-71,-78,-80,-81,-76,-19,-172,-84,-74,101,-84,-87,-86,-24,-23,-22,-172,-71,-84,-84,-172,-84,-71,-172,-84,-89,-174,-122,-88,-119,-84,-95,-84,-121,-96,-92,]),'PARINI':([41,47,51,54,64,74,99,101,104,122,123,125,127,128,134,136,145,147,149,156,165,168,170,195,197,200,201,204,211,222,228,229,232,233,234,235,237,244,245,250,251,252,253,254,255,256,259,268,269,273,276,282,284,285,288,289,290,291,292,293,308,337,356,],[-125,58,-125,-4,-66,80,121,122,-108,134,-90,147,148,149,-183,-108,165,134,134,134,134,205,134,-35,-182,-182,-182,-40,-90,134,-182,-182,134,134,134,-155,134,-182,-182,134,-182,-182,-182,-182,-182,-182,134,134,134,134,-108,134,134,134,134,134,134,134,134,134,-182,134,134,]),'DIV':([133,135,136,137,139,140,141,142,144,155,157,158,159,161,162,164,188,189,190,192,207,221,223,224,225,226,243,266,276,278,301,326,327,353,],[-179,-177,-181,-180,-179,-152,-151,-178,-186,-170,-168,-172,-150,-171,-169,200,-157,-156,-159,-158,-107,-184,-154,-166,-167,-165,-106,-153,-181,-152,-172,-160,-163,-162,]),'.':([136,158,276,],[-181,191,-181,]),'TRUE':([122,134,147,149,156,165,168,170,195,197,200,201,204,205,211,222,228,229,232,233,234,235,237,244,245,250,251,252,253,254,255,256,259,268,269,273,279,282,284,285,288,289,290,291,292,293,308,337,356,],[133,-183,133,133,133,133,-182,133,-35,-182,-182,-182,-40,133,-90,133,-182,-182,133,133,133,-155,133,-182,-182,133,-182,-182,-182,-182,-182,-182,133,133,133,133,133,133,133,133,133,133,133,133,133,133,-182,133,133,]),'[':([29,30,32,39,49,52,62,78,95,104,124,136,146,158,176,187,242,276,301,325,],[-14,-15,-16,-13,60,-115,-116,85,-124,-181,-99,-181,170,-161,-181,222,282,-181,-164,337,]),'MULT':([133,135,136,137,139,140,141,142,144,155,157,158,159,161,162,164,188,189,190,192,207,221,223,224,225,226,243,266,276,278,301,326,327,353,],[-179,-177,-181,-180,-179,-152,-151,-178,-186,-170,-168,-172,-150,-171,-169,201,-157,-156,-159,-158,-107,-184,-154,-166,-167,-165,-106,-153,-181,-152,-172,-160,-163,-162,]),'LAST':([191,],[225,]),'MINUS':([133,135,136,137,138,139,140,141,142,144,155,157,158,159,160,161,162,164,188,189,190,192,193,198,199,207,221,223,224,225,226,243,266,271,272,276,278,301,305,326,327,353,],[-179,-177,-181,-180,-187,-179,-152,-151,-178,-186,-170,-168,-172,-150,-144,-171,-169,-172,-157,-156,-159,-158,229,-145,-149,-107,-184,-154,-166,-167,-165,-106,-153,-148,-147,-181,-152,-172,-146,-160,-163,-162,]),'LTOEQ':([133,135,136,137,138,139,140,141,142,144,155,157,158,159,160,161,162,164,175,188,189,190,192,193,198,199,207,210,221,223,224,225,226,227,230,243,266,271,272,276,278,301,302,303,305,326,327,353,],[-179,-177,-181,-180,-187,-179,-152,-151,-178,-186,-170,-168,-172,-150,-144,-171,-169,-172,-139,-157,-156,-159,-158,-172,-145,-149,-107,252,-184,-154,-166,-167,-165,-140,-143,-106,-153,-148,-147,-181,-152,-172,-141,-142,-146,-160,-163,-162,]),',':([46,81,132,133,135,136,137,138,139,140,141,142,143,144,153,154,155,157,158,159,160,161,162,163,164,172,174,175,188,189,190,192,193,198,199,207,208,209,210,221,223,224,225,226,227,230,243,246,247,257,258,265,266,270,271,272,286,287,294,300,301,302,303,304,305,311,312,313,314,315,316,317,318,319,326,327,353,],[55,55,-191,-179,-177,-181,-180,-187,-179,-152,-151,-178,-190,-186,55,183,-170,-168,-172,-150,-144,-171,-169,195,-172,-189,-113,-139,-157,-156,-159,-158,-172,-145,-149,-107,-172,250,-172,-184,-154,-166,-167,-165,-140,-143,-106,-127,-130,-138,-188,-191,-153,-190,-148,-147,-126,-113,-131,183,-172,-141,-142,195,-146,-128,-129,250,-136,-134,-133,-137,-135,-132,-160,-163,-162,]),'ASGN':([104,124,146,176,242,281,283,331,340,],[-181,-99,168,-181,-172,308,-104,-105,-103,]),'FIRST':([191,],[224,]),'LT':([133,135,136,137,138,139,140,141,142,144,155,157,158,159,160,161,162,164,175,188,189,190,192,193,198,199,207,210,221,223,224,225,226,227,230,243,266,271,272,276,278,301,302,303,305,326,327,353,],[-179,-177,-181,-180,-187,-179,-152,-151,-178,-186,-170,-168,-172,-150,-144,-171,-169,-172,-139,-157,-156,-159,-158,-172,-145,-149,-107,254,-184,-154,-166,-167,-165,-140,-143,-106,-153,-148,-147,-181,-152,-172,-141,-142,-146,-160,-163,-162,]),'PLUS':([133,135,136,137,138,139,140,141,142,144,155,157,158,159,160,161,162,164,188,189,190,192,193,198,199,207,221,223,224,225,226,243,266,271,272,276,278,301,305,326,327,353,],[-179,-177,-181,-180,-187,-179,-152,-151,-178,-186,-170,-168,-172,-150,-144,-171,-169,-172,-157,-156,-159,-158,228,-145,-149,-107,-184,-154,-166,-167,-165,-106,-153,-148,-147,-181,-152,-172,-146,-160,-163,-162,]),'BOOL':([13,19,42,58,59,61,76,77,80,92,180,323,],[-3,32,32,32,-3,-3,-3,32,-3,32,32,-3,]),';':([46,48,50,56,57,66,78,81,84,86,94,95,105,107,108,112,114,118,133,135,136,137,138,139,140,141,142,144,153,155,157,158,159,160,161,162,164,166,167,169,172,175,177,182,188,189,190,192,193,198,199,203,207,208,210,217,220,221,223,224,225,226,227,230,231,243,246,247,257,258,264,266,271,272,275,276,277,278,286,294,295,299,301,302,303,305,309,311,312,314,315,316,317,318,319,320,326,327,330,339,353,359,362,],[-172,59,61,-54,-11,76,-172,-172,-114,-118,-53,-124,-27,-28,126,-26,-25,-117,-179,-177,-181,-180,-187,-179,-152,-151,-178,-186,-172,-170,-168,-172,-150,-144,-171,-169,-172,-101,-185,-100,-189,-139,211,-56,-157,-156,-159,-158,-172,-145,-149,-98,-107,-172,-172,-11,-32,-184,-154,-166,-167,-165,-140,-143,-29,-106,-127,-130,-138,-188,-55,-153,-148,-147,-39,-181,-41,-42,-126,-131,-175,323,-172,-141,-142,-146,-102,-128,-129,-136,-134,-133,-137,-135,-132,333,-160,-163,-44,-43,-162,-62,365,]),':':([29,30,32,39,67,133,135,139,142,155,157,161,162,238,240,241,280,],[-14,-15,-16,-13,77,-179,-177,-179,-178,-170,-168,-171,-169,279,-46,-47,-45,]),'$end':([1,36,43,],[0,-173,-1,]),'GT':([133,135,136,137,138,139,140,141,142,144,155,157,158,159,160,161,162,164,175,188,189,190,192,193,198,199,207,210,221,223,224,225,226,227,230,243,266,271,272,276,278,301,302,303,305,326,327,353,],[-179,-177,-181,-180,-187,-179,-152,-151,-178,-186,-170,-168,-172,-150,-144,-171,-169,-172,-139,-157,-156,-159,-158,-172,-145,-149,-107,251,-184,-154,-166,-167,-165,-140,-143,-106,-153,-148,-147,-181,-152,-172,-141,-142,-146,-160,-163,-162,]),'STRING':([13,19,42,58,59,61,76,77,80,92,180,323,],[-3,30,30,30,-3,-3,-3,30,-3,30,30,-3,]),'FOR':([8,11,18,21,23,24,53,59,61,63,68,69,70,72,73,76,79,82,88,98,100,102,106,109,111,126,152,181,215,296,297,306,322,334,335,338,342,344,347,349,358,360,363,364,367,368,],[-6,-7,-38,-37,-36,-10,-172,-172,-172,-71,-78,-80,-81,-76,-19,-172,-84,-74,-97,-84,-87,-86,-24,127,-23,-22,-172,-71,-84,-84,-172,-84,-71,-172,-84,-89,-174,-122,-88,-119,-84,-95,-84,-121,-96,-92,]),'ELSE':([334,343,],[-123,350,]),'RETURNS':([115,129,151,],[-66,-73,180,]),'FUNC':([7,8,9,11,12,16,17,18,21,23,24,28,59,61,68,69,70,72,76,82,179,213,],[-172,-6,-2,-7,-59,-59,-58,-38,-37,-36,-10,38,-172,-172,-78,-80,-81,-76,-172,-74,-60,-57,]),'PARFIN':([29,30,32,39,56,80,81,83,90,91,93,94,116,130,132,133,135,136,137,138,139,140,141,142,143,144,147,153,154,155,157,158,159,160,161,162,163,164,166,167,169,171,172,173,174,175,178,182,184,185,186,188,189,190,192,193,194,196,198,199,202,203,207,208,209,210,216,218,221,223,224,225,226,227,230,240,241,243,246,247,248,249,257,258,263,265,266,270,271,272,275,276,277,278,280,286,287,294,298,300,301,302,303,304,305,307,309,311,312,313,314,315,316,317,318,319,324,326,327,328,330,332,336,339,348,353,354,],[-14,-15,-16,-13,-54,-172,-172,95,115,-67,-65,-53,-68,-64,-191,-179,-177,-181,-180,-187,-179,-152,-151,-178,-190,-186,-172,-172,-172,-170,-168,-172,-150,-144,-171,-169,-172,-172,-101,-185,-100,207,-189,-110,-113,-139,212,-172,220,-34,221,-157,-156,-159,-158,-172,231,-31,-145,-149,236,-98,-107,-172,-172,-172,-11,-49,-184,-154,-166,-167,-165,-140,-143,-46,-47,-106,-127,-130,-109,-112,-138,-188,-55,-191,-153,-190,-148,-147,-39,-181,-41,-42,-45,-126,-113,-131,-52,-172,-172,-141,-142,-172,-146,330,-102,-128,-129,-172,-136,-134,-133,-137,-135,-132,-33,-160,-163,-30,-44,-111,-51,-43,-94,-162,357,]),']':([71,96,133,135,136,137,138,139,140,141,142,144,155,157,158,159,160,161,162,164,172,175,188,189,190,192,193,198,199,206,207,208,210,221,223,224,225,226,227,230,243,246,247,257,258,266,267,271,272,286,294,301,302,303,305,310,311,312,314,315,316,317,318,319,326,327,346,353,],[78,118,-179,-177,-181,-180,-187,-179,-152,-151,-178,-186,-170,-168,-172,-150,-144,-171,-169,-172,-189,-139,-157,-156,-159,-158,-172,-145,-149,242,-107,-172,-172,-184,-154,-166,-167,-165,-140,-143,-106,-127,-130,-138,-188,-153,301,-148,-147,-126,-131,-172,-141,-142,-146,331,-128,-129,-136,-134,-133,-137,-135,-132,-160,-163,353,-162,]),'ID':([3,4,8,11,18,21,23,24,29,30,32,33,34,35,38,39,40,45,53,55,59,61,63,65,68,69,70,72,73,75,76,79,82,88,98,100,102,106,111,117,121,122,126,131,134,147,148,149,152,156,165,168,170,181,183,195,197,200,201,204,205,211,215,219,222,228,229,232,233,234,235,237,244,245,250,251,252,253,254,255,256,259,268,269,273,279,282,284,285,288,289,290,291,292,293,296,297,306,308,322,333,334,335,337,338,341,342,344,347,349,356,358,360,363,364,367,368,],[-3,5,-6,-7,-38,-37,-36,-10,-14,-15,-16,-75,41,42,-3,-13,46,54,-172,-11,-172,-172,-71,-55,-78,-80,-81,-76,-19,81,-172,-84,-74,104,-84,-87,-86,-24,-23,-50,132,136,-22,153,-183,136,176,136,-172,136,136,-182,136,-71,-35,-35,-182,-182,-182,-40,241,-90,-84,265,136,-182,-182,136,136,136,-155,276,-182,-182,136,-182,-182,-182,-182,-182,-182,136,136,136,136,241,136,136,136,136,136,136,136,136,136,-84,-172,-84,-182,-71,-93,-172,-84,136,-89,176,-174,-122,-88,-119,136,-84,-95,-84,-121,-96,-92,]),'IF':([8,11,18,21,23,24,53,59,61,63,68,69,70,72,73,76,79,82,88,98,100,102,106,111,113,126,152,181,215,296,297,306,322,334,335,338,342,344,347,349,358,360,363,364,367,368,],[-6,-7,-38,-37,-36,-10,-172,-172,-172,-71,-78,-80,-81,-76,-19,-172,-84,-74,-120,-84,-87,-86,-24,-23,128,-22,-172,-71,-84,-84,-172,-84,-71,-172,-84,-89,-174,-122,-88,-119,-84,-95,-84,-121,-96,-92,]),'AND':([133,135,136,137,138,139,140,141,142,144,155,157,158,159,160,161,162,164,172,175,188,189,190,192,193,198,199,207,208,210,221,223,224,225,226,227,230,243,257,258,266,271,272,276,278,294,301,302,303,305,314,315,316,317,318,319,326,327,353,],[-179,-177,-181,-180,-187,-179,-152,-151,-178,-186,-170,-168,-172,-150,-144,-171,-169,-172,-189,-139,-157,-156,-159,-158,-172,-145,-149,-107,244,-172,-184,-154,-166,-167,-165,-140,-143,-106,-138,-188,-153,-148,-147,-181,-152,-131,-172,-141,-142,-146,-136,-134,-133,-137,-135,-132,-160,-163,-162,]),'CTES':([122,134,147,149,156,165,168,170,195,197,200,201,204,205,211,222,228,229,232,233,234,235,237,239,244,245,250,251,252,253,254,255,256,259,268,269,273,279,282,284,285,288,289,290,291,292,293,308,337,356,],[137,-183,137,137,137,137,-182,137,-35,-182,-182,-182,-40,-48,-90,137,-182,-182,137,137,137,-155,137,280,-182,-182,137,-182,-182,-182,-182,-182,-182,137,137,137,137,-48,137,137,137,137,137,137,137,137,137,-182,137,137,]),'FALSE':([122,134,147,149,156,165,168,170,195,197,200,201,204,205,211,222,228,229,232,233,234,235,237,244,245,250,251,252,253,254,255,256,259,268,269,273,279,282,284,285,288,289,290,291,292,293,308,337,356,],[139,-183,139,139,139,139,-182,139,-35,-182,-182,-182,-40,139,-90,139,-182,-182,139,139,139,-155,139,-182,-182,139,-182,-182,-182,-182,-182,-182,139,139,139,139,139,139,139,139,139,139,139,139,139,139,-182,139,139,]),'STRUCT':([13,22,59,61,76,],[-77,35,-77,-77,-77,]),'INT':([13,19,31,42,58,59,61,76,77,80,92,180,323,],[-3,-17,39,-17,-17,-3,-3,-3,-17,-3,-17,-17,-3,]),'EQ':([133,135,136,137,138,139,140,141,142,144,155,157,158,159,160,161,162,164,175,188,189,190,192,193,198,199,207,210,221,223,224,225,226,227,230,243,266,271,272,276,278,301,302,303,305,326,327,353,],[-179,-177,-181,-180,-187,-179,-152,-151,-178,-186,-170,-168,-172,-150,-144,-171,-169,-172,-139,-157,-156,-159,-158,-172,-145,-149,-107,256,-184,-154,-166,-167,-165,-140,-143,-106,-153,-148,-147,-181,-152,-172,-141,-142,-146,-160,-163,-162,]),'FLOAT':([13,19,42,58,59,61,76,77,80,92,180,323,],[-3,29,29,29,-3,-3,-3,29,-3,29,29,-3,]),'OR':([133,135,136,137,138,139,140,141,142,144,155,157,158,159,160,161,162,164,172,175,188,189,190,192,193,198,199,207,208,210,221,223,224,225,226,227,230,243,257,258,266,271,272,276,278,294,301,302,303,305,314,315,316,317,318,319,326,327,353,],[-179,-177,-181,-180,-187,-179,-152,-151,-178,-186,-170,-168,-172,-150,-144,-171,-169,-172,-189,-139,-157,-156,-159,-158,-172,-145,-149,-107,245,-172,-184,-154,-166,-167,-165,-140,-143,-106,-138,-188,-153,-148,-147,-181,-152,-131,-172,-141,-142,-146,-136,-134,-133,-137,-135,-132,-160,-163,-162,]),'DICT':([13,20,42,59,61,76,],[-79,34,51,-79,-79,-79,]),'CTED':([60,85,122,134,147,149,156,165,168,170,195,197,200,201,204,205,211,222,228,229,232,233,234,235,237,244,245,250,251,252,253,254,255,256,259,268,269,273,279,282,284,285,288,289,290,291,292,293,308,337,356,],[71,96,135,-183,135,135,135,135,-182,135,-35,-182,-182,-182,-40,135,-90,135,-182,-182,135,135,135,-155,135,-182,-182,135,-182,-182,-182,-182,-182,-182,135,135,135,135,135,135,135,135,135,135,135,135,135,135,-182,135,135,]),'GTOEQ':([133,135,136,137,138,139,140,141,142,144,155,157,158,159,160,161,162,164,175,188,189,190,192,193,198,199,207,210,221,223,224,225,226,227,230,243,266,271,272,276,278,301,302,303,305,326,327,353,],[-179,-177,-181,-180,-187,-179,-152,-151,-178,-186,-170,-168,-172,-150,-144,-171,-169,-172,-139,-157,-156,-159,-158,-172,-145,-149,-107,255,-184,-154,-166,-167,-165,-140,-143,-106,-153,-148,-147,-181,-152,-172,-141,-142,-146,-160,-163,-162,]),'{':([5,6,29,30,32,37,39,44,115,129,212,214,236,260,261,274,350,355,357,],[-4,7,-14,-15,-16,-20,-13,53,-66,152,-175,-72,-175,296,297,306,-176,358,360,]),'MAIN':([7,8,9,11,12,14,15,16,18,21,23,24,26,27,59,61,68,69,70,72,76,82,179,213,],[-172,-6,-2,-7,-172,-21,-9,-172,-38,-37,-36,-10,37,-8,-172,-172,-78,-80,-81,-76,-172,-74,-60,-57,]),'}':([8,11,18,21,23,24,25,53,59,61,63,68,69,70,72,73,76,79,82,87,89,97,98,100,102,106,110,111,119,120,126,150,152,181,215,262,296,306,321,329,334,338,342,344,347,349,351,358,360,361,363,364,365,366,367,368,],[-6,-7,-38,-37,-36,-10,36,-172,-172,-172,-71,-78,-80,-81,-76,-19,-172,-172,-74,97,-83,-60,-172,-87,-86,-24,-82,-23,-18,-85,-22,179,-172,-71,-172,-70,-172,-172,334,338,-172,-89,-174,-122,-88,-119,-69,-172,-95,364,-172,-121,-61,367,-96,-92,]),'CTEF':([122,134,147,149,156,165,168,170,195,197,200,201,204,205,211,222,228,229,232,233,234,235,237,244,245,250,251,252,253,254,255,256,259,268,269,273,279,282,284,285,288,289,290,291,292,293,308,337,356,],[142,-183,142,142,142,142,-182,142,-35,-182,-182,-182,-40,142,-90,142,-182,-182,142,142,142,-155,142,-182,-182,142,-182,-182,-182,-182,-182,-182,142,142,142,142,142,142,142,142,142,142,142,142,142,142,-182,142,142,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vars':([7,53,152,297,],[8,8,8,8,]),'errorOpSExp':([175,],[210,]),'errorMain':([14,],[26,]),'errorCyExp':([160,],[193,]),'opParamCall':([147,],[171,]),'cyTypeParam':([46,81,153,],[57,94,182,]),'saveReturnValue':([359,],[362,]),'takeFondo':([221,],[266,]),'forCycle':([88,],[102,]),'structType':([42,],[49,]),'changeCurrentScope':([9,],[12,]),'struct':([42,],[50,]),'fix':([183,195,],[219,232,]),'checkFunction':([104,136,276,],[125,125,125,]),'param':([80,323,],[91,336,]),'init':([146,281,],[169,309,]),'program':([0,],[1,]),'dict':([41,51,],[48,62,]),'opMatrix':([301,],[326,]),'errorExpresion':([246,],[286,]),'main':([14,],[25,]),'return':([345,],[351,]),'errorParam':([117,],[131,]),'read':([88,],[107,]),'errorReturn':([345,],[352,]),'assignOptions':([146,],[167,]),'flagParameters':([64,115,],[74,129,]),'cyRead':([154,300,],[184,324,]),'basicDeclare':([13,59,61,76,],[23,23,23,23,]),'cyInstruction':([88,],[110,]),'condition':([88,],[111,]),'expresion':([147,149,156,165,170,222,237,250,259,282,284,285,337,356,],[174,178,186,202,206,267,277,287,295,310,311,312,346,359,]),'term':([122,147,149,156,165,170,222,232,233,234,237,250,259,268,269,273,282,284,285,288,289,290,291,292,293,337,356,],[138,138,138,138,138,138,138,138,271,272,138,138,138,138,138,305,138,138,138,138,138,138,138,138,138,138,138,]),'funcCall':([88,122,147,149,156,165,170,222,232,233,234,237,250,259,268,269,273,282,284,285,288,289,290,291,292,293,337,356,],[112,140,140,140,140,140,140,140,140,140,140,278,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,]),'initDict':([146,],[166,]),'saveCurrentTemps':([17,],[28,]),'returnFor':([348,],[354,]),'returnAssign':([367,],[368,]),'saveTypeParam':([65,263,264,],[75,298,299,]),'saltoBody':([333,],[341,]),'dictDeclare':([13,59,61,76,],[18,18,18,18,]),'saveMain':([37,],[44,]),'errorVars':([7,53,152,297,],[10,10,10,10,]),'generateInitialQuadruple':([73,],[79,]),'whileCycle':([88,],[100,]),'errorDictDeclare':([13,59,61,76,],[20,20,20,20,]),'performAndOr':([172,],[208,]),'opFunctions':([12,16,],[14,27,]),'errorOpStruct':([158,],[187,]),'saveVariable':([104,136,176,276,],[124,158,124,158,]),'opVars':([7,53,152,297,],[9,63,181,322,]),'saveOperator':([168,197,200,201,228,229,244,245,251,252,253,254,255,256,308,],[204,233,234,235,268,269,284,285,288,289,290,291,292,293,204,]),'errorInit':([204,],[237,]),'performAssign':([167,],[203,]),'cyExpresion':([208,],[246,]),'performRead':([132,265,],[154,300,]),'print':([88,],[105,]),'body':([79,98,215,296,306,335,358,363,],[87,120,262,321,329,345,361,366,]),'errorOpParameters':([116,],[130,]),'repeatWhile':([338,],[347,]),'printTables':([36,],[43,]),'saveParamToDirProc':([91,],[116,]),'saveReturnType':([214,],[261,]),'opParameters':([80,],[90,]),'errorCondition':([88,],[113,]),'cte':([122,147,149,156,165,170,205,222,232,233,234,237,250,259,268,269,273,279,282,284,285,288,289,290,291,292,293,337,356,],[141,141,141,141,141,141,240,141,141,141,141,141,141,141,141,141,141,240,141,141,141,141,141,141,141,141,141,141,141,]),'saveProc':([5,54,],[6,64,]),'assign':([88,148,341,],[114,177,348,]),'errorStructDeclare':([13,59,61,76,],[22,22,22,22,]),'cyExp':([193,],[227,]),'instr':([88,],[98,]),'errorFact':([235,],[273,]),'errorProgram':([0,],[2,]),'cyTerm':([164,],[198,]),'rellenaBody':([360,],[363,]),'errorAssignMatrix':([331,],[340,]),'cyDeclare':([59,61,76,],[68,72,82,]),'errorBody':([79,98,215,296,306,335,358,363,],[88,88,88,88,88,88,88,88,]),'opStruct':([158,],[189,]),'errorOpAccess':([190,],[223,]),'checkNumParams':([207,],[243,]),'saveConstantBool':([133,139,],[155,161,]),'type':([19,42,58,77,92,180,],[33,52,67,83,117,214,]),'dictIndex':([191,],[226,]),'empty':([7,12,16,46,53,59,61,76,78,79,80,81,98,147,152,153,154,158,163,164,182,193,208,209,210,215,242,296,297,300,301,304,306,313,334,335,358,363,],[11,15,15,56,11,70,70,70,86,89,93,56,89,173,11,56,185,192,196,199,216,230,247,249,257,89,283,89,11,185,327,196,89,249,344,89,89,89,]),'errorBasicDeclare':([33,],[40,]),'function':([12,16,],[16,16,]),'performMulDiv':([144,],[164,]),'saveConstantString':([137,],[159,]),'checkParamType':([174,287,],[209,313,]),'opDictionary':([158,],[188,]),'errorType':([19,42,58,77,92,180,],[31,31,31,31,31,31,]),'errorForCycle':([88,],[109,]),'opAccess':([158,],[190,]),'basicStatements':([88,],[108,]),'structDeclare':([13,59,61,76,],[21,21,21,21,]),'putFondo':([134,],[156,]),'errorAssign':([124,],[146,]),'saveReturn':([123,211,],[145,259,]),'cyParam':([182,],[218,]),'cyPrint':([163,304,],[194,328,]),'saveConstantFloat':([142,],[162,]),'errorOpReturns':([129,],[151,]),'performAddSub':([138,],[160,]),'cyParamCall':([209,313,],[248,332,]),'declare':([13,59,61,76,],[24,69,69,69,]),'saveQuadruple':([63,181,322,],[73,215,335,]),'opSExp':([210,],[258,]),'optionalMatrix':([78,],[84,]),'performPrint':([143,270,],[163,304,]),'saveFalso':([212,236,295,],[260,274,320,]),'clearVarsTable':([97,179,],[119,213,]),'optionalElse':([334,],[342,]),'errorOpMatrix':([301,],[325,]),'dictType':([205,279,],[238,307,]),'initWith':([237,],[275,]),'saveConstantInt':([135,],[157,]),'errorWhileCycle':([88,],[103,]),'sExp':([147,149,156,165,170,222,237,250,259,282,284,285,337,356,],[172,172,172,172,172,172,172,172,172,172,172,172,172,172,]),'errorElse':([334,],[343,]),'performRelational':([258,],[294,]),'errorCyParam':([182,],[217,]),'opReturns':([129,],[150,]),'errorDictType':([205,279,],[239,239,]),'assignMatrix':([242,],[281,]),'saveVerdadero':([350,],[355,]),'rellenaFalso':([342,],[349,]),'errorDict':([41,51,],[47,47,]),'errorInitDict':([330,],[339,]),'saveType':([3,13,38,59,61,76,80,323,],[4,19,45,19,19,19,92,92,]),'saveID':([55,57,216,217,],[65,66,263,264,]),'cycle':([88,],[106,]),'errorFunction':([12,16,],[17,17,]),'exp':([122,147,149,156,165,170,222,232,237,250,259,268,269,282,284,285,288,289,290,291,292,293,337,356,],[143,175,175,175,175,175,175,270,175,175,175,302,303,175,175,175,314,315,316,317,318,319,175,175,]),'fact':([122,147,149,156,165,170,222,232,233,234,237,250,259,268,269,273,282,284,285,288,289,290,291,292,293,337,356,],[144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main } printTables','program',12,'p_program','CT.py',350),
  ('changeCurrentScope -> <empty>','changeCurrentScope',0,'p_changeCurrentScope','CT.py',354),
  ('saveType -> <empty>','saveType',0,'p_saveType','CT.py',359),
  ('saveProc -> <empty>','saveProc',0,'p_saveProc','CT.py',366),
  ('errorProgram -> <empty>','errorProgram',0,'p_errorProgram','CT.py',389),
  ('opVars -> vars','opVars',1,'p_opVars','CT.py',395),
  ('opVars -> empty','opVars',1,'p_opVars','CT.py',396),
  ('opFunctions -> function opFunctions','opFunctions',2,'p_opFunctions','CT.py',401),
  ('opFunctions -> empty','opFunctions',1,'p_opFunctions','CT.py',402),
  ('vars -> errorVars VARS declare','vars',3,'p_vars','CT.py',406),
  ('saveID -> <empty>','saveID',0,'p_saveID','CT.py',411),
  ('errorVars -> <empty>','errorVars',0,'p_errorVars','CT.py',452),
  ('type -> errorType INT','type',2,'p_type','CT.py',458),
  ('type -> FLOAT','type',1,'p_type','CT.py',459),
  ('type -> STRING','type',1,'p_type','CT.py',460),
  ('type -> BOOL','type',1,'p_type','CT.py',461),
  ('errorType -> <empty>','errorType',0,'p_errorType','CT.py',466),
  ('main -> errorMain MAIN saveMain { opVars saveQuadruple generateInitialQuadruple body } clearVarsTable','main',10,'p_main','CT.py',472),
  ('generateInitialQuadruple -> <empty>','generateInitialQuadruple',0,'p_generateInitialQuadruple','CT.py',476),
  ('saveMain -> <empty>','saveMain',0,'p_saveMain','CT.py',480),
  ('errorMain -> <empty>','errorMain',0,'p_errorMain','CT.py',489),
  ('instr -> basicStatements ;','instr',2,'p_instr','CT.py',495),
  ('instr -> condition','instr',1,'p_instr','CT.py',496),
  ('instr -> cycle','instr',1,'p_instr','CT.py',497),
  ('basicStatements -> assign','basicStatements',1,'p_basicStatements','CT.py',501),
  ('basicStatements -> funcCall','basicStatements',1,'p_basicStatements','CT.py',502),
  ('basicStatements -> print','basicStatements',1,'p_basicStatements','CT.py',503),
  ('basicStatements -> read','basicStatements',1,'p_basicStatements','CT.py',504),
  ('print -> PRINT PARINI exp performPrint cyPrint PARFIN','print',6,'p_print','CT.py',507),
  ('cyPrint -> , fix exp performPrint cyPrint','cyPrint',5,'p_cyPrint','CT.py',510),
  ('cyPrint -> empty','cyPrint',1,'p_cyPrint','CT.py',511),
  ('read -> READ PARINI ID performRead cyRead PARFIN','read',6,'p_read','CT.py',514),
  ('cyRead -> , fix ID performRead cyRead','cyRead',5,'p_cyRead','CT.py',517),
  ('cyRead -> empty','cyRead',1,'p_cyRead','CT.py',518),
  ('fix -> <empty>','fix',0,'p_fix','CT.py',521),
  ('declare -> basicDeclare','declare',1,'p_declare','CT.py',526),
  ('declare -> structDeclare','declare',1,'p_declare','CT.py',527),
  ('declare -> dictDeclare','declare',1,'p_declare','CT.py',528),
  ('init -> ASGN saveOperator errorInit initWith','init',4,'p_init','CT.py',533),
  ('errorInit -> <empty>','errorInit',0,'p_errorInit','CT.py',537),
  ('initWith -> expresion','initWith',1,'p_initWith','CT.py',543),
  ('initWith -> funcCall','initWith',1,'p_initWith','CT.py',544),
  ('initDict -> ASGN PARINI dictType : dictType PARFIN errorInitDict','initDict',7,'p_initDict','CT.py',549),
  ('errorInitDict -> <empty>','errorInitDict',0,'p_errorInitDict','CT.py',554),
  ('dictType -> errorDictType CTES','dictType',2,'p_dictType','CT.py',560),
  ('dictType -> cte','dictType',1,'p_dictType','CT.py',561),
  ('dictType -> ID','dictType',1,'p_dictType','CT.py',562),
  ('errorDictType -> <empty>','errorDictType',0,'p_errorDictType','CT.py',567),
  ('param -> saveType type errorParam ID cyTypeParam cyParam','param',6,'p_param','CT.py',573),
  ('errorParam -> <empty>','errorParam',0,'p_errorParam','CT.py',578),
  ('cyParam -> errorCyParam saveID saveTypeParam ; param','cyParam',5,'p_cyParam','CT.py',584),
  ('cyParam -> empty saveID saveTypeParam','cyParam',3,'p_cyParam','CT.py',585),
  ('cyTypeParam -> , saveID saveTypeParam ID cyTypeParam','cyTypeParam',5,'p_cyTypeParam','CT.py',590),
  ('cyTypeParam -> empty','cyTypeParam',1,'p_cyTypeParam','CT.py',591),
  ('saveTypeParam -> <empty>','saveTypeParam',0,'p_saveTypeParam','CT.py',595),
  ('errorCyParam -> <empty>','errorCyParam',0,'p_errorCyParam','CT.py',605),
  ('function -> errorFunction saveCurrentTemps FUNC saveType ID saveProc flagParameters PARINI opParameters PARFIN flagParameters opReturns } clearVarsTable','function',14,'p_function','CT.py',611),
  ('saveCurrentTemps -> <empty>','saveCurrentTemps',0,'p_saveCurrentTemps','CT.py',615),
  ('errorFunction -> <empty>','errorFunction',0,'p_errorFunction','CT.py',627),
  ('clearVarsTable -> <empty>','clearVarsTable',0,'p_clearVarsTable','CT.py',632),
  ('return -> errorReturn RETURN expresion saveReturnValue ;','return',5,'p_return','CT.py',665),
  ('saveReturnValue -> <empty>','saveReturnValue',0,'p_saveReturnValue','CT.py',669),
  ('errorReturn -> <empty>','errorReturn',0,'p_errorReturn','CT.py',683),
  ('opParameters -> param saveParamToDirProc errorOpParameters','opParameters',3,'p_opParameters','CT.py',689),
  ('opParameters -> empty','opParameters',1,'p_opParameters','CT.py',690),
  ('flagParameters -> <empty>','flagParameters',0,'p_flagParameters','CT.py',694),
  ('saveParamToDirProc -> <empty>','saveParamToDirProc',0,'p_saveParamToDirProc','CT.py',699),
  ('errorOpParameters -> <empty>','errorOpParameters',0,'p_errorOpParameters','CT.py',706),
  ('opReturns -> errorOpReturns RETURNS type saveReturnType { opVars saveQuadruple body return','opReturns',9,'p_opReturns','CT.py',712),
  ('opReturns -> { opVars saveQuadruple body','opReturns',4,'p_opReturns','CT.py',713),
  ('saveQuadruple -> <empty>','saveQuadruple',0,'p_saveQuadruple','CT.py',717),
  ('saveReturnType -> <empty>','saveReturnType',0,'p_saveReturnType','CT.py',724),
  ('errorOpReturns -> <empty>','errorOpReturns',0,'p_errorOpReturns','CT.py',733),
  ('basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare','basicDeclare',8,'p_basicDeclare','CT.py',739),
  ('errorBasicDeclare -> <empty>','errorBasicDeclare',0,'p_errorBasicDeclare','CT.py',744),
  ('structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare','structDeclare',6,'p_structDeclare','CT.py',750),
  ('errorStructDeclare -> <empty>','errorStructDeclare',0,'p_errorStructDeclare','CT.py',755),
  ('dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare','dictDeclare',6,'p_dictDeclare','CT.py',761),
  ('errorDictDeclare -> <empty>','errorDictDeclare',0,'p_errorDictDeclare','CT.py',766),
  ('cyDeclare -> declare','cyDeclare',1,'p_cyDeclare','CT.py',772),
  ('cyDeclare -> empty','cyDeclare',1,'p_cyDeclare','CT.py',773),
  ('body -> errorBody cyInstruction','body',2,'p_body','CT.py',778),
  ('body -> empty','body',1,'p_body','CT.py',779),
  ('errorBody -> <empty>','errorBody',0,'p_errorBody','CT.py',784),
  ('cyInstruction -> instr body','cyInstruction',2,'p_cyInstruction','CT.py',790),
  ('cycle -> forCycle','cycle',1,'p_cycle','CT.py',795),
  ('cycle -> whileCycle','cycle',1,'p_cycle','CT.py',796),
  ('whileCycle -> errorWhileCycle WHILE saveReturn PARINI expresion PARFIN saveFalso { body } repeatWhile','whileCycle',11,'p_whileCycle','CT.py',801),
  ('repeatWhile -> <empty>','repeatWhile',0,'p_repeatWhile','CT.py',805),
  ('saveReturn -> <empty>','saveReturn',0,'p_saveReturn','CT.py',812),
  ('errorWhileCycle -> <empty>','errorWhileCycle',0,'p_errorWhileCycle','CT.py',816),
  ('forCycle -> errorForCycle FOR PARINI assign ; saveReturn expresion saveFalso ; saltoBody assign returnFor PARFIN { rellenaBody body } returnAssign','forCycle',18,'p_forCycle','CT.py',822),
  ('saltoBody -> <empty>','saltoBody',0,'p_saltoBody','CT.py',826),
  ('returnFor -> <empty>','returnFor',0,'p_returnFor','CT.py',832),
  ('rellenaBody -> <empty>','rellenaBody',0,'p_rellenaBody','CT.py',844),
  ('returnAssign -> <empty>','returnAssign',0,'p_returnAssign','CT.py',852),
  ('errorForCycle -> <empty>','errorForCycle',0,'p_errorForCycle','CT.py',857),
  ('assign -> ID saveVariable errorAssign assignOptions performAssign','assign',5,'p_assign','CT.py',863),
  ('errorAssign -> <empty>','errorAssign',0,'p_errorAssign','CT.py',868),
  ('assignOptions -> init','assignOptions',1,'p_assignOptions','CT.py',874),
  ('assignOptions -> initDict','assignOptions',1,'p_assignOptions','CT.py',875),
  ('assignOptions -> [ expresion ] assignMatrix init','assignOptions',5,'p_assignOptions','CT.py',876),
  ('assignMatrix -> [ expresion ] errorAssignMatrix','assignMatrix',4,'p_assignMatrix','CT.py',881),
  ('assignMatrix -> empty','assignMatrix',1,'p_assignMatrix','CT.py',882),
  ('errorAssignMatrix -> <empty>','errorAssignMatrix',0,'p_errorAssignMatrix','CT.py',887),
  ('funcCall -> ID checkFunction PARINI opParamCall PARFIN checkNumParams','funcCall',6,'p_funcCall','CT.py',892),
  ('checkNumParams -> <empty>','checkNumParams',0,'p_checkNumParams','CT.py',896),
  ('checkFunction -> <empty>','checkFunction',0,'p_checkFunction','CT.py',910),
  ('opParamCall -> expresion checkParamType cyParamCall','opParamCall',3,'p_opParamCall','CT.py',925),
  ('opParamCall -> empty','opParamCall',1,'p_opParamCall','CT.py',926),
  ('cyParamCall -> , expresion checkParamType cyParamCall','cyParamCall',4,'p_cyParamCall','CT.py',931),
  ('cyParamCall -> empty','cyParamCall',1,'p_cyParamCall','CT.py',932),
  ('checkParamType -> <empty>','checkParamType',0,'p_checkParamType','CT.py',936),
  ('struct -> structType [ CTED ] optionalMatrix','struct',5,'p_struct','CT.py',961),
  ('structType -> type','structType',1,'p_structType','CT.py',966),
  ('structType -> DICT dict','structType',2,'p_structType','CT.py',967),
  ('optionalMatrix -> [ CTED ]','optionalMatrix',3,'p_optionalMatrix','CT.py',972),
  ('optionalMatrix -> empty','optionalMatrix',1,'p_optionalMatrix','CT.py',973),
  ('condition -> errorCondition IF PARINI expresion PARFIN saveFalso { body } optionalElse rellenaFalso','condition',11,'p_condition','CT.py',978),
  ('errorCondition -> <empty>','errorCondition',0,'p_errorCondition','CT.py',983),
  ('optionalElse -> errorElse ELSE saveVerdadero { body }','optionalElse',6,'p_optionalElse','CT.py',989),
  ('optionalElse -> empty','optionalElse',1,'p_optionalElse','CT.py',990),
  ('errorElse -> <empty>','errorElse',0,'p_errorElse','CT.py',995),
  ('dict -> errorDict PARINI type : type PARFIN','dict',6,'p_dict','CT.py',1001),
  ('errorDict -> <empty>','errorDict',0,'p_errorDict','CT.py',1006),
  ('expresion -> sExp performAndOr cyExpresion errorExpresion','expresion',4,'p_expresion','CT.py',1012),
  ('errorExpresion -> <empty>','errorExpresion',0,'p_errorExpresion','CT.py',1018),
  ('cyExpresion -> AND saveOperator expresion','cyExpresion',3,'p_cyExpresion','CT.py',1024),
  ('cyExpresion -> OR saveOperator expresion','cyExpresion',3,'p_cyExpresion','CT.py',1025),
  ('cyExpresion -> empty','cyExpresion',1,'p_cyExpresion','CT.py',1026),
  ('sExp -> exp errorOpSExp opSExp performRelational','sExp',4,'p_sExp','CT.py',1031),
  ('opSExp -> EQ saveOperator exp','opSExp',3,'p_opSExp','CT.py',1036),
  ('opSExp -> DIF saveOperator exp','opSExp',3,'p_opSExp','CT.py',1037),
  ('opSExp -> LTOEQ saveOperator exp','opSExp',3,'p_opSExp','CT.py',1038),
  ('opSExp -> GTOEQ saveOperator exp','opSExp',3,'p_opSExp','CT.py',1039),
  ('opSExp -> GT saveOperator exp','opSExp',3,'p_opSExp','CT.py',1040),
  ('opSExp -> LT saveOperator exp','opSExp',3,'p_opSExp','CT.py',1041),
  ('opSExp -> empty','opSExp',1,'p_opSExp','CT.py',1042),
  ('errorOpSExp -> <empty>','errorOpSExp',0,'p_errorOpSExp','CT.py',1046),
  ('exp -> term performAddSub errorCyExp cyExp','exp',4,'p_exp','CT.py',1052),
  ('cyExp -> PLUS saveOperator exp','cyExp',3,'p_cyExp','CT.py',1057),
  ('cyExp -> MINUS saveOperator exp','cyExp',3,'p_cyExp','CT.py',1058),
  ('cyExp -> empty','cyExp',1,'p_cyExp','CT.py',1059),
  ('errorCyExp -> <empty>','errorCyExp',0,'p_errorCyExp','CT.py',1064),
  ('term -> fact performMulDiv cyTerm','term',3,'p_term','CT.py',1069),
  ('cyTerm -> MULT saveOperator errorFact term','cyTerm',4,'p_cyTerm','CT.py',1074),
  ('cyTerm -> DIV saveOperator term','cyTerm',3,'p_cyTerm','CT.py',1075),
  ('cyTerm -> RES saveOperator term','cyTerm',3,'p_cyTerm','CT.py',1076),
  ('cyTerm -> empty','cyTerm',1,'p_cyTerm','CT.py',1077),
  ('fact -> CTES saveConstantString','fact',2,'p_fact','CT.py',1082),
  ('fact -> cte','fact',1,'p_fact','CT.py',1083),
  ('fact -> funcCall','fact',1,'p_fact','CT.py',1084),
  ('fact -> PARINI putFondo expresion PARFIN takeFondo','fact',5,'p_fact','CT.py',1085),
  ('fact -> ID saveVariable opAccess errorOpAccess','fact',4,'p_fact','CT.py',1086),
  ('errorFact -> <empty>','errorFact',0,'p_errorFact','CT.py',1091),
  ('opAccess -> opStruct','opAccess',1,'p_opAccess','CT.py',1097),
  ('opAccess -> opDictionary','opAccess',1,'p_opAccess','CT.py',1098),
  ('opAccess -> empty','opAccess',1,'p_opAccess','CT.py',1099),
  ('errorOpAccess -> <empty>','errorOpAccess',0,'p_errorOpAccess','CT.py',1104),
  ('opStruct -> errorOpStruct [ expresion ] opMatrix','opStruct',5,'p_opStruct','CT.py',1109),
  ('errorOpStruct -> <empty>','errorOpStruct',0,'p_errorOpStruct','CT.py',1114),
  ('opMatrix -> errorOpMatrix [ expresion ]','opMatrix',4,'p_opMatrix','CT.py',1120),
  ('opMatrix -> empty','opMatrix',1,'p_opMatrix','CT.py',1121),
  ('errorOpMatrix -> <empty>','errorOpMatrix',0,'p_errorOpMatrix','CT.py',1126),
  ('opDictionary -> . dictIndex','opDictionary',2,'p_opDictionary','CT.py',1132),
  ('dictIndex -> FIRST','dictIndex',1,'p_dictIndex','CT.py',1137),
  ('dictIndex -> LAST','dictIndex',1,'p_dictIndex','CT.py',1138),
  ('cte -> CTED saveConstantInt','cte',2,'p_cte','CT.py',1143),
  ('cte -> CTEF saveConstantFloat','cte',2,'p_cte','CT.py',1144),
  ('cte -> TRUE saveConstantBool','cte',2,'p_cte','CT.py',1145),
  ('cte -> FALSE saveConstantBool','cte',2,'p_cte','CT.py',1146),
  ('empty -> <empty>','empty',0,'p_empty','CT.py',1150),
  ('printTables -> <empty>','printTables',0,'p_printTables','CT.py',1155),
  ('rellenaFalso -> <empty>','rellenaFalso',0,'p_rellenaFalso','CT.py',1174),
  ('saveFalso -> <empty>','saveFalso',0,'p_saveFalso','CT.py',1179),
  ('saveVerdadero -> <empty>','saveVerdadero',0,'p_saveVerdadero','CT.py',1192),
  ('saveConstantInt -> <empty>','saveConstantInt',0,'p_saveConstantInt','CT.py',1199),
  ('saveConstantFloat -> <empty>','saveConstantFloat',0,'p_saveConstantFloat','CT.py',1211),
  ('saveConstantBool -> <empty>','saveConstantBool',0,'p_saveConstantBool','CT.py',1223),
  ('saveConstantString -> <empty>','saveConstantString',0,'p_saveConstantString','CT.py',1235),
  ('saveVariable -> <empty>','saveVariable',0,'p_saveVariable','CT.py',1247),
  ('saveOperator -> <empty>','saveOperator',0,'p_saveOperator','CT.py',1270),
  ('putFondo -> <empty>','putFondo',0,'p_putFondo','CT.py',1302),
  ('takeFondo -> <empty>','takeFondo',0,'p_takeFondo','CT.py',1307),
  ('performAssign -> <empty>','performAssign',0,'p_performAssign','CT.py',1314),
  ('performMulDiv -> <empty>','performMulDiv',0,'p_performMulDiv','CT.py',1335),
  ('performAddSub -> <empty>','performAddSub',0,'p_performAddSub','CT.py',1356),
  ('performRelational -> <empty>','performRelational',0,'p_performRelational','CT.py',1377),
  ('performAndOr -> <empty>','performAndOr',0,'p_performAndOr','CT.py',1398),
  ('performPrint -> <empty>','performPrint',0,'p_performPrint','CT.py',1419),
  ('performRead -> <empty>','performRead',0,'p_performeRead','CT.py',1423),
]
