
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '64C6C215155821D0BAC90011A0399542'
    
_lr_action_items = {'RETURN':([8,11,18,21,23,24,59,61,68,69,70,72,76,78,86,87,88,90,91,92,100,108,110,258,259,266,268,274,275,277,282,287,290,],[-6,-7,-29,-28,-27,-10,-150,-150,-66,-68,-69,-64,-71,-150,-150,-75,-74,-70,-23,-24,-62,-73,-22,-150,-76,-150,-150,-98,-101,-52,286,-78,-100,]),'VARS':([7,10,54,148,258,],[-12,13,-12,-12,-12,]),'DIF':([124,128,129,131,132,133,134,135,136,137,138,153,160,161,162,164,168,169,172,173,176,178,187,192,193,194,195,197,200,210,214,215,228,229,236,248,262,263,284,],[-148,-146,-150,-128,-123,-149,-130,-129,-147,-118,-150,-88,-134,-137,-136,-135,-150,202,-124,-127,-150,-130,-131,-132,-144,-145,-143,-119,-122,-126,-150,-129,-120,-121,-125,-150,-138,-141,-140,]),'OBJECT':([13,19,43,58,59,61,73,78,79,82,182,267,],[-3,32,32,32,-3,-3,-3,-3,32,32,32,-3,]),'WHILE':([8,11,18,21,23,24,54,59,61,64,68,69,70,72,75,78,86,87,88,89,91,92,100,110,148,183,224,242,258,259,266,268,274,275,278,285,287,290,],[-6,-7,-29,-28,-27,-10,-150,-150,-150,-72,-66,-68,-69,-64,-77,-150,-72,-75,-74,109,-23,-24,-62,-22,-150,-72,-72,-72,-150,-76,-150,-72,-98,-101,-72,-72,-78,-100,]),'PROGRAM':([0,2,],[-5,3,]),'TRUE':([112,121,125,139,143,144,155,157,166,170,171,175,186,191,198,199,201,202,203,204,205,206,209,237,240,253,270,286,],[124,124,124,124,124,124,124,124,124,-133,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'LAST':([163,],[194,]),')':([29,30,32,33,40,56,73,81,83,84,99,101,105,112,115,118,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,146,150,153,154,156,158,160,161,162,164,165,167,168,169,172,173,174,176,177,178,180,181,187,188,189,190,192,193,194,195,196,197,200,207,208,210,211,214,215,218,220,227,228,229,230,231,232,233,234,235,236,238,243,248,249,250,251,252,256,260,262,263,264,271,276,284,],[-14,-15,-16,-17,-13,-45,-150,-56,107,-54,-150,116,-57,-150,-44,-53,153,-148,-150,-90,-146,-150,-150,-128,-123,-149,-130,-129,-147,-118,-150,-83,-80,-82,-150,185,-88,187,-106,-109,-134,-137,-136,-135,-89,-92,-150,-150,-124,-127,-31,-150,-32,-33,217,-150,-131,-107,-105,-108,-132,-144,-145,-143,-150,-119,-122,-117,-110,-126,-30,-150,-129,-11,-40,-91,-120,-121,-111,-112,-114,-115,-113,-116,-125,-36,-46,-150,264,-37,-38,-84,-43,269,-138,-141,-35,-34,-42,-140,]),'(':([42,44,47,51,53,63,95,109,111,112,114,121,125,129,139,143,144,155,157,166,170,171,175,176,186,191,198,199,201,202,203,204,205,206,209,214,240,253,270,286,],[-104,-4,58,-104,-55,73,112,121,122,125,144,125,125,112,175,125,125,125,125,125,-133,125,125,112,125,125,125,125,125,125,125,125,125,125,125,112,125,125,125,125,]),'+':([124,128,129,131,132,133,134,135,136,138,153,160,161,162,164,168,172,173,176,178,187,192,193,194,195,210,214,215,236,248,262,263,284,],[-148,-146,-150,-128,-123,-149,-130,-129,-147,-150,-88,-134,-137,-136,-135,198,-124,-127,-150,-130,-131,-132,-144,-145,-143,-126,-150,-129,-125,-150,-138,-141,-140,]),'*':([124,128,129,131,133,134,135,136,138,153,160,161,162,164,176,178,187,192,193,194,195,214,215,248,262,263,284,],[-148,-146,-150,-128,-149,-130,-129,-147,170,-88,-134,-137,-136,-135,-150,-130,-131,-132,-144,-145,-143,-150,-129,-150,-138,-141,-140,]),'-':([124,128,129,131,132,133,134,135,136,138,153,160,161,162,164,168,172,173,176,178,187,192,193,194,195,210,214,215,236,248,262,263,284,],[-148,-146,-150,-128,-123,-149,-130,-129,-147,-150,-88,-134,-137,-136,-135,199,-124,-127,-150,-130,-131,-132,-144,-145,-143,-126,-150,-129,-125,-150,-138,-141,-140,]),',':([46,99,124,126,128,129,130,131,132,133,134,135,136,137,138,146,153,156,158,160,161,162,164,168,169,172,173,187,188,189,190,192,193,194,195,196,197,200,207,208,210,228,229,230,231,232,233,234,235,236,248,262,263,284,],[55,55,-148,-150,-146,-150,166,-128,-123,-149,-130,-129,-147,-118,-150,55,-88,-106,-109,-134,-137,-136,-135,-150,-150,-124,-127,-131,-107,-105,-108,-132,-144,-145,-143,166,-119,-122,-117,-110,-126,-120,-121,-111,-112,-114,-115,-113,-116,-125,-150,-138,-141,-140,]),'/':([124,128,129,131,133,134,135,136,138,153,160,161,162,164,176,178,187,192,193,194,195,214,215,248,262,263,284,],[-148,-146,-150,-128,-149,-130,-129,-147,171,-88,-134,-137,-136,-135,-150,-130,-131,-132,-144,-145,-143,-150,-129,-150,-138,-141,-140,]),'.':([129,176,214,],[163,163,163,]),'FIRST':([163,],[193,]),'DICT':([13,20,43,59,61,78,],[-67,35,51,-67,-67,-67,]),';':([46,48,50,56,57,66,80,93,96,98,99,102,104,115,116,124,126,128,129,131,132,133,134,135,136,137,138,140,141,142,145,146,152,153,156,158,160,161,162,164,168,169,172,173,174,176,177,178,181,187,188,189,190,192,193,194,195,197,200,207,208,210,211,219,225,228,229,230,231,232,233,234,235,236,244,248,252,257,262,263,264,271,284,289,],[-150,59,61,-45,-11,78,-150,110,-26,-25,-150,-93,-97,-44,-103,-148,-150,-146,-150,-128,-123,-149,-130,-129,-147,-118,-150,-83,-80,-82,-96,-150,186,-88,-106,-109,-134,-137,-136,-135,-150,-150,-124,-127,-31,-150,-32,-33,-47,-131,-107,-105,-108,-132,-144,-145,-143,-119,-122,-117,-110,-126,-30,-11,247,-120,-121,-111,-112,-114,-115,-113,-116,-125,-46,-150,-84,267,-138,-141,-35,-34,-140,291,]),':':([29,30,32,33,40,67,124,128,133,136,212,214,215,238,],[-14,-15,-16,-17,-13,79,-148,-146,-149,-147,237,-38,-37,-36,]),'=':([95,113,151,216,239,241,265,272,],[-81,139,-81,-150,253,-86,-87,-85,]),'<':([124,128,129,131,132,133,134,135,136,137,138,153,160,161,162,164,168,169,172,173,176,178,187,192,193,194,195,197,200,210,214,215,228,229,236,248,262,263,284,],[-148,-146,-150,-128,-123,-149,-130,-129,-147,-118,-150,-88,-134,-137,-136,-135,-150,206,-124,-127,-150,-130,-131,-132,-144,-145,-143,-119,-122,-126,-150,-129,-120,-121,-125,-150,-138,-141,-140,]),'$end':([1,38,],[0,-1,]),'STRING':([13,19,43,58,59,61,73,78,79,82,182,267,],[-3,30,30,30,-3,-3,-3,-3,30,30,30,-3,]),'FOR':([8,11,18,21,23,24,54,59,61,64,68,69,70,72,75,78,86,87,88,91,92,94,100,110,148,183,224,242,258,259,266,268,274,275,278,285,287,290,],[-6,-7,-29,-28,-27,-10,-150,-150,-150,-72,-66,-68,-69,-64,-79,-150,-72,-75,-74,-23,-24,111,-62,-22,-150,-72,-72,-72,-150,-76,-150,-72,-98,-101,-72,-72,-78,-100,]),'ELSE':([266,273,],[-102,280,]),'>':([124,128,129,131,132,133,134,135,136,137,138,153,160,161,162,164,168,169,172,173,176,178,187,192,193,194,195,197,200,210,214,215,228,229,236,248,262,263,284,],[-148,-146,-150,-128,-123,-149,-130,-129,-147,-118,-150,-88,-134,-137,-136,-135,-150,204,-124,-127,-150,-130,-131,-132,-144,-145,-143,-119,-122,-126,-150,-129,-120,-121,-125,-150,-138,-141,-140,]),'RETURNS':([107,120,147,],[-55,-61,182,]),'FUNC':([7,8,9,11,12,14,15,18,21,23,24,59,61,68,69,70,72,78,100,184,223,],[-150,-6,-2,-7,-49,-49,26,-29,-28,-27,-10,-150,-150,-66,-68,-69,-64,-150,-62,-50,-48,]),'[':([29,30,32,33,40,49,52,62,80,95,113,116,129,151,159,176,214,216,248,261,],[-14,-15,-16,-17,-13,60,-94,-95,103,-81,143,-103,-139,-81,191,-139,-139,240,-142,270,]),']':([71,117,124,126,128,129,131,132,133,134,135,136,137,138,153,156,158,160,161,162,164,168,169,172,173,179,187,188,189,190,192,193,194,195,197,200,207,208,210,226,228,229,230,231,232,233,234,235,236,248,254,262,263,279,284,],[80,145,-148,-150,-146,-150,-128,-123,-149,-130,-129,-147,-118,-150,-88,-106,-109,-134,-137,-136,-135,-150,-150,-124,-127,216,-131,-107,-105,-108,-132,-144,-145,-143,-119,-122,-117,-110,-126,248,-120,-121,-111,-112,-114,-115,-113,-116,-125,-150,265,-138,-141,284,-140,]),'ID':([3,4,8,11,18,21,23,24,26,29,30,32,33,34,35,36,37,40,41,54,55,59,61,64,65,68,69,70,72,75,77,78,86,87,88,91,92,100,106,110,112,119,121,122,125,139,143,144,148,155,157,166,170,171,175,183,186,191,198,199,201,202,203,204,205,206,209,224,237,240,242,247,253,258,259,266,268,270,274,275,278,285,286,287,290,],[-3,5,-6,-7,-29,-28,-27,-10,-3,-14,-15,-16,-17,-63,42,43,44,-13,46,-150,-11,-150,-150,-72,-46,-66,-68,-69,-64,95,99,-150,-72,-75,-74,-23,-24,-62,-41,-22,129,146,129,151,129,176,129,129,-150,129,129,129,-133,129,214,-72,129,129,129,129,129,129,129,129,129,129,129,-72,251,129,-72,151,176,-150,-76,-150,-72,129,-98,-101,-72,-72,129,-78,-100,]),'IF':([8,11,18,21,23,24,54,59,61,64,68,69,70,72,75,78,86,87,88,91,92,97,100,110,148,183,224,242,258,259,266,268,274,275,278,285,287,290,],[-6,-7,-29,-28,-27,-10,-150,-150,-150,-72,-66,-68,-69,-64,-99,-150,-72,-75,-74,-23,-24,114,-62,-22,-150,-72,-72,-72,-150,-76,-150,-72,-98,-101,-72,-72,-78,-100,]),'AND':([124,126,128,129,131,132,133,134,135,136,137,138,153,160,161,162,164,168,169,172,173,176,178,187,192,193,194,195,197,200,207,208,210,214,215,228,229,230,231,232,233,234,235,236,248,262,263,284,],[-148,155,-146,-150,-128,-123,-149,-130,-129,-147,-118,-150,-88,-134,-137,-136,-135,-150,-150,-124,-127,-150,-130,-131,-132,-144,-145,-143,-119,-122,-117,-110,-126,-150,-129,-120,-121,-111,-112,-114,-115,-113,-116,-125,-150,-138,-141,-140,]),'CTES':([112,121,125,139,143,144,155,157,166,170,171,175,186,191,198,199,201,202,203,204,205,206,209,213,237,240,253,270,286,],[131,131,131,131,131,131,131,131,131,-133,131,131,131,131,131,131,131,131,131,131,131,131,131,238,-39,131,131,131,131,]),'LTOEQ':([124,128,129,131,132,133,134,135,136,137,138,153,160,161,162,164,168,169,172,173,176,178,187,192,193,194,195,197,200,210,214,215,228,229,236,248,262,263,284,],[-148,-146,-150,-128,-123,-149,-130,-129,-147,-118,-150,-88,-134,-137,-136,-135,-150,205,-124,-127,-150,-130,-131,-132,-144,-145,-143,-119,-122,-126,-150,-129,-120,-121,-125,-150,-138,-141,-140,]),'FALSE':([112,121,125,139,143,144,155,157,166,170,171,175,186,191,198,199,201,202,203,204,205,206,209,237,240,253,270,286,],[133,133,133,133,133,133,133,133,133,-133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,]),'STRUCT':([13,22,59,61,78,],[-65,36,-65,-65,-65,]),'INT':([13,19,31,43,58,59,61,73,78,79,82,182,267,],[-3,-18,40,-18,-18,-3,-3,-3,-3,-18,-18,-18,-3,]),'EQ':([124,128,129,131,132,133,134,135,136,137,138,153,160,161,162,164,168,169,172,173,176,178,187,192,193,194,195,197,200,210,214,215,228,229,236,248,262,263,284,],[-148,-146,-150,-128,-123,-149,-130,-129,-147,-118,-150,-88,-134,-137,-136,-135,-150,201,-124,-127,-150,-130,-131,-132,-144,-145,-143,-119,-122,-126,-150,-129,-120,-121,-125,-150,-138,-141,-140,]),'FLOAT':([13,19,43,58,59,61,73,78,79,82,182,267,],[-3,29,29,29,-3,-3,-3,-3,29,29,29,-3,]),'OR':([124,126,128,129,131,132,133,134,135,136,137,138,153,160,161,162,164,168,169,172,173,176,178,187,192,193,194,195,197,200,207,208,210,214,215,228,229,230,231,232,233,234,235,236,248,262,263,284,],[-148,157,-146,-150,-128,-123,-149,-130,-129,-147,-118,-150,-88,-134,-137,-136,-135,-150,-150,-124,-127,-150,-130,-131,-132,-144,-145,-143,-119,-122,-117,-110,-126,-150,-129,-120,-121,-111,-112,-114,-115,-113,-116,-125,-150,-138,-141,-140,]),'BOOL':([13,19,43,58,59,61,73,78,79,82,182,267,],[-3,33,33,33,-3,-3,-3,-3,33,33,33,-3,]),'CTED':([60,103,112,121,125,139,143,144,155,157,166,170,171,175,186,191,198,199,201,202,203,204,205,206,209,237,240,253,270,286,],[71,117,128,128,128,128,128,128,128,128,128,-133,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,]),'GTOEQ':([124,128,129,131,132,133,134,135,136,137,138,153,160,161,162,164,168,169,172,173,176,178,187,192,193,194,195,197,200,210,214,215,228,229,236,248,262,263,284,],[-148,-146,-150,-128,-123,-149,-130,-129,-147,-118,-150,-88,-134,-137,-136,-135,-150,203,-124,-127,-150,-130,-131,-132,-144,-145,-143,-119,-122,-126,-150,-129,-120,-121,-125,-150,-138,-141,-140,]),'{':([5,6,29,30,32,33,39,40,45,107,120,185,217,221,245,269,280,],[-4,7,-14,-15,-16,-17,-20,-13,54,-55,148,224,242,-60,258,278,285,]),'MAIN':([7,8,9,11,12,14,16,17,18,21,23,24,25,28,59,61,68,69,70,72,78,100,184,223,],[-150,-6,-2,-7,-150,-150,-9,-21,-29,-28,-27,-10,-8,39,-150,-150,-66,-68,-69,-64,-150,-62,-50,-48,]),'}':([8,11,18,21,23,24,27,54,59,61,64,68,69,70,72,74,76,78,85,86,87,88,90,91,92,100,108,110,148,149,183,222,224,242,246,255,259,266,274,275,278,281,283,285,287,288,290,291,],[-6,-7,-29,-28,-27,-10,38,-150,-150,-150,-150,-66,-68,-69,-64,85,-71,-150,-19,-150,-75,-74,-70,-23,-24,-62,-73,-22,-150,184,-150,-59,-150,-150,259,266,-76,-150,-98,-101,-150,-58,287,-150,-78,290,-100,-51,]),'CTEF':([112,121,125,139,143,144,155,157,166,170,171,175,186,191,198,199,201,202,203,204,205,206,209,237,240,253,270,286,],[136,136,136,136,136,136,136,136,136,-133,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vars':([7,54,148,258,],[8,8,8,8,]),'errorOpSExp':([137,],[169,]),'errorMain':([17,],[28,]),'errorCyExp':([132,],[168,]),'opParamCall':([112,],[123,]),'cyTypeParam':([46,99,146,],[57,115,181,]),'forCycle':([75,],[88,]),'structType':([43,],[49,]),'changeCurrentScope':([9,],[12,]),'struct':([43,],[50,]),'param':([73,267,],[81,276,]),'init':([113,239,],[142,252,]),'program':([0,],[1,]),'dict':([42,51,],[48,62,]),'opMatrix':([248,],[262,]),'errorExpresion':([156,],[189,]),'main':([17,],[27,]),'return':([277,],[281,]),'errorParam':([106,],[119,]),'errorElse':([266,],[273,]),'errorReturn':([277,],[282,]),'assignOptions':([113,],[141,]),'flagParameters':([53,107,],[63,120,]),'basicDeclare':([13,59,61,78,],[23,23,23,23,]),'cyInstruction':([75,],[90,]),'condition':([75,],[91,]),'expresion':([112,121,125,139,143,144,155,157,166,175,186,191,240,253,270,286,],[130,150,154,177,179,180,188,190,196,154,225,226,254,177,279,289,]),'term':([112,121,125,139,143,144,155,157,166,175,186,191,198,199,201,202,203,204,205,206,240,253,270,286,],[132,132,132,132,132,132,132,132,132,132,132,132,228,229,132,132,132,132,132,132,132,132,132,132,]),'funcCall':([75,112,121,125,139,143,144,155,157,166,171,175,186,191,198,199,201,202,203,204,205,206,209,240,253,270,286,],[96,134,134,134,178,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,178,134,134,]),'initDict':([113,],[140,]),'saveTypeParam':([65,243,244,],[77,256,257,]),'dictDeclare':([13,59,61,78,],[18,18,18,18,]),'saveMain':([39,],[45,]),'errorVars':([7,54,148,258,],[10,10,10,10,]),'whileCycle':([75,],[87,]),'errorDictDeclare':([13,59,61,78,],[20,20,20,20,]),'opFunctions':([12,14,],[17,25,]),'errorOpStruct':([129,176,214,],[159,159,159,]),'opVars':([7,54,148,258,],[9,64,183,268,]),'errorInit':([174,],[211,]),'cyExpresion':([126,],[156,]),'body':([64,86,183,224,242,268,278,285,],[74,108,222,246,255,277,283,288,]),'errorOpParameters':([105,],[118,]),'saveParamToDirProc':([81,],[105,]),'saveReturnType':([221,],[245,]),'opParameters':([73,],[83,]),'errorCondition':([75,],[97,]),'cte':([112,121,125,139,143,144,155,157,166,171,175,186,191,198,199,201,202,203,204,205,206,209,237,240,253,270,286,],[135,135,135,135,135,135,135,135,135,135,215,135,135,135,135,135,135,135,135,135,135,135,250,135,135,135,135,]),'saveProc':([5,44,],[6,53,]),'assign':([75,122,247,],[98,152,260,]),'errorStructDeclare':([13,59,61,78,],[22,22,22,22,]),'cyExp':([168,],[197,]),'instr':([75,],[86,]),'errorFact':([170,],[209,]),'errorProgram':([0,],[2,]),'cyTerm':([138,],[172,]),'errorAssignMatrix':([265,],[272,]),'cyDeclare':([59,61,78,],[68,72,100,]),'errorBody':([64,86,183,224,242,268,278,285,],[75,75,75,75,75,75,75,75,]),'opStruct':([129,176,214,],[160,160,160,]),'errorOpAccess':([161,],[192,]),'type':([19,43,58,79,82,182,],[34,52,67,101,106,221,]),'dictIndex':([163,],[195,]),'empty':([7,12,14,46,54,59,61,64,73,78,80,86,99,112,126,129,130,138,146,148,168,169,176,181,183,196,214,216,224,242,248,258,266,268,278,285,],[11,16,16,56,11,70,70,76,84,70,104,76,56,127,158,162,167,173,56,11,200,207,162,218,76,167,162,241,76,76,263,11,275,76,76,76,]),'errorBasicDeclare':([34,],[41,]),'function':([12,14,],[14,14,]),'errorOpMatrix':([248,],[261,]),'opDictionary':([129,176,214,],[164,164,164,]),'errorType':([19,43,58,79,82,182,],[31,31,31,31,31,31,]),'errorForCycle':([75,],[94,]),'opAccess':([129,176,214,],[161,161,161,]),'basicStatements':([75,],[93,]),'structDeclare':([13,59,61,78,],[21,21,21,21,]),'errorAssign':([95,151,],[113,113,]),'cyParam':([181,],[220,]),'opSExp':([169,],[208,]),'errorOpReturns':([120,],[147,]),'cyParamCall':([130,196,],[165,227,]),'declare':([13,59,61,78,],[24,69,69,69,]),'optionalMatrix':([80,],[102,]),'clearVarsTable':([184,],[223,]),'optionalElse':([266,],[274,]),'dictType':([175,237,],[212,249,]),'initWith':([139,253,],[174,174,]),'errorWhileCycle':([75,],[89,]),'sExp':([112,121,125,139,143,144,155,157,166,175,186,191,240,253,270,286,],[126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'errorCyParam':([181,],[219,]),'opReturns':([120,],[149,]),'errorDictType':([175,237,],[213,213,]),'assignMatrix':([216,],[239,]),'errorDict':([42,51,],[47,47,]),'errorInitDict':([264,],[271,]),'saveType':([3,13,26,59,61,73,78,267,],[4,19,37,19,19,82,19,82,]),'saveID':([55,57,218,219,],[65,66,243,244,]),'cycle':([75,],[92,]),'errorFunction':([12,14,],[15,15,]),'exp':([112,121,125,139,143,144,155,157,166,175,186,191,201,202,203,204,205,206,240,253,270,286,],[137,137,137,137,137,137,137,137,137,137,137,137,230,231,232,233,234,235,137,137,137,137,]),'fact':([112,121,125,139,143,144,155,157,166,171,175,186,191,198,199,201,202,203,204,205,206,209,240,253,270,286,],[138,138,138,138,138,138,138,138,138,210,138,138,138,138,138,138,138,138,138,138,138,236,138,138,138,138,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> errorProgram PROGRAM saveType ID saveProc { opVars changeCurrentScope opFunctions main }','program',11,'p_program','CT.py',81),
  ('changeCurrentScope -> <empty>','changeCurrentScope',0,'p_changeCurrentScope','CT.py',85),
  ('saveType -> <empty>','saveType',0,'p_saveType','CT.py',91),
  ('saveProc -> <empty>','saveProc',0,'p_saveProc','CT.py',98),
  ('errorProgram -> <empty>','errorProgram',0,'p_errorProgram','CT.py',111),
  ('opVars -> vars','opVars',1,'p_opVars','CT.py',117),
  ('opVars -> empty','opVars',1,'p_opVars','CT.py',118),
  ('opFunctions -> function opFunctions','opFunctions',2,'p_opFunctions','CT.py',123),
  ('opFunctions -> empty','opFunctions',1,'p_opFunctions','CT.py',124),
  ('vars -> errorVars VARS declare','vars',3,'p_vars','CT.py',128),
  ('saveID -> <empty>','saveID',0,'p_saveID','CT.py',133),
  ('errorVars -> <empty>','errorVars',0,'p_errorVars','CT.py',162),
  ('type -> errorType INT','type',2,'p_type','CT.py',168),
  ('type -> FLOAT','type',1,'p_type','CT.py',169),
  ('type -> STRING','type',1,'p_type','CT.py',170),
  ('type -> OBJECT','type',1,'p_type','CT.py',171),
  ('type -> BOOL','type',1,'p_type','CT.py',172),
  ('errorType -> <empty>','errorType',0,'p_errorType','CT.py',177),
  ('main -> errorMain MAIN saveMain { opVars body }','main',7,'p_main','CT.py',183),
  ('saveMain -> <empty>','saveMain',0,'p_saveMain','CT.py',187),
  ('errorMain -> <empty>','errorMain',0,'p_errorMain','CT.py',195),
  ('instr -> basicStatements ;','instr',2,'p_instr','CT.py',201),
  ('instr -> condition','instr',1,'p_instr','CT.py',202),
  ('instr -> cycle','instr',1,'p_instr','CT.py',203),
  ('basicStatements -> assign','basicStatements',1,'p_basicStatements','CT.py',207),
  ('basicStatements -> funcCall','basicStatements',1,'p_basicStatements','CT.py',208),
  ('declare -> basicDeclare','declare',1,'p_declare','CT.py',212),
  ('declare -> structDeclare','declare',1,'p_declare','CT.py',213),
  ('declare -> dictDeclare','declare',1,'p_declare','CT.py',214),
  ('init -> = initWith errorInit','init',3,'p_init','CT.py',219),
  ('errorInit -> <empty>','errorInit',0,'p_errorInit','CT.py',224),
  ('initWith -> expresion','initWith',1,'p_initWith','CT.py',230),
  ('initWith -> funcCall','initWith',1,'p_initWith','CT.py',231),
  ('initDict -> = ( dictType : dictType ) errorInitDict','initDict',7,'p_initDict','CT.py',236),
  ('errorInitDict -> <empty>','errorInitDict',0,'p_errorInitDict','CT.py',241),
  ('dictType -> errorDictType CTES','dictType',2,'p_dictType','CT.py',247),
  ('dictType -> cte','dictType',1,'p_dictType','CT.py',248),
  ('dictType -> ID','dictType',1,'p_dictType','CT.py',249),
  ('errorDictType -> <empty>','errorDictType',0,'p_errorDictType','CT.py',254),
  ('param -> saveType type errorParam ID cyTypeParam cyParam','param',6,'p_param','CT.py',260),
  ('errorParam -> <empty>','errorParam',0,'p_errorParam','CT.py',265),
  ('cyParam -> errorCyParam saveID saveTypeParam ; param','cyParam',5,'p_cyParam','CT.py',271),
  ('cyParam -> empty saveID saveTypeParam','cyParam',3,'p_cyParam','CT.py',272),
  ('cyTypeParam -> , saveID saveTypeParam ID cyTypeParam','cyTypeParam',5,'p_cyTypeParam','CT.py',277),
  ('cyTypeParam -> empty','cyTypeParam',1,'p_cyTypeParam','CT.py',278),
  ('saveTypeParam -> <empty>','saveTypeParam',0,'p_saveTypeParam','CT.py',282),
  ('errorCyParam -> <empty>','errorCyParam',0,'p_errorCyParam','CT.py',291),
  ('function -> errorFunction FUNC saveType ID saveProc flagParameters ( opParameters ) flagParameters opReturns } clearVarsTable','function',13,'p_function','CT.py',297),
  ('errorFunction -> <empty>','errorFunction',0,'p_errorFunction','CT.py',301),
  ('clearVarsTable -> <empty>','clearVarsTable',0,'p_clearVarsTable','CT.py',306),
  ('return -> errorReturn RETURN expresion ;','return',4,'p_return','CT.py',314),
  ('errorReturn -> <empty>','errorReturn',0,'p_errorReturn','CT.py',319),
  ('opParameters -> param saveParamToDirProc errorOpParameters','opParameters',3,'p_opParameters','CT.py',325),
  ('opParameters -> empty','opParameters',1,'p_opParameters','CT.py',326),
  ('flagParameters -> <empty>','flagParameters',0,'p_flagParameters','CT.py',330),
  ('saveParamToDirProc -> <empty>','saveParamToDirProc',0,'p_saveParamToDirProc','CT.py',335),
  ('errorOpParameters -> <empty>','errorOpParameters',0,'p_errorOpParameters','CT.py',343),
  ('opReturns -> errorOpReturns RETURNS type saveReturnType { opVars body return','opReturns',8,'p_opReturns','CT.py',349),
  ('opReturns -> { opVars body','opReturns',3,'p_opReturns','CT.py',350),
  ('saveReturnType -> <empty>','saveReturnType',0,'p_saveReturnType','CT.py',355),
  ('errorOpReturns -> <empty>','errorOpReturns',0,'p_errorOpReturns','CT.py',363),
  ('basicDeclare -> saveType type errorBasicDeclare ID cyTypeParam saveID ; cyDeclare','basicDeclare',8,'p_basicDeclare','CT.py',369),
  ('errorBasicDeclare -> <empty>','errorBasicDeclare',0,'p_errorBasicDeclare','CT.py',374),
  ('structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare','structDeclare',6,'p_structDeclare','CT.py',380),
  ('errorStructDeclare -> <empty>','errorStructDeclare',0,'p_errorStructDeclare','CT.py',385),
  ('dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare','dictDeclare',6,'p_dictDeclare','CT.py',391),
  ('errorDictDeclare -> <empty>','errorDictDeclare',0,'p_errorDictDeclare','CT.py',396),
  ('cyDeclare -> declare','cyDeclare',1,'p_cyDeclare','CT.py',402),
  ('cyDeclare -> empty','cyDeclare',1,'p_cyDeclare','CT.py',403),
  ('body -> errorBody cyInstruction','body',2,'p_body','CT.py',408),
  ('body -> empty','body',1,'p_body','CT.py',409),
  ('errorBody -> <empty>','errorBody',0,'p_errorBody','CT.py',414),
  ('cyInstruction -> instr body','cyInstruction',2,'p_cyInstruction','CT.py',420),
  ('cycle -> forCycle','cycle',1,'p_cycle','CT.py',425),
  ('cycle -> whileCycle','cycle',1,'p_cycle','CT.py',426),
  ('whileCycle -> errorWhileCycle WHILE ( expresion ) { body }','whileCycle',8,'p_whileCycle','CT.py',431),
  ('errorWhileCycle -> <empty>','errorWhileCycle',0,'p_errorWhileCycle','CT.py',436),
  ('forCycle -> errorForCycle FOR ( assign ; expresion ; assign ) { body }','forCycle',12,'p_forCycle','CT.py',442),
  ('errorForCycle -> <empty>','errorForCycle',0,'p_errorForCycle','CT.py',447),
  ('assign -> ID errorAssign assignOptions','assign',3,'p_assign','CT.py',453),
  ('errorAssign -> <empty>','errorAssign',0,'p_errorAssign','CT.py',458),
  ('assignOptions -> init','assignOptions',1,'p_assignOptions','CT.py',464),
  ('assignOptions -> initDict','assignOptions',1,'p_assignOptions','CT.py',465),
  ('assignOptions -> [ expresion ] assignMatrix init','assignOptions',5,'p_assignOptions','CT.py',466),
  ('assignMatrix -> [ expresion ] errorAssignMatrix','assignMatrix',4,'p_assignMatrix','CT.py',471),
  ('assignMatrix -> empty','assignMatrix',1,'p_assignMatrix','CT.py',472),
  ('errorAssignMatrix -> <empty>','errorAssignMatrix',0,'p_errorAssignMatrix','CT.py',477),
  ('funcCall -> ID ( opParamCall )','funcCall',4,'p_funcCall','CT.py',483),
  ('opParamCall -> expresion cyParamCall','opParamCall',2,'p_opParamCall','CT.py',488),
  ('opParamCall -> empty','opParamCall',1,'p_opParamCall','CT.py',489),
  ('cyParamCall -> , expresion cyParamCall','cyParamCall',3,'p_cyParamCall','CT.py',494),
  ('cyParamCall -> empty','cyParamCall',1,'p_cyParamCall','CT.py',495),
  ('struct -> structType [ CTED ] optionalMatrix','struct',5,'p_struct','CT.py',500),
  ('structType -> type','structType',1,'p_structType','CT.py',505),
  ('structType -> DICT dict','structType',2,'p_structType','CT.py',506),
  ('optionalMatrix -> [ CTED ]','optionalMatrix',3,'p_optionalMatrix','CT.py',511),
  ('optionalMatrix -> empty','optionalMatrix',1,'p_optionalMatrix','CT.py',512),
  ('condition -> errorCondition IF ( expresion ) { body } optionalElse','condition',9,'p_condition','CT.py',517),
  ('errorCondition -> <empty>','errorCondition',0,'p_errorCondition','CT.py',522),
  ('optionalElse -> errorElse ELSE { body }','optionalElse',5,'p_optionalElse','CT.py',528),
  ('optionalElse -> empty','optionalElse',1,'p_optionalElse','CT.py',529),
  ('errorElse -> <empty>','errorElse',0,'p_errorElse','CT.py',534),
  ('dict -> errorDict ( type : type )','dict',6,'p_dict','CT.py',540),
  ('errorDict -> <empty>','errorDict',0,'p_errorDict','CT.py',545),
  ('expresion -> sExp cyExpresion errorExpresion','expresion',3,'p_expresion','CT.py',551),
  ('errorExpresion -> <empty>','errorExpresion',0,'p_errorExpresion','CT.py',556),
  ('cyExpresion -> AND expresion','cyExpresion',2,'p_cyExpresion','CT.py',562),
  ('cyExpresion -> OR expresion','cyExpresion',2,'p_cyExpresion','CT.py',563),
  ('cyExpresion -> empty','cyExpresion',1,'p_cyExpresion','CT.py',564),
  ('sExp -> exp errorOpSExp opSExp','sExp',3,'p_sExp','CT.py',569),
  ('opSExp -> EQ exp','opSExp',2,'p_opSExp','CT.py',574),
  ('opSExp -> DIF exp','opSExp',2,'p_opSExp','CT.py',575),
  ('opSExp -> LTOEQ exp','opSExp',2,'p_opSExp','CT.py',576),
  ('opSExp -> GTOEQ exp','opSExp',2,'p_opSExp','CT.py',577),
  ('opSExp -> > exp','opSExp',2,'p_opSExp','CT.py',578),
  ('opSExp -> < exp','opSExp',2,'p_opSExp','CT.py',579),
  ('opSExp -> empty','opSExp',1,'p_opSExp','CT.py',580),
  ('errorOpSExp -> <empty>','errorOpSExp',0,'p_errorOpSExp','CT.py',585),
  ('exp -> term errorCyExp cyExp','exp',3,'p_exp','CT.py',591),
  ('cyExp -> + term','cyExp',2,'p_cyExp','CT.py',596),
  ('cyExp -> - term','cyExp',2,'p_cyExp','CT.py',597),
  ('cyExp -> empty','cyExp',1,'p_cyExp','CT.py',598),
  ('errorCyExp -> <empty>','errorCyExp',0,'p_errorCyExp','CT.py',603),
  ('term -> fact cyTerm','term',2,'p_term','CT.py',609),
  ('cyTerm -> * errorFact fact','cyTerm',3,'p_cyTerm','CT.py',614),
  ('cyTerm -> / fact','cyTerm',2,'p_cyTerm','CT.py',615),
  ('cyTerm -> empty','cyTerm',1,'p_cyTerm','CT.py',616),
  ('fact -> CTES','fact',1,'p_fact','CT.py',621),
  ('fact -> cte','fact',1,'p_fact','CT.py',622),
  ('fact -> funcCall','fact',1,'p_fact','CT.py',623),
  ('fact -> ( expresion )','fact',3,'p_fact','CT.py',624),
  ('fact -> ID opAccess errorOpAccess','fact',3,'p_fact','CT.py',625),
  ('errorFact -> <empty>','errorFact',0,'p_errorFact','CT.py',630),
  ('opAccess -> opStruct','opAccess',1,'p_opAccess','CT.py',636),
  ('opAccess -> opDictionary','opAccess',1,'p_opAccess','CT.py',637),
  ('opAccess -> empty','opAccess',1,'p_opAccess','CT.py',638),
  ('errorOpAccess -> <empty>','errorOpAccess',0,'p_errorOpAccess','CT.py',643),
  ('opStruct -> errorOpStruct [ expresion ] opMatrix','opStruct',5,'p_opStruct','CT.py',649),
  ('errorOpStruct -> <empty>','errorOpStruct',0,'p_errorOpStruct','CT.py',654),
  ('opMatrix -> errorOpMatrix [ expresion ]','opMatrix',4,'p_opMatrix','CT.py',660),
  ('opMatrix -> empty','opMatrix',1,'p_opMatrix','CT.py',661),
  ('errorOpMatrix -> <empty>','errorOpMatrix',0,'p_errorOpMatrix','CT.py',666),
  ('opDictionary -> . dictIndex','opDictionary',2,'p_opDictionary','CT.py',672),
  ('dictIndex -> FIRST','dictIndex',1,'p_dictIndex','CT.py',677),
  ('dictIndex -> LAST','dictIndex',1,'p_dictIndex','CT.py',678),
  ('cte -> CTED','cte',1,'p_cte','CT.py',683),
  ('cte -> CTEF','cte',1,'p_cte','CT.py',684),
  ('cte -> TRUE','cte',1,'p_cte','CT.py',685),
  ('cte -> FALSE','cte',1,'p_cte','CT.py',686),
  ('empty -> <empty>','empty',0,'p_empty','CT.py',693),
]
