
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'C33239DB51BCADA75D74EE82FF323DB3'
    
_lr_action_items = {'RETURN':([6,8,9,18,19,20,47,50,52,60,61,62,63,65,71,72,74,75,76,77,82,89,91,95,110,139,224,228,232,233,239,240,],[-2,-3,-20,-19,-18,-6,-109,-109,-109,-38,-42,-43,-37,-39,-109,-48,-47,-44,-15,-45,-14,-109,-46,-13,-109,181,-49,-109,-67,-69,-50,-68,]),'VARS':([4,44,56,89,],[5,5,5,5,]),'DIF':([111,114,115,117,118,119,120,121,122,123,124,132,134,153,154,155,158,160,163,164,165,169,174,175,176,182,192,193,194,196,197,198,199,208,222,223,234,],[-107,146,-109,-91,-109,-108,-93,-92,-106,-105,-109,-109,-93,-96,-95,-98,-97,-83,-86,-87,-90,-57,-109,-91,-92,-94,-103,-104,-102,-85,-84,-88,-89,-109,-101,-99,-100,]),'OBJECT':([5,25,39,41,47,50,52,55,64,107,],[14,14,14,14,14,14,14,14,14,14,]),'WHILE':([6,8,9,18,19,20,44,47,50,52,56,58,60,61,62,63,65,69,71,72,74,76,82,89,95,110,195,206,224,228,232,233,235,236,239,240,],[-2,-3,-20,-19,-18,-6,-109,-109,-109,-109,-109,73,-38,-42,-43,-37,-39,73,73,-48,-47,-15,-14,-109,-13,73,73,73,-49,-109,-67,-69,73,73,-50,-68,]),'PROGRAM':([0,],[2,]),'TRUE':([92,96,98,101,102,112,131,141,143,145,146,147,148,149,150,156,161,162,166,167,168,171,181,202,204,217,221,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'LAST':([157,],[193,]),')':([11,13,14,15,17,38,49,53,67,87,88,96,97,99,100,108,109,111,113,114,115,116,117,118,119,120,121,122,123,124,127,128,129,130,132,133,134,136,138,140,142,144,151,152,153,154,155,158,160,163,164,165,169,170,172,174,175,176,182,183,184,185,186,187,188,189,190,192,193,194,196,197,198,199,201,208,211,212,213,214,215,216,222,223,225,226,234,],[-7,-8,-10,-9,-11,-41,-40,66,-109,106,-109,-109,-53,-51,-52,-28,-30,-107,-109,-109,-109,159,-91,-109,-108,-93,-92,-106,-105,-109,169,-59,-109,-21,-109,-22,-23,178,-29,182,-71,-74,-82,-75,-96,-95,-98,-97,-83,-86,-87,-90,-57,-58,-61,-109,-91,-92,-94,-72,-73,-76,-77,-79,-80,-78,-81,-103,-104,-102,-85,-84,-88,-89,-109,-109,-60,226,-25,-26,-27,-54,-101,-99,230,-24,-100,]),'(':([27,29,34,73,79,81,83,92,96,98,101,102,112,115,131,132,141,143,145,146,147,148,149,150,156,161,162,166,167,168,171,174,181,204,217,221,],[39,41,39,92,94,96,102,112,112,131,112,112,112,96,112,96,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,96,112,112,112,112,]),'+':([111,115,117,118,119,120,121,122,123,124,132,134,153,154,155,158,164,165,169,174,175,176,182,192,193,194,198,199,208,222,223,234,],[-107,-109,-91,162,-108,-93,-92,-106,-105,-109,-109,-93,-96,-95,-98,-97,-87,-90,-57,-109,-91,-92,-94,-103,-104,-102,-88,-89,-109,-101,-99,-100,]),'*':([111,115,117,119,120,121,122,123,124,132,134,153,154,155,158,169,174,175,176,182,192,193,194,208,222,223,234,],[-107,-109,-91,-108,-93,-92,-106,-105,166,-109,-93,-96,-95,-98,-97,-57,-109,-91,-92,-94,-103,-104,-102,-109,-101,-99,-100,]),'-':([111,115,117,118,119,120,121,122,123,124,132,134,153,154,155,158,164,165,169,174,175,176,182,192,193,194,198,199,208,222,223,234,],[-107,-109,-91,161,-108,-93,-92,-106,-105,-109,-109,-93,-96,-95,-98,-97,-87,-90,-57,-109,-91,-92,-94,-103,-104,-102,-88,-89,-109,-101,-99,-100,]),',':([26,67,111,113,114,115,117,118,119,120,121,122,123,124,129,142,144,151,152,153,154,155,158,160,163,164,165,169,182,183,184,185,186,187,188,189,190,192,193,194,196,197,198,199,201,208,222,223,234,],[36,36,-107,-109,-109,-109,-91,-109,-108,-93,-92,-106,-105,-109,171,-71,-74,-82,-75,-96,-95,-98,-97,-83,-86,-87,-90,-57,-94,-72,-73,-76,-77,-79,-80,-78,-81,-103,-104,-102,-85,-84,-88,-89,171,-109,-101,-99,-100,]),'/':([111,115,117,119,120,121,122,123,124,132,134,153,154,155,158,169,174,175,176,182,192,193,194,208,222,223,234,],[-107,-109,-91,-108,-93,-92,-106,-105,167,-109,-93,-96,-95,-98,-97,-57,-109,-91,-92,-94,-103,-104,-102,-109,-101,-99,-100,]),'.':([115,132,174,],[157,157,157,]),'FIRST':([157,],[192,]),'BOOL':([5,25,39,41,47,50,52,55,64,107,],[17,17,17,17,17,17,17,17,17,17,]),';':([26,33,37,38,40,49,67,80,84,85,86,88,97,99,100,103,105,106,111,113,114,115,117,118,119,120,121,122,123,124,126,130,132,133,134,142,144,151,152,153,154,155,158,160,163,164,165,169,179,182,183,184,185,186,187,188,189,190,192,193,194,196,197,198,199,200,207,208,216,222,223,226,234,],[-109,47,50,-41,52,-40,-109,95,-17,-16,-109,107,-53,-51,-52,-62,-66,-70,-107,-109,-109,-109,-91,-109,-108,-93,-92,-106,-105,-109,168,-21,-109,-22,-23,-71,-74,-82,-75,-96,-95,-98,-97,-83,-86,-87,-90,-57,-65,-94,-72,-73,-76,-77,-79,-80,-78,-81,-103,-104,-102,-85,-84,-88,-89,210,220,-109,-54,-101,-99,-24,-100,]),':':([11,13,14,15,17,51,111,119,122,123,173,174,175,176,],[-7,-8,-10,-9,-11,64,-107,-108,-106,-105,202,-27,-25,-26,]),'=':([81,125,177,203,205,227,],[98,98,-109,217,-56,-55,]),'<':([111,114,115,117,118,119,120,121,122,123,124,132,134,153,154,155,158,160,163,164,165,169,174,175,176,182,192,193,194,196,197,198,199,208,222,223,234,],[-107,150,-109,-91,-109,-108,-93,-92,-106,-105,-109,-109,-93,-96,-95,-98,-97,-83,-86,-87,-90,-57,-109,-91,-92,-94,-103,-104,-102,-85,-84,-88,-89,-109,-101,-99,-100,]),'$end':([1,45,],[0,-1,]),'STRING':([5,25,39,41,47,50,52,55,64,107,],[15,15,15,15,15,15,15,15,15,15,]),'FOR':([6,8,9,18,19,20,44,47,50,52,56,58,60,61,62,63,65,69,71,72,74,76,82,89,95,110,195,206,224,228,232,233,235,236,239,240,],[-2,-3,-20,-19,-18,-6,-109,-109,-109,-109,-109,79,-38,-42,-43,-37,-39,79,79,-48,-47,-15,-14,-109,-13,79,79,79,-49,-109,-67,-69,79,79,-50,-68,]),'ELSE':([228,],[231,]),'>':([111,114,115,117,118,119,120,121,122,123,124,132,134,153,154,155,158,160,163,164,165,169,174,175,176,182,192,193,194,196,197,198,199,208,222,223,234,],[-107,148,-109,-91,-109,-108,-93,-92,-106,-105,-109,-109,-93,-96,-95,-98,-97,-83,-86,-87,-90,-57,-109,-91,-92,-94,-103,-104,-102,-85,-84,-88,-89,-109,-101,-99,-100,]),'RETURNS':([29,42,43,66,],[-109,55,-34,-33,]),'FUNC':([4,6,7,8,9,18,19,20,21,47,50,52,60,61,62,63,65,70,],[-109,-2,22,-3,-20,-19,-18,-6,22,-109,-109,-109,-38,-42,-43,-37,-39,-31,]),'[':([11,13,14,15,17,32,35,48,81,86,106,115,125,132,174,177,208,],[-7,-8,-10,-9,-11,46,-63,-64,101,104,-70,156,101,156,156,204,221,]),']':([59,111,113,114,115,117,118,119,120,121,122,123,124,135,137,142,144,151,152,153,154,155,158,160,163,164,165,169,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,208,218,222,223,229,234,],[86,-107,-109,-109,-109,-91,-109,-108,-93,-92,-106,-105,-109,177,179,-71,-74,-82,-75,-96,-95,-98,-97,-83,-86,-87,-90,-57,-94,-72,-73,-76,-77,-79,-80,-78,-81,208,-103,-104,-102,-85,-84,-88,-89,-109,227,-101,-99,234,-100,]),'ID':([2,6,8,9,10,11,12,13,14,15,16,17,18,19,20,22,36,44,47,50,52,54,56,58,60,61,62,63,65,69,71,72,74,76,82,89,92,94,95,96,98,101,102,110,112,131,141,143,145,146,147,148,149,150,156,161,162,166,167,168,171,181,195,202,204,206,210,217,221,224,228,232,233,235,236,239,240,],[3,-2,-3,-20,25,-7,26,-8,-10,-9,27,-11,-19,-18,-6,29,49,-109,-109,-109,-109,67,-109,81,-38,-42,-43,-37,-39,81,81,-48,-47,-15,-14,-109,115,125,-13,115,132,115,115,81,115,174,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,81,215,115,81,125,132,115,-49,-109,-67,-69,81,81,-50,-68,]),'IF':([6,8,9,18,19,20,44,47,50,52,56,58,60,61,62,63,65,69,71,72,74,76,82,89,95,110,195,206,224,228,232,233,235,236,239,240,],[-2,-3,-20,-19,-18,-6,-109,-109,-109,-109,-109,83,-38,-42,-43,-37,-39,83,83,-48,-47,-15,-14,-109,-13,83,83,83,-49,-109,-67,-69,83,83,-50,-68,]),'AND':([111,113,114,115,117,118,119,120,121,122,123,124,132,134,151,152,153,154,155,158,160,163,164,165,169,174,175,176,182,185,186,187,188,189,190,192,193,194,196,197,198,199,208,222,223,234,],[-107,141,-109,-109,-91,-109,-108,-93,-92,-106,-105,-109,-109,-93,-82,-75,-96,-95,-98,-97,-83,-86,-87,-90,-57,-109,-91,-92,-94,-76,-77,-79,-80,-78,-81,-103,-104,-102,-85,-84,-88,-89,-109,-101,-99,-100,]),'CTES':([92,96,98,101,102,112,131,141,143,145,146,147,148,149,150,156,161,162,166,167,168,171,181,202,204,217,221,],[117,117,117,117,117,117,175,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,213,117,117,117,]),'LTOEQ':([111,114,115,117,118,119,120,121,122,123,124,132,134,153,154,155,158,160,163,164,165,169,174,175,176,182,192,193,194,196,197,198,199,208,222,223,234,],[-107,149,-109,-91,-109,-108,-93,-92,-106,-105,-109,-109,-93,-96,-95,-98,-97,-83,-86,-87,-90,-57,-109,-91,-92,-94,-103,-104,-102,-85,-84,-88,-89,-109,-101,-99,-100,]),'FALSE':([92,96,98,101,102,112,131,141,143,145,146,147,148,149,150,156,161,162,166,167,168,171,181,202,204,217,221,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'STRUCT':([5,47,50,52,],[10,10,10,10,]),'INT':([5,25,39,41,47,50,52,55,64,107,],[11,11,11,11,11,11,11,11,11,11,]),'EQ':([111,114,115,117,118,119,120,121,122,123,124,132,134,153,154,155,158,160,163,164,165,169,174,175,176,182,192,193,194,196,197,198,199,208,222,223,234,],[-107,145,-109,-91,-109,-108,-93,-92,-106,-105,-109,-109,-93,-96,-95,-98,-97,-83,-86,-87,-90,-57,-109,-91,-92,-94,-103,-104,-102,-85,-84,-88,-89,-109,-101,-99,-100,]),'FLOAT':([5,25,39,41,47,50,52,55,64,107,],[13,13,13,13,13,13,13,13,13,13,]),'OR':([111,113,114,115,117,118,119,120,121,122,123,124,132,134,151,152,153,154,155,158,160,163,164,165,169,174,175,176,182,185,186,187,188,189,190,192,193,194,196,197,198,199,208,222,223,234,],[-107,143,-109,-109,-91,-109,-108,-93,-92,-106,-105,-109,-109,-93,-82,-75,-96,-95,-98,-97,-83,-86,-87,-90,-57,-109,-91,-92,-94,-76,-77,-79,-80,-78,-81,-103,-104,-102,-85,-84,-88,-89,-109,-101,-99,-100,]),'DICT':([5,25,47,50,52,],[16,34,16,16,16,]),'CTED':([46,92,96,98,101,102,104,112,131,141,143,145,146,147,148,149,150,156,161,162,166,167,168,171,181,202,204,217,221,],[59,123,123,123,123,123,137,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'GTOEQ':([111,114,115,117,118,119,120,121,122,123,124,132,134,153,154,155,158,160,163,164,165,169,174,175,176,182,192,193,194,196,197,198,199,208,222,223,234,],[-107,147,-109,-91,-109,-108,-93,-92,-106,-105,-109,-109,-93,-96,-95,-98,-97,-83,-86,-87,-90,-57,-109,-91,-92,-94,-103,-104,-102,-85,-84,-88,-89,-109,-101,-99,-100,]),'{':([3,11,13,14,15,17,29,30,42,43,66,68,159,178,230,231,],[4,-7,-8,-10,-9,-11,-109,44,56,-34,-33,89,195,206,235,236,]),'MAIN':([4,6,7,8,9,18,19,20,21,23,24,28,47,50,52,60,61,62,63,65,70,],[-109,-2,-109,-3,-20,-19,-18,-6,-109,-5,30,-4,-109,-109,-109,-38,-42,-43,-37,-39,-31,]),'}':([6,8,9,18,19,20,31,44,47,50,52,56,57,58,60,61,62,63,65,69,71,72,74,75,76,77,78,82,90,91,93,95,180,195,206,209,219,220,224,228,232,233,235,236,237,238,239,240,],[-2,-3,-20,-19,-18,-6,45,-109,-109,-109,-109,-109,70,-109,-38,-42,-43,-37,-39,-109,-109,-48,-47,-44,-15,-45,93,-14,-36,-46,-12,-13,-35,-109,-109,224,228,-32,-49,-109,-67,-69,-109,-109,239,240,-50,-68,]),'CTEF':([92,96,98,101,102,112,131,141,143,145,146,147,148,149,150,156,161,162,166,167,168,171,181,202,204,217,221,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cyExp':([118,],[160,]),'dictDeclare':([5,47,50,52,],[9,9,9,9,]),'vars':([4,44,56,89,],[6,6,6,6,]),'instr':([58,69,71,110,195,206,235,236,],[71,71,71,71,71,71,71,71,]),'optionalMatrix':([86,],[103,]),'cyTerm':([124,],[164,]),'whileCycle':([58,69,71,110,195,206,235,236,],[72,72,72,72,72,72,72,72,]),'opParamCall':([96,],[127,]),'cyTypeParam':([26,67,],[37,88,]),'assignMatrix':([177,],[203,]),'optionalElse':([228,],[232,]),'forCycle':([58,69,71,110,195,206,235,236,],[74,74,74,74,74,74,74,74,]),'opFunctions':([7,21,],[24,28,]),'dictType':([131,202,],[173,212,]),'structType':([25,],[32,]),'initWith':([98,217,],[130,130,]),'cyDeclare':([47,50,52,],[60,63,65,]),'struct':([25,],[33,]),'opVars':([4,44,56,89,],[7,58,69,110,]),'opStruct':([115,132,174,],[153,153,153,]),'cyExpresion':([113,],[142,]),'param':([41,107,],[53,138,]),'sExp':([92,96,98,101,102,112,131,141,143,156,168,171,181,204,217,221,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'init':([81,125,203,],[100,100,216,]),'program':([0,],[1,]),'dict':([27,34,],[40,48,]),'opMatrix':([208,],[223,]),'main':([24,],[31,]),'type':([5,25,39,41,47,50,52,55,64,107,],[12,35,51,54,12,12,12,68,87,54,]),'dictIndex':([157,],[194,]),'empty':([4,7,21,26,29,44,47,50,52,56,58,67,69,71,86,88,89,96,110,113,114,115,118,124,129,132,174,177,195,201,206,208,228,235,236,],[8,23,23,38,43,8,62,62,62,8,77,38,77,77,105,109,8,128,77,144,151,155,163,165,172,155,155,205,77,172,77,222,233,77,77,]),'opReturns':([42,],[57,]),'function':([7,21,],[21,21,]),'return':([139,],[180,]),'opDictionary':([115,132,174,],[158,158,158,]),'body':([58,69,71,110,195,206,235,236,],[78,90,91,139,209,219,237,238,]),'assignOptions':([81,125,],[99,99,]),'opAccess':([115,132,174,],[154,154,154,]),'basicStatements':([58,69,71,110,195,206,235,236,],[80,80,80,80,80,80,80,80,]),'structDeclare':([5,47,50,52,],[18,18,18,18,]),'cyParam':([88,],[108,]),'basicDeclare':([5,47,50,52,],[19,19,19,19,]),'cyInstruction':([58,69,71,110,195,206,235,236,],[75,75,75,75,75,75,75,75,]),'condition':([58,69,71,110,195,206,235,236,],[82,82,82,82,82,82,82,82,]),'cycle':([58,69,71,110,195,206,235,236,],[76,76,76,76,76,76,76,76,]),'expresion':([92,96,98,101,102,112,131,141,143,156,168,171,181,204,217,221,],[116,129,133,135,136,140,140,183,184,191,200,201,207,218,133,229,]),'term':([92,96,98,101,102,112,131,141,143,145,146,147,148,149,150,156,161,162,168,171,181,204,217,221,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,196,197,118,118,118,118,118,118,]),'funcCall':([58,69,71,92,96,98,101,102,110,112,131,141,143,145,146,147,148,149,150,156,161,162,166,167,168,171,181,195,204,206,217,221,235,236,],[84,84,84,120,120,134,120,120,84,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,84,120,84,134,120,84,84,]),'opParameters':([29,],[42,]),'initDict':([81,125,],[97,97,]),'assign':([58,69,71,94,110,195,206,210,235,236,],[85,85,85,126,85,85,85,225,85,85,]),'cte':([92,96,98,101,102,112,131,141,143,145,146,147,148,149,150,156,161,162,166,167,168,171,181,202,204,217,221,],[121,121,121,121,121,121,176,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,214,121,121,121,]),'exp':([92,96,98,101,102,112,131,141,143,145,146,147,148,149,150,156,168,171,181,204,217,221,],[114,114,114,114,114,114,114,114,114,185,186,187,188,189,190,114,114,114,114,114,114,114,]),'opSExp':([114,],[152,]),'cyParamCall':([129,201,],[170,211,]),'declare':([5,47,50,52,],[20,61,61,61,]),'fact':([92,96,98,101,102,112,131,141,143,145,146,147,148,149,150,156,161,162,166,167,168,171,181,204,217,221,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,198,199,124,124,124,124,124,124,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID { opVars opFunctions main }','program',7,'p_program','CT.py',56),
  ('opVars -> vars','opVars',1,'p_opVars','CT.py',61),
  ('opVars -> empty','opVars',1,'p_opVars','CT.py',62),
  ('opFunctions -> function opFunctions','opFunctions',2,'p_opFunctions','CT.py',67),
  ('opFunctions -> empty','opFunctions',1,'p_opFunctions','CT.py',68),
  ('vars -> VARS declare','vars',2,'p_vars','CT.py',72),
  ('type -> INT','type',1,'p_type','CT.py',77),
  ('type -> FLOAT','type',1,'p_type','CT.py',78),
  ('type -> STRING','type',1,'p_type','CT.py',79),
  ('type -> OBJECT','type',1,'p_type','CT.py',80),
  ('type -> BOOL','type',1,'p_type','CT.py',81),
  ('main -> MAIN { opVars body }','main',5,'p_main','CT.py',86),
  ('instr -> basicStatements ;','instr',2,'p_instr','CT.py',91),
  ('instr -> condition','instr',1,'p_instr','CT.py',92),
  ('instr -> cycle','instr',1,'p_instr','CT.py',93),
  ('basicStatements -> assign','basicStatements',1,'p_basicStatements','CT.py',97),
  ('basicStatements -> funcCall','basicStatements',1,'p_basicStatements','CT.py',98),
  ('declare -> basicDeclare','declare',1,'p_declare','CT.py',102),
  ('declare -> structDeclare','declare',1,'p_declare','CT.py',103),
  ('declare -> dictDeclare','declare',1,'p_declare','CT.py',104),
  ('init -> = initWith','init',2,'p_init','CT.py',109),
  ('initWith -> expresion','initWith',1,'p_initWith','CT.py',114),
  ('initWith -> funcCall','initWith',1,'p_initWith','CT.py',115),
  ('initDict -> = ( dictType : dictType )','initDict',6,'p_initDict','CT.py',120),
  ('dictType -> CTES','dictType',1,'p_dictType','CT.py',125),
  ('dictType -> cte','dictType',1,'p_dictType','CT.py',126),
  ('dictType -> ID','dictType',1,'p_dictType','CT.py',127),
  ('param -> type ID cyTypeParam cyParam','param',4,'p_param','CT.py',132),
  ('cyParam -> ; param','cyParam',2,'p_cyParam','CT.py',137),
  ('cyParam -> empty','cyParam',1,'p_cyParam','CT.py',138),
  ('function -> FUNC ID opParameters opReturns }','function',5,'p_function','CT.py',143),
  ('return -> RETURN expresion ;','return',3,'p_return','CT.py',148),
  ('opParameters -> ( param )','opParameters',3,'p_opParameters','CT.py',153),
  ('opParameters -> empty','opParameters',1,'p_opParameters','CT.py',154),
  ('opReturns -> RETURNS type { opVars body return','opReturns',6,'p_opReturns','CT.py',159),
  ('opReturns -> { opVars body','opReturns',3,'p_opReturns','CT.py',160),
  ('basicDeclare -> type ID cyTypeParam ; cyDeclare','basicDeclare',5,'p_basicDeclare','CT.py',165),
  ('structDeclare -> STRUCT ID struct ; cyDeclare','structDeclare',5,'p_structDeclare','CT.py',170),
  ('dictDeclare -> DICT ID dict ; cyDeclare','dictDeclare',5,'p_dictDeclare','CT.py',175),
  ('cyTypeParam -> , ID','cyTypeParam',2,'p_cyTypeParam','CT.py',180),
  ('cyTypeParam -> empty','cyTypeParam',1,'p_cyTypeParam','CT.py',181),
  ('cyDeclare -> declare','cyDeclare',1,'p_cyDeclare','CT.py',186),
  ('cyDeclare -> empty','cyDeclare',1,'p_cyDeclare','CT.py',187),
  ('body -> cyInstruction','body',1,'p_body','CT.py',192),
  ('body -> empty','body',1,'p_body','CT.py',193),
  ('cyInstruction -> instr body','cyInstruction',2,'p_cyInstruction','CT.py',198),
  ('cycle -> forCycle','cycle',1,'p_cycle','CT.py',203),
  ('cycle -> whileCycle','cycle',1,'p_cycle','CT.py',204),
  ('whileCycle -> WHILE ( expresion ) { body }','whileCycle',7,'p_whileCycle','CT.py',209),
  ('forCycle -> FOR ( assign ; expresion ; assign ) { body }','forCycle',11,'p_forCycle','CT.py',214),
  ('assign -> ID assignOptions','assign',2,'p_assign','CT.py',219),
  ('assignOptions -> init','assignOptions',1,'p_assignOptions','CT.py',224),
  ('assignOptions -> initDict','assignOptions',1,'p_assignOptions','CT.py',225),
  ('assignOptions -> [ expresion ] assignMatrix init','assignOptions',5,'p_assignOptions','CT.py',226),
  ('assignMatrix -> [ expresion ]','assignMatrix',3,'p_assignMatrix','CT.py',231),
  ('assignMatrix -> empty','assignMatrix',1,'p_assignMatrix','CT.py',232),
  ('funcCall -> ID ( opParamCall )','funcCall',4,'p_funcCall','CT.py',237),
  ('opParamCall -> expresion cyParamCall','opParamCall',2,'p_opParamCall','CT.py',242),
  ('opParamCall -> empty','opParamCall',1,'p_opParamCall','CT.py',243),
  ('cyParamCall -> , expresion cyParamCall','cyParamCall',3,'p_cyParamCall','CT.py',248),
  ('cyParamCall -> empty','cyParamCall',1,'p_cyParamCall','CT.py',249),
  ('struct -> structType [ CTED ] optionalMatrix','struct',5,'p_struct','CT.py',254),
  ('structType -> type','structType',1,'p_structType','CT.py',259),
  ('structType -> DICT dict','structType',2,'p_structType','CT.py',260),
  ('optionalMatrix -> [ CTED ]','optionalMatrix',3,'p_optionalMatrix','CT.py',265),
  ('optionalMatrix -> empty','optionalMatrix',1,'p_optionalMatrix','CT.py',266),
  ('condition -> IF ( expresion ) { body } optionalElse','condition',8,'p_condition','CT.py',271),
  ('optionalElse -> ELSE { body }','optionalElse',4,'p_optionalElse','CT.py',276),
  ('optionalElse -> empty','optionalElse',1,'p_optionalElse','CT.py',277),
  ('dict -> ( type : type )','dict',5,'p_dict','CT.py',282),
  ('expresion -> sExp cyExpresion','expresion',2,'p_expresion','CT.py',287),
  ('cyExpresion -> AND expresion','cyExpresion',2,'p_cyExpresion','CT.py',292),
  ('cyExpresion -> OR expresion','cyExpresion',2,'p_cyExpresion','CT.py',293),
  ('cyExpresion -> empty','cyExpresion',1,'p_cyExpresion','CT.py',294),
  ('sExp -> exp opSExp','sExp',2,'p_sExp','CT.py',299),
  ('opSExp -> EQ exp','opSExp',2,'p_opSExp','CT.py',304),
  ('opSExp -> DIF exp','opSExp',2,'p_opSExp','CT.py',305),
  ('opSExp -> LTOEQ exp','opSExp',2,'p_opSExp','CT.py',306),
  ('opSExp -> GTOEQ exp','opSExp',2,'p_opSExp','CT.py',307),
  ('opSExp -> > exp','opSExp',2,'p_opSExp','CT.py',308),
  ('opSExp -> < exp','opSExp',2,'p_opSExp','CT.py',309),
  ('opSExp -> empty','opSExp',1,'p_opSExp','CT.py',310),
  ('exp -> term cyExp','exp',2,'p_exp','CT.py',315),
  ('cyExp -> + term','cyExp',2,'p_cyExp','CT.py',320),
  ('cyExp -> - term','cyExp',2,'p_cyExp','CT.py',321),
  ('cyExp -> empty','cyExp',1,'p_cyExp','CT.py',322),
  ('term -> fact cyTerm','term',2,'p_term','CT.py',327),
  ('cyTerm -> * fact','cyTerm',2,'p_cyTerm','CT.py',332),
  ('cyTerm -> / fact','cyTerm',2,'p_cyTerm','CT.py',333),
  ('cyTerm -> empty','cyTerm',1,'p_cyTerm','CT.py',334),
  ('fact -> CTES','fact',1,'p_fact','CT.py',339),
  ('fact -> cte','fact',1,'p_fact','CT.py',340),
  ('fact -> funcCall','fact',1,'p_fact','CT.py',341),
  ('fact -> ( expresion )','fact',3,'p_fact','CT.py',342),
  ('fact -> ID opAccess','fact',2,'p_fact','CT.py',343),
  ('opAccess -> opStruct','opAccess',1,'p_opAccess','CT.py',348),
  ('opAccess -> opDictionary','opAccess',1,'p_opAccess','CT.py',349),
  ('opAccess -> empty','opAccess',1,'p_opAccess','CT.py',350),
  ('opStruct -> [ expresion ] opMatrix','opStruct',4,'p_opStruct','CT.py',355),
  ('opMatrix -> [ expresion ]','opMatrix',3,'p_opMatrix','CT.py',360),
  ('opMatrix -> empty','opMatrix',1,'p_opMatrix','CT.py',361),
  ('opDictionary -> . dictIndex','opDictionary',2,'p_opDictionary','CT.py',366),
  ('dictIndex -> FIRST','dictIndex',1,'p_dictIndex','CT.py',371),
  ('dictIndex -> LAST','dictIndex',1,'p_dictIndex','CT.py',372),
  ('cte -> CTED','cte',1,'p_cte','CT.py',377),
  ('cte -> CTEF','cte',1,'p_cte','CT.py',378),
  ('cte -> TRUE','cte',1,'p_cte','CT.py',379),
  ('cte -> FALSE','cte',1,'p_cte','CT.py',380),
  ('empty -> <empty>','empty',0,'p_empty','CT.py',385),
]
