
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '9FF27971FC2807F93497C56A8F0336E1'
    
_lr_action_items = {'RETURN':([6,9,19,26,27,29,67,69,71,73,80,81,82,84,85,86,94,95,96,97,99,100,102,104,111,143,179,247,254,260,261,268,270,],[-3,-4,-24,-23,-22,-7,-61,-140,-140,-140,-140,-65,-64,-60,-18,-19,-54,-59,-58,-50,-52,-140,-63,-17,-140,-43,215,-66,-140,-88,-91,-68,-90,]),'VARS':([5,8,41,46,100,],[-8,14,-8,-8,-8,]),'DIF':([118,122,123,125,126,127,128,129,130,131,132,148,155,156,157,159,163,164,167,168,171,173,183,188,189,190,191,193,196,206,210,211,220,221,228,238,250,251,266,],[-138,-136,-140,-118,-113,-139,-120,-119,-137,-108,-140,-78,-124,-127,-126,-125,-140,198,-114,-117,-140,-120,-121,-122,-134,-135,-133,-109,-112,-116,-140,-119,-110,-111,-115,-140,-128,-131,-130,]),'OBJECT':([14,39,44,60,68,69,71,73,109,144,],[20,20,20,20,20,20,20,20,20,20,]),'WHILE':([6,9,19,26,27,29,41,46,50,61,66,69,71,73,80,81,82,83,85,86,94,95,96,97,99,100,104,111,216,234,247,254,260,261,262,267,268,270,],[-3,-4,-24,-23,-22,-7,-140,-140,-62,-62,-67,-140,-140,-140,-62,-65,-64,103,-18,-19,-54,-59,-58,-50,-52,-140,-17,-62,-62,-62,-66,-140,-88,-91,-62,-62,-68,-90,]),'PROGRAM':([0,2,],[-2,3,]),'TRUE':([106,115,119,133,137,138,150,152,161,165,166,170,182,187,194,195,197,198,199,200,201,202,205,215,229,232,243,256,],[118,118,118,118,118,118,118,118,118,-123,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'LAST':([158,],[190,]),')':([20,22,24,28,36,48,55,70,78,101,106,113,114,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,139,145,148,149,151,153,155,156,157,159,160,162,163,164,167,168,169,171,172,173,175,180,183,184,185,186,188,189,190,191,192,193,196,203,204,206,207,210,211,219,220,221,222,223,224,225,226,227,228,230,238,239,240,241,242,248,250,251,252,257,266,],[-12,-13,-11,-10,-9,63,-57,-56,-140,-140,-140,-35,-38,148,-138,-140,-80,-136,-140,-140,-118,-113,-139,-120,-119,-137,-108,-140,-73,-70,-72,176,181,-78,183,-96,-99,-124,-127,-126,-125,-79,-82,-140,-140,-114,-117,-26,-140,-27,-28,213,-37,-121,-97,-95,-98,-122,-134,-135,-133,-140,-109,-112,-107,-100,-116,-25,-140,-119,-81,-110,-111,-101,-102,-104,-105,-103,-106,-115,-31,-140,252,-32,-33,-74,255,-128,-131,-30,-29,-130,]),'(':([31,42,51,58,89,103,105,106,108,115,119,123,133,137,138,150,152,161,165,166,170,171,182,187,194,195,197,198,199,200,201,202,205,210,215,232,243,256,],[39,-94,68,-94,106,115,116,119,138,119,119,106,170,119,119,119,119,119,-123,119,119,106,119,119,119,119,119,119,119,119,119,119,119,106,119,119,119,119,]),'+':([118,122,123,125,126,127,128,129,130,132,148,155,156,157,159,163,167,168,171,173,183,188,189,190,191,206,210,211,228,238,250,251,266,],[-138,-136,-140,-118,-113,-139,-120,-119,-137,-140,-78,-124,-127,-126,-125,194,-114,-117,-140,-120,-121,-122,-134,-135,-133,-116,-140,-119,-115,-140,-128,-131,-130,]),'*':([118,122,123,125,127,128,129,130,132,148,155,156,157,159,171,173,183,188,189,190,191,210,211,238,250,251,266,],[-138,-136,-140,-118,-139,-120,-119,-137,165,-78,-124,-127,-126,-125,-140,-120,-121,-122,-134,-135,-133,-140,-119,-140,-128,-131,-130,]),'-':([118,122,123,125,126,127,128,129,130,132,148,155,156,157,159,163,167,168,171,173,183,188,189,190,191,206,210,211,228,238,250,251,266,],[-138,-136,-140,-118,-113,-139,-120,-119,-137,-140,-78,-124,-127,-126,-125,195,-114,-117,-140,-120,-121,-122,-134,-135,-133,-116,-140,-119,-115,-140,-128,-131,-130,]),',':([43,78,118,120,122,123,124,125,126,127,128,129,130,131,132,148,151,153,155,156,157,159,163,164,167,168,183,184,185,186,188,189,190,191,192,193,196,203,204,206,220,221,222,223,224,225,226,227,228,238,250,251,266,],[53,53,-138,-140,-136,-140,161,-118,-113,-139,-120,-119,-137,-108,-140,-78,-96,-99,-124,-127,-126,-125,-140,-140,-114,-117,-121,-97,-95,-98,-122,-134,-135,-133,161,-109,-112,-107,-100,-116,-110,-111,-101,-102,-104,-105,-103,-106,-115,-140,-128,-131,-130,]),'/':([118,122,123,125,127,128,129,130,132,148,155,156,157,159,171,173,183,188,189,190,191,210,211,238,250,251,266,],[-138,-136,-140,-118,-139,-120,-119,-137,166,-78,-124,-127,-126,-125,-140,-120,-121,-122,-134,-135,-133,-140,-119,-140,-128,-131,-130,]),'.':([123,171,210,],[158,158,158,]),'FIRST':([158,],[189,]),'BOOL':([14,39,44,60,68,69,71,73,109,144,],[22,22,22,22,22,22,22,22,22,22,]),';':([43,52,54,55,57,70,78,87,90,92,101,110,112,118,120,122,123,125,126,127,128,129,130,131,132,134,135,136,140,142,147,148,151,153,155,156,157,159,163,164,167,168,169,171,172,173,176,183,184,185,186,188,189,190,191,193,196,203,204,206,207,214,217,220,221,222,223,224,225,226,227,228,235,238,242,250,251,252,257,266,],[-140,69,71,-57,73,-56,-140,104,-21,-20,-39,-140,144,-138,-140,-136,-140,-118,-113,-139,-120,-119,-137,-108,-140,-73,-70,-72,-83,-87,182,-78,-96,-99,-124,-127,-126,-125,-140,-140,-114,-117,-26,-140,-27,-28,-93,-121,-97,-95,-98,-122,-134,-135,-133,-109,-112,-107,-100,-116,-25,-86,237,-110,-111,-101,-102,-104,-105,-103,-106,-115,246,-140,-74,-128,-131,-30,-29,-130,]),':':([20,22,24,28,36,93,118,122,127,130,208,210,211,230,],[-12,-13,-11,-10,-9,109,-138,-136,-139,-137,229,-33,-32,-31,]),'=':([89,107,146,212,231,233,253,258,],[-71,133,-71,-140,243,-76,-77,-75,]),'<':([118,122,123,125,126,127,128,129,130,131,132,148,155,156,157,159,163,164,167,168,171,173,183,188,189,190,191,193,196,206,210,211,220,221,228,238,250,251,266,],[-138,-136,-140,-118,-113,-139,-120,-119,-137,-108,-140,-78,-124,-127,-126,-125,-140,202,-114,-117,-140,-120,-121,-122,-134,-135,-133,-109,-112,-116,-140,-119,-110,-111,-115,-140,-128,-131,-130,]),'$end':([1,33,],[0,-1,]),'STRING':([14,39,44,60,68,69,71,73,109,144,],[24,24,24,24,24,24,24,24,24,24,]),'FOR':([6,9,19,26,27,29,41,46,50,61,66,69,71,73,80,81,82,85,86,88,94,95,96,97,99,100,104,111,216,234,247,254,260,261,262,267,268,270,],[-3,-4,-24,-23,-22,-7,-140,-140,-62,-62,-69,-140,-140,-140,-62,-65,-64,-18,-19,105,-54,-59,-58,-50,-52,-140,-17,-62,-62,-62,-66,-140,-88,-91,-62,-62,-68,-90,]),'ELSE':([254,259,],[-92,264,]),'>':([118,122,123,125,126,127,128,129,130,131,132,148,155,156,157,159,163,164,167,168,171,173,183,188,189,190,191,193,196,206,210,211,220,221,228,238,250,251,266,],[-138,-136,-140,-118,-113,-139,-120,-119,-137,-108,-140,-78,-124,-127,-126,-125,-140,200,-114,-117,-140,-120,-121,-122,-134,-135,-133,-109,-112,-116,-140,-119,-110,-111,-115,-140,-128,-131,-130,]),'RETURNS':([31,38,40,45,63,77,],[-140,-49,-45,60,-46,-44,]),'FUNC':([5,6,7,9,10,11,19,26,27,29,62,69,71,73,94,95,96,97,99,],[-140,-3,-41,-4,-41,16,-24,-23,-22,-7,-40,-140,-140,-140,-54,-59,-58,-50,-52,]),'[':([20,22,24,28,36,56,59,74,89,107,110,123,146,154,171,176,210,212,238,249,],[-12,-13,-11,-10,-9,72,-84,-85,-71,137,141,-129,-71,187,-129,-93,-129,232,-132,256,]),']':([98,118,120,122,123,125,126,127,128,129,130,131,132,148,151,153,155,156,157,159,163,164,167,168,174,177,183,184,185,186,188,189,190,191,193,196,203,204,206,218,220,221,222,223,224,225,226,227,228,238,244,250,251,263,266,],[110,-138,-140,-136,-140,-118,-113,-139,-120,-119,-137,-108,-140,-78,-96,-99,-124,-127,-126,-125,-140,-140,-114,-117,212,214,-121,-97,-95,-98,-122,-134,-135,-133,-109,-112,-107,-100,-116,238,-110,-111,-101,-102,-104,-105,-103,-106,-115,-140,253,-128,-131,266,-130,]),'ID':([3,6,9,16,19,20,22,23,24,26,27,28,29,34,35,36,37,41,46,49,50,53,61,64,66,69,71,73,80,81,82,85,86,94,95,96,97,99,100,104,106,111,115,116,119,133,137,138,150,152,161,165,166,170,182,187,194,195,197,198,199,200,201,202,205,215,216,229,232,234,237,243,247,254,256,260,261,262,267,268,270,],[4,-3,-4,31,-24,-12,-13,-51,-11,-23,-22,-10,-7,42,43,-9,44,-140,-140,-36,-62,70,-62,78,89,-140,-140,-140,-62,-65,-64,-18,-19,-54,-59,-58,-50,-52,-140,-17,123,-62,123,146,123,171,123,123,123,123,123,-123,123,210,123,123,123,123,123,123,123,123,123,123,123,123,-62,241,123,-62,146,171,-66,-140,123,-88,-91,-62,-62,-68,-90,]),'IF':([6,9,19,26,27,29,41,46,50,61,66,69,71,73,80,81,82,85,86,91,94,95,96,97,99,100,104,111,216,234,247,254,260,261,262,267,268,270,],[-3,-4,-24,-23,-22,-7,-140,-140,-62,-62,-89,-140,-140,-140,-62,-65,-64,-18,-19,108,-54,-59,-58,-50,-52,-140,-17,-62,-62,-62,-66,-140,-88,-91,-62,-62,-68,-90,]),'AND':([118,120,122,123,125,126,127,128,129,130,131,132,148,155,156,157,159,163,164,167,168,171,173,183,188,189,190,191,193,196,203,204,206,210,211,220,221,222,223,224,225,226,227,228,238,250,251,266,],[-138,150,-136,-140,-118,-113,-139,-120,-119,-137,-108,-140,-78,-124,-127,-126,-125,-140,-140,-114,-117,-140,-120,-121,-122,-134,-135,-133,-109,-112,-107,-100,-116,-140,-119,-110,-111,-101,-102,-104,-105,-103,-106,-115,-140,-128,-131,-130,]),'CTES':([106,115,119,133,137,138,150,152,161,165,166,170,182,187,194,195,197,198,199,200,201,202,205,209,215,229,232,243,256,],[125,125,125,125,125,125,125,125,125,-123,125,125,125,125,125,125,125,125,125,125,125,125,125,230,125,-34,125,125,125,]),'LTOEQ':([118,122,123,125,126,127,128,129,130,131,132,148,155,156,157,159,163,164,167,168,171,173,183,188,189,190,191,193,196,206,210,211,220,221,228,238,250,251,266,],[-138,-136,-140,-118,-113,-139,-120,-119,-137,-108,-140,-78,-124,-127,-126,-125,-140,201,-114,-117,-140,-120,-121,-122,-134,-135,-133,-109,-112,-116,-140,-119,-110,-111,-115,-140,-128,-131,-130,]),'FALSE':([106,115,119,133,137,138,150,152,161,165,166,170,182,187,194,195,197,198,199,200,201,202,205,215,229,232,243,256,],[127,127,127,127,127,127,127,127,127,-123,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'STRUCT':([14,30,69,71,73,],[-53,37,-53,-53,-53,]),'INT':([14,25,39,44,60,68,69,71,73,109,144,],[-14,36,-14,-14,-14,-14,-14,-14,-14,-14,-14,]),'EQ':([118,122,123,125,126,127,128,129,130,131,132,148,155,156,157,159,163,164,167,168,171,173,183,188,189,190,191,193,196,206,210,211,220,221,228,238,250,251,266,],[-138,-136,-140,-118,-113,-139,-120,-119,-137,-108,-140,-78,-124,-127,-126,-125,-140,197,-114,-117,-140,-120,-121,-122,-134,-135,-133,-109,-112,-116,-140,-119,-110,-111,-115,-140,-128,-131,-130,]),'FLOAT':([14,39,44,60,68,69,71,73,109,144,],[28,28,28,28,28,28,28,28,28,28,]),'OR':([118,120,122,123,125,126,127,128,129,130,131,132,148,155,156,157,159,163,164,167,168,171,173,183,188,189,190,191,193,196,203,204,206,210,211,220,221,222,223,224,225,226,227,228,238,250,251,266,],[-138,152,-136,-140,-118,-113,-139,-120,-119,-137,-108,-140,-78,-124,-127,-126,-125,-140,-140,-114,-117,-140,-120,-121,-122,-134,-135,-133,-109,-112,-107,-100,-116,-140,-119,-110,-111,-101,-102,-104,-105,-103,-106,-115,-140,-128,-131,-130,]),'DICT':([14,21,44,69,71,73,],[-55,34,58,-55,-55,-55,]),'CTED':([72,106,115,119,133,137,138,141,150,152,161,165,166,170,182,187,194,195,197,198,199,200,201,202,205,215,229,232,243,256,],[98,122,122,122,122,122,122,177,122,122,122,-123,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'GTOEQ':([118,122,123,125,126,127,128,129,130,131,132,148,155,156,157,159,163,164,167,168,171,173,183,188,189,190,191,193,196,206,210,211,220,221,228,238,250,251,266,],[-138,-136,-140,-118,-113,-139,-120,-119,-137,-108,-140,-78,-124,-127,-126,-125,-140,199,-114,-117,-140,-120,-121,-122,-134,-135,-133,-109,-112,-116,-140,-119,-110,-111,-115,-140,-128,-131,-130,]),'{':([4,20,22,24,28,31,32,36,38,40,63,75,77,181,213,255,264,],[5,-12,-13,-11,-10,-140,41,-9,46,-45,-46,100,-44,216,234,262,267,]),'MAIN':([5,6,7,9,10,12,13,15,17,19,26,27,29,62,69,71,73,94,95,96,97,99,],[-140,-3,-140,-4,-140,-6,-16,-5,32,-24,-23,-22,-7,-40,-140,-140,-140,-54,-59,-58,-50,-52,]),'}':([6,9,18,19,26,27,29,41,46,47,50,61,65,67,69,71,73,76,79,80,81,82,84,85,86,94,95,96,97,99,102,104,178,216,234,236,245,246,247,254,260,261,262,265,267,268,269,270,],[-3,-4,33,-24,-23,-22,-7,-140,-140,62,-140,-140,79,-61,-140,-140,-140,-48,-15,-140,-65,-64,-60,-18,-19,-54,-59,-58,-50,-52,-63,-17,-47,-140,-140,247,254,-42,-66,-140,-88,-91,-140,268,-140,-68,270,-90,]),'CTEF':([106,115,119,133,137,138,150,152,161,165,166,170,182,187,194,195,197,198,199,200,201,202,205,215,229,232,243,256,],[130,130,130,130,130,130,130,130,130,-123,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vars':([5,41,46,100,],[6,6,6,6,]),'errorOpSExp':([131,],[164,]),'errorMain':([13,],[17,]),'errorCyExp':([126,],[163,]),'opParamCall':([106,],[117,]),'cyTypeParam':([43,78,],[54,101,]),'forCycle':([66,],[82,]),'structType':([44,],[56,]),'struct':([44,],[57,]),'param':([39,144,],[48,180,]),'init':([107,231,],[136,242,]),'program':([0,],[1,]),'dict':([42,58,],[52,74,]),'opMatrix':([238,],[250,]),'errorExpresion':([151,],[185,]),'main':([13,],[18,]),'return':([143,],[178,]),'errorParam':([49,],[64,]),'errorElse':([254,],[259,]),'errorReturn':([143,],[179,]),'assignOptions':([107,],[135,]),'basicDeclare':([14,69,71,73,],[27,27,27,27,]),'cyInstruction':([66,],[84,]),'condition':([66,],[85,]),'expresion':([106,115,119,133,137,138,150,152,161,170,182,187,215,232,243,256,],[124,145,149,172,174,175,184,186,192,149,217,218,235,244,172,263,]),'term':([106,115,119,133,137,138,150,152,161,170,182,187,194,195,197,198,199,200,201,202,215,232,243,256,],[126,126,126,126,126,126,126,126,126,126,126,126,220,221,126,126,126,126,126,126,126,126,126,126,]),'funcCall':([66,106,115,119,133,137,138,150,152,161,166,170,182,187,194,195,197,198,199,200,201,202,205,215,232,243,256,],[90,128,128,128,173,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,173,128,]),'initDict':([107,],[134,]),'opReturns':([38,],[47,]),'dictDeclare':([14,69,71,73,],[19,19,19,19,]),'errorOpAccess':([156,],[188,]),'errorVars':([5,41,46,100,],[8,8,8,8,]),'whileCycle':([66,],[81,]),'errorDictDeclare':([14,69,71,73,],[21,21,21,21,]),'opFunctions':([7,10,],[13,15,]),'errorOpStruct':([123,171,210,],[154,154,154,]),'opVars':([5,41,46,100,],[7,50,61,111,]),'errorInit':([169,],[207,]),'cyExpresion':([120,],[151,]),'body':([50,61,80,111,216,234,262,267,],[65,76,102,143,236,245,265,269,]),'errorOpReturns':([38,],[45,]),'opParameters':([31,],[38,]),'errorCondition':([66,],[91,]),'cte':([106,115,119,133,137,138,150,152,161,166,170,182,187,194,195,197,198,199,200,201,202,205,215,229,232,243,256,],[129,129,129,129,129,129,129,129,129,129,211,129,129,129,129,129,129,129,129,129,129,129,129,240,129,129,129,]),'assign':([66,116,237,],[92,147,248,]),'errorStructDeclare':([14,69,71,73,],[30,30,30,30,]),'cyExp':([163,],[193,]),'instr':([66,],[80,]),'errorFact':([165,],[205,]),'errorProgram':([0,],[2,]),'cyTerm':([132,],[167,]),'errorAssignMatrix':([253,],[258,]),'cyDeclare':([69,71,73,],[94,97,99,]),'errorBody':([50,61,80,111,216,234,262,267,],[66,66,66,66,66,66,66,66,]),'opStruct':([123,171,210,],[155,155,155,]),'type':([14,39,44,60,68,69,71,73,109,144,],[23,49,59,75,93,23,23,23,139,49,]),'dictIndex':([158,],[191,]),'empty':([5,7,10,31,41,43,46,50,61,69,71,73,78,80,100,101,106,110,111,120,123,124,132,163,164,171,192,210,212,216,234,238,254,262,267,],[9,12,12,40,9,55,9,67,67,95,95,95,55,67,9,114,121,142,67,153,157,162,168,196,203,157,162,157,233,67,67,251,261,67,67,]),'errorBasicDeclare':([23,],[35,]),'function':([7,10,],[10,10,]),'errorOpMatrix':([238,],[249,]),'opDictionary':([123,171,210,],[159,159,159,]),'errorType':([14,39,44,60,68,69,71,73,109,144,],[25,25,25,25,25,25,25,25,25,25,]),'errorForCycle':([66,],[88,]),'opAccess':([123,171,210,],[156,156,156,]),'basicStatements':([66,],[87,]),'structDeclare':([14,69,71,73,],[26,26,26,26,]),'errorAssign':([89,146,],[107,107,]),'cyParam':([101,],[113,]),'errorOpParameters':([63,],[77,]),'cyParamCall':([124,192,],[160,219,]),'declare':([14,69,71,73,],[29,96,96,96,]),'optionalMatrix':([110,],[140,]),'optionalElse':([254,],[260,]),'dictType':([170,229,],[208,239,]),'initWith':([133,243,],[169,169,]),'errorWhileCycle':([66,],[83,]),'sExp':([106,115,119,133,137,138,150,152,161,170,182,187,215,232,243,256,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'errorCyParam':([101,],[112,]),'opSExp':([164,],[204,]),'errorDictType':([170,229,],[209,209,]),'assignMatrix':([212,],[231,]),'errorDict':([42,58,],[51,51,]),'errorInitDict':([252,],[257,]),'cycle':([66,],[86,]),'errorFunction':([7,10,],[11,11,]),'exp':([106,115,119,133,137,138,150,152,161,170,182,187,197,198,199,200,201,202,215,232,243,256,],[131,131,131,131,131,131,131,131,131,131,131,131,222,223,224,225,226,227,131,131,131,131,]),'fact':([106,115,119,133,137,138,150,152,161,166,170,182,187,194,195,197,198,199,200,201,202,205,215,232,243,256,],[132,132,132,132,132,132,132,132,132,206,132,132,132,132,132,132,132,132,132,132,132,228,132,132,132,132,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> errorProgram PROGRAM ID { opVars opFunctions main }','program',8,'p_program','CT.py',61),
  ('errorProgram -> <empty>','errorProgram',0,'p_errorProgram','CT.py',66),
  ('opVars -> vars','opVars',1,'p_opVars','CT.py',72),
  ('opVars -> empty','opVars',1,'p_opVars','CT.py',73),
  ('opFunctions -> function opFunctions','opFunctions',2,'p_opFunctions','CT.py',78),
  ('opFunctions -> empty','opFunctions',1,'p_opFunctions','CT.py',79),
  ('vars -> errorVars VARS declare','vars',3,'p_vars','CT.py',83),
  ('errorVars -> <empty>','errorVars',0,'p_errorVars','CT.py',88),
  ('type -> errorType INT','type',2,'p_type','CT.py',94),
  ('type -> FLOAT','type',1,'p_type','CT.py',95),
  ('type -> STRING','type',1,'p_type','CT.py',96),
  ('type -> OBJECT','type',1,'p_type','CT.py',97),
  ('type -> BOOL','type',1,'p_type','CT.py',98),
  ('errorType -> <empty>','errorType',0,'p_errorType','CT.py',103),
  ('main -> errorMain MAIN { opVars body }','main',6,'p_main','CT.py',109),
  ('errorMain -> <empty>','errorMain',0,'p_errorMain','CT.py',114),
  ('instr -> basicStatements ;','instr',2,'p_instr','CT.py',120),
  ('instr -> condition','instr',1,'p_instr','CT.py',121),
  ('instr -> cycle','instr',1,'p_instr','CT.py',122),
  ('basicStatements -> assign','basicStatements',1,'p_basicStatements','CT.py',126),
  ('basicStatements -> funcCall','basicStatements',1,'p_basicStatements','CT.py',127),
  ('declare -> basicDeclare','declare',1,'p_declare','CT.py',131),
  ('declare -> structDeclare','declare',1,'p_declare','CT.py',132),
  ('declare -> dictDeclare','declare',1,'p_declare','CT.py',133),
  ('init -> = initWith errorInit','init',3,'p_init','CT.py',138),
  ('errorInit -> <empty>','errorInit',0,'p_errorInit','CT.py',143),
  ('initWith -> expresion','initWith',1,'p_initWith','CT.py',149),
  ('initWith -> funcCall','initWith',1,'p_initWith','CT.py',150),
  ('initDict -> = ( dictType : dictType ) errorInitDict','initDict',7,'p_initDict','CT.py',155),
  ('errorInitDict -> <empty>','errorInitDict',0,'p_errorInitDict','CT.py',160),
  ('dictType -> errorDictType CTES','dictType',2,'p_dictType','CT.py',166),
  ('dictType -> cte','dictType',1,'p_dictType','CT.py',167),
  ('dictType -> ID','dictType',1,'p_dictType','CT.py',168),
  ('errorDictType -> <empty>','errorDictType',0,'p_errorDictType','CT.py',173),
  ('param -> type errorParam ID cyTypeParam cyParam','param',5,'p_param','CT.py',179),
  ('errorParam -> <empty>','errorParam',0,'p_errorParam','CT.py',184),
  ('cyParam -> errorCyParam ; param','cyParam',3,'p_cyParam','CT.py',190),
  ('cyParam -> empty','cyParam',1,'p_cyParam','CT.py',191),
  ('errorCyParam -> <empty>','errorCyParam',0,'p_errorCyParam','CT.py',196),
  ('function -> errorFunction FUNC ID opParameters opReturns }','function',6,'p_function','CT.py',202),
  ('errorFunction -> <empty>','errorFunction',0,'p_errorFunction','CT.py',207),
  ('return -> errorReturn RETURN expresion ;','return',4,'p_return','CT.py',213),
  ('errorReturn -> <empty>','errorReturn',0,'p_errorReturn','CT.py',218),
  ('opParameters -> ( param ) errorOpParameters','opParameters',4,'p_opParameters','CT.py',224),
  ('opParameters -> empty','opParameters',1,'p_opParameters','CT.py',225),
  ('errorOpParameters -> <empty>','errorOpParameters',0,'p_errorOpParameters','CT.py',230),
  ('opReturns -> errorOpReturns RETURNS type { opVars body return','opReturns',7,'p_opReturns','CT.py',236),
  ('opReturns -> { opVars body','opReturns',3,'p_opReturns','CT.py',237),
  ('errorOpReturns -> <empty>','errorOpReturns',0,'p_errorOpReturns','CT.py',242),
  ('basicDeclare -> type errorBasicDeclare ID cyTypeParam ; cyDeclare','basicDeclare',6,'p_basicDeclare','CT.py',248),
  ('errorBasicDeclare -> <empty>','errorBasicDeclare',0,'p_errorBasicDeclare','CT.py',253),
  ('structDeclare -> errorStructDeclare STRUCT ID struct ; cyDeclare','structDeclare',6,'p_structDeclare','CT.py',259),
  ('errorStructDeclare -> <empty>','errorStructDeclare',0,'p_errorStructDeclare','CT.py',264),
  ('dictDeclare -> errorDictDeclare DICT ID dict ; cyDeclare','dictDeclare',6,'p_dictDeclare','CT.py',270),
  ('errorDictDeclare -> <empty>','errorDictDeclare',0,'p_errorDictDeclare','CT.py',275),
  ('cyTypeParam -> , ID','cyTypeParam',2,'p_cyTypeParam','CT.py',281),
  ('cyTypeParam -> empty','cyTypeParam',1,'p_cyTypeParam','CT.py',282),
  ('cyDeclare -> declare','cyDeclare',1,'p_cyDeclare','CT.py',287),
  ('cyDeclare -> empty','cyDeclare',1,'p_cyDeclare','CT.py',288),
  ('body -> errorBody cyInstruction','body',2,'p_body','CT.py',293),
  ('body -> empty','body',1,'p_body','CT.py',294),
  ('errorBody -> <empty>','errorBody',0,'p_errorBody','CT.py',299),
  ('cyInstruction -> instr body','cyInstruction',2,'p_cyInstruction','CT.py',305),
  ('cycle -> forCycle','cycle',1,'p_cycle','CT.py',310),
  ('cycle -> whileCycle','cycle',1,'p_cycle','CT.py',311),
  ('whileCycle -> errorWhileCycle WHILE ( expresion ) { body }','whileCycle',8,'p_whileCycle','CT.py',316),
  ('errorWhileCycle -> <empty>','errorWhileCycle',0,'p_errorWhileCycle','CT.py',321),
  ('forCycle -> errorForCycle FOR ( assign ; expresion ; assign ) { body }','forCycle',12,'p_forCycle','CT.py',327),
  ('errorForCycle -> <empty>','errorForCycle',0,'p_errorForCycle','CT.py',332),
  ('assign -> ID errorAssign assignOptions','assign',3,'p_assign','CT.py',338),
  ('errorAssign -> <empty>','errorAssign',0,'p_errorAssign','CT.py',343),
  ('assignOptions -> init','assignOptions',1,'p_assignOptions','CT.py',349),
  ('assignOptions -> initDict','assignOptions',1,'p_assignOptions','CT.py',350),
  ('assignOptions -> [ expresion ] assignMatrix init','assignOptions',5,'p_assignOptions','CT.py',351),
  ('assignMatrix -> [ expresion ] errorAssignMatrix','assignMatrix',4,'p_assignMatrix','CT.py',356),
  ('assignMatrix -> empty','assignMatrix',1,'p_assignMatrix','CT.py',357),
  ('errorAssignMatrix -> <empty>','errorAssignMatrix',0,'p_errorAssignMatrix','CT.py',362),
  ('funcCall -> ID ( opParamCall )','funcCall',4,'p_funcCall','CT.py',368),
  ('opParamCall -> expresion cyParamCall','opParamCall',2,'p_opParamCall','CT.py',373),
  ('opParamCall -> empty','opParamCall',1,'p_opParamCall','CT.py',374),
  ('cyParamCall -> , expresion cyParamCall','cyParamCall',3,'p_cyParamCall','CT.py',379),
  ('cyParamCall -> empty','cyParamCall',1,'p_cyParamCall','CT.py',380),
  ('struct -> structType [ CTED ] optionalMatrix','struct',5,'p_struct','CT.py',385),
  ('structType -> type','structType',1,'p_structType','CT.py',390),
  ('structType -> DICT dict','structType',2,'p_structType','CT.py',391),
  ('optionalMatrix -> [ CTED ]','optionalMatrix',3,'p_optionalMatrix','CT.py',396),
  ('optionalMatrix -> empty','optionalMatrix',1,'p_optionalMatrix','CT.py',397),
  ('condition -> errorCondition IF ( expresion ) { body } optionalElse','condition',9,'p_condition','CT.py',402),
  ('errorCondition -> <empty>','errorCondition',0,'p_errorCondition','CT.py',407),
  ('optionalElse -> errorElse ELSE { body }','optionalElse',5,'p_optionalElse','CT.py',413),
  ('optionalElse -> empty','optionalElse',1,'p_optionalElse','CT.py',414),
  ('errorElse -> <empty>','errorElse',0,'p_errorElse','CT.py',419),
  ('dict -> errorDict ( type : type )','dict',6,'p_dict','CT.py',425),
  ('errorDict -> <empty>','errorDict',0,'p_errorDict','CT.py',430),
  ('expresion -> sExp cyExpresion errorExpresion','expresion',3,'p_expresion','CT.py',436),
  ('errorExpresion -> <empty>','errorExpresion',0,'p_errorExpresion','CT.py',441),
  ('cyExpresion -> AND expresion','cyExpresion',2,'p_cyExpresion','CT.py',447),
  ('cyExpresion -> OR expresion','cyExpresion',2,'p_cyExpresion','CT.py',448),
  ('cyExpresion -> empty','cyExpresion',1,'p_cyExpresion','CT.py',449),
  ('sExp -> exp errorOpSExp opSExp','sExp',3,'p_sExp','CT.py',454),
  ('opSExp -> EQ exp','opSExp',2,'p_opSExp','CT.py',459),
  ('opSExp -> DIF exp','opSExp',2,'p_opSExp','CT.py',460),
  ('opSExp -> LTOEQ exp','opSExp',2,'p_opSExp','CT.py',461),
  ('opSExp -> GTOEQ exp','opSExp',2,'p_opSExp','CT.py',462),
  ('opSExp -> > exp','opSExp',2,'p_opSExp','CT.py',463),
  ('opSExp -> < exp','opSExp',2,'p_opSExp','CT.py',464),
  ('opSExp -> empty','opSExp',1,'p_opSExp','CT.py',465),
  ('errorOpSExp -> <empty>','errorOpSExp',0,'p_errorOpSExp','CT.py',470),
  ('exp -> term errorCyExp cyExp','exp',3,'p_exp','CT.py',476),
  ('cyExp -> + term','cyExp',2,'p_cyExp','CT.py',481),
  ('cyExp -> - term','cyExp',2,'p_cyExp','CT.py',482),
  ('cyExp -> empty','cyExp',1,'p_cyExp','CT.py',483),
  ('errorCyExp -> <empty>','errorCyExp',0,'p_errorCyExp','CT.py',488),
  ('term -> fact cyTerm','term',2,'p_term','CT.py',494),
  ('cyTerm -> * errorFact fact','cyTerm',3,'p_cyTerm','CT.py',499),
  ('cyTerm -> / fact','cyTerm',2,'p_cyTerm','CT.py',500),
  ('cyTerm -> empty','cyTerm',1,'p_cyTerm','CT.py',501),
  ('fact -> CTES','fact',1,'p_fact','CT.py',506),
  ('fact -> cte','fact',1,'p_fact','CT.py',507),
  ('fact -> funcCall','fact',1,'p_fact','CT.py',508),
  ('fact -> ( expresion )','fact',3,'p_fact','CT.py',509),
  ('fact -> ID opAccess errorOpAccess','fact',3,'p_fact','CT.py',510),
  ('errorFact -> <empty>','errorFact',0,'p_errorFact','CT.py',515),
  ('opAccess -> opStruct','opAccess',1,'p_opAccess','CT.py',521),
  ('opAccess -> opDictionary','opAccess',1,'p_opAccess','CT.py',522),
  ('opAccess -> empty','opAccess',1,'p_opAccess','CT.py',523),
  ('errorOpAccess -> <empty>','errorOpAccess',0,'p_errorOpAccess','CT.py',528),
  ('opStruct -> errorOpStruct [ expresion ] opMatrix','opStruct',5,'p_opStruct','CT.py',534),
  ('errorOpStruct -> <empty>','errorOpStruct',0,'p_errorOpStruct','CT.py',539),
  ('opMatrix -> errorOpMatrix [ expresion ]','opMatrix',4,'p_opMatrix','CT.py',545),
  ('opMatrix -> empty','opMatrix',1,'p_opMatrix','CT.py',546),
  ('errorOpMatrix -> <empty>','errorOpMatrix',0,'p_errorOpMatrix','CT.py',551),
  ('opDictionary -> . dictIndex','opDictionary',2,'p_opDictionary','CT.py',557),
  ('dictIndex -> FIRST','dictIndex',1,'p_dictIndex','CT.py',562),
  ('dictIndex -> LAST','dictIndex',1,'p_dictIndex','CT.py',563),
  ('cte -> CTED','cte',1,'p_cte','CT.py',568),
  ('cte -> CTEF','cte',1,'p_cte','CT.py',569),
  ('cte -> TRUE','cte',1,'p_cte','CT.py',570),
  ('cte -> FALSE','cte',1,'p_cte','CT.py',571),
  ('empty -> <empty>','empty',0,'p_empty','CT.py',576),
]
